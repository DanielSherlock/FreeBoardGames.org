{"ast":null,"code":"function cov_orj6scrzb() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/game.ts\";\n  var hash = \"b3121693e8aa62911bf260175110446158230a99\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 18\n        },\n        end: {\n          line: 5,\n          column: 40\n        }\n      },\n      \"1\": {\n        start: {\n          line: 8,\n          column: 2\n        },\n        end: {\n          line: 14,\n          column: 3\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 15\n        },\n        end: {\n          line: 8,\n          column: 16\n        }\n      },\n      \"3\": {\n        start: {\n          line: 9,\n          column: 4\n        },\n        end: {\n          line: 13,\n          column: 5\n        }\n      },\n      \"4\": {\n        start: {\n          line: 10,\n          column: 6\n        },\n        end: {\n          line: 10,\n          column: 44\n        }\n      },\n      \"5\": {\n        start: {\n          line: 12,\n          column: 6\n        },\n        end: {\n          line: 12,\n          column: 26\n        }\n      },\n      \"6\": {\n        start: {\n          line: 15,\n          column: 2\n        },\n        end: {\n          line: 21,\n          column: 3\n        }\n      },\n      \"7\": {\n        start: {\n          line: 17,\n          column: 6\n        },\n        end: {\n          line: 17,\n          column: 28\n        }\n      },\n      \"8\": {\n        start: {\n          line: 20,\n          column: 4\n        },\n        end: {\n          line: 20,\n          column: 16\n        }\n      },\n      \"9\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 30,\n          column: 3\n        }\n      },\n      \"10\": {\n        start: {\n          line: 24,\n          column: 15\n        },\n        end: {\n          line: 24,\n          column: 16\n        }\n      },\n      \"11\": {\n        start: {\n          line: 25,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 5\n        }\n      },\n      \"12\": {\n        start: {\n          line: 26,\n          column: 6\n        },\n        end: {\n          line: 26,\n          column: 44\n        }\n      },\n      \"13\": {\n        start: {\n          line: 28,\n          column: 6\n        },\n        end: {\n          line: 28,\n          column: 26\n        }\n      },\n      \"14\": {\n        start: {\n          line: 31,\n          column: 2\n        },\n        end: {\n          line: 37,\n          column: 3\n        }\n      },\n      \"15\": {\n        start: {\n          line: 33,\n          column: 6\n        },\n        end: {\n          line: 33,\n          column: 28\n        }\n      },\n      \"16\": {\n        start: {\n          line: 36,\n          column: 4\n        },\n        end: {\n          line: 36,\n          column: 16\n        }\n      },\n      \"17\": {\n        start: {\n          line: 40,\n          column: 2\n        },\n        end: {\n          line: 46,\n          column: 3\n        }\n      },\n      \"18\": {\n        start: {\n          line: 40,\n          column: 15\n        },\n        end: {\n          line: 40,\n          column: 16\n        }\n      },\n      \"19\": {\n        start: {\n          line: 41,\n          column: 4\n        },\n        end: {\n          line: 45,\n          column: 5\n        }\n      },\n      \"20\": {\n        start: {\n          line: 42,\n          column: 6\n        },\n        end: {\n          line: 42,\n          column: 48\n        }\n      },\n      \"21\": {\n        start: {\n          line: 44,\n          column: 6\n        },\n        end: {\n          line: 44,\n          column: 26\n        }\n      },\n      \"22\": {\n        start: {\n          line: 47,\n          column: 2\n        },\n        end: {\n          line: 53,\n          column: 3\n        }\n      },\n      \"23\": {\n        start: {\n          line: 49,\n          column: 6\n        },\n        end: {\n          line: 49,\n          column: 28\n        }\n      },\n      \"24\": {\n        start: {\n          line: 52,\n          column: 4\n        },\n        end: {\n          line: 52,\n          column: 16\n        }\n      },\n      \"25\": {\n        start: {\n          line: 56,\n          column: 2\n        },\n        end: {\n          line: 62,\n          column: 3\n        }\n      },\n      \"26\": {\n        start: {\n          line: 56,\n          column: 15\n        },\n        end: {\n          line: 56,\n          column: 16\n        }\n      },\n      \"27\": {\n        start: {\n          line: 57,\n          column: 4\n        },\n        end: {\n          line: 61,\n          column: 5\n        }\n      },\n      \"28\": {\n        start: {\n          line: 58,\n          column: 6\n        },\n        end: {\n          line: 58,\n          column: 48\n        }\n      },\n      \"29\": {\n        start: {\n          line: 60,\n          column: 6\n        },\n        end: {\n          line: 60,\n          column: 26\n        }\n      },\n      \"30\": {\n        start: {\n          line: 63,\n          column: 2\n        },\n        end: {\n          line: 69,\n          column: 3\n        }\n      },\n      \"31\": {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 28\n        }\n      },\n      \"32\": {\n        start: {\n          line: 68,\n          column: 4\n        },\n        end: {\n          line: 68,\n          column: 16\n        }\n      },\n      \"33\": {\n        start: {\n          line: 73,\n          column: 2\n        },\n        end: {\n          line: 79,\n          column: 3\n        }\n      },\n      \"34\": {\n        start: {\n          line: 73,\n          column: 19\n        },\n        end: {\n          line: 73,\n          column: 20\n        }\n      },\n      \"35\": {\n        start: {\n          line: 74,\n          column: 4\n        },\n        end: {\n          line: 78,\n          column: 5\n        }\n      },\n      \"36\": {\n        start: {\n          line: 74,\n          column: 21\n        },\n        end: {\n          line: 74,\n          column: 22\n        }\n      },\n      \"37\": {\n        start: {\n          line: 75,\n          column: 6\n        },\n        end: {\n          line: 77,\n          column: 7\n        }\n      },\n      \"38\": {\n        start: {\n          line: 76,\n          column: 8\n        },\n        end: {\n          line: 76,\n          column: 20\n        }\n      },\n      \"39\": {\n        start: {\n          line: 80,\n          column: 2\n        },\n        end: {\n          line: 80,\n          column: 15\n        }\n      },\n      \"40\": {\n        start: {\n          line: 84,\n          column: 2\n        },\n        end: {\n          line: 90,\n          column: 3\n        }\n      },\n      \"41\": {\n        start: {\n          line: 84,\n          column: 20\n        },\n        end: {\n          line: 84,\n          column: 36\n        }\n      },\n      \"42\": {\n        start: {\n          line: 85,\n          column: 4\n        },\n        end: {\n          line: 89,\n          column: 5\n        }\n      },\n      \"43\": {\n        start: {\n          line: 85,\n          column: 22\n        },\n        end: {\n          line: 85,\n          column: 35\n        }\n      },\n      \"44\": {\n        start: {\n          line: 86,\n          column: 6\n        },\n        end: {\n          line: 88,\n          column: 7\n        }\n      },\n      \"45\": {\n        start: {\n          line: 87,\n          column: 8\n        },\n        end: {\n          line: 87,\n          column: 21\n        }\n      },\n      \"46\": {\n        start: {\n          line: 91,\n          column: 2\n        },\n        end: {\n          line: 91,\n          column: 14\n        }\n      },\n      \"47\": {\n        start: {\n          line: 95,\n          column: 20\n        },\n        end: {\n          line: 95,\n          column: 22\n        }\n      },\n      \"48\": {\n        start: {\n          line: 96,\n          column: 2\n        },\n        end: {\n          line: 98,\n          column: 3\n        }\n      },\n      \"49\": {\n        start: {\n          line: 96,\n          column: 20\n        },\n        end: {\n          line: 96,\n          column: 21\n        }\n      },\n      \"50\": {\n        start: {\n          line: 97,\n          column: 4\n        },\n        end: {\n          line: 97,\n          column: 47\n        }\n      },\n      \"51\": {\n        start: {\n          line: 99,\n          column: 2\n        },\n        end: {\n          line: 99,\n          column: 14\n        }\n      },\n      \"52\": {\n        start: {\n          line: 102,\n          column: 42\n        },\n        end: {\n          line: 132,\n          column: 1\n        }\n      },\n      \"53\": {\n        start: {\n          line: 106,\n          column: 4\n        },\n        end: {\n          line: 106,\n          column: 36\n        }\n      },\n      \"54\": {\n        start: {\n          line: 111,\n          column: 20\n        },\n        end: {\n          line: 111,\n          column: 39\n        }\n      },\n      \"55\": {\n        start: {\n          line: 112,\n          column: 6\n        },\n        end: {\n          line: 117,\n          column: 7\n        }\n      },\n      \"56\": {\n        start: {\n          line: 112,\n          column: 23\n        },\n        end: {\n          line: 112,\n          column: 36\n        }\n      },\n      \"57\": {\n        start: {\n          line: 113,\n          column: 8\n        },\n        end: {\n          line: 116,\n          column: 9\n        }\n      },\n      \"58\": {\n        start: {\n          line: 114,\n          column: 10\n        },\n        end: {\n          line: 114,\n          column: 51\n        }\n      },\n      \"59\": {\n        start: {\n          line: 115,\n          column: 10\n        },\n        end: {\n          line: 115,\n          column: 17\n        }\n      },\n      \"60\": {\n        start: {\n          line: 125,\n          column: 4\n        },\n        end: {\n          line: 127,\n          column: 5\n        }\n      },\n      \"61\": {\n        start: {\n          line: 126,\n          column: 6\n        },\n        end: {\n          line: 126,\n          column: 43\n        }\n      },\n      \"62\": {\n        start: {\n          line: 128,\n          column: 4\n        },\n        end: {\n          line: 130,\n          column: 5\n        }\n      },\n      \"63\": {\n        start: {\n          line: 129,\n          column: 6\n        },\n        end: {\n          line: 129,\n          column: 28\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"checkCellForVictory\",\n        decl: {\n          start: {\n            line: 4,\n            column: 9\n          },\n          end: {\n            line: 4,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 84\n          },\n          end: {\n            line: 70,\n            column: 1\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 20\n          },\n          end: {\n            line: 16,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 35\n          },\n          end: {\n            line: 18,\n            column: 5\n          }\n        },\n        line: 16\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 32,\n            column: 20\n          },\n          end: {\n            line: 32,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 32,\n            column: 35\n          },\n          end: {\n            line: 34,\n            column: 5\n          }\n        },\n        line: 32\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 48,\n            column: 20\n          },\n          end: {\n            line: 48,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 48,\n            column: 35\n          },\n          end: {\n            line: 50,\n            column: 5\n          }\n        },\n        line: 48\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 20\n          },\n          end: {\n            line: 64,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 35\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        line: 64\n      },\n      \"5\": {\n        name: \"isVictory\",\n        decl: {\n          start: {\n            line: 72,\n            column: 16\n          },\n          end: {\n            line: 72,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 72,\n            column: 57\n          },\n          end: {\n            line: 81,\n            column: 1\n          }\n        },\n        line: 72\n      },\n      \"6\": {\n        name: \"isDraw\",\n        decl: {\n          start: {\n            line: 83,\n            column: 16\n          },\n          end: {\n            line: 83,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 83,\n            column: 41\n          },\n          end: {\n            line: 92,\n            column: 1\n          }\n        },\n        line: 83\n      },\n      \"7\": {\n        name: \"generateGrid\",\n        decl: {\n          start: {\n            line: 94,\n            column: 16\n          },\n          end: {\n            line: 94,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 94,\n            column: 31\n          },\n          end: {\n            line: 100,\n            column: 1\n          }\n        },\n        line: 94\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 105,\n            column: 9\n          },\n          end: {\n            line: 105,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 105,\n            column: 15\n          },\n          end: {\n            line: 107,\n            column: 3\n          }\n        },\n        line: 105\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 110,\n            column: 4\n          },\n          end: {\n            line: 110,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 110,\n            column: 29\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        line: 110\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 124,\n            column: 9\n          },\n          end: {\n            line: 124,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 124,\n            column: 21\n          },\n          end: {\n            line: 131,\n            column: 3\n          }\n        },\n        line: 124\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 15,\n            column: 2\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 15,\n            column: 2\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 15,\n            column: 2\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        }],\n        line: 15\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 2\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 2\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 2\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        }],\n        line: 31\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 47,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 47,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 47,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        }],\n        line: 47\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 69,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 69,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 69,\n            column: 3\n          }\n        }],\n        line: 63\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 75,\n            column: 6\n          },\n          end: {\n            line: 77,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 75,\n            column: 6\n          },\n          end: {\n            line: 77,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 75,\n            column: 6\n          },\n          end: {\n            line: 77,\n            column: 7\n          }\n        }],\n        line: 75\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 86,\n            column: 6\n          },\n          end: {\n            line: 88,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 86,\n            column: 6\n          },\n          end: {\n            line: 88,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 86,\n            column: 6\n          },\n          end: {\n            line: 88,\n            column: 7\n          }\n        }],\n        line: 86\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 113,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 113,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 113,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }],\n        line: 113\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 125,\n            column: 4\n          },\n          end: {\n            line: 127,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 125,\n            column: 4\n          },\n          end: {\n            line: 127,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 125,\n            column: 4\n          },\n          end: {\n            line: 127,\n            column: 5\n          }\n        }],\n        line: 125\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 128,\n            column: 4\n          },\n          end: {\n            line: 130,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 128,\n            column: 4\n          },\n          end: {\n            line: 130,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 128,\n            column: 4\n          },\n          end: {\n            line: 130,\n            column: 5\n          }\n        }],\n        line: 128\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"b3121693e8aa62911bf260175110446158230a99\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_orj6scrzb = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_orj6scrzb();\nimport { numOfColumns, numOfRows, neededToWin } from './constants';\n\nfunction checkCellForVictory(grid, colId, rowId, player) {\n  cov_orj6scrzb().f[0]++;\n  var fourCells = (cov_orj6scrzb().s[0]++, new Array(neededToWin)); // check horizontally\n\n  cov_orj6scrzb().s[1]++;\n\n  for (var i = (cov_orj6scrzb().s[2]++, 0); i < neededToWin; i++) {\n    cov_orj6scrzb().s[3]++;\n\n    try {\n      cov_orj6scrzb().s[4]++;\n      fourCells[i] = grid[colId][rowId + i];\n    } catch (e) {\n      cov_orj6scrzb().s[5]++;\n      fourCells[i] = null;\n    }\n  }\n\n  cov_orj6scrzb().s[6]++;\n\n  if (fourCells.every(function (val) {\n    cov_orj6scrzb().f[1]++;\n    cov_orj6scrzb().s[7]++;\n    return val === player;\n  })) {\n    cov_orj6scrzb().b[0][0]++;\n    cov_orj6scrzb().s[8]++;\n    return true;\n  } else {\n    cov_orj6scrzb().b[0][1]++;\n  } // check vertically\n\n\n  cov_orj6scrzb().s[9]++;\n\n  for (var i = (cov_orj6scrzb().s[10]++, 0); i < neededToWin; i++) {\n    cov_orj6scrzb().s[11]++;\n\n    try {\n      cov_orj6scrzb().s[12]++;\n      fourCells[i] = grid[colId + i][rowId];\n    } catch (e) {\n      cov_orj6scrzb().s[13]++;\n      fourCells[i] = null;\n    }\n  }\n\n  cov_orj6scrzb().s[14]++;\n\n  if (fourCells.every(function (val) {\n    cov_orj6scrzb().f[2]++;\n    cov_orj6scrzb().s[15]++;\n    return val === player;\n  })) {\n    cov_orj6scrzb().b[1][0]++;\n    cov_orj6scrzb().s[16]++;\n    return true;\n  } else {\n    cov_orj6scrzb().b[1][1]++;\n  } // check diagonally-downwards\n\n\n  cov_orj6scrzb().s[17]++;\n\n  for (var i = (cov_orj6scrzb().s[18]++, 0); i < neededToWin; i++) {\n    cov_orj6scrzb().s[19]++;\n\n    try {\n      cov_orj6scrzb().s[20]++;\n      fourCells[i] = grid[colId + i][rowId + i];\n    } catch (e) {\n      cov_orj6scrzb().s[21]++;\n      fourCells[i] = null;\n    }\n  }\n\n  cov_orj6scrzb().s[22]++;\n\n  if (fourCells.every(function (val) {\n    cov_orj6scrzb().f[3]++;\n    cov_orj6scrzb().s[23]++;\n    return val === player;\n  })) {\n    cov_orj6scrzb().b[2][0]++;\n    cov_orj6scrzb().s[24]++;\n    return true;\n  } else {\n    cov_orj6scrzb().b[2][1]++;\n  } // check diagonally-upwards\n\n\n  cov_orj6scrzb().s[25]++;\n\n  for (var i = (cov_orj6scrzb().s[26]++, 0); i < neededToWin; i++) {\n    cov_orj6scrzb().s[27]++;\n\n    try {\n      cov_orj6scrzb().s[28]++;\n      fourCells[i] = grid[colId - i][rowId + i];\n    } catch (e) {\n      cov_orj6scrzb().s[29]++;\n      fourCells[i] = null;\n    }\n  }\n\n  cov_orj6scrzb().s[30]++;\n\n  if (fourCells.every(function (val) {\n    cov_orj6scrzb().f[4]++;\n    cov_orj6scrzb().s[31]++;\n    return val === player;\n  })) {\n    cov_orj6scrzb().b[3][0]++;\n    cov_orj6scrzb().s[32]++;\n    return true;\n  } else {\n    cov_orj6scrzb().b[3][1]++;\n  }\n}\n\nexport function isVictory(grid, player) {\n  cov_orj6scrzb().f[5]++;\n  cov_orj6scrzb().s[33]++;\n\n  for (var colId = (cov_orj6scrzb().s[34]++, 0); colId < numOfColumns; colId++) {\n    cov_orj6scrzb().s[35]++;\n\n    for (var rowId = (cov_orj6scrzb().s[36]++, 0); rowId < numOfRows; rowId++) {\n      cov_orj6scrzb().s[37]++;\n\n      if (checkCellForVictory(grid, colId, rowId, player)) {\n        cov_orj6scrzb().b[4][0]++;\n        cov_orj6scrzb().s[38]++;\n        return true;\n      } else {\n        cov_orj6scrzb().b[4][1]++;\n      }\n    }\n  }\n\n  cov_orj6scrzb().s[39]++;\n  return false;\n}\nexport function isDraw(grid) {\n  cov_orj6scrzb().f[6]++;\n  cov_orj6scrzb().s[40]++;\n\n  for (var colIdx = (cov_orj6scrzb().s[41]++, numOfColumns - 1); colIdx >= 0; colIdx--) {\n    cov_orj6scrzb().s[42]++;\n\n    for (var rowIdx = (cov_orj6scrzb().s[43]++, numOfRows - 1); rowIdx >= 0; rowIdx--) {\n      cov_orj6scrzb().s[44]++;\n\n      if (grid[colIdx][rowIdx] === null) {\n        cov_orj6scrzb().b[5][0]++;\n        cov_orj6scrzb().s[45]++;\n        return false;\n      } else {\n        cov_orj6scrzb().b[5][1]++;\n      }\n    }\n  }\n\n  cov_orj6scrzb().s[46]++;\n  return true;\n}\nexport function generateGrid() {\n  cov_orj6scrzb().f[7]++;\n  var grid = (cov_orj6scrzb().s[47]++, {});\n  cov_orj6scrzb().s[48]++;\n\n  for (var rowIdx = (cov_orj6scrzb().s[49]++, 0); rowIdx < numOfColumns; rowIdx++) {\n    cov_orj6scrzb().s[50]++;\n    grid[rowIdx] = Array(numOfRows).fill(null);\n  }\n\n  cov_orj6scrzb().s[51]++;\n  return grid;\n}\nexport var ConnectFourGame = (cov_orj6scrzb().s[52]++, {\n  name: 'fourinarow',\n  setup: function setup() {\n    cov_orj6scrzb().f[8]++;\n    cov_orj6scrzb().s[53]++;\n    return {\n      grid: generateGrid()\n    };\n  },\n  moves: {\n    selectColumn: function selectColumn(G, ctx, id) {\n      cov_orj6scrzb().f[9]++;\n      var colId = (cov_orj6scrzb().s[54]++, Math.floor(id / 10));\n      cov_orj6scrzb().s[55]++;\n\n      for (var rowID = (cov_orj6scrzb().s[56]++, numOfRows - 1); rowID >= 0; rowID--) {\n        cov_orj6scrzb().s[57]++;\n\n        if (G.grid[colId][rowID] === null) {\n          cov_orj6scrzb().b[6][0]++;\n          cov_orj6scrzb().s[58]++;\n          G.grid[colId][rowID] = ctx.currentPlayer;\n          cov_orj6scrzb().s[59]++;\n          return;\n        } else {\n          cov_orj6scrzb().b[6][1]++;\n        }\n      } // return { ...G, grid };\n\n    }\n  },\n  turn: {\n    moveLimit: 1\n  },\n  endIf: function endIf(G, ctx) {\n    cov_orj6scrzb().f[10]++;\n    cov_orj6scrzb().s[60]++;\n\n    if (isVictory(G.grid, ctx.currentPlayer)) {\n      cov_orj6scrzb().b[7][0]++;\n      cov_orj6scrzb().s[61]++;\n      return {\n        winner: ctx.currentPlayer\n      };\n    } else {\n      cov_orj6scrzb().b[7][1]++;\n    }\n\n    cov_orj6scrzb().s[62]++;\n\n    if (isDraw(G.grid)) {\n      cov_orj6scrzb().b[8][0]++;\n      cov_orj6scrzb().s[63]++;\n      return {\n        draw: true\n      };\n    } else {\n      cov_orj6scrzb().b[8][1]++;\n    }\n  }\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/game.ts"],"names":["numOfColumns","numOfRows","neededToWin","checkCellForVictory","grid","colId","rowId","player","fourCells","Array","i","e","every","val","isVictory","isDraw","colIdx","rowIdx","generateGrid","fill","ConnectFourGame","name","setup","moves","selectColumn","G","ctx","id","Math","floor","rowID","currentPlayer","turn","moveLimit","endIf","winner","draw"],"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","sourcesContent":["import { numOfColumns, numOfRows, neededToWin } from './constants';\nimport { IGameArgs } from 'boardgame.io/core';\n\nfunction checkCellForVictory(grid: number[][], colId: any, rowId: any, player: any) {\n  let fourCells = new Array(neededToWin);\n\n  // check horizontally\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check vertically\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check diagonally-downwards\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check diagonally-upwards\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId - i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n}\n\nexport function isVictory(grid: number[][], player: any) {\n  for (var colId = 0; colId < numOfColumns; colId++) {\n    for (var rowId = 0; rowId < numOfRows; rowId++) {\n      if (checkCellForVictory(grid, colId, rowId, player)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function isDraw(grid: number[][]) {\n  for (var colIdx = numOfColumns - 1; colIdx >= 0; colIdx--) {\n    for (var rowIdx = numOfRows - 1; rowIdx >= 0; rowIdx--) {\n      if (grid[colIdx][rowIdx] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function generateGrid() {\n  const grid: any = {};\n  for (var rowIdx = 0; rowIdx < numOfColumns; rowIdx++) {\n    grid[rowIdx] = Array(numOfRows).fill(null);\n  }\n  return grid;\n}\n\nexport const ConnectFourGame: IGameArgs = {\n  name: 'fourinarow',\n\n  setup: () => {\n    return { grid: generateGrid() };\n  },\n\n  moves: {\n    selectColumn(G, ctx, id) {\n      const colId = Math.floor(id / 10);\n      for (var rowID = numOfRows - 1; rowID >= 0; rowID--) {\n        if (G.grid[colId][rowID] === null) {\n          G.grid[colId][rowID] = ctx.currentPlayer;\n          return;\n        }\n      }\n      // return { ...G, grid };\n    },\n  },\n  turn: {\n    moveLimit: 1,\n  },\n  endIf: (G, ctx) => {\n    if (isVictory(G.grid, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer };\n    }\n    if (isDraw(G.grid)) {\n      return { draw: true };\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}