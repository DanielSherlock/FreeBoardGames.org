{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_2dv2upfyf8() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx\";\n  var hash = \"afd4f59865d8ea972d1f1d12bb1ed1dfc590fb0c\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 14,\n          column: 26\n        },\n        end: {\n          line: 14,\n          column: 63\n        }\n      },\n      \"1\": {\n        start: {\n          line: 18,\n          column: 4\n        },\n        end: {\n          line: 24,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 19,\n          column: 6\n        },\n        end: {\n          line: 23,\n          column: 8\n        }\n      },\n      \"3\": {\n        start: {\n          line: 26,\n          column: 21\n        },\n        end: {\n          line: 26,\n          column: 85\n        }\n      },\n      \"4\": {\n        start: {\n          line: 28,\n          column: 4\n        },\n        end: {\n          line: 60,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 13,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 11\n          },\n          end: {\n            line: 61,\n            column: 3\n          }\n        },\n        line: 13\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }],\n        line: 18\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 21\n          },\n          end: {\n            line: 26,\n            column: 85\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 67\n          },\n          end: {\n            line: 26,\n            column: 75\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 78\n          },\n          end: {\n            line: 26,\n            column: 85\n          }\n        }],\n        line: 26\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"afd4f59865d8ea972d1f1d12bb1ed1dfc590fb0c\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2dv2upfyf8 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2dv2upfyf8();\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FbgLogo from './media/fbg_logo_white_48.png';\nimport Link from 'next/link';\n\nclass FreeBoardGamesBar extends (React.Component) {\n  render() {\n    cov_2dv2upfyf8().f[0]++;\n    const isProdChannel = (cov_2dv2upfyf8().s[0]++, false);\n    let appBarStyle;\n    let versionInfo;\n    cov_2dv2upfyf8().s[1]++;\n\n    if (!isProdChannel) {\n      cov_2dv2upfyf8().b[0][0]++;\n      cov_2dv2upfyf8().s[2]++;\n      versionInfo = __jsx(Typography, {\n        \"data-test-id\": \"gitrev\",\n        variant: \"h6\",\n        style: {\n          color: 'white',\n          marginLeft: 'auto'\n        }\n      }, process.env.VERSION);\n    } else {\n      cov_2dv2upfyf8().b[0][1]++;\n    }\n\n    const maxWidth = (cov_2dv2upfyf8().s[3]++, this.props.FEATURE_FLAG_readyForDesktopView ? (cov_2dv2upfyf8().b[1][0]++, '1200px') : (cov_2dv2upfyf8().b[1][1]++, '500px'));\n    cov_2dv2upfyf8().s[4]++;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      }\n    }, __jsx(AppBar, {\n      position: \"sticky\",\n      style: appBarStyle\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      style: {\n        textDecoration: 'none'\n      }\n    }, __jsx(Toolbar, null, __jsx(\"img\", {\n      style: {\n        marginRight: '8px',\n        height: '48px'\n      },\n      src: FbgLogo,\n      alt: \"FbG\"\n    }), __jsx(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      style: {\n        color: 'white'\n      }\n    }, \"FreeBoardGames.org\"), versionInfo))))), __jsx(\"div\", {\n      style: {\n        maxWidth,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      }\n    }, this.props.children));\n  }\n\n}\n\nexport default FreeBoardGamesBar;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx"],"names":["React","AppBar","Toolbar","Typography","FbgLogo","Link","FreeBoardGamesBar","Component","render","isProdChannel","appBarStyle","versionInfo","color","marginLeft","process","env","VERSION","maxWidth","props","FEATURE_FLAG_readyForDesktopView","marginRight","textDecoration","height","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAMA,MAAMC,iBAAN,UAAgCN,KAAK,CAACO,SAAtC,EAAiE;AAC/DC,EAAAA,MAAM,GAAG;AAAA;AACP,UAAMC,aAAa,mCAAnB;AACA,QAAIC,WAAJ;AACA,QAAIC,WAAJ;AAHO;;AAKP,QAAI,CAACF,aAAL,EAAoB;AAAA;AAAA;AAClBE,MAAAA,WAAW,GACT,MAAC,UAAD;AAAY,wBAAa,QAAzB;AAAkC,QAAA,OAAO,EAAC,IAA1C;AAA+C,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE;AAA9B;AAAtD,SACGC,OAAO,CAACC,GAAR,CAAYC,OADf,CADF;AAKD,KAND;AAAA;AAAA;;AAQA,UAAMC,QAAQ,6BAAG,KAAKC,KAAL,CAAWC,gCAAX,gCAA8C,QAA9C,iCAAyD,OAAzD,CAAH,CAAd;AAbO;AAeP,WACE,MAAC,KAAD,CAAO,QAAP,QACE;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,UAAU,EAAE,MADP;AAELO,QAAAA,WAAW,EAAE;AAFR;AADT,OAME,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAEV;AAAjC,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE;AAAG,MAAA,KAAK,EAAE;AAAEW,QAAAA,cAAc,EAAE;AAAlB;AAAV,OACE,MAAC,OAAD,QACE;AAAK,MAAA,KAAK,EAAE;AAAED,QAAAA,WAAW,EAAE,KAAf;AAAsBE,QAAAA,MAAM,EAAE;AAA9B,OAAZ;AAAoD,MAAA,GAAG,EAAElB,OAAzD;AAAkE,MAAA,GAAG,EAAC;AAAtE,MADF,EAEE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT;AAA/C,4BAFF,EAKGD,WALH,CADF,CADF,CADF,CANF,CADF,EAqBE;AACE,MAAA,KAAK,EAAE;AACLM,QAAAA,QADK;AAELJ,QAAAA,UAAU,EAAE,MAFP;AAGLO,QAAAA,WAAW,EAAE;AAHR;AADT,OAOG,KAAKF,KAAL,CAAWK,QAPd,CArBF,CADF;AAiCD;;AAjD8D;;AAoDjE,eAAejB,iBAAf","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FbgLogo from './media/fbg_logo_white_48.png';\nimport Link from 'next/link';\n\ninterface FBGBarProps {\n  FEATURE_FLAG_readyForDesktopView?: boolean;\n}\n\nclass FreeBoardGamesBar extends React.Component<FBGBarProps, {}> {\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    let appBarStyle;\n    let versionInfo;\n\n    if (!isProdChannel) {\n      versionInfo = (\n        <Typography data-test-id=\"gitrev\" variant=\"h6\" style={{ color: 'white', marginLeft: 'auto' }}>\n          {process.env.VERSION}\n        </Typography>\n      );\n    }\n\n    const maxWidth = this.props.FEATURE_FLAG_readyForDesktopView ? '1200px' : '500px';\n\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          <AppBar position=\"sticky\" style={appBarStyle}>\n            <Link href=\"/\">\n              <a style={{ textDecoration: 'none' }}>\n                <Toolbar>\n                  <img style={{ marginRight: '8px', height: '48px' }} src={FbgLogo} alt=\"FbG\" />\n                  <Typography component=\"h1\" variant=\"h6\" style={{ color: 'white' }}>\n                    FreeBoardGames.org\n                  </Typography>\n                  {versionInfo}\n                </Toolbar>\n              </a>\n            </Link>\n          </AppBar>\n        </div>\n        <div\n          style={{\n            maxWidth,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FreeBoardGamesBar;\n"]},"metadata":{},"sourceType":"module"}