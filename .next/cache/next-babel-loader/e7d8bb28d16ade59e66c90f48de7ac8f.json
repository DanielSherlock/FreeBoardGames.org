{"ast":null,"code":"function cov_1xfgl775w4() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/hangman/game.ts\";\n  var hash = \"e6010a84484fd7a0e18b1bf401cec17f644e8c85\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/hangman/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 38\n        },\n        end: {\n          line: 26,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 8,\n          column: 15\n        },\n        end: {\n          line: 8,\n          column: 36\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 8,\n            column: 9\n          },\n          end: {\n            line: 8,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 15\n          },\n          end: {\n            line: 8,\n            column: 36\n          }\n        },\n        line: 8\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"e6010a84484fd7a0e18b1bf401cec17f644e8c85\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1xfgl775w4 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1xfgl775w4();\nimport { HANGMAN_INITIAL_STATE } from './constants';\nimport { setSecret, selectLetter, getWinner } from './util';\nexport const HangmanGame = (cov_1xfgl775w4().s[0]++, {\n  name: 'hangman',\n  setup: () => {\n    cov_1xfgl775w4().f[0]++;\n    cov_1xfgl775w4().s[1]++;\n    return HANGMAN_INITIAL_STATE;\n  },\n  phases: {\n    prepare: {\n      //moves: { setSecret: { move: setSecret, client: false } },\n      moves: {\n        setSecret\n      },\n      start: true,\n      turn: {\n        moveLimit: 1\n      },\n      next: 'play'\n    },\n    play: {\n      //moves: { selectLetter: { move: selectLetter, client: false } },\n      moves: {\n        selectLetter\n      }\n    }\n  },\n  endIf: getWinner\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/hangman/game.ts"],"names":["HANGMAN_INITIAL_STATE","setSecret","selectLetter","getWinner","HangmanGame","name","setup","phases","prepare","moves","start","turn","moveLimit","next","play","endIf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,qBAAT,QAAsC,aAAtC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,QAAmD,QAAnD;AAEA,OAAO,MAAMC,WAAsB,6BAAG;AACpCC,EAAAA,IAAI,EAAE,SAD8B;AAGpCC,EAAAA,KAAK,EAAE,MAAMN;AAAAA;AAAAA;AAAAA,WAAAA,qBAAqB;AAAA,GAHE;AAKpCO,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,KAAK,EAAE;AAAER,QAAAA;AAAF,OAFA;AAGPS,MAAAA,KAAK,EAAE,IAHA;AAIPC,MAAAA,IAAI,EAAE;AACJC,QAAAA,SAAS,EAAE;AADP,OAJC;AAOPC,MAAAA,IAAI,EAAE;AAPC,KADH;AAUNC,IAAAA,IAAI,EAAE;AACJ;AACAL,MAAAA,KAAK,EAAE;AAAEP,QAAAA;AAAF;AAFH;AAVA,GAL4B;AAoBpCa,EAAAA,KAAK,EAAEZ;AApB6B,CAAH,CAA5B","sourcesContent":["import { IGameArgs } from 'boardgame.io/core';\nimport { HANGMAN_INITIAL_STATE } from './constants';\nimport { setSecret, selectLetter, getWinner } from './util';\n\nexport const HangmanGame: IGameArgs = {\n  name: 'hangman',\n\n  setup: () => HANGMAN_INITIAL_STATE,\n\n  phases: {\n    prepare: {\n      //moves: { setSecret: { move: setSecret, client: false } },\n      moves: { setSecret },\n      start: true,\n      turn: {\n        moveLimit: 1,\n      },\n      next: 'play',\n    },\n    play: {\n      //moves: { selectLetter: { move: selectLetter, client: false } },\n      moves: { selectLetter },\n    },\n  },\n  endIf: getWinner,\n};\n"]},"metadata":{},"sourceType":"module"}