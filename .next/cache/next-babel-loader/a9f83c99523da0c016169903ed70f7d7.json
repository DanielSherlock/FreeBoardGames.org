{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_dcu15cph8() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx\";\n  var hash = \"42ae862454d8feb7aa830a9751aba75c46e1ce67\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 6,\n          column: 15\n        },\n        end: {\n          line: 6,\n          column: 38\n        }\n      },\n      \"1\": {\n        start: {\n          line: 15,\n          column: 39\n        },\n        end: {\n          line: 21,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 23,\n          column: 4\n        },\n        end: {\n          line: 50,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 3\n          }\n        },\n        line: 14\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"42ae862454d8feb7aa830a9751aba75c46e1ce67\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_dcu15cph8 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_dcu15cph8();\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nconst QrCode = (cov_dcu15cph8().s[0]++, require('qrcode.react'));\nexport class QrCodePopup extends (React.Component) {\n  render() {\n    cov_dcu15cph8().f[0]++;\n    const style = (cov_dcu15cph8().s[1]++, {\n      width: '100%',\n      boxSizing: 'border-box',\n      padding: '16px',\n      height: 'auto',\n      display: 'block'\n    });\n    cov_dcu15cph8().s[2]++;\n    return __jsx(ClickAwayListener, {\n      onClickAway: this.props.toggleQrCode\n    }, __jsx(Card, {\n      style: {\n        marginBottom: '16px',\n        whiteSpace: 'nowrap',\n        marginLeft: 'auto',\n        width: '80vw',\n        maxWidth: '450px',\n        marginRight: 'auto',\n        textAlign: 'center'\n      }\n    }, __jsx(Typography, {\n      style: {\n        paddingTop: '16px'\n      },\n      variant: \"h5\",\n      component: \"h3\"\n    }, \"Scan QR code\"), __jsx(QrCode, {\n      value: this.props.url,\n      size: 500,\n      style: style,\n      renderAs: \"svg\"\n    }), __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginBottom: '16px'\n      },\n      onClick: this.props.toggleQrCode\n    }, \"Done\")));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx"],"names":["React","Button","Typography","Card","ClickAwayListener","QrCode","require","QrCodePopup","Component","render","style","width","boxSizing","padding","height","display","props","toggleQrCode","marginBottom","whiteSpace","marginLeft","maxWidth","marginRight","textAlign","paddingTop","url"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,MAAMC,MAAM,4BAAGC,OAAO,CAAC,cAAD,CAAV,CAAZ;AAOA,OAAO,MAAMC,WAAN,UAA0BP,KAAK,CAACQ,SAAhC,EAAiE;AACtEC,EAAAA,MAAM,GAAG;AAAA;AACP,UAAMC,KAA0B,4BAAG;AACjCC,MAAAA,KAAK,EAAE,MAD0B;AAEjCC,MAAAA,SAAS,EAAE,YAFsB;AAGjCC,MAAAA,OAAO,EAAE,MAHwB;AAIjCC,MAAAA,MAAM,EAAE,MAJyB;AAKjCC,MAAAA,OAAO,EAAE;AALwB,KAAH,CAAhC;AADO;AASP,WACE,MAAC,iBAAD;AAAmB,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAA3C,OACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAE,MADT;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,UAAU,EAAE,MAHP;AAILT,QAAAA,KAAK,EAAE,MAJF;AAKLU,QAAAA,QAAQ,EAAE,OALL;AAMLC,QAAAA,WAAW,EAAE,MANR;AAOLC,QAAAA,SAAS,EAAE;AAPN;AADT,OAWE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAnB;AAA2C,MAAA,OAAO,EAAC,IAAnD;AAAwD,MAAA,SAAS,EAAC;AAAlE,sBAXF,EAcE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,GAA1B;AAA+B,MAAA,IAAI,EAAE,GAArC;AAA0C,MAAA,KAAK,EAAEf,KAAjD;AAA+D,MAAA,QAAQ,EAAC;AAAxE,MAdF,EAeE,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,YAAY,EAAE;AAAhB,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC;AAJtB,cAfF,CADF,CADF;AA4BD;;AAtCqE","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nconst QrCode = require('qrcode.react');\n\ninterface IQrCodePopupProps {\n  url: string;\n  toggleQrCode: () => void;\n}\n\nexport class QrCodePopup extends React.Component<IQrCodePopupProps, {}> {\n  render() {\n    const style: React.CSSProperties = {\n      width: '100%',\n      boxSizing: 'border-box',\n      padding: '16px',\n      height: 'auto',\n      display: 'block',\n    };\n\n    return (\n      <ClickAwayListener onClickAway={this.props.toggleQrCode}>\n        <Card\n          style={{\n            marginBottom: '16px',\n            whiteSpace: 'nowrap',\n            marginLeft: 'auto',\n            width: '80vw',\n            maxWidth: '450px',\n            marginRight: 'auto',\n            textAlign: 'center',\n          }}\n        >\n          <Typography style={{ paddingTop: '16px' }} variant=\"h5\" component=\"h3\">\n            Scan QR code\n          </Typography>\n          <QrCode value={this.props.url} size={500} style={style as any} renderAs=\"svg\" />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginBottom: '16px' }}\n            onClick={this.props.toggleQrCode}\n          >\n            Done\n          </Button>\n        </Card>\n      </ClickAwayListener>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}