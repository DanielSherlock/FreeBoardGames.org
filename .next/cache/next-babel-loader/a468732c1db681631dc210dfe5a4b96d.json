{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_1i6iwuas5o() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\";\n  var hash = \"69cffd39d7b92e54f69d2bf72b9175ffc2b038b0\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 25,\n          column: 16\n        },\n        end: {\n          line: 27,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 32,\n          column: 13\n        },\n        end: {\n          line: 32,\n          column: 68\n        }\n      },\n      \"2\": {\n        start: {\n          line: 33,\n          column: 19\n        },\n        end: {\n          line: 33,\n          column: 66\n        }\n      },\n      \"3\": {\n        start: {\n          line: 35,\n          column: 16\n        },\n        end: {\n          line: 35,\n          column: 34\n        }\n      },\n      \"4\": {\n        start: {\n          line: 36,\n          column: 23\n        },\n        end: {\n          line: 36,\n          column: 87\n        }\n      },\n      \"5\": {\n        start: {\n          line: 38,\n          column: 4\n        },\n        end: {\n          line: 100,\n          column: 6\n        }\n      },\n      \"6\": {\n        start: {\n          line: 46,\n          column: 34\n        },\n        end: {\n          line: 46,\n          column: 45\n        }\n      },\n      \"7\": {\n        start: {\n          line: 47,\n          column: 22\n        },\n        end: {\n          line: 72,\n          column: 25\n        }\n      },\n      \"8\": {\n        start: {\n          line: 56,\n          column: 73\n        },\n        end: {\n          line: 56,\n          column: 117\n        }\n      },\n      \"9\": {\n        start: {\n          line: 57,\n          column: 73\n        },\n        end: {\n          line: 57,\n          column: 117\n        }\n      },\n      \"10\": {\n        start: {\n          line: 65,\n          column: 60\n        },\n        end: {\n          line: 65,\n          column: 89\n        }\n      },\n      \"11\": {\n        start: {\n          line: 66,\n          column: 61\n        },\n        end: {\n          line: 66,\n          column: 93\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 2\n          },\n          end: {\n            line: 30,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 11\n          },\n          end: {\n            line: 101,\n            column: 3\n          }\n        },\n        line: 30\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 45,\n            column: 35\n          },\n          end: {\n            line: 45,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 45,\n            column: 43\n          },\n          end: {\n            line: 73,\n            column: 17\n          }\n        },\n        line: 45\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 56,\n            column: 53\n          },\n          end: {\n            line: 56,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 56,\n            column: 72\n          },\n          end: {\n            line: 56,\n            column: 118\n          }\n        },\n        line: 56\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 57,\n            column: 53\n          },\n          end: {\n            line: 57,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 57,\n            column: 72\n          },\n          end: {\n            line: 57,\n            column: 118\n          }\n        },\n        line: 57\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 65,\n            column: 43\n          },\n          end: {\n            line: 65,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 65,\n            column: 59\n          },\n          end: {\n            line: 65,\n            column: 90\n          }\n        },\n        line: 65\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 66,\n            column: 44\n          },\n          end: {\n            line: 66,\n            column: 45\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 60\n          },\n          end: {\n            line: 66,\n            column: 94\n          }\n        },\n        line: 66\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 32,\n            column: 13\n          },\n          end: {\n            line: 32,\n            column: 68\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 32,\n            column: 35\n          },\n          end: {\n            line: 32,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 32,\n            column: 67\n          },\n          end: {\n            line: 32,\n            column: 68\n          }\n        }],\n        line: 32\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 19\n          },\n          end: {\n            line: 33,\n            column: 66\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 41\n          },\n          end: {\n            line: 33,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 63\n          },\n          end: {\n            line: 33,\n            column: 66\n          }\n        }],\n        line: 33\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 53,\n            column: 29\n          },\n          end: {\n            line: 61,\n            column: 41\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 54,\n            column: 30\n          },\n          end: {\n            line: 54,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 56,\n            column: 30\n          },\n          end: {\n            line: 61,\n            column: 41\n          }\n        }],\n        line: 53\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 77,\n            column: 18\n          },\n          end: {\n            line: 83,\n            column: 29\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 18\n          },\n          end: {\n            line: 80,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 82,\n            column: 18\n          },\n          end: {\n            line: 83,\n            column: 29\n          }\n        }],\n        line: 77\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"69cffd39d7b92e54f69d2bf72b9175ffc2b038b0\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1i6iwuas5o = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1i6iwuas5o();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { BHand } from './components/bhand';\nimport { BTrash } from './components/btrash';\nimport { BPiles } from './components/bpiles';\nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\nimport { BNameBadge } from './components/bnamebadge';\nimport { BLog } from './components/blog';\nvar handStyle = (cov_1i6iwuas5o().s[0]++, {\n  display: 'flex'\n});\nexport var Board = /*#__PURE__*/function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      cov_1i6iwuas5o().f[0]++;\n      var me = (cov_1i6iwuas5o().s[1]++, this.props.playerID ? (cov_1i6iwuas5o().b[0][0]++, parseInt(this.props.playerID)) : (cov_1i6iwuas5o().b[0][1]++, 1)); // TODO : Local Fix - defaults to player 1\n\n      var playerID = (cov_1i6iwuas5o().s[2]++, this.props.playerID ? (cov_1i6iwuas5o().b[1][0]++, this.props.playerID) : (cov_1i6iwuas5o().b[1][1]++, \"1\")); // TODO : Local Fix\n\n      var hands = (cov_1i6iwuas5o().s[3]++, this.props.G.hands);\n      var rotatedHands = (cov_1i6iwuas5o().s[4]++, hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1)));\n      cov_1i6iwuas5o().s[5]++;\n      return __jsx(GameLayout, {\n        gameArgs: this.props.gameArgs,\n        allowWiderScreen: true\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, __jsx(\"div\", null, rotatedHands.map(function (hand) {\n        cov_1i6iwuas5o().f[1]++;\n        var index = (cov_1i6iwuas5o().s[6]++, hand.player);\n        cov_1i6iwuas5o().s[7]++;\n        return __jsx(\"div\", {\n          key: \"Board\" + index.toString(),\n          style: handStyle\n        }, __jsx(BNameBadge, {\n          name: _this.props.gameArgs.players[index].name,\n          turn: index.toString() == _this.props.ctx.currentPlayer\n        }), index === me ? (cov_1i6iwuas5o().b[2][0]++, __jsx(React.Fragment, null, __jsx(\"hr\", null), \"Your Hand:\")) : (cov_1i6iwuas5o().b[2][1]++, __jsx(BButtons, {\n          onHintColor: function onHintColor(value) {\n            cov_1i6iwuas5o().f[2]++;\n            cov_1i6iwuas5o().s[8]++;\n\n            _this.props.moves.moveHintColor(index, value);\n          },\n          onHintValue: function onHintValue(value) {\n            cov_1i6iwuas5o().f[3]++;\n            cov_1i6iwuas5o().s[9]++;\n\n            _this.props.moves.moveHintValue(index, value);\n          },\n          myTurn: _this.props.ctx.currentPlayer === playerID,\n          keyPropagation: \"Board\" + index.toString()\n        })), __jsx(BHand, {\n          hand: hand,\n          me: me === index,\n          onPlay: function onPlay(id) {\n            cov_1i6iwuas5o().f[4]++;\n            cov_1i6iwuas5o().s[10]++;\n\n            _this.props.moves.movePlay(id);\n          },\n          onTrash: function onTrash(id) {\n            cov_1i6iwuas5o().f[5]++;\n            cov_1i6iwuas5o().s[11]++;\n\n            _this.props.moves.moveDiscard(id);\n          },\n          myTurn: _this.props.ctx.currentPlayer === playerID,\n          keyPropagation: \"Board\" + index.toString()\n        }));\n      })), __jsx(\"div\", null, this.props.G.trash.length === 0 ? (cov_1i6iwuas5o().b[3][0]++, __jsx(BTrash, {\n        card: null\n      })) : (cov_1i6iwuas5o().b[3][1]++, __jsx(BTrash, {\n        card: this.props.G.trash[this.props.G.trash.length - 1]\n      })), __jsx(BToken, {\n        treats: this.props.G.treats,\n        countdown: this.props.G.countdown\n      }), __jsx(BDeck, {\n        cardsLeft: this.props.G.deckindex\n      })), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          maxWidth: '55px'\n        }\n      }, __jsx(BPiles, {\n        piles: this.props.G.piles,\n        keyPropagation: \"Board\"\n      })), __jsx(\"div\", null, __jsx(BLog, {\n        lines: this.props.G.movelog\n      }, \"keyPropagation=\", \"Board\" + index.toString()))));\n    }\n  }]);\n\n  return Board;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx"],"names":["React","GameLayout","BHand","BTrash","BPiles","BToken","BDeck","BButtons","BNameBadge","BLog","handStyle","display","Board","me","props","playerID","parseInt","hands","G","rotatedHands","slice","length","concat","gameArgs","map","hand","index","player","toString","players","name","ctx","currentPlayer","value","moves","moveHintColor","moveHintValue","id","movePlay","moveDiscard","trash","treats","countdown","deckindex","flexDirection","maxWidth","piles","movelog","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG } from './interfaces';\n\nimport { BHand } from './components/bhand'; \nimport { BTrash } from './components/btrash'; \nimport { BPiles } from './components/bpiles'; \nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\nimport { BNameBadge } from './components/bnamebadge';\nimport { BLog } from './components/blog';\n\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n}\n\nlet handStyle = {\n  display: 'flex'\n}\n\nexport class Board extends React.Component<IBoardProps,  {}> {\n  render() {\n\n    var me = this.props.playerID ? parseInt(this.props.playerID) : 1 // TODO : Local Fix - defaults to player 1\n    var playerID = this.props.playerID ? this.props.playerID : \"1\" // TODO : Local Fix\n    \n    let hands = this.props.G.hands;\n    let rotatedHands = hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1));\n\n    return (\n      <GameLayout\n          gameArgs={this.props.gameArgs}\n          allowWiderScreen={true}\n          >\n          <div style={{display: 'flex'}}>\n            <div>\n                { rotatedHands.map(hand => {\n                      let index = hand.player;\n                      return (\n                        <div key={\"Board\" + index.toString()}\n                             style={handStyle}>\n                               <BNameBadge name={ this.props.gameArgs.players[index].name }\n                                          turn={  index.toString() == this.props.ctx.currentPlayer }\n                              ></BNameBadge>\n                            {index === me ?\n                              <><hr />Your Hand:</>\n                            :\n                              <BButtons onHintColor={(value: number) => {this.props.moves.moveHintColor(index, value)}}\n                                        onHintValue={(value: number) => {this.props.moves.moveHintValue(index, value)}}\n                                        myTurn={this.props.ctx.currentPlayer === playerID}\n                                        keyPropagation={\"Board\" + index.toString()}\n                                        > \n                              </BButtons>\n                            }\n                            <BHand hand={ hand } \n                                   me={me === index} \n                                   onPlay={(id: number) => {this.props.moves.movePlay(id)}}\n                                   onTrash={(id: number) => {this.props.moves.moveDiscard(id)}}\n                                   myTurn={this.props.ctx.currentPlayer === playerID}\n                                   keyPropagation={\"Board\" + index.toString()}\n                                   >\n                            </BHand>\n                        </div>\n                        )\n                })}\n            </div>\n            <div>\n                {\n                  this.props.G.trash.length === 0\n                  ?\n                  <BTrash card={ null } >\n                    </BTrash>\n                  :\n                  <BTrash card={this.props.G.trash[this.props.G.trash.length - 1]} >\n                    </BTrash>\n                }\n                <BToken treats={this.props.G.treats} countdown={this.props.G.countdown}></BToken>\n                <BDeck cardsLeft={this.props.G.deckindex}></BDeck>\n              </div>\n            <div style={{display: 'flex', flexDirection: 'column', maxWidth: '55px'}}>\n              <BPiles piles={this.props.G.piles}\n                          keyPropagation={\"Board\"}\n                          ></BPiles>\n            </div>\n            <div>\n              <BLog lines={ this.props.G.movelog } >\n                    keyPropagation={\"Board\" + index.toString()}\n              </BLog>\n            </div>\n          </div>\n      </GameLayout>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}