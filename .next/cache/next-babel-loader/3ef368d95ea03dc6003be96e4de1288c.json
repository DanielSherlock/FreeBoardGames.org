{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction cov_1rukytt2b7() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/moves.ts\";\n  var hash = \"98a1ebc43d179c1ca1b2c8a13b7b4a65dd188c35\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/moves.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 7,\n          column: 2\n        },\n        end: {\n          line: 11,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 8,\n          column: 4\n        },\n        end: {\n          line: 8,\n          column: 23\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 9\n        },\n        end: {\n          line: 11,\n          column: 3\n        }\n      },\n      \"3\": {\n        start: {\n          line: 10,\n          column: 4\n        },\n        end: {\n          line: 10,\n          column: 23\n        }\n      },\n      \"4\": {\n        start: {\n          line: 13,\n          column: 27\n        },\n        end: {\n          line: 13,\n          column: 54\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 2\n        },\n        end: {\n          line: 87,\n          column: 3\n        }\n      },\n      \"6\": {\n        start: {\n          line: 22,\n          column: 6\n        },\n        end: {\n          line: 24,\n          column: 7\n        }\n      },\n      \"7\": {\n        start: {\n          line: 23,\n          column: 8\n        },\n        end: {\n          line: 23,\n          column: 19\n        }\n      },\n      \"8\": {\n        start: {\n          line: 25,\n          column: 6\n        },\n        end: {\n          line: 46,\n          column: 7\n        }\n      },\n      \"9\": {\n        start: {\n          line: 28,\n          column: 10\n        },\n        end: {\n          line: 30,\n          column: 11\n        }\n      },\n      \"10\": {\n        start: {\n          line: 29,\n          column: 12\n        },\n        end: {\n          line: 29,\n          column: 23\n        }\n      },\n      \"11\": {\n        start: {\n          line: 31,\n          column: 10\n        },\n        end: {\n          line: 37,\n          column: 11\n        }\n      },\n      \"12\": {\n        start: {\n          line: 32,\n          column: 12\n        },\n        end: {\n          line: 36,\n          column: 13\n        }\n      },\n      \"13\": {\n        start: {\n          line: 38,\n          column: 10\n        },\n        end: {\n          line: 38,\n          column: 21\n        }\n      },\n      \"14\": {\n        start: {\n          line: 41,\n          column: 10\n        },\n        end: {\n          line: 43,\n          column: 11\n        }\n      },\n      \"15\": {\n        start: {\n          line: 42,\n          column: 12\n        },\n        end: {\n          line: 42,\n          column: 23\n        }\n      },\n      \"16\": {\n        start: {\n          line: 44,\n          column: 10\n        },\n        end: {\n          line: 44,\n          column: 66\n        }\n      },\n      \"17\": {\n        start: {\n          line: 50,\n          column: 6\n        },\n        end: {\n          line: 52,\n          column: 7\n        }\n      },\n      \"18\": {\n        start: {\n          line: 51,\n          column: 8\n        },\n        end: {\n          line: 51,\n          column: 19\n        }\n      },\n      \"19\": {\n        start: {\n          line: 54,\n          column: 6\n        },\n        end: {\n          line: 59,\n          column: 7\n        }\n      },\n      \"20\": {\n        start: {\n          line: 55,\n          column: 8\n        },\n        end: {\n          line: 57,\n          column: 9\n        }\n      },\n      \"21\": {\n        start: {\n          line: 56,\n          column: 10\n        },\n        end: {\n          line: 56,\n          column: 63\n        }\n      },\n      \"22\": {\n        start: {\n          line: 58,\n          column: 8\n        },\n        end: {\n          line: 58,\n          column: 19\n        }\n      },\n      \"23\": {\n        start: {\n          line: 61,\n          column: 6\n        },\n        end: {\n          line: 64,\n          column: 7\n        }\n      },\n      \"24\": {\n        start: {\n          line: 63,\n          column: 8\n        },\n        end: {\n          line: 63,\n          column: 70\n        }\n      },\n      \"25\": {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 17\n        }\n      },\n      \"26\": {\n        start: {\n          line: 109,\n          column: 2\n        },\n        end: {\n          line: 113,\n          column: 3\n        }\n      },\n      \"27\": {\n        start: {\n          line: 110,\n          column: 4\n        },\n        end: {\n          line: 110,\n          column: 23\n        }\n      },\n      \"28\": {\n        start: {\n          line: 111,\n          column: 9\n        },\n        end: {\n          line: 113,\n          column: 3\n        }\n      },\n      \"29\": {\n        start: {\n          line: 112,\n          column: 4\n        },\n        end: {\n          line: 112,\n          column: 23\n        }\n      },\n      \"30\": {\n        start: {\n          line: 115,\n          column: 27\n        },\n        end: {\n          line: 115,\n          column: 54\n        }\n      },\n      \"31\": {\n        start: {\n          line: 121,\n          column: 2\n        },\n        end: {\n          line: 153,\n          column: 3\n        }\n      },\n      \"32\": {\n        start: {\n          line: 124,\n          column: 6\n        },\n        end: {\n          line: 126,\n          column: 7\n        }\n      },\n      \"33\": {\n        start: {\n          line: 125,\n          column: 8\n        },\n        end: {\n          line: 125,\n          column: 19\n        }\n      },\n      \"34\": {\n        start: {\n          line: 127,\n          column: 6\n        },\n        end: {\n          line: 148,\n          column: 7\n        }\n      },\n      \"35\": {\n        start: {\n          line: 130,\n          column: 10\n        },\n        end: {\n          line: 132,\n          column: 11\n        }\n      },\n      \"36\": {\n        start: {\n          line: 131,\n          column: 12\n        },\n        end: {\n          line: 131,\n          column: 23\n        }\n      },\n      \"37\": {\n        start: {\n          line: 133,\n          column: 10\n        },\n        end: {\n          line: 139,\n          column: 11\n        }\n      },\n      \"38\": {\n        start: {\n          line: 134,\n          column: 12\n        },\n        end: {\n          line: 138,\n          column: 13\n        }\n      },\n      \"39\": {\n        start: {\n          line: 140,\n          column: 10\n        },\n        end: {\n          line: 140,\n          column: 21\n        }\n      },\n      \"40\": {\n        start: {\n          line: 143,\n          column: 10\n        },\n        end: {\n          line: 145,\n          column: 11\n        }\n      },\n      \"41\": {\n        start: {\n          line: 144,\n          column: 12\n        },\n        end: {\n          line: 144,\n          column: 23\n        }\n      },\n      \"42\": {\n        start: {\n          line: 146,\n          column: 10\n        },\n        end: {\n          line: 146,\n          column: 66\n        }\n      },\n      \"43\": {\n        start: {\n          line: 168,\n          column: 27\n        },\n        end: {\n          line: 168,\n          column: 54\n        }\n      },\n      \"44\": {\n        start: {\n          line: 169,\n          column: 2\n        },\n        end: {\n          line: 175,\n          column: 3\n        }\n      },\n      \"45\": {\n        start: {\n          line: 170,\n          column: 4\n        },\n        end: {\n          line: 170,\n          column: 23\n        }\n      },\n      \"46\": {\n        start: {\n          line: 171,\n          column: 9\n        },\n        end: {\n          line: 175,\n          column: 3\n        }\n      },\n      \"47\": {\n        start: {\n          line: 172,\n          column: 4\n        },\n        end: {\n          line: 172,\n          column: 23\n        }\n      },\n      \"48\": {\n        start: {\n          line: 173,\n          column: 9\n        },\n        end: {\n          line: 175,\n          column: 3\n        }\n      },\n      \"49\": {\n        start: {\n          line: 174,\n          column: 4\n        },\n        end: {\n          line: 174,\n          column: 23\n        }\n      },\n      \"50\": {\n        start: {\n          line: 176,\n          column: 2\n        },\n        end: {\n          line: 180,\n          column: 3\n        }\n      },\n      \"51\": {\n        start: {\n          line: 177,\n          column: 4\n        },\n        end: {\n          line: 177,\n          column: 23\n        }\n      },\n      \"52\": {\n        start: {\n          line: 178,\n          column: 9\n        },\n        end: {\n          line: 180,\n          column: 3\n        }\n      },\n      \"53\": {\n        start: {\n          line: 179,\n          column: 4\n        },\n        end: {\n          line: 179,\n          column: 23\n        }\n      },\n      \"54\": {\n        start: {\n          line: 182,\n          column: 2\n        },\n        end: {\n          line: 184,\n          column: 3\n        }\n      },\n      \"55\": {\n        start: {\n          line: 183,\n          column: 4\n        },\n        end: {\n          line: 183,\n          column: 23\n        }\n      },\n      \"56\": {\n        start: {\n          line: 186,\n          column: 2\n        },\n        end: {\n          line: 208,\n          column: 3\n        }\n      },\n      \"57\": {\n        start: {\n          line: 190,\n          column: 6\n        },\n        end: {\n          line: 192,\n          column: 7\n        }\n      },\n      \"58\": {\n        start: {\n          line: 191,\n          column: 8\n        },\n        end: {\n          line: 191,\n          column: 19\n        }\n      },\n      \"59\": {\n        start: {\n          line: 193,\n          column: 6\n        },\n        end: {\n          line: 206,\n          column: 7\n        }\n      },\n      \"60\": {\n        start: {\n          line: 198,\n          column: 33\n        },\n        end: {\n          line: 198,\n          column: 62\n        }\n      },\n      \"61\": {\n        start: {\n          line: 199,\n          column: 14\n        },\n        end: {\n          line: 199,\n          column: 109\n        }\n      },\n      \"62\": {\n        start: {\n          line: 200,\n          column: 14\n        },\n        end: {\n          line: 203,\n          column: 15\n        }\n      },\n      \"63\": {\n        start: {\n          line: 219,\n          column: 27\n        },\n        end: {\n          line: 219,\n          column: 54\n        }\n      },\n      \"64\": {\n        start: {\n          line: 220,\n          column: 2\n        },\n        end: {\n          line: 226,\n          column: 3\n        }\n      },\n      \"65\": {\n        start: {\n          line: 221,\n          column: 4\n        },\n        end: {\n          line: 221,\n          column: 23\n        }\n      },\n      \"66\": {\n        start: {\n          line: 222,\n          column: 9\n        },\n        end: {\n          line: 226,\n          column: 3\n        }\n      },\n      \"67\": {\n        start: {\n          line: 223,\n          column: 4\n        },\n        end: {\n          line: 223,\n          column: 23\n        }\n      },\n      \"68\": {\n        start: {\n          line: 224,\n          column: 9\n        },\n        end: {\n          line: 226,\n          column: 3\n        }\n      },\n      \"69\": {\n        start: {\n          line: 225,\n          column: 4\n        },\n        end: {\n          line: 225,\n          column: 23\n        }\n      },\n      \"70\": {\n        start: {\n          line: 227,\n          column: 2\n        },\n        end: {\n          line: 231,\n          column: 3\n        }\n      },\n      \"71\": {\n        start: {\n          line: 228,\n          column: 4\n        },\n        end: {\n          line: 228,\n          column: 23\n        }\n      },\n      \"72\": {\n        start: {\n          line: 229,\n          column: 9\n        },\n        end: {\n          line: 231,\n          column: 3\n        }\n      },\n      \"73\": {\n        start: {\n          line: 230,\n          column: 4\n        },\n        end: {\n          line: 230,\n          column: 23\n        }\n      },\n      \"74\": {\n        start: {\n          line: 233,\n          column: 2\n        },\n        end: {\n          line: 235,\n          column: 3\n        }\n      },\n      \"75\": {\n        start: {\n          line: 234,\n          column: 4\n        },\n        end: {\n          line: 234,\n          column: 23\n        }\n      },\n      \"76\": {\n        start: {\n          line: 237,\n          column: 2\n        },\n        end: {\n          line: 260,\n          column: 3\n        }\n      },\n      \"77\": {\n        start: {\n          line: 241,\n          column: 6\n        },\n        end: {\n          line: 243,\n          column: 7\n        }\n      },\n      \"78\": {\n        start: {\n          line: 242,\n          column: 8\n        },\n        end: {\n          line: 242,\n          column: 19\n        }\n      },\n      \"79\": {\n        start: {\n          line: 244,\n          column: 6\n        },\n        end: {\n          line: 257,\n          column: 7\n        }\n      },\n      \"80\": {\n        start: {\n          line: 249,\n          column: 33\n        },\n        end: {\n          line: 249,\n          column: 62\n        }\n      },\n      \"81\": {\n        start: {\n          line: 250,\n          column: 14\n        },\n        end: {\n          line: 250,\n          column: 109\n        }\n      },\n      \"82\": {\n        start: {\n          line: 251,\n          column: 14\n        },\n        end: {\n          line: 254,\n          column: 15\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"movePlay\",\n        decl: {\n          start: {\n            line: 6,\n            column: 16\n          },\n          end: {\n            line: 6,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 71\n          },\n          end: {\n            line: 88,\n            column: 1\n          }\n        },\n        line: 6\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 21,\n            column: 23\n          },\n          end: {\n            line: 21,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 40\n          },\n          end: {\n            line: 47,\n            column: 5\n          }\n        },\n        line: 21\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 30\n          },\n          end: {\n            line: 27,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 66\n          },\n          end: {\n            line: 39,\n            column: 9\n          }\n        },\n        line: 27\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 30\n          },\n          end: {\n            line: 40,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 66\n          },\n          end: {\n            line: 45,\n            column: 9\n          }\n        },\n        line: 40\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 49,\n            column: 23\n          },\n          end: {\n            line: 49,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 49,\n            column: 57\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        line: 49\n      },\n      \"5\": {\n        name: \"moveDiscard\",\n        decl: {\n          start: {\n            line: 108,\n            column: 16\n          },\n          end: {\n            line: 108,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 108,\n            column: 74\n          },\n          end: {\n            line: 154,\n            column: 1\n          }\n        },\n        line: 108\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 123,\n            column: 23\n          },\n          end: {\n            line: 123,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 40\n          },\n          end: {\n            line: 149,\n            column: 5\n          }\n        },\n        line: 123\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 129,\n            column: 30\n          },\n          end: {\n            line: 129,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 129,\n            column: 66\n          },\n          end: {\n            line: 141,\n            column: 9\n          }\n        },\n        line: 129\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 142,\n            column: 30\n          },\n          end: {\n            line: 142,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 142,\n            column: 66\n          },\n          end: {\n            line: 147,\n            column: 9\n          }\n        },\n        line: 142\n      },\n      \"9\": {\n        name: \"moveHintValue\",\n        decl: {\n          start: {\n            line: 167,\n            column: 16\n          },\n          end: {\n            line: 167,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 167,\n            column: 97\n          },\n          end: {\n            line: 209,\n            column: 1\n          }\n        },\n        line: 167\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 189,\n            column: 23\n          },\n          end: {\n            line: 189,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 189,\n            column: 55\n          },\n          end: {\n            line: 207,\n            column: 5\n          }\n        },\n        line: 189\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 197,\n            column: 38\n          },\n          end: {\n            line: 197,\n            column: 39\n          }\n        },\n        loc: {\n          start: {\n            line: 197,\n            column: 74\n          },\n          end: {\n            line: 204,\n            column: 13\n          }\n        },\n        line: 197\n      },\n      \"12\": {\n        name: \"moveHintColor\",\n        decl: {\n          start: {\n            line: 218,\n            column: 16\n          },\n          end: {\n            line: 218,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 218,\n            column: 97\n          },\n          end: {\n            line: 261,\n            column: 1\n          }\n        },\n        line: 218\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 240,\n            column: 23\n          },\n          end: {\n            line: 240,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 240,\n            column: 55\n          },\n          end: {\n            line: 259,\n            column: 5\n          }\n        },\n        line: 240\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 248,\n            column: 38\n          },\n          end: {\n            line: 248,\n            column: 39\n          }\n        },\n        loc: {\n          start: {\n            line: 248,\n            column: 74\n          },\n          end: {\n            line: 255,\n            column: 13\n          }\n        },\n        line: 248\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 7,\n            column: 2\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 7,\n            column: 2\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 7,\n            column: 2\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        }],\n        line: 7\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 9\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 9\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 9\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        }],\n        line: 9\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 13\n          },\n          end: {\n            line: 9,\n            column: 69\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 13\n          },\n          end: {\n            line: 9,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 29\n          },\n          end: {\n            line: 9,\n            column: 69\n          }\n        }],\n        line: 9\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 42\n          },\n          end: {\n            line: 9,\n            column: 68\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 63\n          },\n          end: {\n            line: 9,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 67\n          },\n          end: {\n            line: 9,\n            column: 68\n          }\n        }],\n        line: 9\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 22,\n            column: 6\n          },\n          end: {\n            line: 24,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 22,\n            column: 6\n          },\n          end: {\n            line: 24,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 22,\n            column: 6\n          },\n          end: {\n            line: 24,\n            column: 7\n          }\n        }],\n        line: 22\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 28,\n            column: 10\n          },\n          end: {\n            line: 30,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 28,\n            column: 10\n          },\n          end: {\n            line: 30,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 28,\n            column: 10\n          },\n          end: {\n            line: 30,\n            column: 11\n          }\n        }],\n        line: 28\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 10\n          },\n          end: {\n            line: 37,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 10\n          },\n          end: {\n            line: 37,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 10\n          },\n          end: {\n            line: 37,\n            column: 11\n          }\n        }],\n        line: 31\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 41,\n            column: 10\n          },\n          end: {\n            line: 43,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 41,\n            column: 10\n          },\n          end: {\n            line: 43,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 41,\n            column: 10\n          },\n          end: {\n            line: 43,\n            column: 11\n          }\n        }],\n        line: 41\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 50,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 50,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 50,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        }],\n        line: 50\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 54,\n            column: 6\n          },\n          end: {\n            line: 59,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 54,\n            column: 6\n          },\n          end: {\n            line: 59,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 54,\n            column: 6\n          },\n          end: {\n            line: 59,\n            column: 7\n          }\n        }],\n        line: 54\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 55,\n            column: 8\n          },\n          end: {\n            line: 57,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 55,\n            column: 8\n          },\n          end: {\n            line: 57,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 55,\n            column: 8\n          },\n          end: {\n            line: 57,\n            column: 9\n          }\n        }],\n        line: 55\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 61,\n            column: 6\n          },\n          end: {\n            line: 64,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 61,\n            column: 6\n          },\n          end: {\n            line: 64,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 61,\n            column: 6\n          },\n          end: {\n            line: 64,\n            column: 7\n          }\n        }],\n        line: 61\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 68,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 56\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 70,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 72,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 56\n          }\n        }],\n        line: 68\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 75,\n            column: 6\n          },\n          end: {\n            line: 79,\n            column: 21\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 77,\n            column: 6\n          },\n          end: {\n            line: 77,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 6\n          },\n          end: {\n            line: 79,\n            column: 21\n          }\n        }],\n        line: 75\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 81,\n            column: 6\n          },\n          end: {\n            line: 86,\n            column: 14\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 84,\n            column: 6\n          },\n          end: {\n            line: 84,\n            column: 41\n          }\n        }, {\n          start: {\n            line: 86,\n            column: 6\n          },\n          end: {\n            line: 86,\n            column: 14\n          }\n        }],\n        line: 81\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 81,\n            column: 7\n          },\n          end: {\n            line: 82,\n            column: 57\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 81,\n            column: 8\n          },\n          end: {\n            line: 81,\n            column: 111\n          }\n        }, {\n          start: {\n            line: 82,\n            column: 10\n          },\n          end: {\n            line: 82,\n            column: 56\n          }\n        }],\n        line: 81\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 84,\n            column: 6\n          },\n          end: {\n            line: 84,\n            column: 41\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 84,\n            column: 25\n          },\n          end: {\n            line: 84,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 84,\n            column: 29\n          },\n          end: {\n            line: 84,\n            column: 41\n          }\n        }],\n        line: 84\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 109,\n            column: 2\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 109,\n            column: 2\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 109,\n            column: 2\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        }],\n        line: 109\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 111,\n            column: 9\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 111,\n            column: 9\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 111,\n            column: 9\n          },\n          end: {\n            line: 113,\n            column: 3\n          }\n        }],\n        line: 111\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 111,\n            column: 13\n          },\n          end: {\n            line: 111,\n            column: 68\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 111,\n            column: 13\n          },\n          end: {\n            line: 111,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 111,\n            column: 29\n          },\n          end: {\n            line: 111,\n            column: 68\n          }\n        }],\n        line: 111\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 111,\n            column: 41\n          },\n          end: {\n            line: 111,\n            column: 67\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 111,\n            column: 62\n          },\n          end: {\n            line: 111,\n            column: 63\n          }\n        }, {\n          start: {\n            line: 111,\n            column: 66\n          },\n          end: {\n            line: 111,\n            column: 67\n          }\n        }],\n        line: 111\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 124,\n            column: 6\n          },\n          end: {\n            line: 126,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 124,\n            column: 6\n          },\n          end: {\n            line: 126,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 124,\n            column: 6\n          },\n          end: {\n            line: 126,\n            column: 7\n          }\n        }],\n        line: 124\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        }],\n        line: 130\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 133,\n            column: 10\n          },\n          end: {\n            line: 139,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 133,\n            column: 10\n          },\n          end: {\n            line: 139,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 133,\n            column: 10\n          },\n          end: {\n            line: 139,\n            column: 11\n          }\n        }],\n        line: 133\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 143,\n            column: 10\n          },\n          end: {\n            line: 145,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 143,\n            column: 10\n          },\n          end: {\n            line: 145,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 143,\n            column: 10\n          },\n          end: {\n            line: 145,\n            column: 11\n          }\n        }],\n        line: 143\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 152,\n            column: 12\n          },\n          end: {\n            line: 152,\n            column: 47\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 152,\n            column: 31\n          },\n          end: {\n            line: 152,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 152,\n            column: 35\n          },\n          end: {\n            line: 152,\n            column: 47\n          }\n        }],\n        line: 152\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 169,\n            column: 2\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 169,\n            column: 2\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 169,\n            column: 2\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }],\n        line: 169\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 171,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 171,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 171,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }],\n        line: 171\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 171,\n            column: 13\n          },\n          end: {\n            line: 171,\n            column: 55\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 171,\n            column: 13\n          },\n          end: {\n            line: 171,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 171,\n            column: 29\n          },\n          end: {\n            line: 171,\n            column: 55\n          }\n        }],\n        line: 171\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 173,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 173,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 173,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 3\n          }\n        }],\n        line: 173\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 176,\n            column: 2\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 176,\n            column: 2\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 176,\n            column: 2\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        }],\n        line: 176\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 178,\n            column: 9\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 178,\n            column: 9\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 178,\n            column: 9\n          },\n          end: {\n            line: 180,\n            column: 3\n          }\n        }],\n        line: 178\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 178,\n            column: 13\n          },\n          end: {\n            line: 178,\n            column: 47\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 178,\n            column: 13\n          },\n          end: {\n            line: 178,\n            column: 28\n          }\n        }, {\n          start: {\n            line: 178,\n            column: 32\n          },\n          end: {\n            line: 178,\n            column: 47\n          }\n        }],\n        line: 178\n      },\n      \"33\": {\n        loc: {\n          start: {\n            line: 182,\n            column: 2\n          },\n          end: {\n            line: 184,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 182,\n            column: 2\n          },\n          end: {\n            line: 184,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 182,\n            column: 2\n          },\n          end: {\n            line: 184,\n            column: 3\n          }\n        }],\n        line: 182\n      },\n      \"34\": {\n        loc: {\n          start: {\n            line: 190,\n            column: 6\n          },\n          end: {\n            line: 192,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 190,\n            column: 6\n          },\n          end: {\n            line: 192,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 190,\n            column: 6\n          },\n          end: {\n            line: 192,\n            column: 7\n          }\n        }],\n        line: 190\n      },\n      \"35\": {\n        loc: {\n          start: {\n            line: 199,\n            column: 42\n          },\n          end: {\n            line: 199,\n            column: 109\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 199,\n            column: 103\n          },\n          end: {\n            line: 199,\n            column: 104\n          }\n        }, {\n          start: {\n            line: 199,\n            column: 107\n          },\n          end: {\n            line: 199,\n            column: 109\n          }\n        }],\n        line: 199\n      },\n      \"36\": {\n        loc: {\n          start: {\n            line: 220,\n            column: 2\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 220,\n            column: 2\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 220,\n            column: 2\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }],\n        line: 220\n      },\n      \"37\": {\n        loc: {\n          start: {\n            line: 222,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 222,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 222,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }],\n        line: 222\n      },\n      \"38\": {\n        loc: {\n          start: {\n            line: 222,\n            column: 13\n          },\n          end: {\n            line: 222,\n            column: 55\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 222,\n            column: 13\n          },\n          end: {\n            line: 222,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 222,\n            column: 29\n          },\n          end: {\n            line: 222,\n            column: 55\n          }\n        }],\n        line: 222\n      },\n      \"39\": {\n        loc: {\n          start: {\n            line: 224,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 224,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 224,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 3\n          }\n        }],\n        line: 224\n      },\n      \"40\": {\n        loc: {\n          start: {\n            line: 227,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 227,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 227,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }],\n        line: 227\n      },\n      \"41\": {\n        loc: {\n          start: {\n            line: 229,\n            column: 9\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 229,\n            column: 9\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 9\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }],\n        line: 229\n      },\n      \"42\": {\n        loc: {\n          start: {\n            line: 229,\n            column: 13\n          },\n          end: {\n            line: 229,\n            column: 47\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 229,\n            column: 13\n          },\n          end: {\n            line: 229,\n            column: 28\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 32\n          },\n          end: {\n            line: 229,\n            column: 47\n          }\n        }],\n        line: 229\n      },\n      \"43\": {\n        loc: {\n          start: {\n            line: 233,\n            column: 2\n          },\n          end: {\n            line: 235,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 233,\n            column: 2\n          },\n          end: {\n            line: 235,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 233,\n            column: 2\n          },\n          end: {\n            line: 235,\n            column: 3\n          }\n        }],\n        line: 233\n      },\n      \"44\": {\n        loc: {\n          start: {\n            line: 241,\n            column: 6\n          },\n          end: {\n            line: 243,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 241,\n            column: 6\n          },\n          end: {\n            line: 243,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 241,\n            column: 6\n          },\n          end: {\n            line: 243,\n            column: 7\n          }\n        }],\n        line: 241\n      },\n      \"45\": {\n        loc: {\n          start: {\n            line: 250,\n            column: 42\n          },\n          end: {\n            line: 250,\n            column: 109\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 250,\n            column: 103\n          },\n          end: {\n            line: 250,\n            column: 104\n          }\n        }, {\n          start: {\n            line: 250,\n            column: 107\n          },\n          end: {\n            line: 250,\n            column: 109\n          }\n        }],\n        line: 250\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0],\n      \"22\": [0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0],\n      \"25\": [0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0],\n      \"29\": [0, 0],\n      \"30\": [0, 0],\n      \"31\": [0, 0],\n      \"32\": [0, 0],\n      \"33\": [0, 0],\n      \"34\": [0, 0],\n      \"35\": [0, 0],\n      \"36\": [0, 0],\n      \"37\": [0, 0],\n      \"38\": [0, 0],\n      \"39\": [0, 0],\n      \"40\": [0, 0],\n      \"41\": [0, 0],\n      \"42\": [0, 0],\n      \"43\": [0, 0],\n      \"44\": [0, 0],\n      \"45\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"98a1ebc43d179c1ca1b2c8a13b7b4a65dd188c35\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1rukytt2b7 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1rukytt2b7();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INVALID_MOVE } from 'boardgame.io/core';\n// Moves\nexport function movePlay(G, ctx, IDInHand) {\n  cov_1rukytt2b7().f[0]++;\n  cov_1rukytt2b7().s[0]++;\n\n  if (isNaN(IDInHand)) {\n    cov_1rukytt2b7().b[0][0]++;\n    cov_1rukytt2b7().s[1]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[0][1]++;\n    cov_1rukytt2b7().s[2]++;\n\n    if ((cov_1rukytt2b7().b[2][0]++, IDInHand < 0) || (cov_1rukytt2b7().b[2][1]++, IDInHand >= (ctx.numPlayers > 3 ? (cov_1rukytt2b7().b[3][0]++, 4) : (cov_1rukytt2b7().b[3][1]++, 5)))) {\n      cov_1rukytt2b7().b[1][0]++;\n      cov_1rukytt2b7().s[3]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[1][1]++;\n    }\n  }\n\n  var currentPl = (cov_1rukytt2b7().s[4]++, parseInt(ctx.currentPlayer)); // NOTE! This does not exclude the possiblity of playing a 'null' card, once all cards have been picked up.\n  // However, the game automatically ends, once all players couldn't pick up a card, thus\n  // you always have max_cards in hand, and can never play a 'null'.\n\n  cov_1rukytt2b7().s[5]++;\n  return _objectSpread({}, G, {\n    hands: G.hands.map(function (hand) {\n      cov_1rukytt2b7().f[1]++;\n      cov_1rukytt2b7().s[6]++;\n\n      if (!(hand.player === currentPl)) {\n        cov_1rukytt2b7().b[4][0]++;\n        cov_1rukytt2b7().s[7]++;\n        return hand;\n      } else {\n        cov_1rukytt2b7().b[4][1]++;\n      }\n\n      cov_1rukytt2b7().s[8]++;\n      return {\n        player: currentPl,\n        cards: hand.cards.map(function (card, indexHand) {\n          cov_1rukytt2b7().f[2]++;\n          cov_1rukytt2b7().s[9]++;\n\n          if (!(indexHand === IDInHand)) {\n            cov_1rukytt2b7().b[5][0]++;\n            cov_1rukytt2b7().s[10]++;\n            return card;\n          } else {\n            cov_1rukytt2b7().b[5][1]++;\n          }\n\n          cov_1rukytt2b7().s[11]++;\n\n          if (G.deckindex >= 0) {\n            cov_1rukytt2b7().b[6][0]++;\n            cov_1rukytt2b7().s[12]++;\n            return {\n              id: G.deck[G.deckindex].id,\n              value: G.deck[G.deckindex].value,\n              color: G.deck[G.deckindex].color\n            };\n          } else {\n            cov_1rukytt2b7().b[6][1]++;\n          }\n\n          cov_1rukytt2b7().s[13]++;\n          return null; // no more cards in deck\n        }),\n        hints: hand.hints.map(function (hint, indexHint) {\n          cov_1rukytt2b7().f[3]++;\n          cov_1rukytt2b7().s[14]++;\n\n          if (!(indexHint === IDInHand)) {\n            cov_1rukytt2b7().b[7][0]++;\n            cov_1rukytt2b7().s[15]++;\n            return hint;\n          } else {\n            cov_1rukytt2b7().b[7][1]++;\n          }\n\n          cov_1rukytt2b7().s[16]++;\n          return {\n            color: [0, 0, 0, 0, 0],\n            value: [0, 0, 0, 0, 0]\n          };\n        })\n      };\n    }),\n    deckindex: G.deckindex - 1,\n    piles: G.piles.map(function (pile, index) {\n      cov_1rukytt2b7().f[4]++;\n      cov_1rukytt2b7().s[17]++;\n\n      if (!(index === G.hands[currentPl].cards[IDInHand].color)) {\n        cov_1rukytt2b7().b[8][0]++;\n        cov_1rukytt2b7().s[18]++;\n        return pile; // wrong colored pile, leave this pile untouched\n      } else {\n        cov_1rukytt2b7().b[8][1]++;\n      }\n\n      cov_1rukytt2b7().s[19]++;\n\n      if (pile.length === 0) {\n        cov_1rukytt2b7().b[9][0]++;\n        cov_1rukytt2b7().s[20]++;\n\n        // First card for pile\n        if (G.hands[currentPl].cards[IDInHand].value === 0) {\n          cov_1rukytt2b7().b[10][0]++;\n          cov_1rukytt2b7().s[21]++;\n          return [G.hands[currentPl].cards[IDInHand]]; // Put the played card on the pile\n        } else {\n          cov_1rukytt2b7().b[10][1]++;\n        }\n\n        cov_1rukytt2b7().s[22]++;\n        return pile; //\n      } else {\n        cov_1rukytt2b7().b[9][1]++;\n      }\n\n      cov_1rukytt2b7().s[23]++;\n\n      if (pile[pile.length - 1].value === G.hands[currentPl].cards[IDInHand].value - 1) {\n        cov_1rukytt2b7().b[11][0]++;\n        cov_1rukytt2b7().s[24]++;\n        // correct Value\n        return [].concat(_toConsumableArray(pile), [G.hands[currentPl].cards[IDInHand]]);\n      } else {\n        cov_1rukytt2b7().b[11][1]++;\n      }\n\n      cov_1rukytt2b7().s[25]++;\n      return pile; // wrong number for pile\n    }),\n    trash: G.piles[G.hands[currentPl].cards[IDInHand].color].length === G.hands[currentPl].cards[IDInHand].value ? ( // Is the played card the next value?\n    cov_1rukytt2b7().b[12][0]++, G.trash // Unchanged if success in put to piles\n    ) : (cov_1rukytt2b7().b[12][1]++, [].concat(_toConsumableArray(G.trash), [G.hands[currentPl].cards[IDInHand]])),\n    // If you played the wrong card, it gets discarded\n    countdown: G.piles[G.hands[currentPl].cards[IDInHand].color].length === G.hands[currentPl].cards[IDInHand].value ? ( // Is the played card the next value?\n    cov_1rukytt2b7().b[13][0]++, G.countdown) : (cov_1rukytt2b7().b[13][1]++, G.countdown - 1),\n    treats: (cov_1rukytt2b7().b[15][0]++, G.piles[G.hands[currentPl].cards[IDInHand].color].length === G.hands[currentPl].cards[IDInHand].value) && (cov_1rukytt2b7().b[15][1]++, // did you play a good move?\n    G.hands[currentPl].cards[IDInHand].value === 4) ? ( // Did you finish the color?  - if both, gain treat\n    cov_1rukytt2b7().b[14][0]++, G.treats === 8 ? (cov_1rukytt2b7().b[16][0]++, 8) : (cov_1rukytt2b7().b[16][1]++, G.treats + 1) // max 8 Treats\n    ) : (cov_1rukytt2b7().b[14][1]++, G.treats)\n  });\n}\nexport function moveDiscard(G, ctx, IDInHand) {\n  cov_1rukytt2b7().f[5]++;\n  cov_1rukytt2b7().s[26]++;\n\n  if (isNaN(IDInHand)) {\n    cov_1rukytt2b7().b[17][0]++;\n    cov_1rukytt2b7().s[27]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[17][1]++;\n    cov_1rukytt2b7().s[28]++;\n\n    if ((cov_1rukytt2b7().b[19][0]++, IDInHand < 0) || (cov_1rukytt2b7().b[19][1]++, IDInHand > (ctx.numPlayers > 3 ? (cov_1rukytt2b7().b[20][0]++, 4) : (cov_1rukytt2b7().b[20][1]++, 5)))) {\n      cov_1rukytt2b7().b[18][0]++;\n      cov_1rukytt2b7().s[29]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[18][1]++;\n    }\n  }\n\n  var currentPl = (cov_1rukytt2b7().s[30]++, parseInt(ctx.currentPlayer)); // NOTE! This does not exclude the possiblity of playing a 'null' card, once all cards have been picked up.\n  // However, the game automatically ends, once all players couldn't pick up a card, thus\n  // you always have max_cards in hand, and can never play a 'null'.\n\n  cov_1rukytt2b7().s[31]++;\n  return _objectSpread({}, G, {\n    hands: G.hands.map(function (hand) {\n      cov_1rukytt2b7().f[6]++;\n      cov_1rukytt2b7().s[32]++;\n\n      if (!(hand.player === currentPl)) {\n        cov_1rukytt2b7().b[21][0]++;\n        cov_1rukytt2b7().s[33]++;\n        return hand;\n      } else {\n        cov_1rukytt2b7().b[21][1]++;\n      }\n\n      cov_1rukytt2b7().s[34]++;\n      return {\n        player: currentPl,\n        cards: hand.cards.map(function (card, indexHand) {\n          cov_1rukytt2b7().f[7]++;\n          cov_1rukytt2b7().s[35]++;\n\n          if (!(indexHand === IDInHand)) {\n            cov_1rukytt2b7().b[22][0]++;\n            cov_1rukytt2b7().s[36]++;\n            return card;\n          } else {\n            cov_1rukytt2b7().b[22][1]++;\n          }\n\n          cov_1rukytt2b7().s[37]++;\n\n          if (G.deckindex >= 0) {\n            cov_1rukytt2b7().b[23][0]++;\n            cov_1rukytt2b7().s[38]++;\n            return {\n              id: G.deck[G.deckindex].id,\n              value: G.deck[G.deckindex].value,\n              color: G.deck[G.deckindex].color\n            };\n          } else {\n            cov_1rukytt2b7().b[23][1]++;\n          }\n\n          cov_1rukytt2b7().s[39]++;\n          return null; // no more cards in deck\n        }),\n        hints: hand.hints.map(function (hint, indexHint) {\n          cov_1rukytt2b7().f[8]++;\n          cov_1rukytt2b7().s[40]++;\n\n          if (!(indexHint === IDInHand)) {\n            cov_1rukytt2b7().b[24][0]++;\n            cov_1rukytt2b7().s[41]++;\n            return hint;\n          } else {\n            cov_1rukytt2b7().b[24][1]++;\n          }\n\n          cov_1rukytt2b7().s[42]++;\n          return {\n            color: [0, 0, 0, 0, 0],\n            value: [0, 0, 0, 0, 0]\n          };\n        })\n      };\n    }),\n    trash: [].concat(_toConsumableArray(G.trash), [G.hands[currentPl].cards[IDInHand]]),\n    deckindex: G.deckindex - 1,\n    treats: G.treats === 8 ? (cov_1rukytt2b7().b[25][0]++, 8) : (cov_1rukytt2b7().b[25][1]++, G.treats + 1) // max 8 Treats\n\n  });\n}\nexport function moveHintValue(G, ctx, IDPlayer, IDHintValue) {\n  cov_1rukytt2b7().f[9]++;\n  var currentPl = (cov_1rukytt2b7().s[43]++, parseInt(ctx.currentPlayer));\n  cov_1rukytt2b7().s[44]++;\n\n  if (isNaN(IDPlayer)) {\n    cov_1rukytt2b7().b[26][0]++;\n    cov_1rukytt2b7().s[45]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[26][1]++;\n    cov_1rukytt2b7().s[46]++;\n\n    if ((cov_1rukytt2b7().b[28][0]++, IDPlayer < 0) || (cov_1rukytt2b7().b[28][1]++, IDPlayer >= ctx.numPlayers)) {\n      cov_1rukytt2b7().b[27][0]++;\n      cov_1rukytt2b7().s[47]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[27][1]++;\n      cov_1rukytt2b7().s[48]++;\n\n      if (IDPlayer == currentPl) {\n        cov_1rukytt2b7().b[29][0]++;\n        cov_1rukytt2b7().s[49]++;\n        return INVALID_MOVE;\n      } else {\n        cov_1rukytt2b7().b[29][1]++;\n      }\n    }\n  }\n\n  cov_1rukytt2b7().s[50]++;\n\n  if (isNaN(IDHintValue)) {\n    cov_1rukytt2b7().b[30][0]++;\n    cov_1rukytt2b7().s[51]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[30][1]++;\n    cov_1rukytt2b7().s[52]++;\n\n    if ((cov_1rukytt2b7().b[32][0]++, IDHintValue < 0) || (cov_1rukytt2b7().b[32][1]++, IDHintValue > 4)) {\n      cov_1rukytt2b7().b[31][0]++;\n      cov_1rukytt2b7().s[53]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[31][1]++;\n    }\n  }\n\n  cov_1rukytt2b7().s[54]++;\n\n  if (G.treats === 0) {\n    cov_1rukytt2b7().b[33][0]++;\n    cov_1rukytt2b7().s[55]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[33][1]++;\n  }\n\n  cov_1rukytt2b7().s[56]++;\n  return _objectSpread({}, G, {\n    treats: G.treats - 1,\n    hands: G.hands.map(function (hand, index) {\n      cov_1rukytt2b7().f[10]++;\n      cov_1rukytt2b7().s[57]++;\n\n      if (!(index === IDPlayer)) {\n        cov_1rukytt2b7().b[34][0]++;\n        cov_1rukytt2b7().s[58]++;\n        return hand;\n      } else {\n        cov_1rukytt2b7().b[34][1]++;\n      }\n\n      cov_1rukytt2b7().s[59]++;\n      return {\n        player: G.hands[IDPlayer].player,\n        cards: G.hands[IDPlayer].cards,\n        hints: G.hands[IDPlayer].hints.map(function (hint, indexHint) {\n          cov_1rukytt2b7().f[11]++;\n          var newHintValue = (cov_1rukytt2b7().s[60]++, Object.assign([], hint.value));\n          cov_1rukytt2b7().s[61]++;\n          newHintValue[IDHintValue] = G.hands[IDPlayer].cards[indexHint].value === IDHintValue ? (cov_1rukytt2b7().b[35][0]++, 1) : (cov_1rukytt2b7().b[35][1]++, -1);\n          cov_1rukytt2b7().s[62]++;\n          return {\n            value: newHintValue,\n            color: hint.color\n          };\n        })\n      };\n    })\n  });\n}\nexport function moveHintColor(G, ctx, IDPlayer, IDHintColor) {\n  cov_1rukytt2b7().f[12]++;\n  var currentPl = (cov_1rukytt2b7().s[63]++, parseInt(ctx.currentPlayer));\n  cov_1rukytt2b7().s[64]++;\n\n  if (isNaN(IDPlayer)) {\n    cov_1rukytt2b7().b[36][0]++;\n    cov_1rukytt2b7().s[65]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[36][1]++;\n    cov_1rukytt2b7().s[66]++;\n\n    if ((cov_1rukytt2b7().b[38][0]++, IDPlayer < 0) || (cov_1rukytt2b7().b[38][1]++, IDPlayer >= ctx.numPlayers)) {\n      cov_1rukytt2b7().b[37][0]++;\n      cov_1rukytt2b7().s[67]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[37][1]++;\n      cov_1rukytt2b7().s[68]++;\n\n      if (IDPlayer == currentPl) {\n        cov_1rukytt2b7().b[39][0]++;\n        cov_1rukytt2b7().s[69]++;\n        return INVALID_MOVE;\n      } else {\n        cov_1rukytt2b7().b[39][1]++;\n      }\n    }\n  }\n\n  cov_1rukytt2b7().s[70]++;\n\n  if (isNaN(IDHintColor)) {\n    cov_1rukytt2b7().b[40][0]++;\n    cov_1rukytt2b7().s[71]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[40][1]++;\n    cov_1rukytt2b7().s[72]++;\n\n    if ((cov_1rukytt2b7().b[42][0]++, IDHintColor < 0) || (cov_1rukytt2b7().b[42][1]++, IDHintColor > 4)) {\n      cov_1rukytt2b7().b[41][0]++;\n      cov_1rukytt2b7().s[73]++;\n      return INVALID_MOVE;\n    } else {\n      cov_1rukytt2b7().b[41][1]++;\n    }\n  }\n\n  cov_1rukytt2b7().s[74]++;\n\n  if (G.treats === 0) {\n    cov_1rukytt2b7().b[43][0]++;\n    cov_1rukytt2b7().s[75]++;\n    return INVALID_MOVE;\n  } else {\n    cov_1rukytt2b7().b[43][1]++;\n  }\n\n  cov_1rukytt2b7().s[76]++;\n  return _objectSpread({}, G, {\n    treats: G.treats - 1,\n    hands: G.hands.map(function (hand, index) {\n      cov_1rukytt2b7().f[13]++;\n      cov_1rukytt2b7().s[77]++;\n\n      if (!(index === IDPlayer)) {\n        cov_1rukytt2b7().b[44][0]++;\n        cov_1rukytt2b7().s[78]++;\n        return hand;\n      } else {\n        cov_1rukytt2b7().b[44][1]++;\n      }\n\n      cov_1rukytt2b7().s[79]++;\n      return {\n        player: G.hands[IDPlayer].player,\n        cards: G.hands[IDPlayer].cards,\n        hints: G.hands[IDPlayer].hints.map(function (hint, indexHint) {\n          cov_1rukytt2b7().f[14]++;\n          var newHintColor = (cov_1rukytt2b7().s[80]++, Object.assign([], hint.color));\n          cov_1rukytt2b7().s[81]++;\n          newHintColor[IDHintColor] = G.hands[IDPlayer].cards[indexHint].color === IDHintColor ? (cov_1rukytt2b7().b[45][0]++, 1) : (cov_1rukytt2b7().b[45][1]++, -1);\n          cov_1rukytt2b7().s[82]++;\n          return {\n            color: newHintColor,\n            value: hint.value\n          };\n        })\n      };\n    })\n  });\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/moves.ts"],"names":["INVALID_MOVE","movePlay","G","ctx","IDInHand","isNaN","numPlayers","currentPl","parseInt","currentPlayer","hands","map","hand","player","cards","card","indexHand","deckindex","id","deck","value","color","hints","hint","indexHint","piles","pile","index","length","trash","countdown","treats","moveDiscard","moveHintValue","IDPlayer","IDHintValue","newHintValue","Object","assign","moveHintColor","IDHintColor","newHintColor"],"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","sourcesContent":["import { IGameCtx, INVALID_MOVE } from 'boardgame.io/core';\n\nimport { ICard, IHand, IHint, IG} from './interfaces';\n\n// Moves\nexport function movePlay(G: IG, ctx: IGameCtx, IDInHand: number) : any {\n  if (isNaN(IDInHand)) {\n    return INVALID_MOVE\n  } else if (IDInHand < 0 || IDInHand >= (ctx.numPlayers > 3 ? 4 : 5) ) {\n    return INVALID_MOVE\n  }\n\n  var currentPl : number = parseInt(ctx.currentPlayer)\n\n  // NOTE! This does not exclude the possiblity of playing a 'null' card, once all cards have been picked up.\n  // However, the game automatically ends, once all players couldn't pick up a card, thus\n  // you always have max_cards in hand, and can never play a 'null'.\n\n  return {\n    ...G,\n    hands: G.hands.map((hand: IHand) => {\n      if (!(hand.player === currentPl)) {\n        return hand\n      }\n      return <IHand> {\n        player: currentPl,\n        cards: hand.cards.map((card: ICard, indexHand: number) => {\n          if (!(indexHand === IDInHand)) {\n            return card\n          }\n          if (G.deckindex >= 0) {\n            return <ICard> {\n              id: G.deck[G.deckindex].id,\n              value: G.deck[G.deckindex].value,\n              color: G.deck[G.deckindex].color\n            }\n          }\n          return null // no more cards in deck\n        }),\n        hints: hand.hints.map((hint: IHint, indexHint: number) => {\n          if (!(indexHint===IDInHand)) {\n            return hint\n          }\n          return <IHint> { color: [0,0,0,0,0], value: [0,0,0,0,0]}\n        })\n      }\n    }),\n    deckindex: G.deckindex - 1,\n    piles: G.piles.map((pile: ICard[], index: number) => {\n      if (!(index === G.hands[currentPl].cards[IDInHand].color)) {\n        return pile // wrong colored pile, leave this pile untouched\n      }\n\n      if (pile.length === 0) { // First card for pile\n        if (G.hands[currentPl].cards[IDInHand].value === 0) {\n          return <ICard[]> [G.hands[currentPl].cards[IDInHand]] // Put the played card on the pile\n        }\n        return pile //\n      }\n\n      if (pile[pile.length - 1].value === G.hands[currentPl].cards[IDInHand].value - 1) {\n        // correct Value\n        return <ICard[]> [...pile, G.hands[currentPl].cards[IDInHand]]\n      }\n      return pile // wrong number for pile\n    }),\n    trash:\n      (G.piles[G.hands[currentPl].cards[IDInHand].color].length === (G.hands[currentPl].cards[IDInHand].value)) // Is the played card the next value?\n      ?\n      G.trash // Unchanged if success in put to piles\n      :\n      [...G.trash,  G.hands[currentPl].cards[IDInHand] ], // If you played the wrong card, it gets discarded\n\n    countdown:\n      (G.piles[G.hands[currentPl].cards[IDInHand].color].length === (G.hands[currentPl].cards[IDInHand].value)) // Is the played card the next value?\n      ?\n      G.countdown\n      :\n      G.countdown - 1,\n    treats:\n      ((G.piles[G.hands[currentPl].cards[IDInHand].color].length === (G.hands[currentPl].cards[IDInHand].value)) // did you play a good move?\n      && (G.hands[currentPl].cards[IDInHand].value === 4)) // Did you finish the color?  - if both, gain treat\n      ?\n      (G.treats === 8) ? 8 : G.treats + 1 // max 8 Treats\n      :\n      G.treats\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function moveDiscard(G: IG, ctx: IGameCtx, IDInHand: number) : any {\n  if (isNaN(IDInHand)) {\n    return INVALID_MOVE\n  } else if (IDInHand < 0 || IDInHand > (ctx.numPlayers > 3 ? 4 : 5) ) {\n    return INVALID_MOVE\n  }\n\n  var currentPl : number = parseInt(ctx.currentPlayer)\n\n  // NOTE! This does not exclude the possiblity of playing a 'null' card, once all cards have been picked up.\n  // However, the game automatically ends, once all players couldn't pick up a card, thus\n  // you always have max_cards in hand, and can never play a 'null'.\n\n  return {\n    ...G,\n    hands: G.hands.map((hand: IHand) => {\n      if (!(hand.player === currentPl)) {\n        return hand\n      }\n      return <IHand> {\n        player: currentPl,\n        cards: hand.cards.map((card: ICard, indexHand: number) => {\n          if (!(indexHand === IDInHand)) {\n            return card\n          }\n          if (G.deckindex >= 0) {\n            return <ICard> {\n              id: G.deck[G.deckindex].id,\n              value: G.deck[G.deckindex].value,\n              color: G.deck[G.deckindex].color\n            }\n          }\n          return null // no more cards in deck\n        }),\n        hints: hand.hints.map((hint: IHint, indexHint: number) => {\n          if (!(indexHint===IDInHand)) {\n            return hint\n          }\n          return <IHint> { color: [0,0,0,0,0], value: [0,0,0,0,0]}\n        })\n      }\n    }),\n    trash: [...G.trash, G.hands[currentPl].cards[IDInHand]],\n    deckindex: G.deckindex - 1,\n    treats: (G.treats === 8) ? 8 : G.treats + 1 // max 8 Treats\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nexport function moveHintValue(G: IG, ctx: IGameCtx, IDPlayer: number, IDHintValue: number) : any {\n  var currentPl : number = parseInt(ctx.currentPlayer)\n  if (isNaN(IDPlayer)) {\n    return INVALID_MOVE\n  } else if (IDPlayer < 0 || IDPlayer >= ctx.numPlayers  ) {\n    return INVALID_MOVE\n  } else if (IDPlayer == currentPl) {\n    return INVALID_MOVE\n  }\n  if (isNaN(IDHintValue)) {\n    return INVALID_MOVE\n  } else if (IDHintValue < 0 || IDHintValue > 4) {\n    return INVALID_MOVE\n  }\n\n  if (G.treats === 0) {\n    return INVALID_MOVE\n  }\n\n  return {\n    ...G,\n    treats: G.treats - 1,\n    hands: G.hands.map((hand: IHand, index: number) => {\n      if (!(index === IDPlayer)) {\n        return hand\n      }\n      return <IHand> {\n        player: G.hands[IDPlayer].player,\n        cards: G.hands[IDPlayer].cards,\n        hints:\n          G.hands[IDPlayer].hints.map((hint: IHint, indexHint: number) => {\n              var newHintValue = Object.assign([], hint.value)\n              newHintValue[IDHintValue] = (G.hands[IDPlayer].cards[indexHint].value === IDHintValue) ? 1 : -1\n              return <IHint> { \n                value : newHintValue,\n                color : hint.color\n              }\n            }\n          )\n      }\n    })\n  }\n}\n\n\n\n\n\n\n\n\nexport function moveHintColor(G: IG, ctx: IGameCtx, IDPlayer: number, IDHintColor: number) : any {\n  var currentPl : number = parseInt(ctx.currentPlayer)\n  if (isNaN(IDPlayer)) {\n    return INVALID_MOVE\n  } else if (IDPlayer < 0 || IDPlayer >= ctx.numPlayers  ) {\n    return INVALID_MOVE\n  } else if (IDPlayer == currentPl) {\n    return INVALID_MOVE\n  }\n  if (isNaN(IDHintColor)) {\n    return INVALID_MOVE\n  } else if (IDHintColor < 0 || IDHintColor > 4) {\n    return INVALID_MOVE\n  }\n\n  if (G.treats === 0) {\n    return INVALID_MOVE\n  }\n\n  return {\n    ...G,\n    treats: G.treats - 1,\n    hands: G.hands.map((hand: IHand, index: number) => {\n      if (!(index === IDPlayer)) {\n        return hand\n      }\n      return <IHand> {\n        player: G.hands[IDPlayer].player,\n        cards: G.hands[IDPlayer].cards,\n        hints:\n          G.hands[IDPlayer].hints.map((hint: IHint, indexHint: number) => {\n              var newHintColor = Object.assign([], hint.color)\n              newHintColor[IDHintColor] = (G.hands[IDPlayer].cards[indexHint].color === IDHintColor) ? 1 : -1\n              return <IHint> { \n                color: newHintColor,\n                value: hint.value\n              }\n            }\n          )\n      }\n\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}