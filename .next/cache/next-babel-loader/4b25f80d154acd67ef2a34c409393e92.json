{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_1xqyw92v30() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/GameInfo.tsx\";\n  var hash = \"42c402f4e9cbbde21782ef65d35b250145e72ac5\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/GameInfo.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 22,\n          column: 33\n        },\n        end: {\n          line: 22,\n          column: 36\n        }\n      },\n      \"1\": {\n        start: {\n          line: 26,\n          column: 20\n        },\n        end: {\n          line: 26,\n          column: 38\n        }\n      },\n      \"2\": {\n        start: {\n          line: 27,\n          column: 4\n        },\n        end: {\n          line: 74,\n          column: 6\n        }\n      },\n      \"3\": {\n        start: {\n          line: 77,\n          column: 21\n        },\n        end: {\n          line: 77,\n          column: 45\n        }\n      },\n      \"4\": {\n        start: {\n          line: 78,\n          column: 30\n        },\n        end: {\n          line: 78,\n          column: 49\n        }\n      },\n      \"5\": {\n        start: {\n          line: 79,\n          column: 4\n        },\n        end: {\n          line: 81,\n          column: 5\n        }\n      },\n      \"6\": {\n        start: {\n          line: 80,\n          column: 6\n        },\n        end: {\n          line: 80,\n          column: 36\n        }\n      },\n      \"7\": {\n        start: {\n          line: 82,\n          column: 4\n        },\n        end: {\n          line: 82,\n          column: 31\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 2\n          },\n          end: {\n            line: 25,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 11\n          },\n          end: {\n            line: 75,\n            column: 3\n          }\n        },\n        line: 25\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 76,\n            column: 2\n          },\n          end: {\n            line: 76,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 76,\n            column: 55\n          },\n          end: {\n            line: 83,\n            column: 3\n          }\n        },\n        line: 76\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        }],\n        line: 79\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 79,\n            column: 8\n          },\n          end: {\n            line: 79,\n            column: 23\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 8\n          },\n          end: {\n            line: 79,\n            column: 16\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 20\n          },\n          end: {\n            line: 79,\n            column: 23\n          }\n        }],\n        line: 79\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"42c402f4e9cbbde21782ef65d35b250145e72ac5\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1xqyw92v30 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1xqyw92v30();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FreeBoardGamesBar from 'components/App/FreeBoardGamesBar';\nimport { GameCard } from 'components/App/Game/GameCard';\nimport { GameModePicker } from 'components/App/Game/GameModePicker';\nimport { GameInstructionsVideo } from 'components/App/Game/GameInstructionsVideo';\nimport { GAMES_MAP } from 'games';\nimport { withRouter } from 'next/router';\nimport { generatePageError } from 'next-with-error';\nimport SEO from 'components/SEO';\nimport { DesktopView, MobileView } from 'components/DesktopMobileView';\nimport { Typography } from '@material-ui/core';\nimport ReactMarkdown from 'react-markdown';\nimport { GameInstructionsText } from 'components/App/Game/GameInstructionsText';\nimport Breadcrumbs from 'components/Breadcrumbs';\nvar DESKTOP_MOBILE_THRESHOLD = (cov_1xqyw92v30().s[0]++, 768);\n\nvar GameInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(GameInfo, _React$Component);\n\n  var _super = _createSuper(GameInfo);\n\n  function GameInfo() {\n    _classCallCheck(this, GameInfo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GameInfo, [{\n    key: \"render\",\n    value: function render() {\n      cov_1xqyw92v30().f[0]++;\n      var gameDef = (cov_1xqyw92v30().s[1]++, this.props.gameDef);\n      cov_1xqyw92v30().s[2]++;\n      return __jsx(FreeBoardGamesBar, {\n        FEATURE_FLAG_readyForDesktopView: true\n      }, __jsx(SEO, {\n        title: \"Play \".concat(gameDef.name, \", \").concat(gameDef.description),\n        description: gameDef.descriptionTag\n      }), __jsx(Breadcrumbs, {\n        itemListElements: [{\n          position: 1,\n          name: 'Play',\n          item: '/play'\n        }, {\n          position: 2,\n          name: gameDef.name,\n          item: this.props.asPath\n        }]\n      }), __jsx(DesktopView, {\n        userAgent: this.props.userAgent,\n        thresholdWidth: DESKTOP_MOBILE_THRESHOLD\n      }, __jsx(\"div\", {\n        style: {\n          padding: '18px 8px',\n          display: 'flex'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          flex: '60%',\n          paddingRight: '32px'\n        }\n      }, __jsx(Typography, {\n        variant: \"h4\",\n        component: \"h1\"\n      }, \"Play \", gameDef.name), __jsx(GameModePicker, {\n        gameDef: gameDef\n      })), __jsx(\"div\", {\n        style: {\n          flex: '55%',\n          padding: '8px'\n        }\n      }, __jsx(GameCard, {\n        game: gameDef\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '16px'\n        }\n      }, __jsx(Typography, {\n        variant: \"body1\",\n        component: \"p\"\n      }, __jsx(ReactMarkdown, {\n        linkTarget: \"_blank\",\n        source: gameDef.instructions.text\n      }))), __jsx(\"div\", {\n        style: {\n          marginTop: '32px'\n        }\n      }, __jsx(GameInstructionsVideo, {\n        gameDef: gameDef\n      }))))), __jsx(MobileView, {\n        userAgent: this.props.userAgent,\n        thresholdWidth: DESKTOP_MOBILE_THRESHOLD\n      }, __jsx(GameCard, {\n        game: gameDef\n      }), __jsx(\"div\", {\n        style: {\n          padding: '8px'\n        }\n      }, __jsx(GameModePicker, {\n        gameDef: gameDef\n      }), __jsx(GameInstructionsVideo, {\n        gameDef: gameDef\n      }), __jsx(GameInstructionsText, {\n        gameDef: gameDef\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var res, query, asPath, gameCode, gameDef;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = _ref.res, query = _ref.query, asPath = _ref.asPath;\n              cov_1xqyw92v30().f[1]++;\n              gameCode = (cov_1xqyw92v30().s[3]++, query.gameCode);\n              gameDef = (cov_1xqyw92v30().s[4]++, GAMES_MAP[gameCode]);\n              cov_1xqyw92v30().s[5]++;\n\n              if (!((cov_1xqyw92v30().b[1][0]++, !gameDef) && (cov_1xqyw92v30().b[1][1]++, res))) {\n                _context.next = 11;\n                break;\n              }\n\n              cov_1xqyw92v30().b[0][0]++;\n              cov_1xqyw92v30().s[6]++;\n              return _context.abrupt(\"return\", generatePageError(404));\n\n            case 11:\n              cov_1xqyw92v30().b[0][1]++;\n\n            case 12:\n              cov_1xqyw92v30().s[7]++;\n              return _context.abrupt(\"return\", {\n                gameDef: gameDef,\n                asPath: asPath\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return GameInfo;\n}((React.Component));\n\nexport default withRouter(GameInfo);","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/GameInfo.tsx"],"names":["React","FreeBoardGamesBar","GameCard","GameModePicker","GameInstructionsVideo","GAMES_MAP","withRouter","generatePageError","SEO","DesktopView","MobileView","Typography","ReactMarkdown","GameInstructionsText","Breadcrumbs","DESKTOP_MOBILE_THRESHOLD","GameInfo","gameDef","props","name","description","descriptionTag","position","item","asPath","userAgent","padding","display","flex","paddingRight","marginTop","instructions","text","res","query","gameCode","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FreeBoardGamesBar from 'components/App/FreeBoardGamesBar';\nimport { GameCard } from 'components/App/Game/GameCard';\nimport { GameModePicker } from 'components/App/Game/GameModePicker';\nimport { GameInstructionsVideo } from 'components/App/Game/GameInstructionsVideo';\nimport { IGameDef, GAMES_MAP } from 'games';\nimport { withRouter } from 'next/router';\nimport { generatePageError } from 'next-with-error';\nimport SEO from 'components/SEO';\nimport { DesktopView, MobileView } from 'components/DesktopMobileView';\nimport { Typography } from '@material-ui/core';\nimport ReactMarkdown from 'react-markdown';\nimport { GameInstructionsText } from 'components/App/Game/GameInstructionsText';\nimport Breadcrumbs from 'components/Breadcrumbs';\n\ninterface gameInfoProps {\n  gameDef: IGameDef;\n  asPath: string;\n  userAgent?: string;\n}\n\nconst DESKTOP_MOBILE_THRESHOLD = 768;\n\nclass GameInfo extends React.Component<gameInfoProps, {}> {\n  render() {\n    const gameDef = this.props.gameDef;\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <SEO title={`Play ${gameDef.name}, ${gameDef.description}`} description={gameDef.descriptionTag} />\n        <Breadcrumbs\n          itemListElements={[\n            {\n              position: 1,\n              name: 'Play',\n              item: '/play',\n            },\n            {\n              position: 2,\n              name: gameDef.name,\n              item: this.props.asPath,\n            },\n          ]}\n        />\n        <DesktopView userAgent={this.props.userAgent} thresholdWidth={DESKTOP_MOBILE_THRESHOLD}>\n          <div style={{ padding: '18px 8px', display: 'flex' }}>\n            <div style={{ flex: '60%', paddingRight: '32px' }}>\n              <Typography variant=\"h4\" component=\"h1\">\n                Play {gameDef.name}\n              </Typography>\n              <GameModePicker gameDef={gameDef} />\n            </div>\n            <div style={{ flex: '55%', padding: '8px' }}>\n              <GameCard game={gameDef} />\n              <div style={{ marginTop: '16px' }}>\n                <Typography variant=\"body1\" component=\"p\">\n                  <ReactMarkdown linkTarget=\"_blank\" source={gameDef.instructions.text} />\n                </Typography>\n              </div>\n              <div style={{ marginTop: '32px' }}>\n                <GameInstructionsVideo gameDef={gameDef} />\n              </div>\n            </div>\n          </div>\n        </DesktopView>\n        <MobileView userAgent={this.props.userAgent} thresholdWidth={DESKTOP_MOBILE_THRESHOLD}>\n          <GameCard game={gameDef} />\n          <div style={{ padding: '8px' }}>\n            <GameModePicker gameDef={gameDef} />\n            <GameInstructionsVideo gameDef={gameDef} />\n            <GameInstructionsText gameDef={gameDef} />\n          </div>\n        </MobileView>\n      </FreeBoardGamesBar>\n    );\n  }\n  static async getInitialProps({ res, query, asPath }) {\n    const gameCode = query.gameCode as string;\n    const gameDef: IGameDef = GAMES_MAP[gameCode];\n    if (!gameDef && res) {\n      return generatePageError(404);\n    }\n    return { gameDef, asPath };\n  }\n}\n\nexport default withRouter(GameInfo as any);\n"]},"metadata":{},"sourceType":"module"}