{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction cov_2057rfbk76() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/Decks.tsx\";\n  var hash = \"a6453ed5ea4cf81ca08b0464d2765dade94c6144\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/Decks.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 14,\n          column: 16\n        },\n        end: {\n          line: 14,\n          column: 61\n        }\n      },\n      \"1\": {\n        start: {\n          line: 14,\n          column: 31\n        },\n        end: {\n          line: 14,\n          column: 61\n        }\n      },\n      \"2\": {\n        start: {\n          line: 14,\n          column: 37\n        },\n        end: {\n          line: 14,\n          column: 61\n        }\n      },\n      \"3\": {\n        start: {\n          line: 17,\n          column: 4\n        },\n        end: {\n          line: 38,\n          column: 6\n        }\n      },\n      \"4\": {\n        start: {\n          line: 20,\n          column: 10\n        },\n        end: {\n          line: 35,\n          column: 16\n        }\n      },\n      \"5\": {\n        start: {\n          line: 30,\n          column: 14\n        },\n        end: {\n          line: 32,\n          column: 20\n        }\n      },\n      \"6\": {\n        start: {\n          line: 42,\n          column: 4\n        },\n        end: {\n          line: 44,\n          column: 5\n        }\n      },\n      \"7\": {\n        start: {\n          line: 43,\n          column: 6\n        },\n        end: {\n          line: 43,\n          column: 15\n        }\n      },\n      \"8\": {\n        start: {\n          line: 46,\n          column: 4\n        },\n        end: {\n          line: 50,\n          column: 5\n        }\n      },\n      \"9\": {\n        start: {\n          line: 47,\n          column: 6\n        },\n        end: {\n          line: 47,\n          column: 15\n        }\n      },\n      \"10\": {\n        start: {\n          line: 49,\n          column: 6\n        },\n        end: {\n          line: 49,\n          column: 17\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 16\n          },\n          end: {\n            line: 14,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 31\n          },\n          end: {\n            line: 14,\n            column: 61\n          }\n        },\n        line: 14\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 31\n          },\n          end: {\n            line: 14,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 37\n          },\n          end: {\n            line: 14,\n            column: 61\n          }\n        },\n        line: 14\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 2\n          },\n          end: {\n            line: 16,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 11\n          },\n          end: {\n            line: 39,\n            column: 3\n          }\n        },\n        line: 16\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 19,\n            column: 32\n          },\n          end: {\n            line: 19,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 10\n          },\n          end: {\n            line: 35,\n            column: 16\n          }\n        },\n        line: 20\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 22\n          },\n          end: {\n            line: 29,\n            column: 23\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 14\n          },\n          end: {\n            line: 32,\n            column: 20\n          }\n        },\n        line: 30\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 41,\n            column: 2\n          },\n          end: {\n            line: 41,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 41,\n            column: 33\n          },\n          end: {\n            line: 51,\n            column: 3\n          }\n        },\n        line: 41\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        }],\n        line: 42\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 8\n          },\n          end: {\n            line: 42,\n            column: 102\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 8\n          },\n          end: {\n            line: 42,\n            column: 46\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 50\n          },\n          end: {\n            line: 42,\n            column: 102\n          }\n        }],\n        line: 42\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 5\n          }\n        }],\n        line: 46\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a6453ed5ea4cf81ca08b0464d2765dade94c6144\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2057rfbk76 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2057rfbk76();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { isAllowedDeck } from './game';\nimport { CardComponent } from './CardComponent';\nexport var Decks = /*#__PURE__*/function (_React$Component) {\n  _inherits(Decks, _React$Component);\n\n  var _super = _createSuper(Decks);\n\n  function Decks() {\n    var _this;\n\n    _classCallCheck(this, Decks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectDeck\", (cov_2057rfbk76().s[0]++, function (i) {\n      cov_2057rfbk76().f[0]++;\n      cov_2057rfbk76().s[1]++;\n      return function () {\n        cov_2057rfbk76().f[1]++;\n        cov_2057rfbk76().s[2]++;\n        return _this.props.selectDeck(i);\n      };\n    }));\n\n    return _this;\n  }\n\n  _createClass(Decks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      cov_2057rfbk76().f[2]++;\n      cov_2057rfbk76().s[3]++;\n      return __jsx(\"div\", null, this.props.G.decks.map(function (deck, i) {\n        cov_2057rfbk76().f[3]++;\n        cov_2057rfbk76().s[4]++;\n        return __jsx(\"div\", {\n          className: \"DeckRow\",\n          key: i,\n          onClick: _this2._selectDeck(i),\n          style: {\n            marginBottom: '4px',\n            opacity: _this2.getOpacity(i)\n          }\n        }, deck.map(function (card) {\n          cov_2057rfbk76().f[4]++;\n          cov_2057rfbk76().s[5]++;\n          return __jsx(\"div\", {\n            key: card.number\n          }, __jsx(CardComponent, {\n            card: card\n          }));\n        }), __jsx(\"div\", {\n          style: {\n            clear: 'both'\n          }\n        }));\n      }));\n    }\n  }, {\n    key: \"getOpacity\",\n    value: function getOpacity(id) {\n      cov_2057rfbk76().f[5]++;\n      cov_2057rfbk76().s[6]++;\n\n      if ((cov_2057rfbk76().b[1][0]++, this.props.ctx.phase === 'CARD_SELECT') || (cov_2057rfbk76().b[1][1]++, this.props.ctx.currentPlayer !== this.props.playerID)) {\n        cov_2057rfbk76().b[0][0]++;\n        cov_2057rfbk76().s[7]++;\n        return 1;\n      } else {\n        cov_2057rfbk76().b[0][1]++;\n      }\n\n      cov_2057rfbk76().s[8]++;\n\n      if (isAllowedDeck(this.props.G, id, this.props.playerID)) {\n        cov_2057rfbk76().b[2][0]++;\n        cov_2057rfbk76().s[9]++;\n        return 1;\n      } else {\n        cov_2057rfbk76().b[2][1]++;\n        cov_2057rfbk76().s[10]++;\n        return 0.2;\n      }\n    }\n  }]);\n\n  return Decks;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/takesix/Decks.tsx"],"names":["React","isAllowedDeck","CardComponent","Decks","i","props","selectDeck","G","decks","map","deck","_selectDeck","marginBottom","opacity","getOpacity","card","number","clear","id","ctx","phase","currentPlayer","playerID","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAaC,aAAb,QAAkC,QAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AASA,WAAaC,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4FACgB,UAACC,CAAD,EAAe;AAAA;AAAA;AAAA,yBAAM;AAAA;AAAA;AAAA,qBAAKC,KAAL,CAAWC,UAAX,CAAsBF,CAAtB;AAAwB,OAA9B;AAA8B,KAD7D;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA;;AAAA;AAAA;AACP,aACE,mBACG,KAAKC,KAAL,CAAWE,CAAX,CAAaC,KAAb,CAAmBC,GAAnB,CAAuB,UAACC,IAAD,EAAON,CAAP,EACtB;AAAA;AAAA;AAAA;AACE,UAAA,SAAS,EAAC,SADZ;AAEE,UAAA,GAAG,EAAEA,CAFP;AAGE,UAAA,OAAO,EAAE,MAAI,CAACO,WAAL,CAAiBP,CAAjB,CAHX;AAIE,UAAA,KAAK,EAAE;AACLQ,YAAAA,YAAY,EAAE,KADT;AAELC,YAAAA,OAAO,EAAE,MAAI,CAACC,UAAL,CAAgBV,CAAhB;AAFJ;AAJT,WASGM,IAAI,CAACD,GAAL,CAAS,UAACM,IAAD,EACR;AAAA;AAAA;AAAA;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC;AAAf,aACE,MAAC,aAAD;AAAe,YAAA,IAAI,EAAED;AAArB,YADF;AAEM,SAHP,CATH,EAcE;AAAK,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT;AAAZ,UAdF;AAeM,OAhBP,CADH,CADF;AAsBD;AA1BH;AAAA;AAAA,+BA4BaC,EA5Bb,EA4BiC;AAAA;AAAA;;AAC7B,UAAI,kCAAKb,KAAL,CAAWc,GAAX,CAAeC,KAAf,KAAyB,aAAzB,kCAA0C,KAAKf,KAAL,CAAWc,GAAX,CAAeE,aAAf,KAAiC,KAAKhB,KAAL,CAAWiB,QAAtF,CAAJ,EAAoG;AAAA;AAAA;AAClG,eAAO,CAAP;AACD,OAFD;AAAA;AAAA;;AAD6B;;AAK7B,UAAIrB,aAAa,CAAC,KAAKI,KAAL,CAAWE,CAAZ,EAAeW,EAAf,EAAmB,KAAKb,KAAL,CAAWiB,QAA9B,CAAjB,EAA0D;AAAA;AAAA;AACxD,eAAO,CAAP;AACD,OAFD,MAEO;AAAA;AAAA;AACL,eAAO,GAAP;AACD;AACF;AAtCH;;AAAA;AAAA,GAA2BtB,KAAK,CAACuB,SAAjC","sourcesContent":["import * as React from 'react';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG, isAllowedDeck } from './game';\nimport { CardComponent } from './CardComponent';\n\ninterface IDecksProps {\n  G: IG;\n  ctx: IGameCtx;\n  playerID: string;\n  selectDeck: (index: number) => void;\n}\n\nexport class Decks extends React.Component<IDecksProps, {}> {\n  _selectDeck = (i: number) => () => this.props.selectDeck(i);\n\n  render() {\n    return (\n      <div>\n        {this.props.G.decks.map((deck, i) => (\n          <div\n            className=\"DeckRow\"\n            key={i}\n            onClick={this._selectDeck(i)}\n            style={{\n              marginBottom: '4px',\n              opacity: this.getOpacity(i),\n            }}\n          >\n            {deck.map((card) => (\n              <div key={card.number}>\n                <CardComponent card={card} />\n              </div>\n            ))}\n            <div style={{ clear: 'both' }} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  getOpacity(id: number): number {\n    if (this.props.ctx.phase === 'CARD_SELECT' || this.props.ctx.currentPlayer !== this.props.playerID) {\n      return 1;\n    }\n\n    if (isAllowedDeck(this.props.G, id, this.props.playerID)) {\n      return 1;\n    } else {\n      return 0.2;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}