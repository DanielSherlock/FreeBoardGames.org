{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_1x3wn2882z() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bcard.tsx\";\n  var hash = \"e8a8de5fef47db78a77cbc1c17b8f5b8dd5cdb17\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bcard.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 31,\n          column: 8\n        },\n        end: {\n          line: 83,\n          column: 9\n        }\n      },\n      \"1\": {\n        start: {\n          line: 33,\n          column: 12\n        },\n        end: {\n          line: 33,\n          column: 27\n        }\n      },\n      \"2\": {\n        start: {\n          line: 34,\n          column: 12\n        },\n        end: {\n          line: 56,\n          column: 13\n        }\n      },\n      \"3\": {\n        start: {\n          line: 36,\n          column: 16\n        },\n        end: {\n          line: 36,\n          column: 30\n        }\n      },\n      \"4\": {\n        start: {\n          line: 37,\n          column: 16\n        },\n        end: {\n          line: 37,\n          column: 22\n        }\n      },\n      \"5\": {\n        start: {\n          line: 39,\n          column: 16\n        },\n        end: {\n          line: 39,\n          column: 29\n        }\n      },\n      \"6\": {\n        start: {\n          line: 40,\n          column: 16\n        },\n        end: {\n          line: 40,\n          column: 22\n        }\n      },\n      \"7\": {\n        start: {\n          line: 42,\n          column: 16\n        },\n        end: {\n          line: 42,\n          column: 30\n        }\n      },\n      \"8\": {\n        start: {\n          line: 43,\n          column: 16\n        },\n        end: {\n          line: 43,\n          column: 22\n        }\n      },\n      \"9\": {\n        start: {\n          line: 45,\n          column: 16\n        },\n        end: {\n          line: 45,\n          column: 31\n        }\n      },\n      \"10\": {\n        start: {\n          line: 46,\n          column: 16\n        },\n        end: {\n          line: 46,\n          column: 22\n        }\n      },\n      \"11\": {\n        start: {\n          line: 48,\n          column: 16\n        },\n        end: {\n          line: 48,\n          column: 29\n        }\n      },\n      \"12\": {\n        start: {\n          line: 49,\n          column: 16\n        },\n        end: {\n          line: 49,\n          column: 22\n        }\n      },\n      \"13\": {\n        start: {\n          line: 51,\n          column: 16\n        },\n        end: {\n          line: 51,\n          column: 30\n        }\n      },\n      \"14\": {\n        start: {\n          line: 52,\n          column: 16\n        },\n        end: {\n          line: 52,\n          column: 22\n        }\n      },\n      \"15\": {\n        start: {\n          line: 54,\n          column: 16\n        },\n        end: {\n          line: 54,\n          column: 29\n        }\n      },\n      \"16\": {\n        start: {\n          line: 55,\n          column: 16\n        },\n        end: {\n          line: 55,\n          column: 22\n        }\n      },\n      \"17\": {\n        start: {\n          line: 57,\n          column: 15\n        },\n        end: {\n          line: 83,\n          column: 9\n        }\n      },\n      \"18\": {\n        start: {\n          line: 59,\n          column: 12\n        },\n        end: {\n          line: 59,\n          column: 26\n        }\n      },\n      \"19\": {\n        start: {\n          line: 60,\n          column: 12\n        },\n        end: {\n          line: 60,\n          column: 26\n        }\n      },\n      \"20\": {\n        start: {\n          line: 62,\n          column: 12\n        },\n        end: {\n          line: 62,\n          column: 92\n        }\n      },\n      \"21\": {\n        start: {\n          line: 63,\n          column: 12\n        },\n        end: {\n          line: 82,\n          column: 13\n        }\n      },\n      \"22\": {\n        start: {\n          line: 65,\n          column: 16\n        },\n        end: {\n          line: 65,\n          column: 35\n        }\n      },\n      \"23\": {\n        start: {\n          line: 66,\n          column: 16\n        },\n        end: {\n          line: 66,\n          column: 22\n        }\n      },\n      \"24\": {\n        start: {\n          line: 68,\n          column: 16\n        },\n        end: {\n          line: 68,\n          column: 34\n        }\n      },\n      \"25\": {\n        start: {\n          line: 69,\n          column: 16\n        },\n        end: {\n          line: 69,\n          column: 22\n        }\n      },\n      \"26\": {\n        start: {\n          line: 71,\n          column: 16\n        },\n        end: {\n          line: 71,\n          column: 35\n        }\n      },\n      \"27\": {\n        start: {\n          line: 72,\n          column: 16\n        },\n        end: {\n          line: 72,\n          column: 22\n        }\n      },\n      \"28\": {\n        start: {\n          line: 74,\n          column: 16\n        },\n        end: {\n          line: 74,\n          column: 36\n        }\n      },\n      \"29\": {\n        start: {\n          line: 75,\n          column: 16\n        },\n        end: {\n          line: 75,\n          column: 22\n        }\n      },\n      \"30\": {\n        start: {\n          line: 77,\n          column: 16\n        },\n        end: {\n          line: 77,\n          column: 34\n        }\n      },\n      \"31\": {\n        start: {\n          line: 78,\n          column: 16\n        },\n        end: {\n          line: 78,\n          column: 22\n        }\n      },\n      \"32\": {\n        start: {\n          line: 80,\n          column: 16\n        },\n        end: {\n          line: 80,\n          column: 29\n        }\n      },\n      \"33\": {\n        start: {\n          line: 81,\n          column: 16\n        },\n        end: {\n          line: 81,\n          column: 22\n        }\n      },\n      \"34\": {\n        start: {\n          line: 85,\n          column: 8\n        },\n        end: {\n          line: 90,\n          column: 9\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 28,\n            column: 4\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 28,\n            column: 13\n          },\n          end: {\n            line: 91,\n            column: 5\n          }\n        },\n        line: 28\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 8\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 8\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 8\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        }],\n        line: 31\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 12\n          },\n          end: {\n            line: 56,\n            column: 13\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 35,\n            column: 14\n          },\n          end: {\n            line: 37,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 38,\n            column: 14\n          },\n          end: {\n            line: 40,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 41,\n            column: 14\n          },\n          end: {\n            line: 43,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 44,\n            column: 14\n          },\n          end: {\n            line: 46,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 47,\n            column: 14\n          },\n          end: {\n            line: 49,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 50,\n            column: 14\n          },\n          end: {\n            line: 52,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 53,\n            column: 14\n          },\n          end: {\n            line: 55,\n            column: 22\n          }\n        }],\n        line: 34\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 57,\n            column: 15\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 57,\n            column: 15\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 57,\n            column: 15\n          },\n          end: {\n            line: 83,\n            column: 9\n          }\n        }],\n        line: 57\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 62,\n            column: 31\n          },\n          end: {\n            line: 62,\n            column: 90\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 62,\n            column: 64\n          },\n          end: {\n            line: 62,\n            column: 85\n          }\n        }, {\n          start: {\n            line: 62,\n            column: 88\n          },\n          end: {\n            line: 62,\n            column: 90\n          }\n        }],\n        line: 62\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 63,\n            column: 12\n          },\n          end: {\n            line: 82,\n            column: 13\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 14\n          },\n          end: {\n            line: 66,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 67,\n            column: 14\n          },\n          end: {\n            line: 69,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 70,\n            column: 14\n          },\n          end: {\n            line: 72,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 73,\n            column: 14\n          },\n          end: {\n            line: 75,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 76,\n            column: 14\n          },\n          end: {\n            line: 78,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 14\n          },\n          end: {\n            line: 81,\n            column: 22\n          }\n        }],\n        line: 63\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0, 0, 0, 0, 0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0, 0, 0, 0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"e8a8de5fef47db78a77cbc1c17b8f5b8dd5cdb17\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1x3wn2882z = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1x3wn2882z();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport green from './media/green.png';\nimport green_with from './media/green_with.png';\nimport gray from './media/gray.png';\nimport gray_with from './media/gray_with.png';\nimport brown from './media/brown.png';\nimport brown_with from './media/brown_with.png';\nimport yellow from './media/yellow.png';\nimport yellow_with from './media/yellow_with.png';\nimport blue from './media/blue.png';\nimport blue_with from './media/blue_with.png';\nimport empty from './media/empty.png';\nimport white from './media/white.png';\nimport deck from './media/deck.png';\nimport style from './bcard.css';\nexport var BCard = /*#__PURE__*/function (_React$Component) {\n  _inherits(BCard, _React$Component);\n\n  var _super = _createSuper(BCard);\n\n  function BCard() {\n    _classCallCheck(this, BCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BCard, [{\n    key: \"render\",\n    value: function render() {\n      cov_1x3wn2882z().f[0]++;\n      var cardValue;\n      var image;\n      cov_1x3wn2882z().s[0]++;\n\n      if (this.props.empty !== null) {\n        cov_1x3wn2882z().b[0][0]++;\n        cov_1x3wn2882z().s[1]++;\n        // No Real Card Face\n        cardValue = \"\";\n        cov_1x3wn2882z().s[2]++;\n\n        switch (this.props.empty) {\n          case 0:\n            cov_1x3wn2882z().b[1][0]++;\n            cov_1x3wn2882z().s[3]++;\n            image = green;\n            cov_1x3wn2882z().s[4]++;\n            break;\n\n          case 1:\n            cov_1x3wn2882z().b[1][1]++;\n            cov_1x3wn2882z().s[5]++;\n            image = gray;\n            cov_1x3wn2882z().s[6]++;\n            break;\n\n          case 2:\n            cov_1x3wn2882z().b[1][2]++;\n            cov_1x3wn2882z().s[7]++;\n            image = brown;\n            cov_1x3wn2882z().s[8]++;\n            break;\n\n          case 3:\n            cov_1x3wn2882z().b[1][3]++;\n            cov_1x3wn2882z().s[9]++;\n            image = yellow;\n            cov_1x3wn2882z().s[10]++;\n            break;\n\n          case 4:\n            cov_1x3wn2882z().b[1][4]++;\n            cov_1x3wn2882z().s[11]++;\n            image = blue;\n            cov_1x3wn2882z().s[12]++;\n            break;\n\n          case -1:\n            cov_1x3wn2882z().b[1][5]++;\n            cov_1x3wn2882z().s[13]++;\n            image = empty;\n            cov_1x3wn2882z().s[14]++;\n            break;\n\n          case -2:\n            cov_1x3wn2882z().b[1][6]++;\n            cov_1x3wn2882z().s[15]++;\n            image = deck;\n            cov_1x3wn2882z().s[16]++;\n            break;\n        }\n      } else {\n        cov_1x3wn2882z().b[0][1]++;\n        cov_1x3wn2882z().s[17]++;\n\n        if (!this.props.card) {\n          cov_1x3wn2882z().b[2][0]++;\n          cov_1x3wn2882z().s[18]++;\n          // Card is null, so its hidden\n          cardValue = \"\";\n          cov_1x3wn2882z().s[19]++;\n          image = white;\n        } else {\n          cov_1x3wn2882z().b[2][1]++;\n          cov_1x3wn2882z().s[20]++;\n          cardValue = String(this.props.card.value !== null ? (cov_1x3wn2882z().b[3][0]++, this.props.card.value) : (cov_1x3wn2882z().b[3][1]++, \"\"));\n          cov_1x3wn2882z().s[21]++;\n\n          switch (this.props.card.color) {\n            case 0:\n              cov_1x3wn2882z().b[4][0]++;\n              cov_1x3wn2882z().s[22]++;\n              image = green_with;\n              cov_1x3wn2882z().s[23]++;\n              break;\n\n            case 1:\n              cov_1x3wn2882z().b[4][1]++;\n              cov_1x3wn2882z().s[24]++;\n              image = gray_with;\n              cov_1x3wn2882z().s[25]++;\n              break;\n\n            case 2:\n              cov_1x3wn2882z().b[4][2]++;\n              cov_1x3wn2882z().s[26]++;\n              image = brown_with;\n              cov_1x3wn2882z().s[27]++;\n              break;\n\n            case 3:\n              cov_1x3wn2882z().b[4][3]++;\n              cov_1x3wn2882z().s[28]++;\n              image = yellow_with;\n              cov_1x3wn2882z().s[29]++;\n              break;\n\n            case 4:\n              cov_1x3wn2882z().b[4][4]++;\n              cov_1x3wn2882z().s[30]++;\n              image = blue_with;\n              cov_1x3wn2882z().s[31]++;\n              break;\n\n            case -1:\n              cov_1x3wn2882z().b[4][5]++;\n              cov_1x3wn2882z().s[32]++;\n              image = deck;\n              cov_1x3wn2882z().s[33]++;\n              break;\n          }\n        }\n      }\n\n      cov_1x3wn2882z().s[34]++;\n      return __jsx(\"div\", {\n        className: style.card\n      }, __jsx(\"img\", {\n        src: image\n      }), __jsx(\"span\", null, cardValue));\n    }\n  }]);\n\n  return BCard;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bcard.tsx"],"names":["React","green","green_with","gray","gray_with","brown","brown_with","yellow","yellow_with","blue","blue_with","empty","white","deck","style","BCard","cardValue","image","props","card","String","value","color","Component"],"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","sourcesContent":["import React from 'react';\nimport { ICard } from '../interfaces';\n\nimport green from './media/green.png';\nimport green_with from './media/green_with.png';\nimport gray from './media/gray.png';\nimport gray_with from './media/gray_with.png';\nimport brown from './media/brown.png';\nimport brown_with from './media/brown_with.png';\nimport yellow from './media/yellow.png';\nimport yellow_with from './media/yellow_with.png';\nimport blue from './media/blue.png';\nimport blue_with from './media/blue_with.png';\nimport empty from './media/empty.png';\nimport white from './media/white.png';\nimport deck from './media/deck.png';\n\nimport style from './bcard.css';\n\ninterface InnerWrapper {\n    card : ICard, // if null, show back of card. \n    empty: number , // If -1, then 'empty', if 0-4 base color\n                    // 'empty' should take precidence, if not null\n                    // if -2 then 'backside'\n}\n\nexport class BCard extends React.Component< InnerWrapper, {}> {\n    render() {\n        var cardValue: string\n        var image: any\n        if (this.props.empty !== null) {\n            // No Real Card Face\n            cardValue = \"\";\n            switch (this.props.empty) {\n              case 0:\n                image = green;\n                break;\n              case 1:\n                image = gray;\n                break;\n              case 2:\n                image = brown;\n                break;\n              case 3:\n                image = yellow;\n                break;\n              case 4:\n                image = blue;\n                break;\n              case -1:\n                image = empty;\n                break;\n              case -2:\n                image = deck;\n                break;\n            }\n        } else if (!this.props.card) {\n            // Card is null, so its hidden\n            cardValue = \"\"\n            image = white;\n        } else {\n            cardValue = String(this.props.card.value !== null ? this.props.card.value : \"\");\n            switch (this.props.card.color) {\n              case 0:\n                image = green_with;\n                break;\n              case 1:\n                image = gray_with;\n                break;\n              case 2:\n                image = brown_with;\n                break;\n              case 3:\n                image = yellow_with;\n                break;\n              case 4:\n                image = blue_with;\n                break;\n              case -1:\n                image = deck;\n                break;\n            }\n        }\n\n        return (\n            <div className={style.card}>\n                <img src={image} />\n                <span>{ cardValue }</span>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}