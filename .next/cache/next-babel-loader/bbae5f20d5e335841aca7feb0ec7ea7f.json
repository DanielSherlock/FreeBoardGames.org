{"ast":null,"code":"function cov_1dqko1elzv() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/ai.ts\";\n  var hash = \"e1527b8e73eb1620ea69964f84c38009debca713\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/ai.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 11,\n          column: 17\n        },\n        end: {\n          line: 11,\n          column: 47\n        }\n      },\n      \"1\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 12,\n          column: 41\n        }\n      },\n      \"2\": {\n        start: {\n          line: 15,\n          column: 29\n        },\n        end: {\n          line: 15,\n          column: 31\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 18\n        },\n        end: {\n          line: 16,\n          column: 31\n        }\n      },\n      \"4\": {\n        start: {\n          line: 17,\n          column: 4\n        },\n        end: {\n          line: 21,\n          column: 5\n        }\n      },\n      \"5\": {\n        start: {\n          line: 17,\n          column: 17\n        },\n        end: {\n          line: 17,\n          column: 18\n        }\n      },\n      \"6\": {\n        start: {\n          line: 18,\n          column: 6\n        },\n        end: {\n          line: 20,\n          column: 7\n        }\n      },\n      \"7\": {\n        start: {\n          line: 19,\n          column: 8\n        },\n        end: {\n          line: 19,\n          column: 33\n        }\n      },\n      \"8\": {\n        start: {\n          line: 22,\n          column: 22\n        },\n        end: {\n          line: 22,\n          column: 71\n        }\n      },\n      \"9\": {\n        start: {\n          line: 23,\n          column: 17\n        },\n        end: {\n          line: 23,\n          column: 44\n        }\n      },\n      \"10\": {\n        start: {\n          line: 24,\n          column: 4\n        },\n        end: {\n          line: 24,\n          column: 16\n        }\n      },\n      \"11\": {\n        start: {\n          line: 27,\n          column: 4\n        },\n        end: {\n          line: 27,\n          column: 101\n        }\n      },\n      \"12\": {\n        start: {\n          line: 30,\n          column: 4\n        },\n        end: {\n          line: 30,\n          column: 61\n        }\n      },\n      \"13\": {\n        start: {\n          line: 33,\n          column: 26\n        },\n        end: {\n          line: 58,\n          column: 1\n        }\n      },\n      \"14\": {\n        start: {\n          line: 35,\n          column: 4\n        },\n        end: {\n          line: 56,\n          column: 5\n        }\n      },\n      \"15\": {\n        start: {\n          line: 37,\n          column: 6\n        },\n        end: {\n          line: 50,\n          column: 8\n        }\n      },\n      \"16\": {\n        start: {\n          line: 41,\n          column: 26\n        },\n        end: {\n          line: 41,\n          column: 28\n        }\n      },\n      \"17\": {\n        start: {\n          line: 42,\n          column: 12\n        },\n        end: {\n          line: 46,\n          column: 13\n        }\n      },\n      \"18\": {\n        start: {\n          line: 42,\n          column: 25\n        },\n        end: {\n          line: 42,\n          column: 26\n        }\n      },\n      \"19\": {\n        start: {\n          line: 43,\n          column: 14\n        },\n        end: {\n          line: 45,\n          column: 15\n        }\n      },\n      \"20\": {\n        start: {\n          line: 44,\n          column: 16\n        },\n        end: {\n          line: 44,\n          column: 61\n        }\n      },\n      \"21\": {\n        start: {\n          line: 47,\n          column: 12\n        },\n        end: {\n          line: 47,\n          column: 25\n        }\n      },\n      \"22\": {\n        start: {\n          line: 51,\n          column: 11\n        },\n        end: {\n          line: 56,\n          column: 5\n        }\n      },\n      \"23\": {\n        start: {\n          line: 53,\n          column: 6\n        },\n        end: {\n          line: 55,\n          column: 8\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 2\n          },\n          end: {\n            line: 10,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 50\n          },\n          end: {\n            line: 13,\n            column: 3\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 40\n          },\n          end: {\n            line: 25,\n            column: 3\n          }\n        },\n        line: 14\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 26,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 26,\n            column: 43\n          },\n          end: {\n            line: 28,\n            column: 3\n          }\n        },\n        line: 26\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 2\n          },\n          end: {\n            line: 29,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 41\n          },\n          end: {\n            line: 31,\n            column: 3\n          }\n        },\n        line: 29\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 34,\n            column: 10\n          },\n          end: {\n            line: 34,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 34,\n            column: 29\n          },\n          end: {\n            line: 57,\n            column: 3\n          }\n        },\n        line: 34\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 21\n          },\n          end: {\n            line: 40,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 33\n          },\n          end: {\n            line: 48,\n            column: 11\n          }\n        },\n        line: 40\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 20,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 20,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 20,\n            column: 7\n          }\n        }],\n        line: 18\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 35,\n            column: 4\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 35,\n            column: 4\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 35,\n            column: 4\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        }],\n        line: 35\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 43,\n            column: 14\n          },\n          end: {\n            line: 45,\n            column: 15\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 43,\n            column: 14\n          },\n          end: {\n            line: 45,\n            column: 15\n          }\n        }, {\n          start: {\n            line: 43,\n            column: 14\n          },\n          end: {\n            line: 45,\n            column: 15\n          }\n        }],\n        line: 43\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 51,\n            column: 11\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 51,\n            column: 11\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 51,\n            column: 11\n          },\n          end: {\n            line: 56,\n            column: 5\n          }\n        }],\n        line: 51\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"e1527b8e73eb1620ea69964f84c38009debca713\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1dqko1elzv = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1dqko1elzv();\nimport { MCTSBot } from 'boardgame.io/ai';\n\nclass TictactoeRandomBot {\n  async play(state, playerID) {\n    cov_1dqko1elzv().f[0]++;\n    const cell = (cov_1dqko1elzv().s[0]++, this.generateRandomMove(state));\n    cov_1dqko1elzv().s[1]++;\n    return this.makeMove(playerID, cell);\n  }\n\n  generateRandomMove(state) {\n    cov_1dqko1elzv().f[1]++;\n    const freeCellsIndexes = (cov_1dqko1elzv().s[2]++, []);\n    const cells = (cov_1dqko1elzv().s[3]++, state.G.cells);\n    cov_1dqko1elzv().s[4]++;\n\n    for (let i = (cov_1dqko1elzv().s[5]++, 0); i < cells.length; i++) {\n      cov_1dqko1elzv().s[6]++;\n\n      if (cells[i] === null) {\n        cov_1dqko1elzv().b[0][0]++;\n        cov_1dqko1elzv().s[7]++;\n        freeCellsIndexes.push(i);\n      } else {\n        cov_1dqko1elzv().b[0][1]++;\n      }\n    }\n\n    const randIndex = (cov_1dqko1elzv().s[8]++, this.randomNumber(0, freeCellsIndexes.length - 1));\n    const cell = (cov_1dqko1elzv().s[9]++, freeCellsIndexes[randIndex]);\n    cov_1dqko1elzv().s[10]++;\n    return cell;\n  }\n\n  makeMove(playerID, cell) {\n    cov_1dqko1elzv().f[2]++;\n    cov_1dqko1elzv().s[11]++;\n    return {\n      action: {\n        type: 'MAKE_MOVE',\n        payload: {\n          type: 'clickCell',\n          args: [cell],\n          playerID\n        }\n      }\n    };\n  }\n\n  randomNumber(min, max) {\n    cov_1dqko1elzv().f[3]++;\n    cov_1dqko1elzv().s[12]++;\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n}\n\nconst config = (cov_1dqko1elzv().s[13]++, {\n  bgioAI: level => {\n    cov_1dqko1elzv().f[4]++;\n    cov_1dqko1elzv().s[14]++;\n\n    if (level === '2') {\n      cov_1dqko1elzv().b[1][0]++;\n      cov_1dqko1elzv().s[15]++;\n      // Hard\n      return {\n        type: MCTSBot,\n        ai: {\n          enumerate: G => {\n            cov_1dqko1elzv().f[5]++;\n            const moves = (cov_1dqko1elzv().s[16]++, []);\n            cov_1dqko1elzv().s[17]++;\n\n            for (let i = (cov_1dqko1elzv().s[18]++, 0); i < 16; i++) {\n              cov_1dqko1elzv().s[19]++;\n\n              if (G.cells[i] === null) {\n                cov_1dqko1elzv().b[2][0]++;\n                cov_1dqko1elzv().s[20]++;\n                moves.push({\n                  move: 'clickCell',\n                  args: [i]\n                });\n              } else {\n                cov_1dqko1elzv().b[2][1]++;\n              }\n            }\n\n            cov_1dqko1elzv().s[21]++;\n            return moves;\n          }\n        }\n      };\n    } else {\n      cov_1dqko1elzv().b[1][1]++;\n      cov_1dqko1elzv().s[22]++;\n\n      if (level === '1') {\n        cov_1dqko1elzv().b[3][0]++;\n        cov_1dqko1elzv().s[23]++;\n        // Easy\n        return {\n          bot: TictactoeRandomBot\n        };\n      } else {\n        cov_1dqko1elzv().b[3][1]++;\n      }\n    }\n  }\n});\nexport default config;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/ai.ts"],"names":["MCTSBot","TictactoeRandomBot","play","state","playerID","cell","generateRandomMove","makeMove","freeCellsIndexes","cells","G","i","length","push","randIndex","randomNumber","action","type","payload","args","min","max","Math","floor","random","config","bgioAI","level","ai","enumerate","moves","move","bot"],"mappingswB,iBAAxB;;AAOA,MAAMC,kBAAN,CAAyB;AACvB,QAAMC,IAAN,CAAWC,KAAX,EAA8BC,QAA9B,EAAgD;AAAA;AAC9C,UAAMC,IAAI,6BAAG,KAAKC,kBAAL,CAAwBH,KAAxB,CAAH,CAAV;AAD8C;AAE9C,WAAO,KAAKI,QAAL,CAAcH,QAAd,EAAwBC,IAAxB,CAAP;AACD;;AACDC,EAAAA,kBAAkB,CAACH,KAAD,EAAoB;AAAA;AACpC,UAAMK,gBAAgB,6BAAG,EAAH,CAAtB;AACA,UAAMC,KAAK,6BAAGN,KAAK,CAACO,CAAN,CAAQD,KAAX,CAAX;AAFoC;;AAGpC,SAAK,IAAIE,CAAC,6BAAG,CAAH,CAAV,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAA;;AACrC,UAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,IAAjB,EAAuB;AAAA;AAAA;AACrBH,QAAAA,gBAAgB,CAACK,IAAjB,CAAsBF,CAAtB;AACD,OAFD;AAAA;AAAA;AAGD;;AACD,UAAMG,SAAS,6BAAG,KAAKC,YAAL,CAAkB,CAAlB,EAAqBP,gBAAgB,CAACI,MAAjB,GAA0B,CAA/C,CAAH,CAAf;AACA,UAAMP,IAAI,6BAAGG,gBAAgB,CAACM,SAAD,CAAnB,CAAV;AAToC;AAUpC,WAAOT,IAAP;AACD;;AACDE,EAAAA,QAAQ,CAACH,QAAD,EAAmBC,IAAnB,EAAiC;AAAA;AAAA;AACvC,WAAO;AAAEW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBE,UAAAA,IAAI,EAAE,CAACd,IAAD,CAA3B;AAAmCD,UAAAA;AAAnC;AAA9B;AAAV,KAAP;AACD;;AACDW,EAAAA,YAAY,CAACK,GAAD,EAAcC,GAAd,EAA2B;AAAA;AAAA;AACrC,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;AAtBsB;;AAwBzB,MAAMK,MAAiB,8BAAG;AACxBC,EAAAA,MAAM,EAAGC,KAAD,IAAmB;AAAA;AAAA;;AACzB,QAAIA,KAAK,KAAK,GAAd,EAAmB;AAAA;AAAA;AACjB;AACA,aAAO;AACLV,QAAAA,IAAI,EAAEjB,OADD;AAEL4B,QAAAA,EAAE,EAAE;AACFC,UAAAA,SAAS,EAAGnB,CAAD,IAAY;AAAA;AACrB,kBAAMoB,KAAK,8BAAG,EAAH,CAAX;AADqB;;AAErB,iBAAK,IAAInB,CAAC,8BAAG,CAAH,CAAV,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAAA;;AAC3B,kBAAID,CAAC,CAACD,KAAF,CAAQE,CAAR,MAAe,IAAnB,EAAyB;AAAA;AAAA;AACvBmB,gBAAAA,KAAK,CAACjB,IAAN,CAAW;AAAEkB,kBAAAA,IAAI,EAAE,WAAR;AAAqBZ,kBAAAA,IAAI,EAAE,CAACR,CAAD;AAA3B,iBAAX;AACD,eAFD;AAAA;AAAA;AAGD;;AANoB;AAOrB,mBAAOmB,KAAP;AACD;AATC;AAFC,OAAP;AAcD,KAhBD,MAgBO;AAAA;AAAA;;AAAA,UAAIH,KAAK,KAAK,GAAd,EAAmB;AAAA;AAAA;AACxB;AACA,eAAO;AACLK,UAAAA,GAAG,EAAE/B;AADA,SAAP;AAGD,OALM;AAAA;AAAA;AAKN;AACF;AAxBuB,CAAH,CAAvB;AA0BA,eAAewB,MAAf","sourcesContent":["import { IAIConfig } from '../index';\nimport { MCTSBot } from 'boardgame.io/ai';\n\ninterface IPlayState {\n  G: any;\n  ctx: any;\n}\n\nclass TictactoeRandomBot {\n  async play(state: IPlayState, playerID: string) {\n    const cell = this.generateRandomMove(state);\n    return this.makeMove(playerID, cell);\n  }\n  generateRandomMove(state: IPlayState) {\n    const freeCellsIndexes = [];\n    const cells = state.G.cells;\n    for (let i = 0; i < cells.length; i++) {\n      if (cells[i] === null) {\n        freeCellsIndexes.push(i);\n      }\n    }\n    const randIndex = this.randomNumber(0, freeCellsIndexes.length - 1);\n    const cell = freeCellsIndexes[randIndex];\n    return cell;\n  }\n  makeMove(playerID: string, cell: number) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'clickCell', args: [cell], playerID } } };\n  }\n  randomNumber(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\nconst config: IAIConfig = {\n  bgioAI: (level: string) => {\n    if (level === '2') {\n      // Hard\n      return {\n        type: MCTSBot,\n        ai: {\n          enumerate: (G: any) => {\n            const moves = [];\n            for (let i = 0; i < 16; i++) {\n              if (G.cells[i] === null) {\n                moves.push({ move: 'clickCell', args: [i] });\n              }\n            }\n            return moves;\n          },\n        },\n      };\n    } else if (level === '1') {\n      // Easy\n      return {\n        bot: TictactoeRandomBot,\n      };\n    }\n  },\n};\nexport default config;\n"]},"metadata":{},"sourceType":"module"}