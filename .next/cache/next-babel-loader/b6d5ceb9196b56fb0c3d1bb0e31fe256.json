{"ast":null,"code":"function cov_2crnbqefax() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/chess/sound.ts\";\n  var hash = \"a3c1905e3b803025b296824d5e84c9231fa6d322\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/chess/sound.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 25\n        },\n        end: {\n          line: 10,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 2\n        },\n        end: {\n          line: 8,\n          column: 3\n        }\n      },\n      \"2\": {\n        start: {\n          line: 7,\n          column: 4\n        },\n        end: {\n          line: 7,\n          column: 33\n        }\n      },\n      \"3\": {\n        start: {\n          line: 9,\n          column: 2\n        },\n        end: {\n          line: 9,\n          column: 15\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 25\n          },\n          end: {\n            line: 5,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 31\n          },\n          end: {\n            line: 10,\n            column: 1\n          }\n        },\n        line: 5\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 8,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 8,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 8,\n            column: 3\n          }\n        }],\n        line: 6\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a3c1905e3b803025b296824d5e84c9231fa6d322\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2crnbqefax = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2crnbqefax();\nimport MoveSound from './media/move.mp3';\nvar sound;\ncov_2crnbqefax().s[0]++;\nexport var playSound = function playSound() {\n  cov_2crnbqefax().f[0]++;\n  cov_2crnbqefax().s[1]++;\n\n  if (!sound) {\n    cov_2crnbqefax().b[0][0]++;\n    cov_2crnbqefax().s[2]++;\n    sound = new Audio(MoveSound);\n  } else {\n    cov_2crnbqefax().b[0][1]++;\n  }\n\n  cov_2crnbqefax().s[3]++;\n  sound.play();\n};","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/chess/sound.ts"],"names":["MoveSound","sound","playSound","Audio","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AAEA,IAAIC,KAAJ;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;AAAA;;AAC7B,MAAI,CAACD,KAAL,EAAY;AAAA;AAAA;AACVA,IAAAA,KAAK,GAAG,IAAIE,KAAJ,CAAUH,SAAV,CAAR;AACD,GAFD;AAAA;AAAA;;AAD6B;AAI7BC,EAAAA,KAAK,CAACG,IAAN;AACD,CALM","sourcesContent":["import MoveSound from './media/move.mp3';\n\nlet sound: HTMLAudioElement;\n\nexport const playSound = () => {\n  if (!sound) {\n    sound = new Audio(MoveSound);\n  }\n  sound.play();\n};\n"]},"metadata":{},"sourceType":"module"}