{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction cov_1pkbevj0aw() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx\";\n  var hash = \"11347a8e9dea63baa5e137d275fb0848fbc013c6\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 13,\n          column: 16\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"1\": {\n        start: {\n          line: 13,\n          column: 31\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"2\": {\n        start: {\n          line: 13,\n          column: 37\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 4\n        },\n        end: {\n          line: 33,\n          column: 6\n        }\n      },\n      \"4\": {\n        start: {\n          line: 29,\n          column: 12\n        },\n        end: {\n          line: 29,\n          column: 91\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 16\n          },\n          end: {\n            line: 13,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 31\n          },\n          end: {\n            line: 13,\n            column: 61\n          }\n        },\n        line: 13\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 31\n          },\n          end: {\n            line: 13,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 37\n          },\n          end: {\n            line: 13,\n            column: 61\n          }\n        },\n        line: 13\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 15,\n            column: 2\n          },\n          end: {\n            line: 15,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 15,\n            column: 11\n          },\n          end: {\n            line: 34,\n            column: 3\n          }\n        },\n        line: 15\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 28,\n            column: 70\n          },\n          end: {\n            line: 28,\n            column: 71\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 12\n          },\n          end: {\n            line: 29,\n            column: 91\n          }\n        },\n        line: 29\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"11347a8e9dea63baa5e137d275fb0848fbc013c6\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1pkbevj0aw = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1pkbevj0aw();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { CardComponent } from './CardComponent';\nimport Typography from '@material-ui/core/Typography';\nexport var PlayerHand = /*#__PURE__*/function (_React$Component) {\n  _inherits(PlayerHand, _React$Component);\n\n  var _super = _createSuper(PlayerHand);\n\n  function PlayerHand() {\n    var _this;\n\n    _classCallCheck(this, PlayerHand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectCard\", (cov_1pkbevj0aw().s[0]++, function (i) {\n      cov_1pkbevj0aw().f[0]++;\n      cov_1pkbevj0aw().s[1]++;\n      return function () {\n        cov_1pkbevj0aw().f[1]++;\n        cov_1pkbevj0aw().s[2]++;\n        return _this.props.selectCard(i);\n      };\n    }));\n\n    return _this;\n  }\n\n  _createClass(PlayerHand, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      cov_1pkbevj0aw().f[2]++;\n      cov_1pkbevj0aw().s[3]++;\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        style: {\n          clear: 'both',\n          marginTop: '8px'\n        }\n      }, __jsx(Typography, {\n        style: {\n          color: 'white'\n        },\n        variant: \"body2\"\n      }, \"Your hand\")), __jsx(\"div\", {\n        style: {\n          width: '100%'\n        }\n      }, this.props.G.players[this.props.playerID].cards.map(function (card, index) {\n        cov_1pkbevj0aw().f[3]++;\n        cov_1pkbevj0aw().s[4]++;\n        return __jsx(CardComponent, {\n          key: card.number,\n          click: _this2._selectCard(index),\n          card: card\n        });\n      })));\n    }\n  }]);\n\n  return PlayerHand;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx"],"names":["React","CardComponent","Typography","PlayerHand","i","props","selectCard","clear","marginTop","color","width","G","players","playerID","cards","map","card","index","number","_selectCard","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAQA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4FACgB,UAACC,CAAD,EAAe;AAAA;AAAA;AAAA,yBAAM;AAAA;AAAA;AAAA,qBAAKC,KAAL,CAAWC,UAAX,CAAsBF,CAAtB;AAAwB,OAA9B;AAA8B,KAD7D;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA;;AAAA;AAAA;AACP,aACE,mBACE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,SAAS,EAAE;AAA5B;AAAZ,SACE,MAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAnB;AAAuC,QAAA,OAAO,EAAC;AAA/C,qBADF,CADF,EAME;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF;AADT,SAKG,KAAKL,KAAL,CAAWM,CAAX,CAAaC,OAAb,CAAqB,KAAKP,KAAL,CAAWQ,QAAhC,EAAiDC,KAAjD,CAAuDC,GAAvD,CAA2D,UAACC,IAAD,EAAOC,KAAP,EAC1D;AAAA;AAAA;AAAA,qBAAC,aAAD;AAAe,UAAA,GAAG,EAAED,IAAI,CAACE,MAAzB;AAAiC,UAAA,KAAK,EAAE,MAAI,CAACC,WAAL,CAAiBF,KAAjB,CAAxC;AAAiE,UAAA,IAAI,EAAED;AAAvE;AAA+E,OADhF,CALH,CANF,CADF;AAkBD;AAtBH;;AAAA;AAAA,GAAgChB,KAAK,CAACoB,SAAtC","sourcesContent":["import * as React from 'react';\nimport { IG } from './game';\nimport { CardComponent } from './CardComponent';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IPlayerHandProps {\n  G: IG;\n  playerID: string;\n  selectCard: (index: number) => void;\n}\n\nexport class PlayerHand extends React.Component<IPlayerHandProps, {}> {\n  _selectCard = (i: number) => () => this.props.selectCard(i);\n\n  render() {\n    return (\n      <div>\n        <div style={{ clear: 'both', marginTop: '8px' }}>\n          <Typography style={{ color: 'white' }} variant=\"body2\">\n            Your hand\n          </Typography>\n        </div>\n        <div\n          style={{\n            width: '100%',\n          }}\n        >\n          {this.props.G.players[this.props.playerID as any].cards.map((card, index: number) => (\n            <CardComponent key={card.number} click={this._selectCard(index)} card={card} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}