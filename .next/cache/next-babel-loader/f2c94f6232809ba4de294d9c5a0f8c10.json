{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction cov_29j772bb6z() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/game.ts\";\n  var hash = \"c9d7b2ebeee034909a4d7d57d058aec161f16bd4\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 12,\n          column: 20\n        },\n        end: {\n          line: 23,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 25,\n          column: 2\n        },\n        end: {\n          line: 47,\n          column: 3\n        }\n      },\n      \"2\": {\n        start: {\n          line: 27,\n          column: 17\n        },\n        end: {\n          line: 27,\n          column: 21\n        }\n      },\n      \"3\": {\n        start: {\n          line: 28,\n          column: 4\n        },\n        end: {\n          line: 33,\n          column: 5\n        }\n      },\n      \"4\": {\n        start: {\n          line: 29,\n          column: 6\n        },\n        end: {\n          line: 32,\n          column: 7\n        }\n      },\n      \"5\": {\n        start: {\n          line: 30,\n          column: 8\n        },\n        end: {\n          line: 30,\n          column: 26\n        }\n      },\n      \"6\": {\n        start: {\n          line: 31,\n          column: 8\n        },\n        end: {\n          line: 31,\n          column: 14\n        }\n      },\n      \"7\": {\n        start: {\n          line: 35,\n          column: 17\n        },\n        end: {\n          line: 35,\n          column: 23\n        }\n      },\n      \"8\": {\n        start: {\n          line: 36,\n          column: 4\n        },\n        end: {\n          line: 43,\n          column: 5\n        }\n      },\n      \"9\": {\n        start: {\n          line: 37,\n          column: 6\n        },\n        end: {\n          line: 42,\n          column: 7\n        }\n      },\n      \"10\": {\n        start: {\n          line: 38,\n          column: 8\n        },\n        end: {\n          line: 41,\n          column: 9\n        }\n      },\n      \"11\": {\n        start: {\n          line: 39,\n          column: 10\n        },\n        end: {\n          line: 39,\n          column: 24\n        }\n      },\n      \"12\": {\n        start: {\n          line: 40,\n          column: 10\n        },\n        end: {\n          line: 40,\n          column: 16\n        }\n      },\n      \"13\": {\n        start: {\n          line: 44,\n          column: 4\n        },\n        end: {\n          line: 46,\n          column: 5\n        }\n      },\n      \"14\": {\n        start: {\n          line: 45,\n          column: 6\n        },\n        end: {\n          line: 45,\n          column: 20\n        }\n      },\n      \"15\": {\n        start: {\n          line: 49,\n          column: 2\n        },\n        end: {\n          line: 49,\n          column: 15\n        }\n      },\n      \"16\": {\n        start: {\n          line: 52,\n          column: 44\n        },\n        end: {\n          line: 86,\n          column: 1\n        }\n      },\n      \"17\": {\n        start: {\n          line: 55,\n          column: 16\n        },\n        end: {\n          line: 57,\n          column: 3\n        }\n      },\n      \"18\": {\n        start: {\n          line: 61,\n          column: 20\n        },\n        end: {\n          line: 61,\n          column: 32\n        }\n      },\n      \"19\": {\n        start: {\n          line: 63,\n          column: 6\n        },\n        end: {\n          line: 70,\n          column: 7\n        }\n      },\n      \"20\": {\n        start: {\n          line: 64,\n          column: 8\n        },\n        end: {\n          line: 68,\n          column: 9\n        }\n      },\n      \"21\": {\n        start: {\n          line: 64,\n          column: 57\n        },\n        end: {\n          line: 64,\n          column: 66\n        }\n      },\n      \"22\": {\n        start: {\n          line: 65,\n          column: 10\n        },\n        end: {\n          line: 65,\n          column: 26\n        }\n      },\n      \"23\": {\n        start: {\n          line: 67,\n          column: 10\n        },\n        end: {\n          line: 67,\n          column: 40\n        }\n      },\n      \"24\": {\n        start: {\n          line: 69,\n          column: 8\n        },\n        end: {\n          line: 69,\n          column: 31\n        }\n      },\n      \"25\": {\n        start: {\n          line: 78,\n          column: 19\n        },\n        end: {\n          line: 78,\n          column: 37\n        }\n      },\n      \"26\": {\n        start: {\n          line: 79,\n          column: 4\n        },\n        end: {\n          line: 81,\n          column: 5\n        }\n      },\n      \"27\": {\n        start: {\n          line: 80,\n          column: 6\n        },\n        end: {\n          line: 80,\n          column: 24\n        }\n      },\n      \"28\": {\n        start: {\n          line: 82,\n          column: 4\n        },\n        end: {\n          line: 84,\n          column: 5\n        }\n      },\n      \"29\": {\n        start: {\n          line: 82,\n          column: 35\n        },\n        end: {\n          line: 82,\n          column: 45\n        }\n      },\n      \"30\": {\n        start: {\n          line: 83,\n          column: 6\n        },\n        end: {\n          line: 83,\n          column: 28\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"isVictory\",\n        decl: {\n          start: {\n            line: 11,\n            column: 16\n          },\n          end: {\n            line: 11,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 11,\n            column: 43\n          },\n          end: {\n            line: 50,\n            column: 1\n          }\n        },\n        line: 11\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 55,\n            column: 9\n          },\n          end: {\n            line: 55,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 55,\n            column: 16\n          },\n          end: {\n            line: 57,\n            column: 3\n          }\n        },\n        line: 55\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 60,\n            column: 4\n          },\n          end: {\n            line: 60,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 44\n          },\n          end: {\n            line: 71,\n            column: 5\n          }\n        },\n        line: 60\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 50\n          },\n          end: {\n            line: 64,\n            column: 51\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 57\n          },\n          end: {\n            line: 64,\n            column: 66\n          }\n        },\n        line: 64\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 77,\n            column: 9\n          },\n          end: {\n            line: 77,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 77,\n            column: 16\n          },\n          end: {\n            line: 85,\n            column: 3\n          }\n        },\n        line: 77\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 82,\n            column: 23\n          },\n          end: {\n            line: 82,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 82,\n            column: 35\n          },\n          end: {\n            line: 82,\n            column: 45\n          }\n        },\n        line: 82\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 32,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 32,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 32,\n            column: 7\n          }\n        }],\n        line: 29\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 29,\n            column: 10\n          },\n          end: {\n            line: 29,\n            column: 47\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 29,\n            column: 10\n          },\n          end: {\n            line: 29,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 29,\n            column: 30\n          },\n          end: {\n            line: 29,\n            column: 47\n          }\n        }],\n        line: 29\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 37,\n            column: 6\n          },\n          end: {\n            line: 42,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 37,\n            column: 6\n          },\n          end: {\n            line: 42,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 37,\n            column: 6\n          },\n          end: {\n            line: 42,\n            column: 7\n          }\n        }],\n        line: 37\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 41,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 41,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 38,\n            column: 8\n          },\n          end: {\n            line: 41,\n            column: 9\n          }\n        }],\n        line: 38\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 44,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 44,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 44,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        }],\n        line: 44\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 63,\n            column: 6\n          },\n          end: {\n            line: 70,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 63,\n            column: 6\n          },\n          end: {\n            line: 70,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 6\n          },\n          end: {\n            line: 70,\n            column: 7\n          }\n        }],\n        line: 63\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 64,\n            column: 8\n          },\n          end: {\n            line: 68,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 8\n          },\n          end: {\n            line: 68,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 8\n          },\n          end: {\n            line: 68,\n            column: 9\n          }\n        }],\n        line: 64\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 64,\n            column: 12\n          },\n          end: {\n            line: 64,\n            column: 78\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 12\n          },\n          end: {\n            line: 64,\n            column: 33\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 37\n          },\n          end: {\n            line: 64,\n            column: 78\n          }\n        }],\n        line: 64\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 81,\n            column: 5\n          }\n        }],\n        line: 79\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 82,\n            column: 4\n          },\n          end: {\n            line: 84,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 82,\n            column: 4\n          },\n          end: {\n            line: 84,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 82,\n            column: 4\n          },\n          end: {\n            line: 84,\n            column: 5\n          }\n        }],\n        line: 82\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"c9d7b2ebeee034909a4d7d57d058aec161f16bd4\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_29j772bb6z = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_29j772bb6z();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nexport function isVictory(cells) {\n  cov_29j772bb6z().f[0]++;\n  var positions = (cov_29j772bb6z().s[0]++, [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15], [0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15], [0, 5, 10, 15], [3, 6, 9, 12]]);\n  cov_29j772bb6z().s[1]++;\n\n  for (var _i = 0, _positions = positions; _i < _positions.length; _i++) {\n    var pos = _positions[_i];\n    // find the first non-wildcard character in winning positions array\n    var symbol = (cov_29j772bb6z().s[2]++, null);\n    cov_29j772bb6z().s[3]++;\n\n    var _iterator = _createForOfIteratorHelper(pos),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var i = _step.value;\n        cov_29j772bb6z().s[4]++;\n\n        if ((cov_29j772bb6z().b[1][0]++, cells[i] !== '2') && (cov_29j772bb6z().b[1][1]++, cells[i] !== null)) {\n          cov_29j772bb6z().b[0][0]++;\n          cov_29j772bb6z().s[5]++;\n          symbol = cells[i];\n          cov_29j772bb6z().s[6]++;\n          break;\n        } else {\n          cov_29j772bb6z().b[0][1]++;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var winner = (cov_29j772bb6z().s[7]++, symbol);\n    cov_29j772bb6z().s[8]++;\n\n    var _iterator2 = _createForOfIteratorHelper(pos),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _i2 = _step2.value;\n        cov_29j772bb6z().s[9]++;\n\n        if (cells[_i2] !== '2') {\n          cov_29j772bb6z().b[2][0]++;\n          cov_29j772bb6z().s[10]++;\n\n          if (cells[_i2] !== symbol) {\n            cov_29j772bb6z().b[3][0]++;\n            cov_29j772bb6z().s[11]++;\n            winner = null;\n            cov_29j772bb6z().s[12]++;\n            break;\n          } else {\n            cov_29j772bb6z().b[3][1]++;\n          }\n        } else {\n          cov_29j772bb6z().b[2][1]++;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    cov_29j772bb6z().s[13]++;\n\n    if (winner != null) {\n      cov_29j772bb6z().b[4][0]++;\n      cov_29j772bb6z().s[14]++;\n      return winner;\n    } else {\n      cov_29j772bb6z().b[4][1]++;\n    }\n  }\n\n  cov_29j772bb6z().s[15]++;\n  return false;\n}\nexport var TictactoePlusGame = (cov_29j772bb6z().s[16]++, {\n  name: 'tictactoeplus',\n  setup: function setup() {\n    cov_29j772bb6z().f[1]++;\n    cov_29j772bb6z().s[17]++;\n    return {\n      cells: Array(16).fill(null)\n    };\n  },\n  moves: {\n    clickCell: function clickCell(G, ctx, id) {\n      cov_29j772bb6z().f[2]++;\n      var cells = (cov_29j772bb6z().s[18]++, _toConsumableArray(G.cells));\n      cov_29j772bb6z().s[19]++;\n\n      if (cells[id] === null) {\n        cov_29j772bb6z().b[5][0]++;\n        cov_29j772bb6z().s[20]++;\n\n        if ((cov_29j772bb6z().b[7][0]++, ctx.random.D6() === 6) && (cov_29j772bb6z().b[7][1]++, cells.filter(function (v) {\n          cov_29j772bb6z().f[3]++;\n          cov_29j772bb6z().s[21]++;\n          return v === '2';\n        }).length < 3)) {\n          cov_29j772bb6z().b[6][0]++;\n          cov_29j772bb6z().s[22]++;\n          cells[id] = '2';\n        } else {\n          cov_29j772bb6z().b[6][1]++;\n          cov_29j772bb6z().s[23]++;\n          cells[id] = ctx.currentPlayer;\n        }\n\n        cov_29j772bb6z().s[24]++;\n        return _objectSpread({}, G, {\n          cells: cells\n        });\n      } else {\n        cov_29j772bb6z().b[5][1]++;\n      }\n    }\n  },\n  turn: {\n    moveLimit: 1\n  },\n  endIf: function endIf(G) {\n    cov_29j772bb6z().f[4]++;\n    var winner = (cov_29j772bb6z().s[25]++, isVictory(G.cells));\n    cov_29j772bb6z().s[26]++;\n\n    if (winner) {\n      cov_29j772bb6z().b[8][0]++;\n      cov_29j772bb6z().s[27]++;\n      return {\n        winner: winner\n      };\n    } else {\n      cov_29j772bb6z().b[8][1]++;\n    }\n\n    cov_29j772bb6z().s[28]++;\n\n    if (G.cells.filter(function (c) {\n      cov_29j772bb6z().f[5]++;\n      cov_29j772bb6z().s[29]++;\n      return c === null;\n    }).length === 0) {\n      cov_29j772bb6z().b[9][0]++;\n      cov_29j772bb6z().s[30]++;\n      return {\n        draw: true\n      };\n    } else {\n      cov_29j772bb6z().b[9][1]++;\n    }\n  }\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/tictactoeplus/game.ts"],"names":["isVictory","cells","positions","pos","symbol","i","winner","TictactoePlusGame","name","setup","Array","fill","moves","clickCell","G","ctx","id","random","D6","filter","v","length","currentPlayer","turn","moveLimit","endIf","c","draw"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AAQA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAAoC;AAAA;AACzC,MAAMC,SAAS,6BAAG,CAChB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADgB,EAEhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFgB,EAGhB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAHgB,EAIhB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAJgB,EAKhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CALgB,EAMhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CANgB,EAOhB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAPgB,EAQhB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CARgB,EAShB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CATgB,EAUhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAVgB,CAAH,CAAf;AADyC;;AAczC,gCAAkBA,SAAlB,gCAA6B;AAAxB,QAAMC,GAAG,iBAAT;AACH;AACA,QAAIC,MAAM,6BAAG,IAAH,CAAV;AAF2B;;AAAA,+CAGXD,GAHW;AAAA;;AAAA;AAG3B,0DAAqB;AAAA,YAAVE,CAAU;AAAA;;AACnB,YAAI,6BAAAJ,KAAK,CAACI,CAAD,CAAL,KAAa,GAAb,kCAAoBJ,KAAK,CAACI,CAAD,CAAL,KAAa,IAAjC,CAAJ,EAA2C;AAAA;AAAA;AACzCD,UAAAA,MAAM,GAAGH,KAAK,CAACI,CAAD,CAAd;AADyC;AAEzC;AACD,SAHD;AAAA;AAAA;AAID;AAR0B;AAAA;AAAA;AAAA;AAAA;;AAU3B,QAAIC,MAAM,6BAAGF,MAAH,CAAV;AAV2B;;AAAA,gDAWXD,GAXW;AAAA;;AAAA;AAW3B,6DAAqB;AAAA,YAAVE,GAAU;AAAA;;AACnB,YAAIJ,KAAK,CAACI,GAAD,CAAL,KAAa,GAAjB,EAAsB;AAAA;AAAA;;AACpB,cAAIJ,KAAK,CAACI,GAAD,CAAL,KAAaD,MAAjB,EAAyB;AAAA;AAAA;AACvBE,YAAAA,MAAM,GAAG,IAAT;AADuB;AAEvB;AACD,WAHD;AAAA;AAAA;AAID,SALD;AAAA;AAAA;AAMD;AAlB0B;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAmB3B,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAAA;AAAA;AAClB,aAAOA,MAAP;AACD,KAFD;AAAA;AAAA;AAGD;;AApCwC;AAsCzC,SAAO,KAAP;AACD;AAED,OAAO,IAAMC,iBAA4B,8BAAG;AAC1CC,EAAAA,IAAI,EAAE,eADoC;AAG1CC,EAAAA,KAAK,EAAE,iBAAO;AAAA;AAAA;AAAA;AACZR,MAAAA,KAAK,EAAES,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf;AADK;AAEb,GALyC;AAO1CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SADK,qBACKC,CADL,EACaC,GADb,EACuBC,EADvB,EACmC;AAAA;AACtC,UAAMf,KAAK,iDAAOa,CAAC,CAACb,KAAT,EAAX;AADsC;;AAGtC,UAAIA,KAAK,CAACe,EAAD,CAAL,KAAc,IAAlB,EAAwB;AAAA;AAAA;;AACtB,YAAI,6BAAAD,GAAG,CAACE,MAAJ,CAAWC,EAAX,OAAoB,CAApB,kCAAyBjB,KAAK,CAACkB,MAAN,CAAa,UAACC,CAAD,EAAO;AAAA;AAAA;AAAA,iBAAAA,CAAC,KAAK,GAAN;AAAS,SAA7B,EAA+BC,MAA/B,GAAwC,CAAjE,CAAJ,EAAwE;AAAA;AAAA;AACtEpB,UAAAA,KAAK,CAACe,EAAD,CAAL,GAAY,GAAZ;AACD,SAFD,MAEO;AAAA;AAAA;AACLf,UAAAA,KAAK,CAACe,EAAD,CAAL,GAAYD,GAAG,CAACO,aAAhB;AACD;;AALqB;AAMtB,iCAAYR,CAAZ;AAAeb,UAAAA,KAAK,EAALA;AAAf;AACD,OAPD;AAAA;AAAA;AAQD;AAZI,GAPmC;AAsB1CsB,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GAtBoC;AAyB1CC,EAAAA,KAAK,EAAE,eAACX,CAAD,EAAO;AAAA;AACZ,QAAMR,MAAM,8BAAGN,SAAS,CAACc,CAAC,CAACb,KAAH,CAAZ,CAAZ;AADY;;AAEZ,QAAIK,MAAJ,EAAY;AAAA;AAAA;AACV,aAAO;AAAEA,QAAAA,MAAM,EAANA;AAAF,OAAP;AACD,KAFD;AAAA;AAAA;;AAFY;;AAKZ,QAAIQ,CAAC,CAACb,KAAF,CAAQkB,MAAR,CAAe,UAACO,CAAD,EAAY;AAAA;AAAA;AAAA,aAAAA,CAAC,KAAK,IAAN;AAAU,KAArC,EAAuCL,MAAvC,KAAkD,CAAtD,EAAyD;AAAA;AAAA;AACvD,aAAO;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD,KAFD;AAAA;AAAA;AAGD;AAjCyC,CAAH,CAAlC","sourcesContent":["import { IGameArgs } from 'boardgame.io/core';\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nexport function isVictory(cells: string[]) {\n  const positions = [\n    [0, 1, 2, 3],\n    [4, 5, 6, 7],\n    [8, 9, 10, 11],\n    [12, 13, 14, 15],\n    [0, 4, 8, 12],\n    [1, 5, 9, 13],\n    [2, 6, 10, 14],\n    [3, 7, 11, 15],\n    [0, 5, 10, 15],\n    [3, 6, 9, 12],\n  ];\n\n  for (const pos of positions) {\n    // find the first non-wildcard character in winning positions array\n    let symbol = null;\n    for (const i of pos) {\n      if (cells[i] !== '2' && cells[i] !== null) {\n        symbol = cells[i];\n        break;\n      }\n    }\n\n    let winner = symbol;\n    for (const i of pos) {\n      if (cells[i] !== '2') {\n        if (cells[i] !== symbol) {\n          winner = null;\n          break;\n        }\n      }\n    }\n    if (winner != null) {\n      return winner;\n    }\n  }\n\n  return false;\n}\n\nexport const TictactoePlusGame: IGameArgs = {\n  name: 'tictactoeplus',\n\n  setup: () => ({\n    cells: Array(16).fill(null),\n  }),\n\n  moves: {\n    clickCell(G: any, ctx: any, id: number) {\n      const cells = [...G.cells];\n\n      if (cells[id] === null) {\n        if (ctx.random.D6() === 6 && cells.filter((v) => v === '2').length < 3) {\n          cells[id] = '2';\n        } else {\n          cells[id] = ctx.currentPlayer;\n        }\n        return { ...G, cells };\n      }\n    },\n  },\n\n  turn: {\n    moveLimit: 1,\n  },\n  endIf: (G) => {\n    const winner = isVictory(G.cells);\n    if (winner) {\n      return { winner };\n    }\n    if (G.cells.filter((c: any) => c === null).length === 0) {\n      return { draw: true };\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}