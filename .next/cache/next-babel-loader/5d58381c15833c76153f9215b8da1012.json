{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_s9mdjdutx() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx\";\n  var hash = \"065c0c3ca450449a1b4b2075817619bcc2f35a6c\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 18,\n          column: 4\n        },\n        end: {\n          line: 36,\n          column: 5\n        }\n      },\n      \"1\": {\n        start: {\n          line: 19,\n          column: 6\n        },\n        end: {\n          line: 25,\n          column: 8\n        }\n      },\n      \"2\": {\n        start: {\n          line: 27,\n          column: 6\n        },\n        end: {\n          line: 35,\n          column: 8\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 17,\n            column: 2\n          },\n          end: {\n            line: 17,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 17,\n            column: 11\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        },\n        line: 17\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        }],\n        line: 18\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"065c0c3ca450449a1b4b2075817619bcc2f35a6c\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_s9mdjdutx = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_s9mdjdutx();\nimport React from 'react';\nimport { GameOver } from './GameOver';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nexport class GameLayout extends (React.Component) {\n  render() {\n    cov_s9mdjdutx().f[0]++;\n    cov_s9mdjdutx().s[0]++;\n\n    if (this.props.gameOver) {\n      cov_s9mdjdutx().b[0][0]++;\n      cov_s9mdjdutx().s[1]++;\n      return __jsx(GameOver, {\n        result: this.props.gameOver,\n        gameArgs: this.props.gameArgs,\n        extraCardContent: this.props.extraCardContent\n      });\n    } else {\n      cov_s9mdjdutx().b[0][1]++;\n      cov_s9mdjdutx().s[2]++;\n      return __jsx(GameDarkSublayout, {\n        optionsMenuItems: this.props.optionsMenuItems,\n        allowWiderScreen: this.props.allowWiderScreen,\n        gameArgs: this.props.gameArgs\n      }, this.props.children);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx"],"names":["React","GameOver","GameDarkSublayout","GameLayout","Component","render","props","gameOver","gameArgs","extraCardContent","optionsMenuItems","allowWiderScreen","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAYA,OAAO,MAAMC,UAAN,UAAyBH,KAAK,CAACI,SAA/B,EAA+D;AACpEC,EAAAA,MAAM,GAAG;AAAA;AAAA;;AACP,QAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AAAA;AAAA;AACvB,aACE,MAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,QADrB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,QAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWG;AAH/B,QADF;AAOD,KARD,MAQO;AAAA;AAAA;AACL,aACE,MAAC,iBAAD;AACE,QAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWI,gBAD/B;AAEE,QAAA,gBAAgB,EAAE,KAAKJ,KAAL,CAAWK,gBAF/B;AAGE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE;AAHvB,SAKG,KAAKF,KAAL,CAAWM,QALd,CADF;AASD;AACF;;AArBmE","sourcesContent":["import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}