{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction cov_j6hb4vjqv() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/ai.ts\";\n  var hash = \"7290addc126aa92d130533cfc11256b3d86b0931\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/ai.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 19,\n          column: 4\n        },\n        end: {\n          line: 28,\n          column: 5\n        }\n      },\n      \"1\": {\n        start: {\n          line: 20,\n          column: 28\n        },\n        end: {\n          line: 20,\n          column: 82\n        }\n      },\n      \"2\": {\n        start: {\n          line: 21,\n          column: 6\n        },\n        end: {\n          line: 21,\n          column: 60\n        }\n      },\n      \"3\": {\n        start: {\n          line: 24,\n          column: 22\n        },\n        end: {\n          line: 24,\n          column: 62\n        }\n      },\n      \"4\": {\n        start: {\n          line: 25,\n          column: 6\n        },\n        end: {\n          line: 25,\n          column: 27\n        }\n      },\n      \"5\": {\n        start: {\n          line: 26,\n          column: 19\n        },\n        end: {\n          line: 26,\n          column: 53\n        }\n      },\n      \"6\": {\n        start: {\n          line: 27,\n          column: 6\n        },\n        end: {\n          line: 27,\n          column: 48\n        }\n      },\n      \"7\": {\n        start: {\n          line: 32,\n          column: 4\n        },\n        end: {\n          line: 32,\n          column: 101\n        }\n      },\n      \"8\": {\n        start: {\n          line: 36,\n          column: 4\n        },\n        end: {\n          line: 36,\n          column: 107\n        }\n      },\n      \"9\": {\n        start: {\n          line: 40,\n          column: 19\n        },\n        end: {\n          line: 43,\n          column: 5\n        }\n      },\n      \"10\": {\n        start: {\n          line: 42,\n          column: 8\n        },\n        end: {\n          line: 42,\n          column: 103\n        }\n      },\n      \"11\": {\n        start: {\n          line: 44,\n          column: 4\n        },\n        end: {\n          line: 55,\n          column: 5\n        }\n      },\n      \"12\": {\n        start: {\n          line: 46,\n          column: 6\n        },\n        end: {\n          line: 54,\n          column: 7\n        }\n      },\n      \"13\": {\n        start: {\n          line: 47,\n          column: 31\n        },\n        end: {\n          line: 47,\n          column: 79\n        }\n      },\n      \"14\": {\n        start: {\n          line: 48,\n          column: 8\n        },\n        end: {\n          line: 51,\n          column: 9\n        }\n      },\n      \"15\": {\n        start: {\n          line: 50,\n          column: 10\n        },\n        end: {\n          line: 50,\n          column: 66\n        }\n      },\n      \"16\": {\n        start: {\n          line: 53,\n          column: 8\n        },\n        end: {\n          line: 53,\n          column: 52\n        }\n      },\n      \"17\": {\n        start: {\n          line: 57,\n          column: 4\n        },\n        end: {\n          line: 57,\n          column: 42\n        }\n      },\n      \"18\": {\n        start: {\n          line: 61,\n          column: 17\n        },\n        end: {\n          line: 61,\n          column: 55\n        }\n      },\n      \"19\": {\n        start: {\n          line: 61,\n          column: 42\n        },\n        end: {\n          line: 61,\n          column: 54\n        }\n      },\n      \"20\": {\n        start: {\n          line: 62,\n          column: 17\n        },\n        end: {\n          line: 62,\n          column: 55\n        }\n      },\n      \"21\": {\n        start: {\n          line: 62,\n          column: 42\n        },\n        end: {\n          line: 62,\n          column: 54\n        }\n      },\n      \"22\": {\n        start: {\n          line: 64,\n          column: 19\n        },\n        end: {\n          line: 64,\n          column: 65\n        }\n      },\n      \"23\": {\n        start: {\n          line: 65,\n          column: 19\n        },\n        end: {\n          line: 65,\n          column: 65\n        }\n      },\n      \"24\": {\n        start: {\n          line: 66,\n          column: 22\n        },\n        end: {\n          line: 66,\n          column: 77\n        }\n      },\n      \"25\": {\n        start: {\n          line: 67,\n          column: 4\n        },\n        end: {\n          line: 70,\n          column: 7\n        }\n      },\n      \"26\": {\n        start: {\n          line: 74,\n          column: 4\n        },\n        end: {\n          line: 74,\n          column: 28\n        }\n      },\n      \"27\": {\n        start: {\n          line: 78,\n          column: 4\n        },\n        end: {\n          line: 78,\n          column: 96\n        }\n      },\n      \"28\": {\n        start: {\n          line: 82,\n          column: 4\n        },\n        end: {\n          line: 82,\n          column: 19\n        }\n      },\n      \"29\": {\n        start: {\n          line: 83,\n          column: 4\n        },\n        end: {\n          line: 87,\n          column: 5\n        }\n      },\n      \"30\": {\n        start: {\n          line: 84,\n          column: 6\n        },\n        end: {\n          line: 86,\n          column: 7\n        }\n      },\n      \"31\": {\n        start: {\n          line: 85,\n          column: 8\n        },\n        end: {\n          line: 85,\n          column: 20\n        }\n      },\n      \"32\": {\n        start: {\n          line: 88,\n          column: 4\n        },\n        end: {\n          line: 88,\n          column: 16\n        }\n      },\n      \"33\": {\n        start: {\n          line: 92,\n          column: 4\n        },\n        end: {\n          line: 97,\n          column: 7\n        }\n      },\n      \"34\": {\n        start: {\n          line: 101,\n          column: 4\n        },\n        end: {\n          line: 101,\n          column: 74\n        }\n      },\n      \"35\": {\n        start: {\n          line: 101,\n          column: 52\n        },\n        end: {\n          line: 101,\n          column: 72\n        }\n      },\n      \"36\": {\n        start: {\n          line: 105,\n          column: 4\n        },\n        end: {\n          line: 105,\n          column: 73\n        }\n      },\n      \"37\": {\n        start: {\n          line: 105,\n          column: 49\n        },\n        end: {\n          line: 105,\n          column: 63\n        }\n      },\n      \"38\": {\n        start: {\n          line: 109,\n          column: 38\n        },\n        end: {\n          line: 109,\n          column: 40\n        }\n      },\n      \"39\": {\n        start: {\n          line: 110,\n          column: 4\n        },\n        end: {\n          line: 114,\n          column: 5\n        }\n      },\n      \"40\": {\n        start: {\n          line: 110,\n          column: 17\n        },\n        end: {\n          line: 110,\n          column: 18\n        }\n      },\n      \"41\": {\n        start: {\n          line: 111,\n          column: 6\n        },\n        end: {\n          line: 113,\n          column: 7\n        }\n      },\n      \"42\": {\n        start: {\n          line: 111,\n          column: 19\n        },\n        end: {\n          line: 111,\n          column: 20\n        }\n      },\n      \"43\": {\n        start: {\n          line: 112,\n          column: 8\n        },\n        end: {\n          line: 112,\n          column: 40\n        }\n      },\n      \"44\": {\n        start: {\n          line: 115,\n          column: 4\n        },\n        end: {\n          line: 115,\n          column: 54\n        }\n      },\n      \"45\": {\n        start: {\n          line: 119,\n          column: 18\n        },\n        end: {\n          line: 122,\n          column: 5\n        }\n      },\n      \"46\": {\n        start: {\n          line: 121,\n          column: 8\n        },\n        end: {\n          line: 121,\n          column: 112\n        }\n      },\n      \"47\": {\n        start: {\n          line: 123,\n          column: 4\n        },\n        end: {\n          line: 123,\n          column: 30\n        }\n      },\n      \"48\": {\n        start: {\n          line: 127,\n          column: 33\n        },\n        end: {\n          line: 133,\n          column: 1\n        }\n      },\n      \"49\": {\n        start: {\n          line: 129,\n          column: 4\n        },\n        end: {\n          line: 131,\n          column: 6\n        }\n      },\n      \"50\": {\n        start: {\n          line: 136,\n          column: 2\n        },\n        end: {\n          line: 138,\n          column: 5\n        }\n      },\n      \"51\": {\n        start: {\n          line: 137,\n          column: 4\n        },\n        end: {\n          line: 137,\n          column: 38\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 18,\n            column: 2\n          },\n          end: {\n            line: 18,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 18,\n            column: 50\n          },\n          end: {\n            line: 29,\n            column: 3\n          }\n        },\n        line: 18\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 31,\n            column: 2\n          },\n          end: {\n            line: 31,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 31,\n            column: 53\n          },\n          end: {\n            line: 33,\n            column: 3\n          }\n        },\n        line: 31\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 35,\n            column: 2\n          },\n          end: {\n            line: 35,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 35,\n            column: 47\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        },\n        line: 35\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 39,\n            column: 2\n          },\n          end: {\n            line: 39,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 39,\n            column: 52\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        line: 39\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 41,\n            column: 6\n          },\n          end: {\n            line: 41,\n            column: 7\n          }\n        },\n        loc: {\n          start: {\n            line: 42,\n            column: 8\n          },\n          end: {\n            line: 42,\n            column: 103\n          }\n        },\n        line: 42\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 60,\n            column: 2\n          },\n          end: {\n            line: 60,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 70\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        },\n        line: 60\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 61,\n            column: 31\n          },\n          end: {\n            line: 61,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 61,\n            column: 42\n          },\n          end: {\n            line: 61,\n            column: 54\n          }\n        },\n        line: 61\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 62,\n            column: 31\n          },\n          end: {\n            line: 62,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 62,\n            column: 42\n          },\n          end: {\n            line: 62,\n            column: 54\n          }\n        },\n        line: 62\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 73,\n            column: 2\n          },\n          end: {\n            line: 73,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 73,\n            column: 24\n          },\n          end: {\n            line: 75,\n            column: 3\n          }\n        },\n        line: 73\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 77,\n            column: 2\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 77,\n            column: 46\n          },\n          end: {\n            line: 79,\n            column: 3\n          }\n        },\n        line: 77\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 81,\n            column: 2\n          },\n          end: {\n            line: 81,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 81,\n            column: 50\n          },\n          end: {\n            line: 89,\n            column: 3\n          }\n        },\n        line: 81\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 91,\n            column: 2\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 91,\n            column: 61\n          },\n          end: {\n            line: 98,\n            column: 3\n          }\n        },\n        line: 91\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 100,\n            column: 2\n          },\n          end: {\n            line: 100,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 100,\n            column: 55\n          },\n          end: {\n            line: 102,\n            column: 3\n          }\n        },\n        line: 100\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 101,\n            column: 33\n          },\n          end: {\n            line: 101,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 101,\n            column: 52\n          },\n          end: {\n            line: 101,\n            column: 72\n          }\n        },\n        line: 101\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 104,\n            column: 2\n          },\n          end: {\n            line: 104,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 104,\n            column: 44\n          },\n          end: {\n            line: 106,\n            column: 3\n          }\n        },\n        line: 104\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 105,\n            column: 32\n          },\n          end: {\n            line: 105,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 105,\n            column: 49\n          },\n          end: {\n            line: 105,\n            column: 63\n          }\n        },\n        line: 105\n      },\n      \"16\": {\n        name: \"(anonymous_16)\",\n        decl: {\n          start: {\n            line: 108,\n            column: 2\n          },\n          end: {\n            line: 108,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 108,\n            column: 40\n          },\n          end: {\n            line: 116,\n            column: 3\n          }\n        },\n        line: 108\n      },\n      \"17\": {\n        name: \"(anonymous_17)\",\n        decl: {\n          start: {\n            line: 118,\n            column: 2\n          },\n          end: {\n            line: 118,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 118,\n            column: 47\n          },\n          end: {\n            line: 124,\n            column: 3\n          }\n        },\n        line: 118\n      },\n      \"18\": {\n        name: \"(anonymous_18)\",\n        decl: {\n          start: {\n            line: 120,\n            column: 6\n          },\n          end: {\n            line: 120,\n            column: 7\n          }\n        },\n        loc: {\n          start: {\n            line: 121,\n            column: 8\n          },\n          end: {\n            line: 121,\n            column: 112\n          }\n        },\n        line: 121\n      },\n      \"19\": {\n        name: \"(anonymous_19)\",\n        decl: {\n          start: {\n            line: 128,\n            column: 10\n          },\n          end: {\n            line: 128,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 128,\n            column: 16\n          },\n          end: {\n            line: 132,\n            column: 3\n          }\n        },\n        line: 128\n      },\n      \"20\": {\n        name: \"sleep\",\n        decl: {\n          start: {\n            line: 135,\n            column: 9\n          },\n          end: {\n            line: 135,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 135,\n            column: 37\n          },\n          end: {\n            line: 139,\n            column: 1\n          }\n        },\n        line: 135\n      },\n      \"21\": {\n        name: \"(anonymous_21)\",\n        decl: {\n          start: {\n            line: 136,\n            column: 21\n          },\n          end: {\n            line: 136,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 136,\n            column: 34\n          },\n          end: {\n            line: 138,\n            column: 3\n          }\n        },\n        line: 136\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 19,\n            column: 4\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 19,\n            column: 4\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 19,\n            column: 4\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        }],\n        line: 19\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 24,\n            column: 22\n          },\n          end: {\n            line: 24,\n            column: 62\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 24,\n            column: 52\n          },\n          end: {\n            line: 24,\n            column: 55\n          }\n        }, {\n          start: {\n            line: 24,\n            column: 58\n          },\n          end: {\n            line: 24,\n            column: 62\n          }\n        }],\n        line: 24\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 8\n          },\n          end: {\n            line: 42,\n            column: 103\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 8\n          },\n          end: {\n            line: 42,\n            column: 41\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 45\n          },\n          end: {\n            line: 42,\n            column: 63\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 67\n          },\n          end: {\n            line: 42,\n            column: 103\n          }\n        }],\n        line: 42\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 46,\n            column: 6\n          },\n          end: {\n            line: 54,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 46,\n            column: 6\n          },\n          end: {\n            line: 54,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 46,\n            column: 6\n          },\n          end: {\n            line: 54,\n            column: 7\n          }\n        }],\n        line: 46\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 48,\n            column: 8\n          },\n          end: {\n            line: 51,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 48,\n            column: 8\n          },\n          end: {\n            line: 51,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 48,\n            column: 8\n          },\n          end: {\n            line: 51,\n            column: 9\n          }\n        }],\n        line: 48\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 66,\n            column: 22\n          },\n          end: {\n            line: 66,\n            column: 77\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 66,\n            column: 46\n          },\n          end: {\n            line: 66,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 66,\n            column: 63\n          },\n          end: {\n            line: 66,\n            column: 77\n          }\n        }],\n        line: 66\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 74,\n            column: 27\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 74,\n            column: 11\n          },\n          end: {\n            line: 74,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 74,\n            column: 21\n          },\n          end: {\n            line: 74,\n            column: 27\n          }\n        }],\n        line: 74\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 78,\n            column: 11\n          },\n          end: {\n            line: 78,\n            column: 95\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 78,\n            column: 11\n          },\n          end: {\n            line: 78,\n            column: 34\n          }\n        }, {\n          start: {\n            line: 78,\n            column: 38\n          },\n          end: {\n            line: 78,\n            column: 61\n          }\n        }, {\n          start: {\n            line: 78,\n            column: 65\n          },\n          end: {\n            line: 78,\n            column: 95\n          }\n        }],\n        line: 78\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 84,\n            column: 6\n          },\n          end: {\n            line: 86,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 84,\n            column: 6\n          },\n          end: {\n            line: 86,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 84,\n            column: 6\n          },\n          end: {\n            line: 86,\n            column: 7\n          }\n        }],\n        line: 84\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 121,\n            column: 8\n          },\n          end: {\n            line: 121,\n            column: 112\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 121,\n            column: 8\n          },\n          end: {\n            line: 121,\n            column: 58\n          }\n        }, {\n          start: {\n            line: 121,\n            column: 62\n          },\n          end: {\n            line: 121,\n            column: 85\n          }\n        }, {\n          start: {\n            line: 121,\n            column: 89\n          },\n          end: {\n            line: 121,\n            column: 112\n          }\n        }],\n        line: 121\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"7290addc126aa92d130533cfc11256b3d86b0931\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_j6hb4vjqv = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_j6hb4vjqv();\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { generateRandomShips } from './game';\nimport shuffle from 'shuffle-array';\nexport var SeabattleBot = /*#__PURE__*/function () {\n  function SeabattleBot() {\n    _classCallCheck(this, SeabattleBot);\n  }\n\n  _createClass(SeabattleBot, [{\n    key: \"play\",\n    value: function play(state, playerID) {\n      var shipPositions, sleepMs, cell;\n      return _regeneratorRuntime.async(function play$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cov_j6hb4vjqv().f[0]++;\n              cov_j6hb4vjqv().s[0]++;\n\n              if (!(state.ctx.phase === 'setup')) {\n                _context.next = 9;\n                break;\n              }\n\n              cov_j6hb4vjqv().b[0][0]++;\n              shipPositions = (cov_j6hb4vjqv().s[1]++, generateRandomShips(parseInt(state.ctx.currentPlayer)));\n              cov_j6hb4vjqv().s[2]++;\n              return _context.abrupt(\"return\", this.makeSetShipsMove(shipPositions, playerID));\n\n            case 9:\n              cov_j6hb4vjqv().b[0][1]++;\n              // if this is the first turn for our AI, wait only 500ms.  Else 2500ms\n              sleepMs = (cov_j6hb4vjqv().s[3]++, state.G.salvos.length === 0 ? (cov_j6hb4vjqv().b[1][0]++, 500) : (cov_j6hb4vjqv().b[1][1]++, 2500));\n              cov_j6hb4vjqv().s[4]++;\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(sleep(sleepMs));\n\n            case 14:\n              cell = (cov_j6hb4vjqv().s[5]++, this.generateMove(playerID, state));\n              cov_j6hb4vjqv().s[6]++;\n              return _context.abrupt(\"return\", this.makeSalvoMove(cell, playerID));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"makeSetShipsMove\",\n    value: function makeSetShipsMove(ships, playerID) {\n      cov_j6hb4vjqv().f[1]++;\n      cov_j6hb4vjqv().s[7]++;\n      return {\n        action: {\n          type: 'MAKE_MOVE',\n          payload: {\n            type: 'setShips',\n            args: [ships],\n            playerID: playerID\n          }\n        }\n      };\n    }\n  }, {\n    key: \"makeSalvoMove\",\n    value: function makeSalvoMove(cell, playerID) {\n      cov_j6hb4vjqv().f[2]++;\n      cov_j6hb4vjqv().s[8]++;\n      return {\n        action: {\n          type: 'MAKE_MOVE',\n          payload: {\n            type: 'salvo',\n            args: [cell.x, cell.y],\n            playerID: playerID\n          }\n        }\n      };\n    }\n  }, {\n    key: \"generateMove\",\n    value: function generateMove(playerID, state) {\n      cov_j6hb4vjqv().f[3]++;\n      var salvos = (cov_j6hb4vjqv().s[9]++, state.G.salvos.filter(function (salvo) {\n        cov_j6hb4vjqv().f[4]++;\n        cov_j6hb4vjqv().s[10]++;\n        return (cov_j6hb4vjqv().b[2][0]++, salvo.player === Number(playerID)) && (cov_j6hb4vjqv().b[2][1]++, salvo.hit === true) && (cov_j6hb4vjqv().b[2][2]++, typeof salvo.hitShip !== 'undefined');\n      }));\n      cov_j6hb4vjqv().s[11]++;\n\n      var _iterator = _createForOfIteratorHelper(salvos),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var salvo = _step.value;\n          cov_j6hb4vjqv().s[12]++;\n\n          // if we have already fired salvos, see if we've hit any ships that remain unsunk\n          if (!this.isShipSunk(state, salvo.hitShip)) {\n            cov_j6hb4vjqv().b[3][0]++;\n            var otherHitSalvos = (cov_j6hb4vjqv().s[13]++, this.getOtherSalvosHitShip(state, salvo.hitShip));\n            cov_j6hb4vjqv().s[14]++;\n\n            if (otherHitSalvos.length >= 2) {\n              cov_j6hb4vjqv().b[4][0]++;\n              cov_j6hb4vjqv().s[15]++;\n              // we have hit this ship at least twice, so we can make an intelligent move\n              return this.getNextShipFoundMove(state, otherHitSalvos);\n            } else {\n              cov_j6hb4vjqv().b[4][1]++;\n            } // no other salvos for the same ship were hit, so hit a random neighbor\n\n\n            cov_j6hb4vjqv().s[16]++;\n            return this.getRandomNeighbor(state, salvo);\n          } else {\n            cov_j6hb4vjqv().b[3][1]++;\n          }\n        } // generate a random move\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      cov_j6hb4vjqv().s[17]++;\n      return this.generateRandomMove(state);\n    }\n  }, {\n    key: \"getNextShipFoundMove\",\n    value: function getNextShipFoundMove(state, hitSalvos) {\n      cov_j6hb4vjqv().f[5]++;\n      var xMap = (cov_j6hb4vjqv().s[18]++, hitSalvos.map(function (salvo) {\n        cov_j6hb4vjqv().f[6]++;\n        cov_j6hb4vjqv().s[19]++;\n        return salvo.cell.x;\n      }));\n      var yMap = (cov_j6hb4vjqv().s[20]++, hitSalvos.map(function (salvo) {\n        cov_j6hb4vjqv().f[7]++;\n        cov_j6hb4vjqv().s[21]++;\n        return salvo.cell.y;\n      }));\n      var minPos = (cov_j6hb4vjqv().s[22]++, {\n        x: Math.min.apply(Math, _toConsumableArray(xMap)),\n        y: Math.min.apply(Math, _toConsumableArray(yMap))\n      });\n      var maxPos = (cov_j6hb4vjqv().s[23]++, {\n        x: Math.max.apply(Math, _toConsumableArray(xMap)),\n        y: Math.max.apply(Math, _toConsumableArray(yMap))\n      });\n      var direction = (cov_j6hb4vjqv().s[24]++, maxPos.x === minPos.x ? (cov_j6hb4vjqv().b[5][0]++, {\n        x: 0,\n        y: 1\n      }) : (cov_j6hb4vjqv().b[5][1]++, {\n        x: 1,\n        y: 0\n      }));\n      cov_j6hb4vjqv().s[25]++;\n      return this.anyValidMove(state, [{\n        x: minPos.x - direction.x,\n        y: minPos.y - direction.y\n      }, {\n        x: maxPos.x + direction.x,\n        y: maxPos.y + direction.y\n      }]);\n    }\n  }, {\n    key: \"isInBounds\",\n    value: function isInBounds(x) {\n      cov_j6hb4vjqv().f[8]++;\n      cov_j6hb4vjqv().s[26]++;\n      return (cov_j6hb4vjqv().b[6][0]++, x >= 0) && (cov_j6hb4vjqv().b[6][1]++, x <= 9);\n    }\n  }, {\n    key: \"isValidMove\",\n    value: function isValidMove(state, cell) {\n      cov_j6hb4vjqv().f[9]++;\n      cov_j6hb4vjqv().s[27]++;\n      return (cov_j6hb4vjqv().b[7][0]++, this.isInBounds(cell.x)) && (cov_j6hb4vjqv().b[7][1]++, this.isInBounds(cell.y)) && (cov_j6hb4vjqv().b[7][2]++, this.isUniqueMove(state, cell));\n    }\n  }, {\n    key: \"anyValidMove\",\n    value: function anyValidMove(state, moves) {\n      cov_j6hb4vjqv().f[10]++;\n      cov_j6hb4vjqv().s[28]++;\n      shuffle(moves); // ONLY source of randomness\n\n      cov_j6hb4vjqv().s[29]++;\n\n      var _iterator2 = _createForOfIteratorHelper(moves),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var move = _step2.value;\n          cov_j6hb4vjqv().s[30]++;\n\n          if (this.isValidMove(state, move)) {\n            cov_j6hb4vjqv().b[8][0]++;\n            cov_j6hb4vjqv().s[31]++;\n            return move;\n          } else {\n            cov_j6hb4vjqv().b[8][1]++;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      cov_j6hb4vjqv().s[32]++;\n      return null;\n    }\n  }, {\n    key: \"getRandomNeighbor\",\n    value: function getRandomNeighbor(state, salvo) {\n      cov_j6hb4vjqv().f[11]++;\n      cov_j6hb4vjqv().s[33]++;\n      return this.anyValidMove(state, [{\n        x: salvo.cell.x - 1,\n        y: salvo.cell.y\n      }, {\n        x: salvo.cell.x,\n        y: salvo.cell.y - 1\n      }, {\n        x: salvo.cell.x + 1,\n        y: salvo.cell.y\n      }, {\n        x: salvo.cell.x,\n        y: salvo.cell.y + 1\n      }]);\n    }\n  }, {\n    key: \"getOtherSalvosHitShip\",\n    value: function getOtherSalvosHitShip(state, id) {\n      cov_j6hb4vjqv().f[12]++;\n      cov_j6hb4vjqv().s[34]++;\n      return state.G.salvos.filter(function (salvo) {\n        cov_j6hb4vjqv().f[13]++;\n        cov_j6hb4vjqv().s[35]++;\n        return salvo.hitShip === id;\n      });\n    }\n  }, {\n    key: \"isShipSunk\",\n    value: function isShipSunk(state, id) {\n      cov_j6hb4vjqv().f[14]++;\n      cov_j6hb4vjqv().s[36]++;\n      return state.G.ships.filter(function (ship) {\n        cov_j6hb4vjqv().f[15]++;\n        cov_j6hb4vjqv().s[37]++;\n        return ship.id === id;\n      })[0].sunk;\n    }\n  }, {\n    key: \"generateRandomMove\",\n    value: function generateRandomMove(state) {\n      cov_j6hb4vjqv().f[16]++;\n      var allPossibleMoves = (cov_j6hb4vjqv().s[38]++, []);\n      cov_j6hb4vjqv().s[39]++;\n\n      for (var x = (cov_j6hb4vjqv().s[40]++, 0); x <= 9; x++) {\n        cov_j6hb4vjqv().s[41]++;\n\n        for (var y = (cov_j6hb4vjqv().s[42]++, 0); y <= 9; y++) {\n          cov_j6hb4vjqv().s[43]++;\n          allPossibleMoves.push({\n            x: x,\n            y: y\n          });\n        }\n      }\n\n      cov_j6hb4vjqv().s[44]++;\n      return this.anyValidMove(state, allPossibleMoves);\n    }\n  }, {\n    key: \"isUniqueMove\",\n    value: function isUniqueMove(state, cell) {\n      cov_j6hb4vjqv().f[17]++;\n      var moves = (cov_j6hb4vjqv().s[45]++, state.G.salvos.filter(function (salvo) {\n        cov_j6hb4vjqv().f[18]++;\n        cov_j6hb4vjqv().s[46]++;\n        return (cov_j6hb4vjqv().b[9][0]++, salvo.player === parseInt(state.ctx.currentPlayer)) && (cov_j6hb4vjqv().b[9][1]++, salvo.cell.x === cell.x) && (cov_j6hb4vjqv().b[9][2]++, salvo.cell.y === cell.y);\n      }));\n      cov_j6hb4vjqv().s[47]++;\n      return moves.length === 0;\n    }\n  }]);\n\n  return SeabattleBot;\n}();\nexport var config = (cov_j6hb4vjqv().s[48]++, {\n  bgioAI: function bgioAI() {\n    cov_j6hb4vjqv().f[19]++;\n    cov_j6hb4vjqv().s[49]++;\n    return {\n      bot: SeabattleBot\n    };\n  }\n});\n\nfunction sleep(milliseconds) {\n  cov_j6hb4vjqv().f[20]++;\n  cov_j6hb4vjqv().s[50]++;\n  return new Promise(function (resolve) {\n    cov_j6hb4vjqv().f[21]++;\n    cov_j6hb4vjqv().s[51]++;\n    setTimeout(resolve, milliseconds);\n  });\n}\n\nexport default config;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/seabattle/ai.ts"],"names":["generateRandomShips","shuffle","SeabattleBot","state","playerID","ctx","phase","shipPositions","parseInt","currentPlayer","makeSetShipsMove","sleepMs","G","salvos","length","sleep","cell","generateMove","makeSalvoMove","ships","action","type","payload","args","x","y","filter","salvo","player","Number","hit","hitShip","isShipSunk","otherHitSalvos","getOtherSalvosHitShip","getNextShipFoundMove","getRandomNeighbor","generateRandomMove","hitSalvos","xMap","map","yMap","minPos","Math","min","maxPos","max","direction","anyValidMove","isInBounds","isUniqueMove","moves","move","isValidMove","id","ship","sunk","allPossibleMoves","push","config","bgioAI","bot","milliseconds","Promise","resolve","setTimeout"],"mappingsmBAA/B,QAA0D,QAA1D;AACA,OAAOC,OAAP,MAAoB,eAApB;AAcA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACaC,KADb,EACgCC,QADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAEQD,KAAK,CAACE,GAAN,CAAUC,KAAV,KAAoB,OAF5B;AAAA;AAAA;AAAA;;AAAA;AAGYC,cAAAA,aAHZ,4BAG4BP,mBAAmB,CAACQ,QAAQ,CAACL,KAAK,CAACE,GAAN,CAAUI,aAAX,CAAT,CAH/C;AAAA;AAAA,+CAIa,KAAKC,gBAAL,CAAsBH,aAAtB,EAAqCH,QAArC,CAJb;;AAAA;AAAA;AAMM;AACMO,cAAAA,OAPZ,4BAOsBR,KAAK,CAACS,CAAN,CAAQC,MAAR,CAAeC,MAAf,KAA0B,CAA1B,+BAA8B,GAA9B,gCAAoC,IAApC,CAPtB;AAAA;AAAA;AAAA,+CAQYC,KAAK,CAACJ,OAAD,CARjB;;AAAA;AASYK,cAAAA,IATZ,4BASmB,KAAKC,YAAL,CAAkBb,QAAlB,EAA4BD,KAA5B,CATnB;AAAA;AAAA,+CAUa,KAAKe,aAAL,CAAmBF,IAAnB,EAAyBZ,QAAzB,CAVb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAcmBe,KAdnB,EAcmCf,QAdnC,EAcqD;AAAA;AAAA;AACjD,aAAO;AAAEgB,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAE;AAAED,YAAAA,IAAI,EAAE,UAAR;AAAoBE,YAAAA,IAAI,EAAE,CAACJ,KAAD,CAA1B;AAAmCf,YAAAA,QAAQ,EAARA;AAAnC;AAA9B;AAAV,OAAP;AACD;AAhBH;AAAA;AAAA,kCAkBgBY,IAlBhB,EAkB6BZ,QAlB7B,EAkB+C;AAAA;AAAA;AAC3C,aAAO;AAAEgB,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAE;AAAED,YAAAA,IAAI,EAAE,OAAR;AAAiBE,YAAAA,IAAI,EAAE,CAACP,IAAI,CAACQ,CAAN,EAASR,IAAI,CAACS,CAAd,CAAvB;AAAyCrB,YAAAA,QAAQ,EAARA;AAAzC;AAA9B;AAAV,OAAP;AACD;AApBH;AAAA;AAAA,iCAsBeA,QAtBf,EAsBiCD,KAtBjC,EAsBoD;AAAA;AAChD,UAAMU,MAAM,4BAAGV,KAAK,CAACS,CAAN,CAAQC,MAAR,CAAea,MAAf,CACb,UAACC,KAAD,EACE;AAAA;AAAA;AAAA,2CAAAA,KAAK,CAACC,MAAN,KAAiBC,MAAM,CAACzB,QAAD,CAAvB,iCAAqCuB,KAAK,CAACG,GAAN,KAAc,IAAnD,iCAA2D,OAAOH,KAAK,CAACI,OAAb,KAAyB,WAApF;AAA+F,OAFpF,CAAH,CAAZ;AADgD;;AAAA,iDAK5BlB,MAL4B;AAAA;;AAAA;AAKhD,4DAA4B;AAAA,cAAjBc,KAAiB;AAAA;;AAC1B;AACA,cAAI,CAAC,KAAKK,UAAL,CAAgB7B,KAAhB,EAAuBwB,KAAK,CAACI,OAA7B,CAAL,EAA4C;AAAA;AAC1C,gBAAME,cAAc,6BAAG,KAAKC,qBAAL,CAA2B/B,KAA3B,EAAkCwB,KAAK,CAACI,OAAxC,CAAH,CAApB;AAD0C;;AAE1C,gBAAIE,cAAc,CAACnB,MAAf,IAAyB,CAA7B,EAAgC;AAAA;AAAA;AAC9B;AACA,qBAAO,KAAKqB,oBAAL,CAA0BhC,KAA1B,EAAiC8B,cAAjC,CAAP;AACD,aAHD;AAAA;AAAA,aAF0C,CAM1C;;;AAN0C;AAO1C,mBAAO,KAAKG,iBAAL,CAAuBjC,KAAvB,EAA8BwB,KAA9B,CAAP;AACD,WARD;AAAA;AAAA;AASD,SAhB+C,CAiBhD;;AAjBgD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAkBhD,aAAO,KAAKU,kBAAL,CAAwBlC,KAAxB,CAAP;AACD;AAzCH;AAAA;AAAA,yCA2CuBA,KA3CvB,EA2C0CmC,SA3C1C,EA2CsE;AAAA;AAClE,UAAMC,IAAI,6BAAGD,SAAS,CAACE,GAAV,CAAc,UAACb,KAAD,EAAW;AAAA;AAAA;AAAA,eAAAA,KAAK,CAACX,IAAN,CAAWQ,CAAX;AAAY,OAArC,CAAH,CAAV;AACA,UAAMiB,IAAI,6BAAGH,SAAS,CAACE,GAAV,CAAc,UAACb,KAAD,EAAW;AAAA;AAAA;AAAA,eAAAA,KAAK,CAACX,IAAN,CAAWS,CAAX;AAAY,OAArC,CAAH,CAAV;AAEA,UAAMiB,MAAM,6BAAG;AAAElB,QAAAA,CAAC,EAAEmB,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQJ,IAAR,EAAT;AAAwBd,QAAAA,CAAC,EAAEkB,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQF,IAAR;AAA/B,OAAH,CAAZ;AACA,UAAMI,MAAM,6BAAG;AAAErB,QAAAA,CAAC,EAAEmB,IAAI,CAACG,GAAL,OAAAH,IAAI,qBAAQJ,IAAR,EAAT;AAAwBd,QAAAA,CAAC,EAAEkB,IAAI,CAACG,GAAL,OAAAH,IAAI,qBAAQF,IAAR;AAA/B,OAAH,CAAZ;AACA,UAAMM,SAAS,6BAAGF,MAAM,CAACrB,CAAP,KAAakB,MAAM,CAAClB,CAApB,+BAAwB;AAAEA,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAxB,gCAAyC;AAAED,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAzC,CAAH,CAAf;AANkE;AAOlE,aAAO,KAAKuB,YAAL,CAAkB7C,KAAlB,EAAyB,CAC9B;AAAEqB,QAAAA,CAAC,EAAEkB,MAAM,CAAClB,CAAP,GAAWuB,SAAS,CAACvB,CAA1B;AAA6BC,QAAAA,CAAC,EAAEiB,MAAM,CAACjB,CAAP,GAAWsB,SAAS,CAACtB;AAArD,OAD8B,EAE9B;AAAED,QAAAA,CAAC,EAAEqB,MAAM,CAACrB,CAAP,GAAWuB,SAAS,CAACvB,CAA1B;AAA6BC,QAAAA,CAAC,EAAEoB,MAAM,CAACpB,CAAP,GAAWsB,SAAS,CAACtB;AAArD,OAF8B,CAAzB,CAAP;AAID;AAtDH;AAAA;AAAA,+BAwDaD,CAxDb,EAwDwB;AAAA;AAAA;AACpB,aAAO,4BAAAA,CAAC,IAAI,CAAL,iCAAUA,CAAC,IAAI,CAAf,CAAP;AACD;AA1DH;AAAA;AAAA,gCA4DcrB,KA5Dd,EA4DiCa,IA5DjC,EA4D8C;AAAA;AAAA;AAC1C,aAAO,iCAAKiC,UAAL,CAAgBjC,IAAI,CAACQ,CAArB,kCAA2B,KAAKyB,UAAL,CAAgBjC,IAAI,CAACS,CAArB,CAA3B,iCAAsD,KAAKyB,YAAL,CAAkB/C,KAAlB,EAAyBa,IAAzB,CAAtD,CAAP;AACD;AA9DH;AAAA;AAAA,iCAgEeb,KAhEf,EAgEkCgD,KAhElC,EAgEkD;AAAA;AAAA;AAC9ClD,MAAAA,OAAO,CAACkD,KAAD,CAAP,CAD8C,CAC9B;;AAD8B;;AAAA,kDAE3BA,KAF2B;AAAA;;AAAA;AAE9C,+DAA0B;AAAA,cAAfC,IAAe;AAAA;;AACxB,cAAI,KAAKC,WAAL,CAAiBlD,KAAjB,EAAwBiD,IAAxB,CAAJ,EAAmC;AAAA;AAAA;AACjC,mBAAOA,IAAP;AACD,WAFD;AAAA;AAAA;AAGD;AAN6C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAO9C,aAAO,IAAP;AACD;AAxEH;AAAA;AAAA,sCA0EoBjD,KA1EpB,EA0EuCwB,KA1EvC,EA0E6D;AAAA;AAAA;AACzD,aAAO,KAAKqB,YAAL,CAAkB7C,KAAlB,EAAyB,CAC9B;AAAEqB,QAAAA,CAAC,EAAEG,KAAK,CAACX,IAAN,CAAWQ,CAAX,GAAe,CAApB;AAAuBC,QAAAA,CAAC,EAAEE,KAAK,CAACX,IAAN,CAAWS;AAArC,OAD8B,EAE9B;AAAED,QAAAA,CAAC,EAAEG,KAAK,CAACX,IAAN,CAAWQ,CAAhB;AAAmBC,QAAAA,CAAC,EAAEE,KAAK,CAACX,IAAN,CAAWS,CAAX,GAAe;AAArC,OAF8B,EAG9B;AAAED,QAAAA,CAAC,EAAEG,KAAK,CAACX,IAAN,CAAWQ,CAAX,GAAe,CAApB;AAAuBC,QAAAA,CAAC,EAAEE,KAAK,CAACX,IAAN,CAAWS;AAArC,OAH8B,EAI9B;AAAED,QAAAA,CAAC,EAAEG,KAAK,CAACX,IAAN,CAAWQ,CAAhB;AAAmBC,QAAAA,CAAC,EAAEE,KAAK,CAACX,IAAN,CAAWS,CAAX,GAAe;AAArC,OAJ8B,CAAzB,CAAP;AAMD;AAjFH;AAAA;AAAA,0CAmFwBtB,KAnFxB,EAmF2CmD,EAnF3C,EAmFuD;AAAA;AAAA;AACnD,aAAOnD,KAAK,CAACS,CAAN,CAAQC,MAAR,CAAea,MAAf,CAAsB,UAACC,KAAD,EAAmB;AAAA;AAAA;AAAA,eAAAA,KAAK,CAACI,OAAN,KAAkBuB,EAAlB;AAAoB,OAA7D,CAAP;AACD;AArFH;AAAA;AAAA,+BAuFanD,KAvFb,EAuFgCmD,EAvFhC,EAuF4C;AAAA;AAAA;AACxC,aAAOnD,KAAK,CAACS,CAAN,CAAQO,KAAR,CAAcO,MAAd,CAAqB,UAAC6B,IAAD,EAAiB;AAAA;AAAA;AAAA,eAAAA,IAAI,CAACD,EAAL,KAAYA,EAAZ;AAAc,OAApD,EAAsD,CAAtD,EAAyDE,IAAhE;AACD;AAzFH;AAAA;AAAA,uCA2FqBrD,KA3FrB,EA2FwC;AAAA;AACpC,UAAMsD,gBAAyB,6BAAG,EAAH,CAA/B;AADoC;;AAEpC,WAAK,IAAIjC,CAAC,6BAAG,CAAH,CAAV,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAAA;;AAC3B,aAAK,IAAIC,CAAC,6BAAG,CAAH,CAAV,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAAA;AAC3BgC,UAAAA,gBAAgB,CAACC,IAAjB,CAAsB;AAAElC,YAAAA,CAAC,EAADA,CAAF;AAAKC,YAAAA,CAAC,EAADA;AAAL,WAAtB;AACD;AACF;;AANmC;AAOpC,aAAO,KAAKuB,YAAL,CAAkB7C,KAAlB,EAAyBsD,gBAAzB,CAAP;AACD;AAnGH;AAAA;AAAA,iCAqGetD,KArGf,EAqGkCa,IArGlC,EAqG+C;AAAA;AAC3C,UAAMmC,KAAK,6BAAGhD,KAAK,CAACS,CAAN,CAAQC,MAAR,CAAea,MAAf,CACZ,UAACC,KAAD,EACE;AAAA;AAAA;AAAA,2CAAAA,KAAK,CAACC,MAAN,KAAiBpB,QAAQ,CAACL,KAAK,CAACE,GAAN,CAAUI,aAAX,CAAzB,iCAAsDkB,KAAK,CAACX,IAAN,CAAWQ,CAAX,KAAiBR,IAAI,CAACQ,CAA5E,iCAAiFG,KAAK,CAACX,IAAN,CAAWS,CAAX,KAAiBT,IAAI,CAACS,CAAvG;AAAwG,OAF9F,CAAH,CAAX;AAD2C;AAK3C,aAAO0B,KAAK,CAACrC,MAAN,KAAiB,CAAxB;AACD;AA3GH;;AAAA;AAAA;AA8GA,OAAO,IAAM6C,MAAiB,6BAAG;AAC/BC,EAAAA,MAAM,EAAE,kBAAM;AAAA;AAAA;AACZ,WAAO;AACLC,MAAAA,GAAG,EAAE3D;AADA,KAAP;AAGD;AAL8B,CAAH,CAAvB;;AAQP,SAASa,KAAT,CAAe+C,YAAf,EAAqC;AAAA;AAAA;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAAA;AAAA;AAC9BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,YAAV,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,eAAeH,MAAf","sourcesContent":["import { IAIConfig } from '../index';\nimport { ICell, IShip, ISalvo, generateRandomShips } from './game';\nimport shuffle from 'shuffle-array';\n\ninterface IAISalvo extends ISalvo {\n  up: boolean;\n  down: boolean;\n  left: boolean;\n  right: boolean;\n}\n\ninterface IPlayState {\n  G: any;\n  ctx: any;\n}\n\nexport class SeabattleBot {\n  async play(state: IPlayState, playerID: string) {\n    if (state.ctx.phase === 'setup') {\n      const shipPositions = generateRandomShips(parseInt(state.ctx.currentPlayer));\n      return this.makeSetShipsMove(shipPositions, playerID);\n    } else {\n      // if this is the first turn for our AI, wait only 500ms.  Else 2500ms\n      const sleepMs = state.G.salvos.length === 0 ? 500 : 2500;\n      await sleep(sleepMs);\n      const cell = this.generateMove(playerID, state);\n      return this.makeSalvoMove(cell, playerID);\n    }\n  }\n\n  makeSetShipsMove(ships: IShip[], playerID: string) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'setShips', args: [ships], playerID } } };\n  }\n\n  makeSalvoMove(cell: ICell, playerID: string) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'salvo', args: [cell.x, cell.y], playerID } } };\n  }\n\n  generateMove(playerID: string, state: IPlayState) {\n    const salvos = state.G.salvos.filter(\n      (salvo: ISalvo) =>\n        salvo.player === Number(playerID) && salvo.hit === true && typeof salvo.hitShip !== 'undefined',\n    );\n    for (const salvo of salvos) {\n      // if we have already fired salvos, see if we've hit any ships that remain unsunk\n      if (!this.isShipSunk(state, salvo.hitShip)) {\n        const otherHitSalvos = this.getOtherSalvosHitShip(state, salvo.hitShip);\n        if (otherHitSalvos.length >= 2) {\n          // we have hit this ship at least twice, so we can make an intelligent move\n          return this.getNextShipFoundMove(state, otherHitSalvos);\n        }\n        // no other salvos for the same ship were hit, so hit a random neighbor\n        return this.getRandomNeighbor(state, salvo);\n      }\n    }\n    // generate a random move\n    return this.generateRandomMove(state);\n  }\n\n  getNextShipFoundMove(state: IPlayState, hitSalvos: ISalvo[]): ICell {\n    const xMap = hitSalvos.map((salvo) => salvo.cell.x);\n    const yMap = hitSalvos.map((salvo) => salvo.cell.y);\n\n    const minPos = { x: Math.min(...xMap), y: Math.min(...yMap) };\n    const maxPos = { x: Math.max(...xMap), y: Math.max(...yMap) };\n    const direction = maxPos.x === minPos.x ? { x: 0, y: 1 } : { x: 1, y: 0 };\n    return this.anyValidMove(state, [\n      { x: minPos.x - direction.x, y: minPos.y - direction.y },\n      { x: maxPos.x + direction.x, y: maxPos.y + direction.y },\n    ]);\n  }\n\n  isInBounds(x: number) {\n    return x >= 0 && x <= 9;\n  }\n\n  isValidMove(state: IPlayState, cell: ICell) {\n    return this.isInBounds(cell.x) && this.isInBounds(cell.y) && this.isUniqueMove(state, cell);\n  }\n\n  anyValidMove(state: IPlayState, moves: ICell[]) {\n    shuffle(moves); // ONLY source of randomness\n    for (const move of moves) {\n      if (this.isValidMove(state, move)) {\n        return move;\n      }\n    }\n    return null;\n  }\n\n  getRandomNeighbor(state: IPlayState, salvo: ISalvo): ICell {\n    return this.anyValidMove(state, [\n      { x: salvo.cell.x - 1, y: salvo.cell.y },\n      { x: salvo.cell.x, y: salvo.cell.y - 1 },\n      { x: salvo.cell.x + 1, y: salvo.cell.y },\n      { x: salvo.cell.x, y: salvo.cell.y + 1 },\n    ]);\n  }\n\n  getOtherSalvosHitShip(state: IPlayState, id: string) {\n    return state.G.salvos.filter((salvo: ISalvo) => salvo.hitShip === id);\n  }\n\n  isShipSunk(state: IPlayState, id: string) {\n    return state.G.ships.filter((ship: IShip) => ship.id === id)[0].sunk;\n  }\n\n  generateRandomMove(state: IPlayState) {\n    const allPossibleMoves: ICell[] = [];\n    for (let x = 0; x <= 9; x++) {\n      for (let y = 0; y <= 9; y++) {\n        allPossibleMoves.push({ x, y });\n      }\n    }\n    return this.anyValidMove(state, allPossibleMoves);\n  }\n\n  isUniqueMove(state: IPlayState, cell: ICell) {\n    const moves = state.G.salvos.filter(\n      (salvo: ISalvo) =>\n        salvo.player === parseInt(state.ctx.currentPlayer) && salvo.cell.x === cell.x && salvo.cell.y === cell.y,\n    );\n    return moves.length === 0;\n  }\n}\n\nexport const config: IAIConfig = {\n  bgioAI: () => {\n    return {\n      bot: SeabattleBot,\n    };\n  },\n};\n\nfunction sleep(milliseconds: number) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, milliseconds);\n  });\n}\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}