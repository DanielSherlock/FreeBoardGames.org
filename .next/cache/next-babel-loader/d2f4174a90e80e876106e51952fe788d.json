{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_19822nfpwp() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bbuttons.tsx\";\n  var hash = \"b6f97131a16647dd3024738c42e130e6407ff91e\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bbuttons.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 12,\n          column: 15\n        },\n        end: {\n          line: 12,\n          column: 27\n        }\n      },\n      \"1\": {\n        start: {\n          line: 14,\n          column: 18\n        },\n        end: {\n          line: 18,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 20,\n          column: 16\n        },\n        end: {\n          line: 24,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 28,\n          column: 8\n        },\n        end: {\n          line: 61,\n          column: 9\n        }\n      },\n      \"4\": {\n        start: {\n          line: 34,\n          column: 24\n        },\n        end: {\n          line: 57,\n          column: 25\n        }\n      },\n      \"5\": {\n        start: {\n          line: 35,\n          column: 28\n        },\n        end: {\n          line: 56,\n          column: 29\n        }\n      },\n      \"6\": {\n        start: {\n          line: 38,\n          column: 50\n        },\n        end: {\n          line: 38,\n          column: 79\n        }\n      },\n      \"7\": {\n        start: {\n          line: 47,\n          column: 50\n        },\n        end: {\n          line: 47,\n          column: 79\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 27,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 13\n          },\n          end: {\n            line: 62,\n            column: 5\n          }\n        },\n        line: 27\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 33,\n            column: 32\n          },\n          end: {\n            line: 33,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 51\n          },\n          end: {\n            line: 58,\n            column: 21\n          }\n        },\n        line: 33\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 38,\n            column: 43\n          },\n          end: {\n            line: 38,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 38,\n            column: 49\n          },\n          end: {\n            line: 38,\n            column: 80\n          }\n        },\n        line: 38\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 47,\n            column: 43\n          },\n          end: {\n            line: 47,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 47,\n            column: 49\n          },\n          end: {\n            line: 47,\n            column: 80\n          }\n        },\n        line: 47\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 24\n          },\n          end: {\n            line: 57,\n            column: 25\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 34,\n            column: 24\n          },\n          end: {\n            line: 57,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 34,\n            column: 24\n          },\n          end: {\n            line: 57,\n            column: 25\n          }\n        }],\n        line: 34\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"b6f97131a16647dd3024738c42e130e6407ff91e\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_19822nfpwp = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_19822nfpwp();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { BHintIcon } from './bhinticon';\nvar Values = (cov_19822nfpwp().s[0]++, [0, 1, 2, 3, 4]);\nvar buttonStyle = (cov_19822nfpwp().s[1]++, {\n  background: 'none',\n  border: '0',\n  padding: '0'\n});\nvar gridStyle = (cov_19822nfpwp().s[2]++, {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '5px'\n});\nexport var BButtons = /*#__PURE__*/function (_React$Component) {\n  _inherits(BButtons, _React$Component);\n\n  var _super = _createSuper(BButtons);\n\n  function BButtons() {\n    _classCallCheck(this, BButtons);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BButtons, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      cov_19822nfpwp().f[0]++;\n      cov_19822nfpwp().s[3]++;\n      return __jsx(\"div\", {\n        style: gridStyle\n      }, Values.map(function (value) {\n        cov_19822nfpwp().f[1]++;\n        cov_19822nfpwp().s[4]++;\n\n        if (_this.props.myTurn) {\n          cov_19822nfpwp().b[0][0]++;\n          cov_19822nfpwp().s[5]++;\n          return __jsx(React.Fragment, null, __jsx(\"button\", {\n            onClick: function onClick() {\n              cov_19822nfpwp().f[2]++;\n              cov_19822nfpwp().s[6]++;\n\n              _this.props.onHintValue(value);\n            },\n            style: buttonStyle\n          }, __jsx(BHintIcon, {\n            hintIcon: {\n              color: -1,\n              value: value\n            },\n            keyPropagation: _this.props.keyPropagation + \"BButtonValue\" + value.toString()\n          })), __jsx(\"button\", {\n            onClick: function onClick() {\n              cov_19822nfpwp().f[3]++;\n              cov_19822nfpwp().s[7]++;\n\n              _this.props.onHintColor(value);\n            },\n            style: buttonStyle\n          }, __jsx(BHintIcon, {\n            hintIcon: {\n              color: value,\n              value: -1\n            },\n            keyPropagation: _this.props.keyPropagation + \"BButtonColor\" + value.toString()\n          })));\n        } else {\n          cov_19822nfpwp().b[0][1]++;\n        }\n      }));\n    }\n  }]);\n\n  return BButtons;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bbuttons.tsx"],"names":["React","BHintIcon","Values","buttonStyle","background","border","padding","gridStyle","display","gridTemplateColumns","gap","BButtons","map","value","props","myTurn","onHintValue","color","keyPropagation","toString","onHintColor","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAUA,IAAMC,MAAM,6BAAG,CAAC,CAAD,EAAI,CAAJ,EAAM,CAAN,EAAQ,CAAR,EAAU,CAAV,CAAH,CAAZ;AAEA,IAAIC,WAAW,6BAAG;AAChBC,EAAAA,UAAU,EAAE,MADI;AAEhBC,EAAAA,MAAM,EAAE,GAFQ;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAH,CAAf;AAMA,IAAIC,SAAS,6BAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,SAFP;AAGdC,EAAAA,GAAG,EAAE;AAHS,CAAH,CAAb;AAMA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA;;AAAA;AAAA;AACL,aACI;AACE,QAAA,KAAK,EAAEJ;AADT,SAIQL,MAAM,CAACU,GAAP,CAAY,UAACC,KAAD,EAAmB;AAAA;AAAA;;AAC3B,YAAI,KAAI,CAACC,KAAL,CAAWC,MAAf,EAAsB;AAAA;AAAA;AAClB,iBACE,4BACE;AACE,YAAA,OAAO,EAAE,mBAAM;AAAA;AAAA;;AAAC,cAAA,KAAI,CAACD,KAAL,CAAWE,WAAX,CAAuBH,KAAvB;AAA8B,aADhD;AAEE,YAAA,KAAK,EAAEV;AAFT,aAIE,MAAC,SAAD;AACE,YAAA,QAAQ,EAAE;AAACc,cAAAA,KAAK,EAAE,CAAC,CAAT;AAAYJ,cAAAA,KAAK,EAALA;AAAZ,aADZ;AAEE,YAAA,cAAc,EAAE,KAAI,CAACC,KAAL,CAAWI,cAAX,GAA4B,cAA5B,GAA6CL,KAAK,CAACM,QAAN;AAF/D,YAJF,CADF,EAUE;AACE,YAAA,OAAO,EAAE,mBAAM;AAAA;AAAA;;AAAC,cAAA,KAAI,CAACL,KAAL,CAAWM,WAAX,CAAuBP,KAAvB;AAA8B,aADhD;AAEE,YAAA,KAAK,EAAEV;AAFT,aAIE,MAAC,SAAD;AACE,YAAA,QAAQ,EAAE;AAACc,cAAAA,KAAK,EAAEJ,KAAR;AAAeA,cAAAA,KAAK,EAAE,CAAC;AAAvB,aADZ;AAEE,YAAA,cAAc,EAAE,KAAI,CAACC,KAAL,CAAWI,cAAX,GAA4B,cAA5B,GAA6CL,KAAK,CAACM,QAAN;AAF/D,YAJF,CAVF,CADF;AAsBH,SAvBD;AAAA;AAAA;AAwBH,OAzBD,CAJR,CADJ;AAkCH;AApCL;;AAAA;AAAA,GAA8BnB,KAAK,CAACqB,SAApC","sourcesContent":["import React from 'react';\nimport { BHintIcon } from './bhinticon';\n\ninterface InnerWrapper {\n    onHintValue(nr: number): any\n    onHintColor(nr: number): any\n\n    myTurn: boolean;\n    keyPropagation: string;\n}\n\nconst Values = [0, 1,2,3,4]\n\nlet buttonStyle = {\n  background: 'none',\n  border: '0',\n  padding: '0'\n}\n\nlet gridStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '5px'\n}\n\nexport class BButtons extends React.Component< InnerWrapper, {} > {\n    render() {\n        return (\n            <div\n              style={gridStyle}\n              >\n                {\n                    Values.map( (value: number) => {\n                        if (this.props.myTurn){\n                            return (\n                              <>\n                                <button\n                                  onClick={() => {this.props.onHintValue(value)}}\n                                  style={buttonStyle}\n                                  >\n                                  <BHintIcon\n                                    hintIcon={{color: -1, value}}\n                                    keyPropagation={this.props.keyPropagation + \"BButtonValue\" + value.toString()}\n                                    ></BHintIcon>\n                                </button>\n                                <button\n                                  onClick={() => {this.props.onHintColor(value)}}\n                                  style={buttonStyle}\n                                  > \n                                  <BHintIcon\n                                    hintIcon={{color: value, value: -1}}\n                                    keyPropagation={this.props.keyPropagation + \"BButtonColor\" + value.toString()}\n                                    ></BHintIcon>\n                                </button>\n                              </>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}