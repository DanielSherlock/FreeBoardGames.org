{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_2dv2upfyf8() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx\";\n  var hash = \"afd4f59865d8ea972d1f1d12bb1ed1dfc590fb0c\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 14,\n          column: 26\n        },\n        end: {\n          line: 14,\n          column: 63\n        }\n      },\n      \"1\": {\n        start: {\n          line: 18,\n          column: 4\n        },\n        end: {\n          line: 24,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 19,\n          column: 6\n        },\n        end: {\n          line: 23,\n          column: 8\n        }\n      },\n      \"3\": {\n        start: {\n          line: 26,\n          column: 21\n        },\n        end: {\n          line: 26,\n          column: 85\n        }\n      },\n      \"4\": {\n        start: {\n          line: 28,\n          column: 4\n        },\n        end: {\n          line: 60,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 13,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 11\n          },\n          end: {\n            line: 61,\n            column: 3\n          }\n        },\n        line: 13\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }],\n        line: 18\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 21\n          },\n          end: {\n            line: 26,\n            column: 85\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 67\n          },\n          end: {\n            line: 26,\n            column: 75\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 78\n          },\n          end: {\n            line: 26,\n            column: 85\n          }\n        }],\n        line: 26\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"afd4f59865d8ea972d1f1d12bb1ed1dfc590fb0c\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2dv2upfyf8 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2dv2upfyf8();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FbgLogo from './media/fbg_logo_white_48.png';\nimport Link from 'next/link';\n\nvar FreeBoardGamesBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(FreeBoardGamesBar, _React$Component);\n\n  var _super = _createSuper(FreeBoardGamesBar);\n\n  function FreeBoardGamesBar() {\n    _classCallCheck(this, FreeBoardGamesBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FreeBoardGamesBar, [{\n    key: \"render\",\n    value: function render() {\n      cov_2dv2upfyf8().f[0]++;\n      var isProdChannel = (cov_2dv2upfyf8().s[0]++, false);\n      var appBarStyle;\n      var versionInfo;\n      cov_2dv2upfyf8().s[1]++;\n\n      if (!isProdChannel) {\n        cov_2dv2upfyf8().b[0][0]++;\n        cov_2dv2upfyf8().s[2]++;\n        versionInfo = __jsx(Typography, {\n          \"data-test-id\": \"gitrev\",\n          variant: \"h6\",\n          style: {\n            color: 'white',\n            marginLeft: 'auto'\n          }\n        }, process.env.VERSION);\n      } else {\n        cov_2dv2upfyf8().b[0][1]++;\n      }\n\n      var maxWidth = (cov_2dv2upfyf8().s[3]++, this.props.FEATURE_FLAG_readyForDesktopView ? (cov_2dv2upfyf8().b[1][0]++, '1200px') : (cov_2dv2upfyf8().b[1][1]++, '500px'));\n      cov_2dv2upfyf8().s[4]++;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }\n      }, __jsx(AppBar, {\n        position: \"sticky\",\n        style: appBarStyle\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        style: {\n          textDecoration: 'none'\n        }\n      }, __jsx(Toolbar, null, __jsx(\"img\", {\n        style: {\n          marginRight: '8px',\n          height: '48px'\n        },\n        src: FbgLogo,\n        alt: \"FbG\"\n      }), __jsx(Typography, {\n        component: \"h1\",\n        variant: \"h6\",\n        style: {\n          color: 'white'\n        }\n      }, \"FreeBoardGames.org\"), versionInfo))))), __jsx(\"div\", {\n        style: {\n          maxWidth: maxWidth,\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return FreeBoardGamesBar;\n}((React.Component));\n\nexport default FreeBoardGamesBar;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/FreeBoardGamesBar.tsx"],"names":["React","AppBar","Toolbar","Typography","FbgLogo","Link","FreeBoardGamesBar","isProdChannel","appBarStyle","versionInfo","color","marginLeft","process","env","VERSION","maxWidth","props","FEATURE_FLAG_readyForDesktopView","marginRight","textDecoration","height","children","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAMMC,iB;;;;;;;;;;;;;6BACK;AAAA;AACP,UAAMC,aAAa,mCAAnB;AACA,UAAIC,WAAJ;AACA,UAAIC,WAAJ;AAHO;;AAKP,UAAI,CAACF,aAAL,EAAoB;AAAA;AAAA;AAClBE,QAAAA,WAAW,GACT,MAAC,UAAD;AAAY,0BAAa,QAAzB;AAAkC,UAAA,OAAO,EAAC,IAA1C;AAA+C,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,UAAU,EAAE;AAA9B;AAAtD,WACGC,OAAO,CAACC,GAAR,CAAYC,OADf,CADF;AAKD,OAND;AAAA;AAAA;;AAQA,UAAMC,QAAQ,6BAAG,KAAKC,KAAL,CAAWC,gCAAX,gCAA8C,QAA9C,iCAAyD,OAAzD,CAAH,CAAd;AAbO;AAeP,aACE,MAAC,KAAD,CAAO,QAAP,QACE;AACE,QAAA,KAAK,EAAE;AACLN,UAAAA,UAAU,EAAE,MADP;AAELO,UAAAA,WAAW,EAAE;AAFR;AADT,SAME,MAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAEV;AAAjC,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACE;AAAG,QAAA,KAAK,EAAE;AAAEW,UAAAA,cAAc,EAAE;AAAlB;AAAV,SACE,MAAC,OAAD,QACE;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,WAAW,EAAE,KAAf;AAAsBE,UAAAA,MAAM,EAAE;AAA9B,SAAZ;AAAoD,QAAA,GAAG,EAAEhB,OAAzD;AAAkE,QAAA,GAAG,EAAC;AAAtE,QADF,EAEE,MAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAwC,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT;AAA/C,8BAFF,EAKGD,WALH,CADF,CADF,CADF,CANF,CADF,EAqBE;AACE,QAAA,KAAK,EAAE;AACLM,UAAAA,QAAQ,EAARA,QADK;AAELJ,UAAAA,UAAU,EAAE,MAFP;AAGLO,UAAAA,WAAW,EAAE;AAHR;AADT,SAOG,KAAKF,KAAL,CAAWK,QAPd,CArBF,CADF;AAiCD;;;;GAjD6BrB,KAAK,CAACsB,S;;AAoDtC,eAAehB,iBAAf","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FbgLogo from './media/fbg_logo_white_48.png';\nimport Link from 'next/link';\n\ninterface FBGBarProps {\n  FEATURE_FLAG_readyForDesktopView?: boolean;\n}\n\nclass FreeBoardGamesBar extends React.Component<FBGBarProps, {}> {\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    let appBarStyle;\n    let versionInfo;\n\n    if (!isProdChannel) {\n      versionInfo = (\n        <Typography data-test-id=\"gitrev\" variant=\"h6\" style={{ color: 'white', marginLeft: 'auto' }}>\n          {process.env.VERSION}\n        </Typography>\n      );\n    }\n\n    const maxWidth = this.props.FEATURE_FLAG_readyForDesktopView ? '1200px' : '500px';\n\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          <AppBar position=\"sticky\" style={appBarStyle}>\n            <Link href=\"/\">\n              <a style={{ textDecoration: 'none' }}>\n                <Toolbar>\n                  <img style={{ marginRight: '8px', height: '48px' }} src={FbgLogo} alt=\"FbG\" />\n                  <Typography component=\"h1\" variant=\"h6\" style={{ color: 'white' }}>\n                    FreeBoardGames.org\n                  </Typography>\n                  {versionInfo}\n                </Toolbar>\n              </a>\n            </Link>\n          </AppBar>\n        </div>\n        <div\n          style={{\n            maxWidth,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FreeBoardGamesBar;\n"]},"metadata":{},"sourceType":"module"}