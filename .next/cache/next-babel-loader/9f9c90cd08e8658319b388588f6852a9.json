{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_1i6iwuas5o() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\";\n  var hash = \"25e20192ca394c49b0a7e8453bbdb1b71155d546\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 25,\n          column: 16\n        },\n        end: {\n          line: 27,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 32,\n          column: 13\n        },\n        end: {\n          line: 32,\n          column: 68\n        }\n      },\n      \"2\": {\n        start: {\n          line: 33,\n          column: 19\n        },\n        end: {\n          line: 33,\n          column: 66\n        }\n      },\n      \"3\": {\n        start: {\n          line: 35,\n          column: 16\n        },\n        end: {\n          line: 35,\n          column: 34\n        }\n      },\n      \"4\": {\n        start: {\n          line: 36,\n          column: 23\n        },\n        end: {\n          line: 36,\n          column: 87\n        }\n      },\n      \"5\": {\n        start: {\n          line: 38,\n          column: 4\n        },\n        end: {\n          line: 95,\n          column: 6\n        }\n      },\n      \"6\": {\n        start: {\n          line: 46,\n          column: 34\n        },\n        end: {\n          line: 46,\n          column: 45\n        }\n      },\n      \"7\": {\n        start: {\n          line: 47,\n          column: 22\n        },\n        end: {\n          line: 72,\n          column: 25\n        }\n      },\n      \"8\": {\n        start: {\n          line: 56,\n          column: 73\n        },\n        end: {\n          line: 56,\n          column: 117\n        }\n      },\n      \"9\": {\n        start: {\n          line: 57,\n          column: 73\n        },\n        end: {\n          line: 57,\n          column: 117\n        }\n      },\n      \"10\": {\n        start: {\n          line: 65,\n          column: 60\n        },\n        end: {\n          line: 65,\n          column: 89\n        }\n      },\n      \"11\": {\n        start: {\n          line: 66,\n          column: 61\n        },\n        end: {\n          line: 66,\n          column: 93\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 2\n          },\n          end: {\n            line: 30,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 11\n          },\n          end: {\n            line: 96,\n            column: 3\n          }\n        },\n        line: 30\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 45,\n            column: 35\n          },\n          end: {\n            line: 45,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 45,\n            column: 43\n          },\n          end: {\n            line: 73,\n            column: 17\n          }\n        },\n        line: 45\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 56,\n            column: 53\n          },\n          end: {\n            line: 56,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 56,\n            column: 72\n          },\n          end: {\n            line: 56,\n            column: 118\n          }\n        },\n        line: 56\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 57,\n            column: 53\n          },\n          end: {\n            line: 57,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 57,\n            column: 72\n          },\n          end: {\n            line: 57,\n            column: 118\n          }\n        },\n        line: 57\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 65,\n            column: 43\n          },\n          end: {\n            line: 65,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 65,\n            column: 59\n          },\n          end: {\n            line: 65,\n            column: 90\n          }\n        },\n        line: 65\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 66,\n            column: 44\n          },\n          end: {\n            line: 66,\n            column: 45\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 60\n          },\n          end: {\n            line: 66,\n            column: 94\n          }\n        },\n        line: 66\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 32,\n            column: 13\n          },\n          end: {\n            line: 32,\n            column: 68\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 32,\n            column: 35\n          },\n          end: {\n            line: 32,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 32,\n            column: 67\n          },\n          end: {\n            line: 32,\n            column: 68\n          }\n        }],\n        line: 32\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 19\n          },\n          end: {\n            line: 33,\n            column: 66\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 41\n          },\n          end: {\n            line: 33,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 63\n          },\n          end: {\n            line: 33,\n            column: 66\n          }\n        }],\n        line: 33\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 53,\n            column: 29\n          },\n          end: {\n            line: 61,\n            column: 41\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 54,\n            column: 30\n          },\n          end: {\n            line: 54,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 56,\n            column: 30\n          },\n          end: {\n            line: 61,\n            column: 41\n          }\n        }],\n        line: 53\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 77,\n            column: 18\n          },\n          end: {\n            line: 83,\n            column: 29\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 18\n          },\n          end: {\n            line: 80,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 82,\n            column: 18\n          },\n          end: {\n            line: 83,\n            column: 29\n          }\n        }],\n        line: 77\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"25e20192ca394c49b0a7e8453bbdb1b71155d546\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1i6iwuas5o = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1i6iwuas5o();\nimport * as React from 'react';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { BHand } from './components/bhand';\nimport { BTrash } from './components/btrash';\nimport { BPiles } from './components/bpiles';\nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\nimport { BNameBadge } from './components/bnamebadge';\nlet handStyle = (cov_1i6iwuas5o().s[0]++, {\n  display: 'flex'\n});\nexport class Board extends (React.Component) {\n  render() {\n    cov_1i6iwuas5o().f[0]++;\n    var me = (cov_1i6iwuas5o().s[1]++, this.props.playerID ? (cov_1i6iwuas5o().b[0][0]++, parseInt(this.props.playerID)) : (cov_1i6iwuas5o().b[0][1]++, 1)); // TODO : Local Fix - defaults to player 1\n\n    var playerID = (cov_1i6iwuas5o().s[2]++, this.props.playerID ? (cov_1i6iwuas5o().b[1][0]++, this.props.playerID) : (cov_1i6iwuas5o().b[1][1]++, \"1\")); // TODO : Local Fix\n\n    let hands = (cov_1i6iwuas5o().s[3]++, this.props.G.hands);\n    let rotatedHands = (cov_1i6iwuas5o().s[4]++, hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1)));\n    cov_1i6iwuas5o().s[5]++;\n    return __jsx(GameLayout, {\n      gameArgs: this.props.gameArgs,\n      allowWiderScreen: true\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex'\n      }\n    }, __jsx(\"div\", null, rotatedHands.map(hand => {\n      cov_1i6iwuas5o().f[1]++;\n      let index = (cov_1i6iwuas5o().s[6]++, hand.player);\n      cov_1i6iwuas5o().s[7]++;\n      return __jsx(\"div\", {\n        key: \"Board\" + index.toString(),\n        style: handStyle\n      }, __jsx(BNameBadge, {\n        name: this.props.ctx.currentPlayer,\n        turn: this.props.gameArgs.players[index].name == this.props.ctx.currentPlayer\n      }), index === me ? (cov_1i6iwuas5o().b[2][0]++, __jsx(React.Fragment, null, __jsx(\"hr\", null), \"Your Hand:\")) : (cov_1i6iwuas5o().b[2][1]++, __jsx(BButtons, {\n        onHintColor: value => {\n          cov_1i6iwuas5o().f[2]++;\n          cov_1i6iwuas5o().s[8]++;\n          this.props.moves.moveHintColor(index, value);\n        },\n        onHintValue: value => {\n          cov_1i6iwuas5o().f[3]++;\n          cov_1i6iwuas5o().s[9]++;\n          this.props.moves.moveHintValue(index, value);\n        },\n        myTurn: this.props.ctx.currentPlayer === playerID,\n        keyPropagation: \"Board\" + index.toString()\n      })), __jsx(BHand, {\n        hand: hand,\n        me: me === index,\n        onPlay: id => {\n          cov_1i6iwuas5o().f[4]++;\n          cov_1i6iwuas5o().s[10]++;\n          this.props.moves.movePlay(id);\n        },\n        onTrash: id => {\n          cov_1i6iwuas5o().f[5]++;\n          cov_1i6iwuas5o().s[11]++;\n          this.props.moves.moveDiscard(id);\n        },\n        myTurn: this.props.ctx.currentPlayer === playerID,\n        keyPropagation: \"Board\" + index.toString()\n      }));\n    })), __jsx(\"div\", null, this.props.G.trash.length === 0 ? (cov_1i6iwuas5o().b[3][0]++, __jsx(BTrash, {\n      card: null\n    })) : (cov_1i6iwuas5o().b[3][1]++, __jsx(BTrash, {\n      card: this.props.G.trash[this.props.G.trash.length - 1]\n    })), __jsx(BToken, {\n      treats: this.props.G.treats,\n      countdown: this.props.G.countdown\n    }), __jsx(BDeck, {\n      cardsLeft: this.props.G.deckindex\n    })), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '55px'\n      }\n    }, __jsx(BPiles, {\n      piles: this.props.G.piles,\n      keyPropagation: \"Board\"\n    }))));\n  }\n\n} // <pre>{JSON.stringify(this.props.gameArgs, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.G, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.moves, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.playerID, null, 2)}</pre>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Treats </th>\n//            <th> Countdown </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th>{JSON.stringify(this.props.G.treats)}</th>\n//            <th>{JSON.stringify(this.props.G.countdown)}</th>\n//          </tr>\n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Color 0 </th>\n//            <th> Color 1 </th>\n//            <th> Color 2 </th>\n//            <th> Color 3 </th>\n//            <th> Color 4 </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.piles[0])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[1])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[2])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[3])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[4])}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Player ID</th>\n//            <th> Cards </th>\n//            <th> Hints </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> 0 </th>\n//            <th> {JSON.stringify(this.props.G.hands[0].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[0].hints)}</th>\n//          </tr> \n//          <tr>\n//            <th> 1 </th>\n//            <th> {JSON.stringify(this.props.G.hands[1].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[1].hints)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Trash </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.trash)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//\n//        <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx"],"names":["React","GameLayout","BHand","BTrash","BPiles","BToken","BDeck","BButtons","BNameBadge","handStyle","display","Board","Component","render","me","props","playerID","parseInt","hands","G","rotatedHands","slice","length","concat","gameArgs","map","hand","index","player","toString","ctx","currentPlayer","players","name","value","moves","moveHintColor","moveHintValue","id","movePlay","moveDiscard","trash","treats","countdown","deckindex","flexDirection","maxWidth","piles"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG } from './interfaces';\n\nimport { BHand } from './components/bhand'; \nimport { BTrash } from './components/btrash'; \nimport { BPiles } from './components/bpiles'; \nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\nimport { BNameBadge } from './components/bnamebadge';\n\nimport { IPlayerInRoom } from 'components/App/Lobby/LobbyService';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n}\n\nlet handStyle = {\n  display: 'flex'\n}\n\nexport class Board extends React.Component<IBoardProps,  {}> {\n  render() {\n\n    var me = this.props.playerID ? parseInt(this.props.playerID) : 1 // TODO : Local Fix - defaults to player 1\n    var playerID = this.props.playerID ? this.props.playerID : \"1\" // TODO : Local Fix\n    \n    let hands = this.props.G.hands;\n    let rotatedHands = hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1));\n\n    return (\n      <GameLayout\n          gameArgs={this.props.gameArgs}\n          allowWiderScreen={true}\n          >\n          <div style={{display: 'flex'}}>\n            <div>\n                { rotatedHands.map(hand => {\n                      let index = hand.player;\n                      return (\n                        <div key={\"Board\" + index.toString()}\n                             style={handStyle}>\n                               <BNameBadge name={ this.props.ctx.currentPlayer }\n                                          turn={  this.props.gameArgs.players[index].name == this.props.ctx.currentPlayer }\n                              ></BNameBadge>\n                            {index === me ?\n                              <><hr />Your Hand:</>\n                            :\n                              <BButtons onHintColor={(value: number) => {this.props.moves.moveHintColor(index, value)}}\n                                        onHintValue={(value: number) => {this.props.moves.moveHintValue(index, value)}}\n                                        myTurn={this.props.ctx.currentPlayer === playerID}\n                                        keyPropagation={\"Board\" + index.toString()}\n                                        > \n                              </BButtons>\n                            }\n                            <BHand hand={ hand } \n                                   me={me === index} \n                                   onPlay={(id: number) => {this.props.moves.movePlay(id)}}\n                                   onTrash={(id: number) => {this.props.moves.moveDiscard(id)}}\n                                   myTurn={this.props.ctx.currentPlayer === playerID}\n                                   keyPropagation={\"Board\" + index.toString()}\n                                   >\n                            </BHand>\n                        </div>\n                        )\n                })}\n            </div>\n            <div>\n                {\n                  this.props.G.trash.length === 0\n                  ?\n                  <BTrash card={ null } >\n                    </BTrash>\n                  :\n                  <BTrash card={this.props.G.trash[this.props.G.trash.length - 1]} >\n                    </BTrash>\n                }\n                <BToken treats={this.props.G.treats} countdown={this.props.G.countdown}></BToken>\n                <BDeck cardsLeft={this.props.G.deckindex}></BDeck>\n              </div>\n            <div style={{display: 'flex', flexDirection: 'column', maxWidth: '55px'}}>\n              <BPiles piles={this.props.G.piles}\n                          keyPropagation={\"Board\"}\n                          ></BPiles>\n            </div>\n          </div>\n      </GameLayout>\n    );\n  }\n}\n        // <pre>{JSON.stringify(this.props.gameArgs, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.G, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.moves, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.playerID, null, 2)}</pre>\n\n\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Treats </th>\n//            <th> Countdown </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th>{JSON.stringify(this.props.G.treats)}</th>\n//            <th>{JSON.stringify(this.props.G.countdown)}</th>\n//          </tr>\n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Color 0 </th>\n//            <th> Color 1 </th>\n//            <th> Color 2 </th>\n//            <th> Color 3 </th>\n//            <th> Color 4 </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.piles[0])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[1])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[2])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[3])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[4])}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Player ID</th>\n//            <th> Cards </th>\n//            <th> Hints </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> 0 </th>\n//            <th> {JSON.stringify(this.props.G.hands[0].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[0].hints)}</th>\n//          </tr> \n//          <tr>\n//            <th> 1 </th>\n//            <th> {JSON.stringify(this.props.G.hands[1].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[1].hints)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Trash </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.trash)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//\n//        <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n "]},"metadata":{},"sourceType":"module"}