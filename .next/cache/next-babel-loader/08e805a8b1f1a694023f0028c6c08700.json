{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_1i6iwuas5o() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\";\n  var hash = \"8a8f5a5ea4a7213ce16f960922f49670c4c8faf6\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 26,\n          column: 16\n        },\n        end: {\n          line: 28,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 31,\n          column: 2\n        },\n        end: {\n          line: 36,\n          column: 39\n        }\n      },\n      \"2\": {\n        start: {\n          line: 32,\n          column: 25\n        },\n        end: {\n          line: 35,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 34,\n          column: 55\n        },\n        end: {\n          line: 34,\n          column: 71\n        }\n      },\n      \"4\": {\n        start: {\n          line: 36,\n          column: 20\n        },\n        end: {\n          line: 36,\n          column: 37\n        }\n      },\n      \"5\": {\n        start: {\n          line: 42,\n          column: 13\n        },\n        end: {\n          line: 42,\n          column: 68\n        }\n      },\n      \"6\": {\n        start: {\n          line: 43,\n          column: 19\n        },\n        end: {\n          line: 43,\n          column: 66\n        }\n      },\n      \"7\": {\n        start: {\n          line: 45,\n          column: 16\n        },\n        end: {\n          line: 45,\n          column: 34\n        }\n      },\n      \"8\": {\n        start: {\n          line: 46,\n          column: 23\n        },\n        end: {\n          line: 46,\n          column: 87\n        }\n      },\n      \"9\": {\n        start: {\n          line: 48,\n          column: 4\n        },\n        end: {\n          line: 109,\n          column: 6\n        }\n      },\n      \"10\": {\n        start: {\n          line: 56,\n          column: 34\n        },\n        end: {\n          line: 56,\n          column: 45\n        }\n      },\n      \"11\": {\n        start: {\n          line: 57,\n          column: 22\n        },\n        end: {\n          line: 79,\n          column: 25\n        }\n      },\n      \"12\": {\n        start: {\n          line: 63,\n          column: 73\n        },\n        end: {\n          line: 63,\n          column: 117\n        }\n      },\n      \"13\": {\n        start: {\n          line: 64,\n          column: 73\n        },\n        end: {\n          line: 64,\n          column: 117\n        }\n      },\n      \"14\": {\n        start: {\n          line: 72,\n          column: 60\n        },\n        end: {\n          line: 72,\n          column: 89\n        }\n      },\n      \"15\": {\n        start: {\n          line: 73,\n          column: 61\n        },\n        end: {\n          line: 73,\n          column: 93\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"getScoreBoard\",\n        decl: {\n          start: {\n            line: 30,\n            column: 16\n          },\n          end: {\n            line: 30,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 47\n          },\n          end: {\n            line: 37,\n            column: 1\n          }\n        },\n        line: 30\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 32,\n            column: 9\n          },\n          end: {\n            line: 32,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 32,\n            column: 25\n          },\n          end: {\n            line: 35,\n            column: 5\n          }\n        },\n        line: 32\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 34,\n            column: 40\n          },\n          end: {\n            line: 34,\n            column: 41\n          }\n        },\n        loc: {\n          start: {\n            line: 34,\n            column: 55\n          },\n          end: {\n            line: 34,\n            column: 71\n          }\n        },\n        line: 34\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 36,\n            column: 10\n          },\n          end: {\n            line: 36,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 36,\n            column: 20\n          },\n          end: {\n            line: 36,\n            column: 37\n          }\n        },\n        line: 36\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 2\n          },\n          end: {\n            line: 40,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 11\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        line: 40\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 55,\n            column: 35\n          },\n          end: {\n            line: 55,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 55,\n            column: 43\n          },\n          end: {\n            line: 80,\n            column: 17\n          }\n        },\n        line: 55\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 63,\n            column: 53\n          },\n          end: {\n            line: 63,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 63,\n            column: 72\n          },\n          end: {\n            line: 63,\n            column: 118\n          }\n        },\n        line: 63\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 53\n          },\n          end: {\n            line: 64,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 72\n          },\n          end: {\n            line: 64,\n            column: 118\n          }\n        },\n        line: 64\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 72,\n            column: 43\n          },\n          end: {\n            line: 72,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 72,\n            column: 59\n          },\n          end: {\n            line: 72,\n            column: 90\n          }\n        },\n        line: 72\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 73,\n            column: 44\n          },\n          end: {\n            line: 73,\n            column: 45\n          }\n        },\n        loc: {\n          start: {\n            line: 73,\n            column: 60\n          },\n          end: {\n            line: 73,\n            column: 94\n          }\n        },\n        line: 73\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 13\n          },\n          end: {\n            line: 42,\n            column: 68\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 35\n          },\n          end: {\n            line: 42,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 67\n          },\n          end: {\n            line: 42,\n            column: 68\n          }\n        }],\n        line: 42\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 43,\n            column: 19\n          },\n          end: {\n            line: 43,\n            column: 66\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 43,\n            column: 41\n          },\n          end: {\n            line: 43,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 43,\n            column: 63\n          },\n          end: {\n            line: 43,\n            column: 66\n          }\n        }],\n        line: 43\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 60,\n            column: 29\n          },\n          end: {\n            line: 68,\n            column: 41\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 61,\n            column: 30\n          },\n          end: {\n            line: 61,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 30\n          },\n          end: {\n            line: 68,\n            column: 41\n          }\n        }],\n        line: 60\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 84,\n            column: 18\n          },\n          end: {\n            line: 90,\n            column: 29\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 86,\n            column: 18\n          },\n          end: {\n            line: 87,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 89,\n            column: 18\n          },\n          end: {\n            line: 90,\n            column: 29\n          }\n        }],\n        line: 84\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"8a8f5a5ea4a7213ce16f960922f49670c4c8faf6\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1i6iwuas5o = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1i6iwuas5o();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { ScoreBadges } from '../common/ScoreBadges';\nimport { BHand } from './components/bhand';\nimport { BTrash } from './components/btrash';\nimport { BPiles } from './components/bpiles';\nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\nvar handStyle = (cov_1i6iwuas5o().s[0]++, {\n  display: 'flex'\n});\nexport function getScoreBoard(G) {\n  cov_1i6iwuas5o().f[0]++;\n  cov_1i6iwuas5o().s[1]++;\n  return G.players.map(function (player, i) {\n    cov_1i6iwuas5o().f[1]++;\n    cov_1i6iwuas5o().s[2]++;\n    return {\n      playerID: i.toString(),\n      score: player.penaltyCards.reduce(function (acc, card) {\n        cov_1i6iwuas5o().f[2]++;\n        cov_1i6iwuas5o().s[3]++;\n        return acc + card.value;\n      }, 0)\n    };\n  }).sort(function (a, b) {\n    cov_1i6iwuas5o().f[3]++;\n    cov_1i6iwuas5o().s[4]++;\n    return a.score - b.score;\n  });\n}\nexport var Board = /*#__PURE__*/function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      cov_1i6iwuas5o().f[4]++;\n      var me = (cov_1i6iwuas5o().s[5]++, this.props.playerID ? (cov_1i6iwuas5o().b[0][0]++, parseInt(this.props.playerID)) : (cov_1i6iwuas5o().b[0][1]++, 1)); // TODO : Local Fix - defaults to player 1\n\n      var playerID = (cov_1i6iwuas5o().s[6]++, this.props.playerID ? (cov_1i6iwuas5o().b[1][0]++, this.props.playerID) : (cov_1i6iwuas5o().b[1][1]++, \"1\")); // TODO : Local Fix\n\n      var hands = (cov_1i6iwuas5o().s[7]++, this.props.G.hands);\n      var rotatedHands = (cov_1i6iwuas5o().s[8]++, hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1)));\n      cov_1i6iwuas5o().s[9]++;\n      return __jsx(GameLayout, {\n        gameArgs: this.props.gameArgs,\n        allowWiderScreen: true\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, __jsx(\"div\", null, rotatedHands.map(function (hand) {\n        cov_1i6iwuas5o().f[5]++;\n        var index = (cov_1i6iwuas5o().s[10]++, hand.player);\n        cov_1i6iwuas5o().s[11]++;\n        return __jsx(\"div\", {\n          key: \"Board\" + index.toString(),\n          style: handStyle\n        }, index === me ? (cov_1i6iwuas5o().b[2][0]++, __jsx(React.Fragment, null, __jsx(\"hr\", null), \"Your Hand:\")) : (cov_1i6iwuas5o().b[2][1]++, __jsx(BButtons, {\n          onHintColor: function onHintColor(value) {\n            cov_1i6iwuas5o().f[6]++;\n            cov_1i6iwuas5o().s[12]++;\n\n            _this.props.moves.moveHintColor(index, value);\n          },\n          onHintValue: function onHintValue(value) {\n            cov_1i6iwuas5o().f[7]++;\n            cov_1i6iwuas5o().s[13]++;\n\n            _this.props.moves.moveHintValue(index, value);\n          },\n          myTurn: _this.props.ctx.currentPlayer === playerID,\n          keyPropagation: \"Board\" + index.toString()\n        })), __jsx(BHand, {\n          hand: hand,\n          me: me === index,\n          onPlay: function onPlay(id) {\n            cov_1i6iwuas5o().f[8]++;\n            cov_1i6iwuas5o().s[14]++;\n\n            _this.props.moves.movePlay(id);\n          },\n          onTrash: function onTrash(id) {\n            cov_1i6iwuas5o().f[9]++;\n            cov_1i6iwuas5o().s[15]++;\n\n            _this.props.moves.moveDiscard(id);\n          },\n          myTurn: _this.props.ctx.currentPlayer === playerID,\n          keyPropagation: \"Board\" + index.toString()\n        }));\n      })), __jsx(\"div\", null, this.props.G.trash.length === 0 ? (cov_1i6iwuas5o().b[3][0]++, __jsx(BTrash, {\n        card: null\n      })) : (cov_1i6iwuas5o().b[3][1]++, __jsx(BTrash, {\n        card: this.props.G.trash[this.props.G.trash.length - 1]\n      })), __jsx(BToken, {\n        treats: this.props.G.treats,\n        countdown: this.props.G.countdown\n      }), __jsx(BDeck, {\n        cardsLeft: this.props.G.deckindex\n      })), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          maxWidth: '55px'\n        }\n      }, __jsx(BPiles, {\n        piles: this.props.G.piles,\n        keyPropagation: \"Board\"\n      }))), __jsx(ScoreBadges, {\n        scoreboard: getScoreBoard(this.props.G),\n        playerID: this.props.playerID,\n        players: this.props.gameArgs.players,\n        ctx: this.props.ctx\n      }));\n    }\n  }]);\n\n  return Board;\n}((React.Component)); // <pre>{JSON.stringify(this.props.gameArgs, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.G, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.moves, null, 2)}</pre>\n// <pre>{JSON.stringify(this.props.playerID, null, 2)}</pre>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Treats </th>\n//            <th> Countdown </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th>{JSON.stringify(this.props.G.treats)}</th>\n//            <th>{JSON.stringify(this.props.G.countdown)}</th>\n//          </tr>\n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Color 0 </th>\n//            <th> Color 1 </th>\n//            <th> Color 2 </th>\n//            <th> Color 3 </th>\n//            <th> Color 4 </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.piles[0])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[1])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[2])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[3])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[4])}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Player ID</th>\n//            <th> Cards </th>\n//            <th> Hints </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> 0 </th>\n//            <th> {JSON.stringify(this.props.G.hands[0].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[0].hints)}</th>\n//          </tr> \n//          <tr>\n//            <th> 1 </th>\n//            <th> {JSON.stringify(this.props.G.hands[1].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[1].hints)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Trash </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.trash)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//\n//        <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/board.tsx"],"names":["React","GameLayout","ScoreBadges","BHand","BTrash","BPiles","BToken","BDeck","BButtons","handStyle","display","getScoreBoard","G","players","map","player","i","playerID","toString","score","penaltyCards","reduce","acc","card","value","sort","a","b","Board","me","props","parseInt","hands","rotatedHands","slice","length","concat","gameArgs","hand","index","moves","moveHintColor","moveHintValue","ctx","currentPlayer","id","movePlay","moveDiscard","trash","treats","countdown","deckindex","flexDirection","maxWidth","piles","Component"],"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","sourcesContent":["import * as React from 'react';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG } from './interfaces';\n\nimport { Scoreboard } from '../common/Scoreboard';\nimport { ScoreBadges } from '../common/ScoreBadges';\nimport { IScore } from '../common/Scoreboard';\n\nimport { BHand } from './components/bhand'; \nimport { BTrash } from './components/btrash'; \nimport { BPiles } from './components/bpiles'; \nimport { BToken } from './components/btoken';\nimport { BDeck } from './components/bdeck';\nimport { BButtons } from './components/bbuttons';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n}\n\nlet handStyle = {\n  display: 'flex'\n}\n\nexport function getScoreBoard(G: IG): IScore[] {\n  return G.players\n    .map((player, i) => ({\n      playerID: i.toString(),\n      score: player.penaltyCards.reduce((acc, card) => acc + card.value, 0),\n    }))\n    .sort((a, b) => a.score - b.score);\n}\n\nexport class Board extends React.Component<IBoardProps,  {}> {\n  render() {\n\n    var me = this.props.playerID ? parseInt(this.props.playerID) : 1 // TODO : Local Fix - defaults to player 1\n    var playerID = this.props.playerID ? this.props.playerID : \"1\" // TODO : Local Fix\n    \n    let hands = this.props.G.hands;\n    let rotatedHands = hands.slice(me + 1, hands.length).concat(hands.slice(0, me + 1));\n\n    return (\n      <GameLayout\n          gameArgs={this.props.gameArgs}\n          allowWiderScreen={true}\n          >\n          <div style={{display: 'flex'}}>\n            <div>\n                { rotatedHands.map(hand => {\n                      let index = hand.player;\n                      return (\n                        <div key={\"Board\" + index.toString()}\n                             style={handStyle}>\n                            {index === me ?\n                              <><hr />Your Hand:</>\n                            :\n                              <BButtons onHintColor={(value: number) => {this.props.moves.moveHintColor(index, value)}}\n                                        onHintValue={(value: number) => {this.props.moves.moveHintValue(index, value)}}\n                                        myTurn={this.props.ctx.currentPlayer === playerID}\n                                        keyPropagation={\"Board\" + index.toString()}\n                                        > \n                              </BButtons>\n                            }\n                            <BHand hand={ hand } \n                                   me={me === index} \n                                   onPlay={(id: number) => {this.props.moves.movePlay(id)}}\n                                   onTrash={(id: number) => {this.props.moves.moveDiscard(id)}}\n                                   myTurn={this.props.ctx.currentPlayer === playerID}\n                                   keyPropagation={\"Board\" + index.toString()}\n                                   >\n                            </BHand>\n                        </div>\n                        )\n                })}\n            </div>\n            <div>\n                {\n                  this.props.G.trash.length === 0\n                  ?\n                  <BTrash card={ null } >\n                    </BTrash>\n                  :\n                  <BTrash card={this.props.G.trash[this.props.G.trash.length - 1]} >\n                    </BTrash>\n                }\n                <BToken treats={this.props.G.treats} countdown={this.props.G.countdown}></BToken>\n                <BDeck cardsLeft={this.props.G.deckindex}></BDeck>\n              </div>\n            <div style={{display: 'flex', flexDirection: 'column', maxWidth: '55px'}}>\n              <BPiles piles={this.props.G.piles}\n                          keyPropagation={\"Board\"}\n                          ></BPiles>\n            </div>\n          </div>\n\n        <ScoreBadges\n          scoreboard={getScoreBoard(this.props.G)}\n          playerID={this.props.playerID}\n          players={this.props.gameArgs.players}\n          ctx={this.props.ctx}\n        />\n      </GameLayout>\n    );\n  }\n}\n        // <pre>{JSON.stringify(this.props.gameArgs, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.G, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.moves, null, 2)}</pre>\n        // <pre>{JSON.stringify(this.props.playerID, null, 2)}</pre>\n\n\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Treats </th>\n//            <th> Countdown </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th>{JSON.stringify(this.props.G.treats)}</th>\n//            <th>{JSON.stringify(this.props.G.countdown)}</th>\n//          </tr>\n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Color 0 </th>\n//            <th> Color 1 </th>\n//            <th> Color 2 </th>\n//            <th> Color 3 </th>\n//            <th> Color 4 </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.piles[0])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[1])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[2])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[3])}</th>\n//            <th> {JSON.stringify(this.props.G.piles[4])}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Player ID</th>\n//            <th> Cards </th>\n//            <th> Hints </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> 0 </th>\n//            <th> {JSON.stringify(this.props.G.hands[0].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[0].hints)}</th>\n//          </tr> \n//          <tr>\n//            <th> 1 </th>\n//            <th> {JSON.stringify(this.props.G.hands[1].cards)}</th>\n//            <th> {JSON.stringify(this.props.G.hands[1].hints)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//        <table>\n//          <thead>\n//          <tr>\n//            <th> Trash </th>\n//          </tr>\n//          </thead>\n//          <tbody>\n//          <tr>\n//            <th> {JSON.stringify(this.props.G.trash)}</th>\n//          </tr> \n//          </tbody>\n//        </table>\n//\n//        <pre>{JSON.stringify(this.props.ctx, null, 2)}</pre>\n "]},"metadata":{},"sourceType":"module"}