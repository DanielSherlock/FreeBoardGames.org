{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction cov_ag825iyr0() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoe/game.ts\";\n  var hash = \"3a4fe3724de0637f4e339bca9e03fb432803e409\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/tictactoe/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 10,\n          column: 20\n        },\n        end: {\n          line: 19,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 21,\n          column: 2\n        },\n        end: {\n          line: 33,\n          column: 3\n        }\n      },\n      \"2\": {\n        start: {\n          line: 22,\n          column: 19\n        },\n        end: {\n          line: 22,\n          column: 32\n        }\n      },\n      \"3\": {\n        start: {\n          line: 23,\n          column: 17\n        },\n        end: {\n          line: 23,\n          column: 23\n        }\n      },\n      \"4\": {\n        start: {\n          line: 24,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 5\n        }\n      },\n      \"5\": {\n        start: {\n          line: 25,\n          column: 6\n        },\n        end: {\n          line: 28,\n          column: 7\n        }\n      },\n      \"6\": {\n        start: {\n          line: 26,\n          column: 8\n        },\n        end: {\n          line: 26,\n          column: 22\n        }\n      },\n      \"7\": {\n        start: {\n          line: 27,\n          column: 8\n        },\n        end: {\n          line: 27,\n          column: 14\n        }\n      },\n      \"8\": {\n        start: {\n          line: 30,\n          column: 4\n        },\n        end: {\n          line: 32,\n          column: 5\n        }\n      },\n      \"9\": {\n        start: {\n          line: 31,\n          column: 6\n        },\n        end: {\n          line: 31,\n          column: 18\n        }\n      },\n      \"10\": {\n        start: {\n          line: 35,\n          column: 2\n        },\n        end: {\n          line: 35,\n          column: 15\n        }\n      },\n      \"11\": {\n        start: {\n          line: 38,\n          column: 29\n        },\n        end: {\n          line: 68,\n          column: 1\n        }\n      },\n      \"12\": {\n        start: {\n          line: 41,\n          column: 16\n        },\n        end: {\n          line: 43,\n          column: 3\n        }\n      },\n      \"13\": {\n        start: {\n          line: 47,\n          column: 20\n        },\n        end: {\n          line: 47,\n          column: 32\n        }\n      },\n      \"14\": {\n        start: {\n          line: 49,\n          column: 6\n        },\n        end: {\n          line: 52,\n          column: 7\n        }\n      },\n      \"15\": {\n        start: {\n          line: 50,\n          column: 8\n        },\n        end: {\n          line: 50,\n          column: 38\n        }\n      },\n      \"16\": {\n        start: {\n          line: 51,\n          column: 8\n        },\n        end: {\n          line: 51,\n          column: 31\n        }\n      },\n      \"17\": {\n        start: {\n          line: 61,\n          column: 4\n        },\n        end: {\n          line: 63,\n          column: 5\n        }\n      },\n      \"18\": {\n        start: {\n          line: 62,\n          column: 6\n        },\n        end: {\n          line: 62,\n          column: 43\n        }\n      },\n      \"19\": {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 5\n        }\n      },\n      \"20\": {\n        start: {\n          line: 64,\n          column: 35\n        },\n        end: {\n          line: 64,\n          column: 45\n        }\n      },\n      \"21\": {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 28\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"isVictory\",\n        decl: {\n          start: {\n            line: 9,\n            column: 16\n          },\n          end: {\n            line: 9,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 9,\n            column: 43\n          },\n          end: {\n            line: 36,\n            column: 1\n          }\n        },\n        line: 9\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 41,\n            column: 9\n          },\n          end: {\n            line: 41,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 41,\n            column: 16\n          },\n          end: {\n            line: 43,\n            column: 3\n          }\n        },\n        line: 41\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 46,\n            column: 44\n          },\n          end: {\n            line: 53,\n            column: 5\n          }\n        },\n        line: 46\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 60,\n            column: 9\n          },\n          end: {\n            line: 60,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 21\n          },\n          end: {\n            line: 67,\n            column: 3\n          }\n        },\n        line: 60\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 23\n          },\n          end: {\n            line: 64,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 35\n          },\n          end: {\n            line: 64,\n            column: 45\n          }\n        },\n        line: 64\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 28,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 28,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 6\n          },\n          end: {\n            line: 28,\n            column: 7\n          }\n        }],\n        line: 25\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 30,\n            column: 4\n          },\n          end: {\n            line: 32,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 30,\n            column: 4\n          },\n          end: {\n            line: 32,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 30,\n            column: 4\n          },\n          end: {\n            line: 32,\n            column: 5\n          }\n        }],\n        line: 30\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 49,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 49,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 49,\n            column: 6\n          },\n          end: {\n            line: 52,\n            column: 7\n          }\n        }],\n        line: 49\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 63,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 63,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 63,\n            column: 5\n          }\n        }],\n        line: 61\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }],\n        line: 64\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"3a4fe3724de0637f4e339bca9e03fb432803e409\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_ag825iyr0 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_ag825iyr0();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nexport function isVictory(cells) {\n  cov_ag825iyr0().f[0]++;\n  var positions = (cov_ag825iyr0().s[0]++, [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]);\n  cov_ag825iyr0().s[1]++;\n\n  for (var _i = 0, _positions = positions; _i < _positions.length; _i++) {\n    var pos = _positions[_i];\n    var symbol = (cov_ag825iyr0().s[2]++, cells[pos[0]]);\n    var winner = (cov_ag825iyr0().s[3]++, symbol);\n    cov_ag825iyr0().s[4]++;\n\n    var _iterator = _createForOfIteratorHelper(pos),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var i = _step.value;\n        cov_ag825iyr0().s[5]++;\n\n        if (cells[i] !== symbol) {\n          cov_ag825iyr0().b[0][0]++;\n          cov_ag825iyr0().s[6]++;\n          winner = null;\n          cov_ag825iyr0().s[7]++;\n          break;\n        } else {\n          cov_ag825iyr0().b[0][1]++;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    cov_ag825iyr0().s[8]++;\n\n    if (winner != null) {\n      cov_ag825iyr0().b[1][0]++;\n      cov_ag825iyr0().s[9]++;\n      return true;\n    } else {\n      cov_ag825iyr0().b[1][1]++;\n    }\n  }\n\n  cov_ag825iyr0().s[10]++;\n  return false;\n}\nexport var TictactoeGame = (cov_ag825iyr0().s[11]++, {\n  name: 'tictactoe',\n  setup: function setup() {\n    cov_ag825iyr0().f[1]++;\n    cov_ag825iyr0().s[12]++;\n    return {\n      cells: Array(9).fill(null)\n    };\n  },\n  moves: {\n    clickCell: function clickCell(G, ctx, id) {\n      cov_ag825iyr0().f[2]++;\n      var cells = (cov_ag825iyr0().s[13]++, _toConsumableArray(G.cells));\n      cov_ag825iyr0().s[14]++;\n\n      if (cells[id] === null) {\n        cov_ag825iyr0().b[2][0]++;\n        cov_ag825iyr0().s[15]++;\n        cells[id] = ctx.currentPlayer;\n        cov_ag825iyr0().s[16]++;\n        return _objectSpread({}, G, {\n          cells: cells\n        });\n      } else {\n        cov_ag825iyr0().b[2][1]++;\n      }\n    }\n  },\n  turn: {\n    moveLimit: 1\n  },\n  endIf: function endIf(G, ctx) {\n    cov_ag825iyr0().f[3]++;\n    cov_ag825iyr0().s[17]++;\n\n    if (isVictory(G.cells)) {\n      cov_ag825iyr0().b[3][0]++;\n      cov_ag825iyr0().s[18]++;\n      return {\n        winner: ctx.currentPlayer\n      };\n    } else {\n      cov_ag825iyr0().b[3][1]++;\n    }\n\n    cov_ag825iyr0().s[19]++;\n\n    if (G.cells.filter(function (c) {\n      cov_ag825iyr0().f[4]++;\n      cov_ag825iyr0().s[20]++;\n      return c === null;\n    }).length === 0) {\n      cov_ag825iyr0().b[4][0]++;\n      cov_ag825iyr0().s[21]++;\n      return {\n        draw: true\n      };\n    } else {\n      cov_ag825iyr0().b[4][1]++;\n    }\n  }\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/tictactoe/game.ts"],"names":["isVictory","cells","positions","pos","symbol","winner","i","TictactoeGame","name","setup","Array","fill","moves","clickCell","G","ctx","id","currentPlayer","turn","moveLimit","endIf","filter","c","length","draw"],"mappingsmBC,KAAnB,EAAoC;AAAA;AACzC,MAAMC,SAAS,4BAAG,CAChB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADgB,EAEhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFgB,EAGhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHgB,EAIhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJgB,EAKhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALgB,EAMhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANgB,EAOhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPgB,EAQhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARgB,CAAH,CAAf;AADyC;;AAYzC,gCAAkBA,SAAlB,gCAA6B;AAAxB,QAAMC,GAAG,iBAAT;AACH,QAAMC,MAAM,4BAAGH,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAR,CAAZ;AACA,QAAIE,MAAM,4BAAGD,MAAH,CAAV;AAF2B;;AAAA,+CAGXD,GAHW;AAAA;;AAAA;AAG3B,0DAAqB;AAAA,YAAVG,CAAU;AAAA;;AACnB,YAAIL,KAAK,CAACK,CAAD,CAAL,KAAaF,MAAjB,EAAyB;AAAA;AAAA;AACvBC,UAAAA,MAAM,GAAG,IAAT;AADuB;AAEvB;AACD,SAHD;AAAA;AAAA;AAID;AAR0B;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAS3B,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAAA;AAAA;AAClB,aAAO,IAAP;AACD,KAFD;AAAA;AAAA;AAGD;;AAxBwC;AA0BzC,SAAO,KAAP;AACD;AAED,OAAO,IAAME,aAAa,6BAAG;AAC3BC,EAAAA,IAAI,EAAE,WADqB;AAG3BC,EAAAA,KAAK,EAAE,iBAAO;AAAA;AAAA;AAAA;AACZR,MAAAA,KAAK,EAAES,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADK;AAEb,GAL0B;AAO3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SADK,qBACKC,CADL,EACaC,GADb,EACuBC,EADvB,EACmC;AAAA;AACtC,UAAMf,KAAK,gDAAOa,CAAC,CAACb,KAAT,EAAX;AADsC;;AAGtC,UAAIA,KAAK,CAACe,EAAD,CAAL,KAAc,IAAlB,EAAwB;AAAA;AAAA;AACtBf,QAAAA,KAAK,CAACe,EAAD,CAAL,GAAYD,GAAG,CAACE,aAAhB;AADsB;AAEtB,iCAAYH,CAAZ;AAAeb,UAAAA,KAAK,EAALA;AAAf;AACD,OAHD;AAAA;AAAA;AAID;AARI,GAPoB;AAkB3BiB,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GAlBqB;AAsB3BC,EAAAA,KAAK,EAAE,eAACN,CAAD,EAAIC,GAAJ,EAAY;AAAA;AAAA;;AACjB,QAAIf,SAAS,CAACc,CAAC,CAACb,KAAH,CAAb,EAAwB;AAAA;AAAA;AACtB,aAAO;AAAEI,QAAAA,MAAM,EAAEU,GAAG,CAACE;AAAd,OAAP;AACD,KAFD;AAAA;AAAA;;AADiB;;AAIjB,QAAIH,CAAC,CAACb,KAAF,CAAQoB,MAAR,CAAe,UAACC,CAAD,EAAY;AAAA;AAAA;AAAA,aAAAA,CAAC,KAAK,IAAN;AAAU,KAArC,EAAuCC,MAAvC,KAAkD,CAAtD,EAAyD;AAAA;AAAA;AACvD,aAAO;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD,KAFD;AAAA;AAAA;AAGD;AA7B0B,CAAH,CAAnB","sourcesContent":["/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nexport function isVictory(cells: number[]) {\n  const positions = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (const pos of positions) {\n    const symbol = cells[pos[0]];\n    let winner = symbol;\n    for (const i of pos) {\n      if (cells[i] !== symbol) {\n        winner = null;\n        break;\n      }\n    }\n    if (winner != null) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport const TictactoeGame = {\n  name: 'tictactoe',\n\n  setup: () => ({\n    cells: Array(9).fill(null),\n  }),\n\n  moves: {\n    clickCell(G: any, ctx: any, id: number) {\n      const cells = [...G.cells];\n\n      if (cells[id] === null) {\n        cells[id] = ctx.currentPlayer;\n        return { ...G, cells };\n      }\n    },\n  },\n\n  turn: {\n    moveLimit: 1,\n  },\n\n  endIf: (G, ctx) => {\n    if (isVictory(G.cells)) {\n      return { winner: ctx.currentPlayer };\n    }\n    if (G.cells.filter((c: any) => c === null).length === 0) {\n      return { draw: true };\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}