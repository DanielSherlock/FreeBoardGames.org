{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction cov_2q1hr4437t() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/game.ts\";\n  var hash = \"74ceab7b19722f8eca237a99470c0a7098ba15d0\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 19,\n          column: 2\n        },\n        end: {\n          line: 19,\n          column: 29\n        }\n      },\n      \"1\": {\n        start: {\n          line: 23,\n          column: 30\n        },\n        end: {\n          line: 23,\n          column: 51\n        }\n      },\n      \"2\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 26,\n          column: 3\n        }\n      },\n      \"3\": {\n        start: {\n          line: 25,\n          column: 4\n        },\n        end: {\n          line: 25,\n          column: 16\n        }\n      },\n      \"4\": {\n        start: {\n          line: 27,\n          column: 26\n        },\n        end: {\n          line: 27,\n          column: 91\n        }\n      },\n      \"5\": {\n        start: {\n          line: 27,\n          column: 48\n        },\n        end: {\n          line: 27,\n          column: 90\n        }\n      },\n      \"6\": {\n        start: {\n          line: 28,\n          column: 12\n        },\n        end: {\n          line: 28,\n          column: 35\n        }\n      },\n      \"7\": {\n        start: {\n          line: 29,\n          column: 17\n        },\n        end: {\n          line: 29,\n          column: 18\n        }\n      },\n      \"8\": {\n        start: {\n          line: 30,\n          column: 2\n        },\n        end: {\n          line: 35,\n          column: 5\n        }\n      },\n      \"9\": {\n        start: {\n          line: 31,\n          column: 4\n        },\n        end: {\n          line: 34,\n          column: 5\n        }\n      },\n      \"10\": {\n        start: {\n          line: 32,\n          column: 6\n        },\n        end: {\n          line: 32,\n          column: 17\n        }\n      },\n      \"11\": {\n        start: {\n          line: 33,\n          column: 6\n        },\n        end: {\n          line: 33,\n          column: 23\n        }\n      },\n      \"12\": {\n        start: {\n          line: 36,\n          column: 2\n        },\n        end: {\n          line: 36,\n          column: 29\n        }\n      },\n      \"13\": {\n        start: {\n          line: 40,\n          column: 20\n        },\n        end: {\n          line: 40,\n          column: 80\n        }\n      },\n      \"14\": {\n        start: {\n          line: 40,\n          column: 42\n        },\n        end: {\n          line: 40,\n          column: 63\n        }\n      },\n      \"15\": {\n        start: {\n          line: 41,\n          column: 15\n        },\n        end: {\n          line: 41,\n          column: 54\n        }\n      },\n      \"16\": {\n        start: {\n          line: 42,\n          column: 2\n        },\n        end: {\n          line: 42,\n          column: 40\n        }\n      },\n      \"17\": {\n        start: {\n          line: 46,\n          column: 2\n        },\n        end: {\n          line: 59,\n          column: 4\n        }\n      },\n      \"18\": {\n        start: {\n          line: 63,\n          column: 2\n        },\n        end: {\n          line: 65,\n          column: 3\n        }\n      },\n      \"19\": {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 64,\n          column: 24\n        }\n      },\n      \"20\": {\n        start: {\n          line: 66,\n          column: 2\n        },\n        end: {\n          line: 76,\n          column: 4\n        }\n      },\n      \"21\": {\n        start: {\n          line: 73,\n          column: 73\n        },\n        end: {\n          line: 73,\n          column: 85\n        }\n      },\n      \"22\": {\n        start: {\n          line: 80,\n          column: 2\n        },\n        end: {\n          line: 85,\n          column: 39\n        }\n      },\n      \"23\": {\n        start: {\n          line: 81,\n          column: 25\n        },\n        end: {\n          line: 84,\n          column: 5\n        }\n      },\n      \"24\": {\n        start: {\n          line: 83,\n          column: 55\n        },\n        end: {\n          line: 83,\n          column: 71\n        }\n      },\n      \"25\": {\n        start: {\n          line: 85,\n          column: 20\n        },\n        end: {\n          line: 85,\n          column: 37\n        }\n      },\n      \"26\": {\n        start: {\n          line: 89,\n          column: 2\n        },\n        end: {\n          line: 91,\n          column: 3\n        }\n      },\n      \"27\": {\n        start: {\n          line: 90,\n          column: 4\n        },\n        end: {\n          line: 90,\n          column: 24\n        }\n      },\n      \"28\": {\n        start: {\n          line: 92,\n          column: 30\n        },\n        end: {\n          line: 92,\n          column: 55\n        }\n      },\n      \"29\": {\n        start: {\n          line: 96,\n          column: 2\n        },\n        end: {\n          line: 98,\n          column: 3\n        }\n      },\n      \"30\": {\n        start: {\n          line: 97,\n          column: 4\n        },\n        end: {\n          line: 97,\n          column: 40\n        }\n      },\n      \"31\": {\n        start: {\n          line: 101,\n          column: 2\n        },\n        end: {\n          line: 107,\n          column: 4\n        }\n      },\n      \"32\": {\n        start: {\n          line: 110,\n          column: 30\n        },\n        end: {\n          line: 215,\n          column: 1\n        }\n      },\n      \"33\": {\n        start: {\n          line: 119,\n          column: 30\n        },\n        end: {\n          line: 119,\n          column: 76\n        }\n      },\n      \"34\": {\n        start: {\n          line: 119,\n          column: 56\n        },\n        end: {\n          line: 119,\n          column: 75\n        }\n      },\n      \"35\": {\n        start: {\n          line: 120,\n          column: 8\n        },\n        end: {\n          line: 120,\n          column: 38\n        }\n      },\n      \"36\": {\n        start: {\n          line: 121,\n          column: 8\n        },\n        end: {\n          line: 124,\n          column: 10\n        }\n      },\n      \"37\": {\n        start: {\n          line: 123,\n          column: 49\n        },\n        end: {\n          line: 123,\n          column: 59\n        }\n      },\n      \"38\": {\n        start: {\n          line: 123,\n          column: 76\n        },\n        end: {\n          line: 123,\n          column: 92\n        }\n      },\n      \"39\": {\n        start: {\n          line: 130,\n          column: 10\n        },\n        end: {\n          line: 132,\n          column: 11\n        }\n      },\n      \"40\": {\n        start: {\n          line: 131,\n          column: 12\n        },\n        end: {\n          line: 131,\n          column: 34\n        }\n      },\n      \"41\": {\n        start: {\n          line: 141,\n          column: 8\n        },\n        end: {\n          line: 143,\n          column: 9\n        }\n      },\n      \"42\": {\n        start: {\n          line: 142,\n          column: 10\n        },\n        end: {\n          line: 142,\n          column: 23\n        }\n      },\n      \"43\": {\n        start: {\n          line: 148,\n          column: 32\n        },\n        end: {\n          line: 148,\n          column: 43\n        }\n      },\n      \"44\": {\n        start: {\n          line: 149,\n          column: 23\n        },\n        end: {\n          line: 149,\n          column: 24\n        }\n      },\n      \"45\": {\n        start: {\n          line: 151,\n          column: 12\n        },\n        end: {\n          line: 153,\n          column: 13\n        }\n      },\n      \"46\": {\n        start: {\n          line: 152,\n          column: 14\n        },\n        end: {\n          line: 152,\n          column: 42\n        }\n      },\n      \"47\": {\n        start: {\n          line: 160,\n          column: 4\n        },\n        end: {\n          line: 167,\n          column: 5\n        }\n      },\n      \"48\": {\n        start: {\n          line: 161,\n          column: 25\n        },\n        end: {\n          line: 161,\n          column: 41\n        }\n      },\n      \"49\": {\n        start: {\n          line: 162,\n          column: 6\n        },\n        end: {\n          line: 166,\n          column: 7\n        }\n      },\n      \"50\": {\n        start: {\n          line: 163,\n          column: 8\n        },\n        end: {\n          line: 163,\n          column: 30\n        }\n      },\n      \"51\": {\n        start: {\n          line: 165,\n          column: 8\n        },\n        end: {\n          line: 165,\n          column: 61\n        }\n      },\n      \"52\": {\n        start: {\n          line: 177,\n          column: 17\n        },\n        end: {\n          line: 191,\n          column: 5\n        }\n      },\n      \"53\": {\n        start: {\n          line: 179,\n          column: 20\n        },\n        end: {\n          line: 179,\n          column: 21\n        }\n      },\n      \"54\": {\n        start: {\n          line: 180,\n          column: 8\n        },\n        end: {\n          line: 188,\n          column: 9\n        }\n      },\n      \"55\": {\n        start: {\n          line: 181,\n          column: 10\n        },\n        end: {\n          line: 181,\n          column: 20\n        }\n      },\n      \"56\": {\n        start: {\n          line: 182,\n          column: 15\n        },\n        end: {\n          line: 188,\n          column: 9\n        }\n      },\n      \"57\": {\n        start: {\n          line: 183,\n          column: 10\n        },\n        end: {\n          line: 183,\n          column: 20\n        }\n      },\n      \"58\": {\n        start: {\n          line: 184,\n          column: 15\n        },\n        end: {\n          line: 188,\n          column: 9\n        }\n      },\n      \"59\": {\n        start: {\n          line: 185,\n          column: 10\n        },\n        end: {\n          line: 185,\n          column: 20\n        }\n      },\n      \"60\": {\n        start: {\n          line: 186,\n          column: 15\n        },\n        end: {\n          line: 188,\n          column: 9\n        }\n      },\n      \"61\": {\n        start: {\n          line: 187,\n          column: 10\n        },\n        end: {\n          line: 187,\n          column: 20\n        }\n      },\n      \"62\": {\n        start: {\n          line: 189,\n          column: 8\n        },\n        end: {\n          line: 189,\n          column: 53\n        }\n      },\n      \"63\": {\n        start: {\n          line: 194,\n          column: 4\n        },\n        end: {\n          line: 213,\n          column: 6\n        }\n      },\n      \"64\": {\n        start: {\n          line: 197,\n          column: 19\n        },\n        end: {\n          line: 197,\n          column: 29\n        }\n      },\n      \"65\": {\n        start: {\n          line: 199,\n          column: 23\n        },\n        end: {\n          line: 199,\n          column: 29\n        }\n      },\n      \"66\": {\n        start: {\n          line: 200,\n          column: 64\n        },\n        end: {\n          line: 210,\n          column: 7\n        }\n      },\n      \"67\": {\n        start: {\n          line: 204,\n          column: 25\n        },\n        end: {\n          line: 204,\n          column: 35\n        }\n      },\n      \"68\": {\n        start: {\n          line: 205,\n          column: 12\n        },\n        end: {\n          line: 205,\n          column: 27\n        }\n      },\n      \"69\": {\n        start: {\n          line: 206,\n          column: 12\n        },\n        end: {\n          line: 206,\n          column: 24\n        }\n      },\n      \"70\": {\n        start: {\n          line: 217,\n          column: 27\n        },\n        end: {\n          line: 217,\n          column: 37\n        }\n      },\n      \"71\": {\n        start: {\n          line: 218,\n          column: 34\n        },\n        end: {\n          line: 221,\n          column: 2\n        }\n      },\n      \"72\": {\n        start: {\n          line: 218,\n          column: 54\n        },\n        end: {\n          line: 221,\n          column: 1\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"sortCards\",\n        decl: {\n          start: {\n            line: 18,\n            column: 9\n          },\n          end: {\n            line: 18,\n            column: 18\n          }\n        },\n        loc: {\n          start: {\n            line: 18,\n            column: 37\n          },\n          end: {\n            line: 20,\n            column: 1\n          }\n        },\n        line: 18\n      },\n      \"1\": {\n        name: \"isAllowedDeck\",\n        decl: {\n          start: {\n            line: 22,\n            column: 16\n          },\n          end: {\n            line: 22,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 22,\n            column: 80\n          },\n          end: {\n            line: 37,\n            column: 1\n          }\n        },\n        line: 22\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 38\n          },\n          end: {\n            line: 27,\n            column: 39\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 48\n          },\n          end: {\n            line: 27,\n            column: 90\n          }\n        },\n        line: 27\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 16\n          },\n          end: {\n            line: 30,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 33\n          },\n          end: {\n            line: 35,\n            column: 3\n          }\n        },\n        line: 30\n      },\n      \"4\": {\n        name: \"getCards\",\n        decl: {\n          start: {\n            line: 39,\n            column: 16\n          },\n          end: {\n            line: 39,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 39,\n            column: 61\n          },\n          end: {\n            line: 43,\n            column: 1\n          }\n        },\n        line: 39\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 32\n          },\n          end: {\n            line: 40,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 42\n          },\n          end: {\n            line: 40,\n            column: 63\n          }\n        },\n        line: 40\n      },\n      \"6\": {\n        name: \"moveToHand\",\n        decl: {\n          start: {\n            line: 45,\n            column: 9\n          },\n          end: {\n            line: 45,\n            column: 19\n          }\n        },\n        loc: {\n          start: {\n            line: 45,\n            column: 75\n          },\n          end: {\n            line: 60,\n            column: 1\n          }\n        },\n        line: 45\n      },\n      \"7\": {\n        name: \"selectCard\",\n        decl: {\n          start: {\n            line: 62,\n            column: 16\n          },\n          end: {\n            line: 62,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 62,\n            column: 66\n          },\n          end: {\n            line: 77,\n            column: 1\n          }\n        },\n        line: 62\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 73,\n            column: 59\n          },\n          end: {\n            line: 73,\n            column: 60\n          }\n        },\n        loc: {\n          start: {\n            line: 73,\n            column: 73\n          },\n          end: {\n            line: 73,\n            column: 85\n          }\n        },\n        line: 73\n      },\n      \"9\": {\n        name: \"getScoreBoard\",\n        decl: {\n          start: {\n            line: 79,\n            column: 16\n          },\n          end: {\n            line: 79,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 79,\n            column: 47\n          },\n          end: {\n            line: 86,\n            column: 1\n          }\n        },\n        line: 79\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 81,\n            column: 9\n          },\n          end: {\n            line: 81,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 81,\n            column: 25\n          },\n          end: {\n            line: 84,\n            column: 5\n          }\n        },\n        line: 81\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 83,\n            column: 40\n          },\n          end: {\n            line: 83,\n            column: 41\n          }\n        },\n        loc: {\n          start: {\n            line: 83,\n            column: 55\n          },\n          end: {\n            line: 83,\n            column: 71\n          }\n        },\n        line: 83\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 85,\n            column: 10\n          },\n          end: {\n            line: 85,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 85,\n            column: 20\n          },\n          end: {\n            line: 85,\n            column: 37\n          }\n        },\n        line: 85\n      },\n      \"13\": {\n        name: \"selectDeck\",\n        decl: {\n          start: {\n            line: 88,\n            column: 16\n          },\n          end: {\n            line: 88,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 88,\n            column: 66\n          },\n          end: {\n            line: 108,\n            column: 1\n          }\n        },\n        line: 88\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 118,\n            column: 13\n          },\n          end: {\n            line: 118,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 118,\n            column: 24\n          },\n          end: {\n            line: 125,\n            column: 7\n          }\n        },\n        line: 118\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 119,\n            column: 44\n          },\n          end: {\n            line: 119,\n            column: 45\n          }\n        },\n        loc: {\n          start: {\n            line: 119,\n            column: 56\n          },\n          end: {\n            line: 119,\n            column: 75\n          }\n        },\n        line: 119\n      },\n      \"16\": {\n        name: \"(anonymous_16)\",\n        decl: {\n          start: {\n            line: 123,\n            column: 39\n          },\n          end: {\n            line: 123,\n            column: 40\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 49\n          },\n          end: {\n            line: 123,\n            column: 59\n          }\n        },\n        line: 123\n      },\n      \"17\": {\n        name: \"(anonymous_17)\",\n        decl: {\n          start: {\n            line: 123,\n            column: 65\n          },\n          end: {\n            line: 123,\n            column: 66\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 76\n          },\n          end: {\n            line: 123,\n            column: 92\n          }\n        },\n        line: 123\n      },\n      \"18\": {\n        name: \"(anonymous_18)\",\n        decl: {\n          start: {\n            line: 129,\n            column: 16\n          },\n          end: {\n            line: 129,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 129,\n            column: 28\n          },\n          end: {\n            line: 133,\n            column: 9\n          }\n        },\n        line: 129\n      },\n      \"19\": {\n        name: \"(anonymous_19)\",\n        decl: {\n          start: {\n            line: 140,\n            column: 13\n          },\n          end: {\n            line: 140,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 140,\n            column: 24\n          },\n          end: {\n            line: 144,\n            column: 7\n          }\n        },\n        line: 140\n      },\n      \"20\": {\n        name: \"(anonymous_20)\",\n        decl: {\n          start: {\n            line: 148,\n            column: 21\n          },\n          end: {\n            line: 148,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 148,\n            column: 32\n          },\n          end: {\n            line: 148,\n            column: 43\n          }\n        },\n        line: 148\n      },\n      \"21\": {\n        name: \"(anonymous_21)\",\n        decl: {\n          start: {\n            line: 149,\n            column: 17\n          },\n          end: {\n            line: 149,\n            column: 18\n          }\n        },\n        loc: {\n          start: {\n            line: 149,\n            column: 23\n          },\n          end: {\n            line: 149,\n            column: 24\n          }\n        },\n        line: 149\n      },\n      \"22\": {\n        name: \"(anonymous_22)\",\n        decl: {\n          start: {\n            line: 150,\n            column: 16\n          },\n          end: {\n            line: 150,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 150,\n            column: 28\n          },\n          end: {\n            line: 154,\n            column: 11\n          }\n        },\n        line: 150\n      },\n      \"23\": {\n        name: \"(anonymous_23)\",\n        decl: {\n          start: {\n            line: 159,\n            column: 9\n          },\n          end: {\n            line: 159,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 159,\n            column: 20\n          },\n          end: {\n            line: 168,\n            column: 3\n          }\n        },\n        line: 159\n      },\n      \"24\": {\n        name: \"(anonymous_24)\",\n        decl: {\n          start: {\n            line: 175,\n            column: 9\n          },\n          end: {\n            line: 175,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 175,\n            column: 22\n          },\n          end: {\n            line: 214,\n            column: 3\n          }\n        },\n        line: 175\n      },\n      \"25\": {\n        name: \"(anonymous_25)\",\n        decl: {\n          start: {\n            line: 178,\n            column: 33\n          },\n          end: {\n            line: 178,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 178,\n            column: 43\n          },\n          end: {\n            line: 190,\n            column: 7\n          }\n        },\n        line: 178\n      },\n      \"26\": {\n        name: \"(anonymous_26)\",\n        decl: {\n          start: {\n            line: 197,\n            column: 13\n          },\n          end: {\n            line: 197,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 197,\n            column: 19\n          },\n          end: {\n            line: 197,\n            column: 29\n          }\n        },\n        line: 197\n      },\n      \"27\": {\n        name: \"(anonymous_27)\",\n        decl: {\n          start: {\n            line: 199,\n            column: 13\n          },\n          end: {\n            line: 199,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 199,\n            column: 23\n          },\n          end: {\n            line: 199,\n            column: 29\n          }\n        },\n        line: 199\n      },\n      \"28\": {\n        name: \"(anonymous_28)\",\n        decl: {\n          start: {\n            line: 200,\n            column: 53\n          },\n          end: {\n            line: 200,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 200,\n            column: 64\n          },\n          end: {\n            line: 210,\n            column: 7\n          }\n        },\n        line: 200\n      },\n      \"29\": {\n        name: \"(anonymous_29)\",\n        decl: {\n          start: {\n            line: 203,\n            column: 15\n          },\n          end: {\n            line: 203,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 203,\n            column: 21\n          },\n          end: {\n            line: 207,\n            column: 11\n          }\n        },\n        line: 203\n      },\n      \"30\": {\n        name: \"(anonymous_30)\",\n        decl: {\n          start: {\n            line: 218,\n            column: 34\n          },\n          end: {\n            line: 218,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 218,\n            column: 54\n          },\n          end: {\n            line: 221,\n            column: 1\n          }\n        },\n        line: 218\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 24,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 24,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 24,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        }],\n        line: 24\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 4\n          },\n          end: {\n            line: 34,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 4\n          },\n          end: {\n            line: 34,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 4\n          },\n          end: {\n            line: 34,\n            column: 5\n          }\n        }],\n        line: 31\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 8\n          },\n          end: {\n            line: 31,\n            column: 30\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 8\n          },\n          end: {\n            line: 31,\n            column: 16\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 20\n          },\n          end: {\n            line: 31,\n            column: 30\n          }\n        }],\n        line: 31\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 65,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 65,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 2\n          },\n          end: {\n            line: 65,\n            column: 3\n          }\n        }],\n        line: 63\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 63,\n            column: 6\n          },\n          end: {\n            line: 63,\n            column: 65\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 63,\n            column: 6\n          },\n          end: {\n            line: 63,\n            column: 12\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 16\n          },\n          end: {\n            line: 63,\n            column: 65\n          }\n        }],\n        line: 63\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 89,\n            column: 2\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 89,\n            column: 2\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 89,\n            column: 2\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        }],\n        line: 89\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 96,\n            column: 2\n          },\n          end: {\n            line: 98,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 96,\n            column: 2\n          },\n          end: {\n            line: 98,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 96,\n            column: 2\n          },\n          end: {\n            line: 98,\n            column: 3\n          }\n        }],\n        line: 96\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 96,\n            column: 6\n          },\n          end: {\n            line: 96,\n            column: 67\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 96,\n            column: 6\n          },\n          end: {\n            line: 96,\n            column: 39\n          }\n        }, {\n          start: {\n            line: 96,\n            column: 43\n          },\n          end: {\n            line: 96,\n            column: 67\n          }\n        }],\n        line: 96\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 130,\n            column: 10\n          },\n          end: {\n            line: 132,\n            column: 11\n          }\n        }],\n        line: 130\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 141,\n            column: 8\n          },\n          end: {\n            line: 143,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 141,\n            column: 8\n          },\n          end: {\n            line: 143,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 141,\n            column: 8\n          },\n          end: {\n            line: 143,\n            column: 9\n          }\n        }],\n        line: 141\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 151,\n            column: 12\n          },\n          end: {\n            line: 153,\n            column: 13\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 151,\n            column: 12\n          },\n          end: {\n            line: 153,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 151,\n            column: 12\n          },\n          end: {\n            line: 153,\n            column: 13\n          }\n        }],\n        line: 151\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 160,\n            column: 4\n          },\n          end: {\n            line: 167,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 160,\n            column: 4\n          },\n          end: {\n            line: 167,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 160,\n            column: 4\n          },\n          end: {\n            line: 167,\n            column: 5\n          }\n        }],\n        line: 160\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 162,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 162,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 162,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 7\n          }\n        }],\n        line: 162\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 180,\n            column: 8\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }],\n        line: 180\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 182,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 182,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 182,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }],\n        line: 182\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 184,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 184,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 184,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }],\n        line: 184\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 186,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 186,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 186,\n            column: 15\n          },\n          end: {\n            line: 188,\n            column: 9\n          }\n        }],\n        line: 186\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"74ceab7b19722f8eca237a99470c0a7098ba15d0\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2q1hr4437t = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2q1hr4437t();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INVALID_MOVE, ActivePlayers } from 'boardgame.io/core';\n\nfunction sortCards(a, b) {\n  cov_2q1hr4437t().f[0]++;\n  cov_2q1hr4437t().s[0]++;\n  return a.number - b.number;\n}\n\nexport function isAllowedDeck(G, deckId, playerID) {\n  cov_2q1hr4437t().f[1]++;\n\n  var _ref = (cov_2q1hr4437t().s[1]++, getCards(G, playerID)),\n      card = _ref.card,\n      lastCards = _ref.lastCards;\n\n  cov_2q1hr4437t().s[2]++;\n\n  if (card.number < lastCards[0].number) {\n    cov_2q1hr4437t().b[0][0]++;\n    cov_2q1hr4437t().s[3]++;\n    return true;\n  } else {\n    cov_2q1hr4437t().b[0][1]++;\n  }\n\n  var diffs = (cov_2q1hr4437t().s[4]++, G.decks.map(function (deck) {\n    cov_2q1hr4437t().f[2]++;\n    cov_2q1hr4437t().s[5]++;\n    return card.number - deck[deck.length - 1].number;\n  }));\n  var min = (cov_2q1hr4437t().s[6]++, Number.MAX_SAFE_INTEGER);\n  var minIndex = (cov_2q1hr4437t().s[7]++, 0);\n  cov_2q1hr4437t().s[8]++;\n  diffs.forEach(function (diff, index) {\n    cov_2q1hr4437t().f[3]++;\n    cov_2q1hr4437t().s[9]++;\n\n    if ((cov_2q1hr4437t().b[2][0]++, diff > 0) && (cov_2q1hr4437t().b[2][1]++, diff < min)) {\n      cov_2q1hr4437t().b[1][0]++;\n      cov_2q1hr4437t().s[10]++;\n      min = diff;\n      cov_2q1hr4437t().s[11]++;\n      minIndex = index;\n    } else {\n      cov_2q1hr4437t().b[1][1]++;\n    }\n  });\n  cov_2q1hr4437t().s[12]++;\n  return minIndex === deckId;\n}\nexport function getCards(G, playerID) {\n  cov_2q1hr4437t().f[4]++;\n  var lastCards = (cov_2q1hr4437t().s[13]++, G.decks.map(function (deck) {\n    cov_2q1hr4437t().f[5]++;\n    cov_2q1hr4437t().s[14]++;\n    return deck[deck.length - 1];\n  }).sort(sortCards));\n  var card = (cov_2q1hr4437t().s[15]++, G.players[playerID].selectedCard);\n  cov_2q1hr4437t().s[16]++;\n  return {\n    card: card,\n    lastCards: lastCards\n  };\n}\n\nfunction moveToHand(G, ctx, card, deckId) {\n  cov_2q1hr4437t().f[6]++;\n  cov_2q1hr4437t().s[17]++;\n  return _objectSpread({}, G, {\n    players: Object.values(_objectSpread({}, G.players, _defineProperty({}, ctx.playerID, _objectSpread({}, G.players[ctx.playerID], {\n      penaltyCards: [].concat(_toConsumableArray(G.players[ctx.playerID].penaltyCards), _toConsumableArray(G.decks[deckId]))\n    })))),\n    decks: Object.values(_objectSpread({}, G.decks, _defineProperty({}, deckId, [card])))\n  });\n}\n\nexport function selectCard(G, ctx, id) {\n  cov_2q1hr4437t().f[7]++;\n  cov_2q1hr4437t().s[18]++;\n\n  if ((cov_2q1hr4437t().b[4][0]++, id < 0) || (cov_2q1hr4437t().b[4][1]++, id >= G.players[ctx.playerID].cards.length)) {\n    cov_2q1hr4437t().b[3][0]++;\n    cov_2q1hr4437t().s[19]++;\n    return INVALID_MOVE;\n  } else {\n    cov_2q1hr4437t().b[3][1]++;\n  }\n\n  cov_2q1hr4437t().s[20]++;\n  return _objectSpread({}, G, {\n    players: Object.values(_objectSpread({}, G.players, _defineProperty({}, ctx.playerID, _objectSpread({}, G.players[ctx.playerID], {\n      selectedCard: G.players[ctx.playerID].cards[id],\n      // Set card as selected\n      cards: G.players[ctx.playerID].cards.filter(function (_, index) {\n        cov_2q1hr4437t().f[8]++;\n        cov_2q1hr4437t().s[21]++;\n        return index !== id;\n      }) // Remove card from player's deck\n\n    }))))\n  });\n}\nexport function getScoreBoard(G) {\n  cov_2q1hr4437t().f[9]++;\n  cov_2q1hr4437t().s[22]++;\n  return G.players.map(function (player, i) {\n    cov_2q1hr4437t().f[10]++;\n    cov_2q1hr4437t().s[23]++;\n    return {\n      playerID: i.toString(),\n      score: player.penaltyCards.reduce(function (acc, card) {\n        cov_2q1hr4437t().f[11]++;\n        cov_2q1hr4437t().s[24]++;\n        return acc + card.value;\n      }, 0)\n    };\n  }).sort(function (a, b) {\n    cov_2q1hr4437t().f[12]++;\n    cov_2q1hr4437t().s[25]++;\n    return a.score - b.score;\n  });\n}\nexport function selectDeck(G, ctx, id) {\n  cov_2q1hr4437t().f[13]++;\n  cov_2q1hr4437t().s[26]++;\n\n  if (!isAllowedDeck(G, id, ctx.playerID)) {\n    cov_2q1hr4437t().b[5][0]++;\n    cov_2q1hr4437t().s[27]++;\n    return INVALID_MOVE;\n  } else {\n    cov_2q1hr4437t().b[5][1]++;\n  }\n\n  var _ref2 = (cov_2q1hr4437t().s[28]++, getCards(G, ctx.playerID)),\n      card = _ref2.card,\n      lastCards = _ref2.lastCards; // Card is lower than every in deck OR\n  // card is #6 move all cards from deck to player's hand\n\n\n  cov_2q1hr4437t().s[29]++;\n\n  if ((cov_2q1hr4437t().b[7][0]++, card.number < lastCards[0].number) || (cov_2q1hr4437t().b[7][1]++, G.decks[id].length === 5)) {\n    cov_2q1hr4437t().b[6][0]++;\n    cov_2q1hr4437t().s[30]++;\n    return moveToHand(G, ctx, card, id);\n  } else {\n    cov_2q1hr4437t().b[6][1]++;\n  } // Append card\n\n\n  cov_2q1hr4437t().s[31]++;\n  return _objectSpread({}, G, {\n    decks: Object.values(_objectSpread({}, G.decks, _defineProperty({}, id, [].concat(_toConsumableArray(G.decks[id]), [card]))))\n  });\n}\nvar GameConfig = (cov_2q1hr4437t().s[32]++, {\n  name: 'takesix',\n  phases: {\n    // Everyone needs to select card\n    CARD_SELECT: {\n      moves: {\n        selectCard: selectCard\n      },\n      next: 'DECK_SELECT',\n      // Determine player order\n      onEnd: function onEnd(G) {\n        cov_2q1hr4437t().f[14]++;\n        var selectedCards = (cov_2q1hr4437t().s[33]++, G.players.map(function (player) {\n          cov_2q1hr4437t().f[15]++;\n          cov_2q1hr4437t().s[34]++;\n          return player.selectedCard;\n        }));\n        cov_2q1hr4437t().s[35]++;\n        selectedCards.sort(sortCards);\n        cov_2q1hr4437t().s[36]++;\n        return _objectSpread({}, G, {\n          cardOrder: selectedCards.map(function (card) {\n            cov_2q1hr4437t().f[16]++;\n            cov_2q1hr4437t().s[37]++;\n            return card.owner;\n          }).map(function (owner) {\n            cov_2q1hr4437t().f[17]++;\n            cov_2q1hr4437t().s[38]++;\n            return owner.toString();\n          })\n        });\n      },\n      start: true,\n      turn: {\n        activePlayers: ActivePlayers.ALL_ONCE,\n        onMove: function onMove(_, ctx) {\n          cov_2q1hr4437t().f[18]++;\n          cov_2q1hr4437t().s[39]++;\n\n          if (ctx.activePlayers === null) {\n            cov_2q1hr4437t().b[8][0]++;\n            cov_2q1hr4437t().s[40]++;\n            ctx.events.endPhase();\n          } else {\n            cov_2q1hr4437t().b[8][1]++;\n          }\n        }\n      }\n    },\n    // Select deck\n    DECK_SELECT: {\n      moves: {\n        selectDeck: selectDeck\n      },\n      next: 'CARD_SELECT',\n      onEnd: function onEnd(G) {\n        cov_2q1hr4437t().f[19]++;\n        cov_2q1hr4437t().s[41]++;\n\n        if (G.players[0].cards.length === 0) {\n          cov_2q1hr4437t().b[9][0]++;\n          cov_2q1hr4437t().s[42]++;\n          G.end = true;\n        } else {\n          cov_2q1hr4437t().b[9][1]++;\n        }\n      },\n      turn: {\n        moveLimit: 1,\n        order: {\n          playOrder: function playOrder(G) {\n            cov_2q1hr4437t().f[20]++;\n            cov_2q1hr4437t().s[43]++;\n            return G.cardOrder;\n          },\n          first: function first() {\n            cov_2q1hr4437t().f[21]++;\n            cov_2q1hr4437t().s[44]++;\n            return 0;\n          },\n          next: function next(_, ctx) {\n            cov_2q1hr4437t().f[22]++;\n            cov_2q1hr4437t().s[45]++;\n\n            if (ctx.playOrderPos < ctx.playOrder.length - 1) {\n              cov_2q1hr4437t().b[10][0]++;\n              cov_2q1hr4437t().s[46]++;\n              return ctx.playOrderPos + 1;\n            } else {\n              cov_2q1hr4437t().b[10][1]++;\n            }\n          }\n        }\n      }\n    }\n  },\n  endIf: function endIf(G) {\n    cov_2q1hr4437t().f[23]++;\n    cov_2q1hr4437t().s[47]++;\n\n    if (G.end === true) {\n      cov_2q1hr4437t().b[11][0]++;\n      var scoreboard = (cov_2q1hr4437t().s[48]++, getScoreBoard(G));\n      cov_2q1hr4437t().s[49]++;\n\n      if (scoreboard[0].score === scoreboard[1].score) {\n        cov_2q1hr4437t().b[12][0]++;\n        cov_2q1hr4437t().s[50]++;\n        return {\n          draw: true\n        };\n      } else {\n        cov_2q1hr4437t().b[12][1]++;\n        cov_2q1hr4437t().s[51]++;\n        return {\n          winner: scoreboard[0].playerID.toString()\n        };\n      }\n    } else {\n      cov_2q1hr4437t().b[11][1]++;\n    }\n  },\n  events: {\n    endTurn: false,\n    endGame: false,\n    endPhase: false\n  },\n  // playerView: PlayerView.STRIP_SECRETS,\n  setup: function setup(ctx) {\n    cov_2q1hr4437t().f[24]++;\n    // Generate deck\n    var deck = (cov_2q1hr4437t().s[52]++, ctx.random.Shuffle(new Array(104).fill(0).map(function (_, i) {\n      cov_2q1hr4437t().f[25]++;\n      var value = (cov_2q1hr4437t().s[53]++, 1);\n      cov_2q1hr4437t().s[54]++;\n\n      if ((i + 1) % 55 === 0) {\n        cov_2q1hr4437t().b[13][0]++;\n        cov_2q1hr4437t().s[55]++;\n        value = 7;\n      } else {\n        cov_2q1hr4437t().b[13][1]++;\n        cov_2q1hr4437t().s[56]++;\n\n        if ((i + 1) % 11 === 0) {\n          cov_2q1hr4437t().b[14][0]++;\n          cov_2q1hr4437t().s[57]++;\n          value = 5;\n        } else {\n          cov_2q1hr4437t().b[14][1]++;\n          cov_2q1hr4437t().s[58]++;\n\n          if ((i + 1) % 10 === 0) {\n            cov_2q1hr4437t().b[15][0]++;\n            cov_2q1hr4437t().s[59]++;\n            value = 3;\n          } else {\n            cov_2q1hr4437t().b[15][1]++;\n            cov_2q1hr4437t().s[60]++;\n\n            if ((i + 1) % 5 === 0) {\n              cov_2q1hr4437t().b[16][0]++;\n              cov_2q1hr4437t().s[61]++;\n              value = 2;\n            } else {\n              cov_2q1hr4437t().b[16][1]++;\n            }\n          }\n        }\n      }\n\n      cov_2q1hr4437t().s[62]++;\n      return {\n        number: i + 1,\n        value: value,\n        owner: null\n      };\n    }))); // Set initial state\n\n    cov_2q1hr4437t().s[63]++;\n    return {\n      decks: new Array(4).fill(0).map(function () {\n        cov_2q1hr4437t().f[26]++;\n        cov_2q1hr4437t().s[64]++;\n        return deck.pop();\n      }).sort(sortCards).map(function (card) {\n        cov_2q1hr4437t().f[27]++;\n        cov_2q1hr4437t().s[65]++;\n        return [card];\n      }),\n      players: new Array(ctx.numPlayers).fill(0).map(function (_, i) {\n        cov_2q1hr4437t().f[28]++;\n        cov_2q1hr4437t().s[66]++;\n        return {\n          cards: new Array(10).fill(0).map(function () {\n            cov_2q1hr4437t().f[29]++;\n            var card = (cov_2q1hr4437t().s[67]++, deck.pop());\n            cov_2q1hr4437t().s[68]++;\n            card.owner = i;\n            cov_2q1hr4437t().s[69]++;\n            return card;\n          }).sort(sortCards),\n          penaltyCards: []\n        };\n      }),\n      cardOrder: [],\n      end: false\n    };\n  }\n});\nexport var TakeSixGame = (cov_2q1hr4437t().s[70]++, GameConfig);\ncov_2q1hr4437t().s[71]++;\nexport var TakeSixGameForTest = function TakeSixGameForTest(override) {\n  cov_2q1hr4437t().f[30]++;\n  cov_2q1hr4437t().s[72]++;\n  return _objectSpread({}, GameConfig, {}, override);\n};","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/takesix/game.ts"],"names":["INVALID_MOVE","ActivePlayers","sortCards","a","b","number","isAllowedDeck","G","deckId","playerID","getCards","card","lastCards","diffs","decks","map","deck","length","min","Number","MAX_SAFE_INTEGER","minIndex","forEach","diff","index","sort","players","selectedCard","moveToHand","ctx","Object","values","penaltyCards","selectCard","id","cards","filter","_","getScoreBoard","player","i","toString","score","reduce","acc","value","selectDeck","GameConfig","name","phases","CARD_SELECT","moves","next","onEnd","selectedCards","cardOrder","owner","start","turn","activePlayers","ALL_ONCE","onMove","events","endPhase","DECK_SELECT","end","moveLimit","order","playOrder","first","playOrderPos","endIf","scoreboard","draw","winner","endTurn","endGame","setup","random","Shuffle","Array","fill","pop","numPlayers","TakeSixGame","TakeSixGameForTest","override"],"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","sourcesContent":["import { IGameArgs, IGameCtx, INVALID_MOVE, ActivePlayers } from 'boardgame.io/core';\nimport { IScore } from '../common/Scoreboard';\nimport Card from './card';\nimport Player from './player';\n\nexport interface IG {\n  players: Player[];\n  decks: Card[][];\n  cardOrder: string[];\n  end: boolean;\n}\n\nexport interface IGetCards {\n  card: Card;\n  lastCards: Card[];\n}\n\nfunction sortCards(a: Card, b: Card) {\n  return a.number - b.number;\n}\n\nexport function isAllowedDeck(G: IG, deckId: number, playerID: string): boolean {\n  const { card, lastCards } = getCards(G, playerID);\n  if (card.number < lastCards[0].number) {\n    return true;\n  }\n  const diffs: number[] = G.decks.map((deck) => card.number - deck[deck.length - 1].number);\n  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = 0;\n  diffs.forEach((diff, index) => {\n    if (diff > 0 && diff < min) {\n      min = diff;\n      minIndex = index;\n    }\n  });\n  return minIndex === deckId;\n}\n\nexport function getCards(G: IG, playerID: string): IGetCards {\n  const lastCards = G.decks.map((deck) => deck[deck.length - 1]).sort(sortCards);\n  const card = G.players[playerID as any].selectedCard;\n  return { card, lastCards: lastCards };\n}\n\nfunction moveToHand(G: IG, ctx: IGameCtx, card: Card, deckId: number): any {\n  return {\n    ...G,\n    players: Object.values({\n      ...G.players,\n      [ctx.playerID]: {\n        ...G.players[ctx.playerID as any],\n        penaltyCards: [...G.players[ctx.playerID as any].penaltyCards, ...G.decks[deckId]],\n      },\n    }),\n    decks: Object.values({\n      ...G.decks,\n      [deckId]: [card],\n    }),\n  };\n}\n\nexport function selectCard(G: IG, ctx: IGameCtx, id: number): any {\n  if (id < 0 || id >= G.players[ctx.playerID as any].cards.length) {\n    return INVALID_MOVE;\n  }\n  return {\n    ...G,\n    players: Object.values({\n      ...G.players,\n      [ctx.playerID]: {\n        ...G.players[ctx.playerID as any],\n        selectedCard: G.players[ctx.playerID as any].cards[id], // Set card as selected\n        cards: G.players[ctx.playerID as any].cards.filter((_, index) => index !== id), // Remove card from player's deck\n      },\n    }),\n  };\n}\n\nexport function getScoreBoard(G: IG): IScore[] {\n  return G.players\n    .map((player, i) => ({\n      playerID: i.toString(),\n      score: player.penaltyCards.reduce((acc, card) => acc + card.value, 0),\n    }))\n    .sort((a, b) => a.score - b.score);\n}\n\nexport function selectDeck(G: IG, ctx: IGameCtx, id: number): any {\n  if (!isAllowedDeck(G, id, ctx.playerID)) {\n    return INVALID_MOVE;\n  }\n  const { card, lastCards } = getCards(G, ctx.playerID);\n\n  // Card is lower than every in deck OR\n  // card is #6 move all cards from deck to player's hand\n  if (card.number < lastCards[0].number || G.decks[id].length === 5) {\n    return moveToHand(G, ctx, card, id);\n  }\n\n  // Append card\n  return {\n    ...G,\n    decks: Object.values({\n      ...G.decks,\n      [id]: [...G.decks[id], card],\n    }),\n  };\n}\n\nconst GameConfig: IGameArgs = {\n  name: 'takesix',\n  phases: {\n    // Everyone needs to select card\n    CARD_SELECT: {\n      moves: { selectCard },\n      next: 'DECK_SELECT',\n      // Determine player order\n      onEnd: (G: IG) => {\n        const selectedCards = G.players.map((player) => player.selectedCard);\n        selectedCards.sort(sortCards);\n        return {\n          ...G,\n          cardOrder: selectedCards.map((card) => card.owner).map((owner) => owner.toString()),\n        };\n      },\n      start: true,\n      turn: {\n        activePlayers: ActivePlayers.ALL_ONCE,\n        onMove: (_, ctx) => {\n          if (ctx.activePlayers === null) {\n            ctx.events.endPhase();\n          }\n        },\n      },\n    },\n    // Select deck\n    DECK_SELECT: {\n      moves: { selectDeck },\n      next: 'CARD_SELECT',\n      onEnd: (G: IG) => {\n        if (G.players[0].cards.length === 0) {\n          G.end = true;\n        }\n      },\n      turn: {\n        moveLimit: 1,\n        order: {\n          playOrder: (G: IG) => G.cardOrder,\n          first: () => 0,\n          next: (_, ctx) => {\n            if (ctx.playOrderPos < ctx.playOrder.length - 1) {\n              return ctx.playOrderPos + 1;\n            }\n          },\n        },\n      },\n    },\n  },\n  endIf: (G: IG) => {\n    if (G.end === true) {\n      const scoreboard = getScoreBoard(G);\n      if (scoreboard[0].score === scoreboard[1].score) {\n        return { draw: true };\n      } else {\n        return { winner: scoreboard[0].playerID.toString() };\n      }\n    }\n  },\n  events: {\n    endTurn: false,\n    endGame: false,\n    endPhase: false,\n  },\n  // playerView: PlayerView.STRIP_SECRETS,\n  setup: (ctx): IG => {\n    // Generate deck\n    const deck = ctx.random.Shuffle(\n      new Array(104).fill(0).map((_, i) => {\n        let value = 1;\n        if ((i + 1) % 55 === 0) {\n          value = 7;\n        } else if ((i + 1) % 11 === 0) {\n          value = 5;\n        } else if ((i + 1) % 10 === 0) {\n          value = 3;\n        } else if ((i + 1) % 5 === 0) {\n          value = 2;\n        }\n        return { number: i + 1, value, owner: null };\n      }),\n    );\n\n    // Set initial state\n    return {\n      decks: new Array(4)\n        .fill(0)\n        .map(() => deck.pop())\n        .sort(sortCards)\n        .map((card) => [card]),\n      players: new Array(ctx.numPlayers).fill(0).map((_, i) => ({\n        cards: new Array(10)\n          .fill(0)\n          .map(() => {\n            const card = deck.pop();\n            card.owner = i;\n            return card;\n          })\n          .sort(sortCards),\n        penaltyCards: [],\n      })),\n      cardOrder: [],\n      end: false,\n    };\n  },\n};\n\nexport const TakeSixGame = GameConfig;\nexport const TakeSixGameForTest = (override: any) => ({\n  ...GameConfig,\n  ...override,\n});\n"]},"metadata":{},"sourceType":"module"}