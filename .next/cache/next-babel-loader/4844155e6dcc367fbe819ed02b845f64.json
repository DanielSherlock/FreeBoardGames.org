{"ast":null,"code":"function cov_1ryc5vig74() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/chess/game.ts\";\n  var hash = \"ca38d7720576b37a6377721f169a5c80274fb8c1\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/chess/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 13,\n          column: 2\n        },\n        end: {\n          line: 23,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 14,\n          column: 4\n        },\n        end: {\n          line: 22,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 15,\n          column: 6\n        },\n        end: {\n          line: 15,\n          column: 17\n        }\n      },\n      \"3\": {\n        start: {\n          line: 17,\n          column: 6\n        },\n        end: {\n          line: 21,\n          column: 7\n        }\n      },\n      \"4\": {\n        start: {\n          line: 18,\n          column: 8\n        },\n        end: {\n          line: 18,\n          column: 19\n        }\n      },\n      \"5\": {\n        start: {\n          line: 20,\n          column: 8\n        },\n        end: {\n          line: 20,\n          column: 19\n        }\n      },\n      \"6\": {\n        start: {\n          line: 26,\n          column: 36\n        },\n        end: {\n          line: 47,\n          column: 1\n        }\n      },\n      \"7\": {\n        start: {\n          line: 29,\n          column: 16\n        },\n        end: {\n          line: 29,\n          column: 36\n        }\n      },\n      \"8\": {\n        start: {\n          line: 33,\n          column: 20\n        },\n        end: {\n          line: 33,\n          column: 27\n        }\n      },\n      \"9\": {\n        start: {\n          line: 34,\n          column: 6\n        },\n        end: {\n          line: 34,\n          column: 28\n        }\n      },\n      \"10\": {\n        start: {\n          line: 35,\n          column: 6\n        },\n        end: {\n          line: 35,\n          column: 40\n        }\n      },\n      \"11\": {\n        start: {\n          line: 36,\n          column: 6\n        },\n        end: {\n          line: 36,\n          column: 52\n        }\n      },\n      \"12\": {\n        start: {\n          line: 43,\n          column: 18\n        },\n        end: {\n          line: 43,\n          column: 25\n        }\n      },\n      \"13\": {\n        start: {\n          line: 44,\n          column: 4\n        },\n        end: {\n          line: 44,\n          column: 26\n        }\n      },\n      \"14\": {\n        start: {\n          line: 45,\n          column: 4\n        },\n        end: {\n          line: 45,\n          column: 28\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"getWinner\",\n        decl: {\n          start: {\n            line: 12,\n            column: 16\n          },\n          end: {\n            line: 12,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 12,\n            column: 38\n          },\n          end: {\n            line: 24,\n            column: 1\n          }\n        },\n        line: 12\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 9\n          },\n          end: {\n            line: 29,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 16\n          },\n          end: {\n            line: 29,\n            column: 36\n          }\n        },\n        line: 29\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 32,\n            column: 4\n          },\n          end: {\n            line: 32,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 32,\n            column: 45\n          },\n          end: {\n            line: 37,\n            column: 5\n          }\n        },\n        line: 32\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 42,\n            column: 9\n          },\n          end: {\n            line: 42,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 42,\n            column: 21\n          },\n          end: {\n            line: 46,\n            column: 3\n          }\n        },\n        line: 42\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 23,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 23,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 23,\n            column: 3\n          }\n        }],\n        line: 13\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 14,\n            column: 4\n          },\n          end: {\n            line: 22,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 14,\n            column: 4\n          },\n          end: {\n            line: 22,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 4\n          },\n          end: {\n            line: 22,\n            column: 5\n          }\n        }],\n        line: 14\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 14,\n            column: 8\n          },\n          end: {\n            line: 14,\n            column: 115\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 14,\n            column: 8\n          },\n          end: {\n            line: 14,\n            column: 23\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 27\n          },\n          end: {\n            line: 14,\n            column: 58\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 62\n          },\n          end: {\n            line: 14,\n            column: 91\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 95\n          },\n          end: {\n            line: 14,\n            column: 115\n          }\n        }],\n        line: 14\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 17,\n            column: 6\n          },\n          end: {\n            line: 21,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 17,\n            column: 6\n          },\n          end: {\n            line: 21,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 17,\n            column: 6\n          },\n          end: {\n            line: 21,\n            column: 7\n          }\n        }],\n        line: 17\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0, 0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"ca38d7720576b37a6377721f169a5c80274fb8c1\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1ryc5vig74 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1ryc5vig74();\n\n/*\n * Copyright 2018 The @freeboardgame.org/boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport Chess from './chessjswrapper';\nexport function getWinner(chess) {\n  cov_1ryc5vig74().f[0]++;\n  cov_1ryc5vig74().s[0]++;\n\n  if (chess.game_over()) {\n    cov_1ryc5vig74().b[0][0]++;\n    cov_1ryc5vig74().s[1]++;\n\n    if ((cov_1ryc5vig74().b[2][0]++, chess.in_draw()) || (cov_1ryc5vig74().b[2][1]++, chess.in_threefold_repetition()) || (cov_1ryc5vig74().b[2][2]++, chess.insufficient_material()) || (cov_1ryc5vig74().b[2][3]++, chess.in_stalemate())) {\n      cov_1ryc5vig74().b[1][0]++;\n      cov_1ryc5vig74().s[2]++;\n      return 'd';\n    } else {\n      cov_1ryc5vig74().b[1][1]++;\n      cov_1ryc5vig74().s[3]++;\n\n      if (chess.turn() === 'w') {\n        cov_1ryc5vig74().b[3][0]++;\n        cov_1ryc5vig74().s[4]++;\n        return 'b';\n      } else {\n        cov_1ryc5vig74().b[3][1]++;\n        cov_1ryc5vig74().s[5]++;\n        return 'w';\n      }\n    }\n  } else {\n    cov_1ryc5vig74().b[0][1]++;\n  }\n}\nexport var ChessGame = (cov_1ryc5vig74().s[6]++, {\n  name: 'chess',\n  setup: function setup() {\n    cov_1ryc5vig74().f[1]++;\n    cov_1ryc5vig74().s[7]++;\n    return {\n      pgn: '',\n      fen: ''\n    };\n  },\n  moves: {\n    move: function move(G, ctx, san) {\n      cov_1ryc5vig74().f[2]++;\n      var chess = (cov_1ryc5vig74().s[8]++, Chess());\n      cov_1ryc5vig74().s[9]++;\n      chess.load_pgn(G.pgn);\n      cov_1ryc5vig74().s[10]++;\n      chess.move(san, {\n        sloppy: true\n      });\n      cov_1ryc5vig74().s[11]++;\n      return {\n        pgn: chess.pgn(),\n        fen: chess.fen()\n      };\n    }\n  },\n  turn: {\n    moveLimit: 1\n  },\n  endIf: function endIf(G) {\n    cov_1ryc5vig74().f[3]++;\n    var chess = (cov_1ryc5vig74().s[12]++, Chess());\n    cov_1ryc5vig74().s[13]++;\n    chess.load_pgn(G.pgn);\n    cov_1ryc5vig74().s[14]++;\n    return getWinner(chess);\n  }\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/chess/game.ts"],"names":["Chess","getWinner","chess","game_over","in_draw","in_threefold_repetition","insufficient_material","in_stalemate","turn","ChessGame","name","setup","pgn","fen","moves","move","G","ctx","san","load_pgn","sloppy","moveLimit","endIf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AASA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;AAAA;;AACpC,MAAIA,KAAK,CAACC,SAAN,EAAJ,EAAuB;AAAA;AAAA;;AACrB,QAAI,6BAAAD,KAAK,CAACE,OAAN,oCAAmBF,KAAK,CAACG,uBAAN,EAAnB,kCAAsDH,KAAK,CAACI,qBAAN,EAAtD,kCAAuFJ,KAAK,CAACK,YAAN,EAAvF,CAAJ,EAAiH;AAAA;AAAA;AAC/G,aAAO,GAAP;AACD,KAFD,MAEO;AAAA;AAAA;;AACL,UAAIL,KAAK,CAACM,IAAN,OAAiB,GAArB,EAA0B;AAAA;AAAA;AACxB,eAAO,GAAP;AACD,OAFD,MAEO;AAAA;AAAA;AACL,eAAO,GAAP;AACD;AACF;AACF,GAVD;AAAA;AAAA;AAWD;AAED,OAAO,IAAMC,SAAoB,6BAAG;AAClCC,EAAAA,IAAI,EAAE,OAD4B;AAGlCC,EAAAA,KAAK,EAAE,iBAAO;AAAA;AAAA;AAAA;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB;AAAoB,GAHA;AAKlCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IADK,gBACAC,CADA,EACQC,GADR,EACuBC,GADvB,EACoC;AAAA;AACvC,UAAMhB,KAAK,6BAAGF,KAAK,EAAR,CAAX;AADuC;AAEvCE,MAAAA,KAAK,CAACiB,QAAN,CAAeH,CAAC,CAACJ,GAAjB;AAFuC;AAGvCV,MAAAA,KAAK,CAACa,IAAN,CAAWG,GAAX,EAAgB;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAhB;AAHuC;AAIvC,aAAO;AAAER,QAAAA,GAAG,EAAEV,KAAK,CAACU,GAAN,EAAP;AAAoBC,QAAAA,GAAG,EAAEX,KAAK,CAACW,GAAN;AAAzB,OAAP;AACD;AANI,GAL2B;AAalCL,EAAAA,IAAI,EAAE;AACJa,IAAAA,SAAS,EAAE;AADP,GAb4B;AAgBlCC,EAAAA,KAAK,EAAE,eAACN,CAAD,EAAY;AAAA;AACjB,QAAMd,KAAK,8BAAGF,KAAK,EAAR,CAAX;AADiB;AAEjBE,IAAAA,KAAK,CAACiB,QAAN,CAAeH,CAAC,CAACJ,GAAjB;AAFiB;AAGjB,WAAOX,SAAS,CAACC,KAAD,CAAhB;AACD;AApBiC,CAAH,CAA1B","sourcesContent":["/*\n * Copyright 2018 The @freeboardgame.org/boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport { IGameArgs, IGameCtx } from 'boardgame.io/core';\nimport Chess from './chessjswrapper';\n\nexport function getWinner(chess: any) {\n  if (chess.game_over()) {\n    if (chess.in_draw() || chess.in_threefold_repetition() || chess.insufficient_material() || chess.in_stalemate()) {\n      return 'd';\n    } else {\n      if (chess.turn() === 'w') {\n        return 'b';\n      } else {\n        return 'w';\n      }\n    }\n  }\n}\n\nexport const ChessGame: IGameArgs = {\n  name: 'chess',\n\n  setup: () => ({ pgn: '', fen: '' }),\n\n  moves: {\n    move(G: any, ctx: IGameCtx, san: string) {\n      const chess = Chess();\n      chess.load_pgn(G.pgn);\n      chess.move(san, { sloppy: true });\n      return { pgn: chess.pgn(), fen: chess.fen() };\n    },\n  },\n  turn: {\n    moveLimit: 1,\n  },\n  endIf: (G: any) => {\n    const chess = Chess();\n    chess.load_pgn(G.pgn);\n    return getWinner(chess);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}