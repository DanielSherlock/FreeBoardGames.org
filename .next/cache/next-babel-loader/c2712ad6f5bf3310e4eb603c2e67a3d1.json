{"ast":null,"code":"function cov_s9oy57fma() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/LobbyService.ts\";\n  var hash = \"d87474fd8cee8be6d3067d4dee8ec030b8421943\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/LobbyService.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 28\n        },\n        end: {\n          line: 5,\n          column: 44\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 25\n        },\n        end: {\n          line: 6,\n          column: 38\n        }\n      },\n      \"2\": {\n        start: {\n          line: 33,\n          column: 21\n        },\n        end: {\n          line: 35,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 36,\n          column: 19\n        },\n        end: {\n          line: 36,\n          column: 39\n        }\n      },\n      \"4\": {\n        start: {\n          line: 37,\n          column: 4\n        },\n        end: {\n          line: 37,\n          column: 18\n        }\n      },\n      \"5\": {\n        start: {\n          line: 42,\n          column: 21\n        },\n        end: {\n          line: 47,\n          column: 8\n        }\n      },\n      \"6\": {\n        start: {\n          line: 48,\n          column: 23\n        },\n        end: {\n          line: 48,\n          column: 54\n        }\n      },\n      \"7\": {\n        start: {\n          line: 49,\n          column: 4\n        },\n        end: {\n          line: 49,\n          column: 43\n        }\n      },\n      \"8\": {\n        start: {\n          line: 53,\n          column: 48\n        },\n        end: {\n          line: 53,\n          column: 81\n        }\n      },\n      \"9\": {\n        start: {\n          line: 54,\n          column: 4\n        },\n        end: {\n          line: 58,\n          column: 7\n        }\n      },\n      \"10\": {\n        start: {\n          line: 62,\n          column: 21\n        },\n        end: {\n          line: 62,\n          column: 105\n        }\n      },\n      \"11\": {\n        start: {\n          line: 63,\n          column: 17\n        },\n        end: {\n          line: 63,\n          column: 30\n        }\n      },\n      \"12\": {\n        start: {\n          line: 64,\n          column: 37\n        },\n        end: {\n          line: 70,\n          column: 9\n        }\n      },\n      \"13\": {\n        start: {\n          line: 65,\n          column: 31\n        },\n        end: {\n          line: 65,\n          column: 42\n        }\n      },\n      \"14\": {\n        start: {\n          line: 66,\n          column: 29\n        },\n        end: {\n          line: 70,\n          column: 7\n        }\n      },\n      \"15\": {\n        start: {\n          line: 71,\n          column: 48\n        },\n        end: {\n          line: 71,\n          column: 74\n        }\n      },\n      \"16\": {\n        start: {\n          line: 73,\n          column: 4\n        },\n        end: {\n          line: 75,\n          column: 5\n        }\n      },\n      \"17\": {\n        start: {\n          line: 74,\n          column: 6\n        },\n        end: {\n          line: 74,\n          column: 97\n        }\n      },\n      \"18\": {\n        start: {\n          line: 74,\n          column: 50\n        },\n        end: {\n          line: 74,\n          column: 95\n        }\n      },\n      \"19\": {\n        start: {\n          line: 76,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 92\n        }\n      },\n      \"20\": {\n        start: {\n          line: 80,\n          column: 48\n        },\n        end: {\n          line: 80,\n          column: 74\n        }\n      },\n      \"21\": {\n        start: {\n          line: 81,\n          column: 21\n        },\n        end: {\n          line: 83,\n          column: 106\n        }\n      },\n      \"22\": {\n        start: {\n          line: 84,\n          column: 4\n        },\n        end: {\n          line: 84,\n          column: 36\n        }\n      },\n      \"23\": {\n        start: {\n          line: 88,\n          column: 4\n        },\n        end: {\n          line: 90,\n          column: 5\n        }\n      },\n      \"24\": {\n        start: {\n          line: 89,\n          column: 6\n        },\n        end: {\n          line: 89,\n          column: 52\n        }\n      },\n      \"25\": {\n        start: {\n          line: 94,\n          column: 4\n        },\n        end: {\n          line: 94,\n          column: 49\n        }\n      },\n      \"26\": {\n        start: {\n          line: 99,\n          column: 44\n        },\n        end: {\n          line: 99,\n          column: 97\n        }\n      },\n      \"27\": {\n        start: {\n          line: 100,\n          column: 4\n        },\n        end: {\n          line: 102,\n          column: 5\n        }\n      },\n      \"28\": {\n        start: {\n          line: 101,\n          column: 6\n        },\n        end: {\n          line: 101,\n          column: 33\n        }\n      },\n      \"29\": {\n        start: {\n          line: 106,\n          column: 41\n        },\n        end: {\n          line: 106,\n          column: 94\n        }\n      },\n      \"30\": {\n        start: {\n          line: 107,\n          column: 27\n        },\n        end: {\n          line: 107,\n          column: 42\n        }\n      },\n      \"31\": {\n        start: {\n          line: 108,\n          column: 4\n        },\n        end: {\n          line: 108,\n          column: 78\n        }\n      },\n      \"32\": {\n        start: {\n          line: 109,\n          column: 4\n        },\n        end: {\n          line: 109,\n          column: 78\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 32,\n            column: 2\n          },\n          end: {\n            line: 32,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 32,\n            column: 85\n          },\n          end: {\n            line: 39,\n            column: 3\n          }\n        },\n        line: 32\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 41,\n            column: 2\n          },\n          end: {\n            line: 41,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 41,\n            column: 87\n          },\n          end: {\n            line: 50,\n            column: 3\n          }\n        },\n        line: 41\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 52,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 52,\n            column: 106\n          },\n          end: {\n            line: 59,\n            column: 3\n          }\n        },\n        line: 52\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 61,\n            column: 2\n          },\n          end: {\n            line: 61,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 61,\n            column: 96\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        },\n        line: 61\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 65,\n            column: 14\n          },\n          end: {\n            line: 65,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 65,\n            column: 31\n          },\n          end: {\n            line: 65,\n            column: 42\n          }\n        },\n        line: 65\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 66,\n            column: 11\n          },\n          end: {\n            line: 66,\n            column: 12\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 29\n          },\n          end: {\n            line: 70,\n            column: 7\n          }\n        },\n        line: 66\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 74,\n            column: 33\n          },\n          end: {\n            line: 74,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 74,\n            column: 50\n          },\n          end: {\n            line: 74,\n            column: 95\n          }\n        },\n        line: 74\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 79,\n            column: 2\n          },\n          end: {\n            line: 79,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 79,\n            column: 114\n          },\n          end: {\n            line: 85,\n            column: 3\n          }\n        },\n        line: 79\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 87,\n            column: 2\n          },\n          end: {\n            line: 87,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 87,\n            column: 38\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        },\n        line: 87\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 93,\n            column: 2\n          },\n          end: {\n            line: 93,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 93,\n            column: 48\n          },\n          end: {\n            line: 95,\n            column: 3\n          }\n        },\n        line: 93\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 97,\n            column: 2\n          },\n          end: {\n            line: 97,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 97,\n            column: 77\n          },\n          end: {\n            line: 103,\n            column: 3\n          }\n        },\n        line: 97\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 105,\n            column: 2\n          },\n          end: {\n            line: 105,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 105,\n            column: 79\n          },\n          end: {\n            line: 110,\n            column: 3\n          }\n        },\n        line: 105\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 73,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 73,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 73,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 5\n          }\n        }],\n        line: 73\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 88,\n            column: 4\n          },\n          end: {\n            line: 90,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 88,\n            column: 4\n          },\n          end: {\n            line: 90,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 88,\n            column: 4\n          },\n          end: {\n            line: 90,\n            column: 5\n          }\n        }],\n        line: 88\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 100,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 100,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 100,\n            column: 4\n          },\n          end: {\n            line: 102,\n            column: 5\n          }\n        }],\n        line: 100\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"d87474fd8cee8be6d3067d4dee8ec030b8421943\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_s9oy57fma = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_s9oy57fma();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AddressHelper from '../Helpers/AddressHelper';\nimport request from 'superagent';\nimport SSRHelper from '../Helpers/SSRHelper';\nconst FBG_CREDENTIALS_KEY = (cov_s9oy57fma().s[0]++, 'fbgCredentials');\nconst FBG_NICKNAME_KEY = (cov_s9oy57fma().s[1]++, 'fbgNickname');\nexport class LobbyService {\n  static async newRoom(gameCode, numPlayers) {\n    cov_s9oy57fma().f[0]++;\n    const response = (cov_s9oy57fma().s[2]++, await request.post(`${AddressHelper.getServerAddress()}/games/${gameCode}/create`).send({\n      numPlayers\n    }));\n    const roomID = (cov_s9oy57fma().s[3]++, response.body.gameID);\n    cov_s9oy57fma().s[4]++;\n    return roomID; // return 'foo';\n  }\n\n  static async joinRoom(gameCode, player) {\n    cov_s9oy57fma().f[1]++;\n    const response = (cov_s9oy57fma().s[5]++, await request.post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${player.roomID}/join`).send({\n      playerID: player.playerID,\n      playerName: player.name\n    }));\n    const credential = (cov_s9oy57fma().s[6]++, response.body.playerCredentials);\n    cov_s9oy57fma().s[7]++;\n    this.setCredential(player, credential);\n  }\n\n  static async renameUser(gameCode, player, newName) {\n    cov_s9oy57fma().f[2]++;\n    const playerCredential = (cov_s9oy57fma().s[8]++, this.getCredential(player.roomID));\n    cov_s9oy57fma().s[9]++;\n    await request.post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${player.roomID}/rename`).send({\n      playerID: player.playerID,\n      credentials: playerCredential.credential,\n      newName\n    });\n  }\n\n  static async getRoomMetadata(gameCode, roomID) {\n    cov_s9oy57fma().f[3]++;\n    const response = (cov_s9oy57fma().s[10]++, await request.get(`${AddressHelper.getServerAddress()}/games/${gameCode}/${roomID}`));\n    const body = (cov_s9oy57fma().s[11]++, response.body);\n    const players = (cov_s9oy57fma().s[12]++, body.players.filter(player => {\n      cov_s9oy57fma().f[4]++;\n      cov_s9oy57fma().s[13]++;\n      return player.name;\n    }).map(player => {\n      cov_s9oy57fma().f[5]++;\n      cov_s9oy57fma().s[14]++;\n      return {\n        playerID: player.id,\n        name: player.name,\n        roomID\n      };\n    }));\n    const playerCredential = (cov_s9oy57fma().s[15]++, this.getCredential(roomID));\n    let currentUser;\n    cov_s9oy57fma().s[16]++;\n\n    if (playerCredential) {\n      cov_s9oy57fma().b[0][0]++;\n      cov_s9oy57fma().s[17]++;\n      currentUser = players.find(player => {\n        cov_s9oy57fma().f[6]++;\n        cov_s9oy57fma().s[18]++;\n        return player.playerID === playerCredential.playerID;\n      });\n    } else {\n      cov_s9oy57fma().b[0][1]++;\n    }\n\n    cov_s9oy57fma().s[19]++;\n    return {\n      players,\n      gameCode,\n      roomID,\n      currentUser,\n      numberOfPlayers: body.players.length\n    };\n  }\n\n  static async getPlayAgainNextRoom(gameCode, roomID, numPlayers) {\n    cov_s9oy57fma().f[7]++;\n    const playerCredential = (cov_s9oy57fma().s[20]++, this.getCredential(roomID));\n    const response = (cov_s9oy57fma().s[21]++, await request.post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${roomID}/playAgain`).send({\n      playerID: playerCredential.playerID,\n      credentials: playerCredential.credential,\n      numPlayers\n    }));\n    cov_s9oy57fma().s[22]++;\n    return response.body.nextRoomID;\n  }\n\n  static getNickname() {\n    cov_s9oy57fma().f[8]++;\n    cov_s9oy57fma().s[23]++;\n\n    if (!SSRHelper.isSSR()) {\n      cov_s9oy57fma().b[1][0]++;\n      cov_s9oy57fma().s[24]++;\n      return localStorage.getItem(FBG_NICKNAME_KEY);\n    } else {\n      cov_s9oy57fma().b[1][1]++;\n    }\n  }\n\n  static setNickname(name) {\n    cov_s9oy57fma().f[9]++;\n    cov_s9oy57fma().s[25]++;\n    localStorage.setItem(FBG_NICKNAME_KEY, name);\n  }\n\n  static getCredential(roomID) {\n    cov_s9oy57fma().f[10]++;\n    // return an empty IPlayerInRoom object if the player's identity is for another room\n    const credentials = (cov_s9oy57fma().s[26]++, JSON.parse(localStorage.getItem(FBG_CREDENTIALS_KEY)));\n    cov_s9oy57fma().s[27]++;\n\n    if (credentials) {\n      cov_s9oy57fma().b[2][0]++;\n      cov_s9oy57fma().s[28]++;\n      return credentials[roomID];\n    } else {\n      cov_s9oy57fma().b[2][1]++;\n    }\n  }\n\n  static setCredential(player, credential) {\n    cov_s9oy57fma().f[11]++;\n    const existing = (cov_s9oy57fma().s[29]++, JSON.parse(localStorage.getItem(FBG_CREDENTIALS_KEY)));\n    const newCredentials = (cov_s9oy57fma().s[30]++, _objectSpread({}, existing));\n    cov_s9oy57fma().s[31]++;\n    newCredentials[player.roomID] = {\n      credential,\n      playerID: player.playerID\n    };\n    cov_s9oy57fma().s[32]++;\n    localStorage.setItem(FBG_CREDENTIALS_KEY, JSON.stringify(newCredentials));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/LobbyService.ts"],"names":["AddressHelper","request","SSRHelper","FBG_CREDENTIALS_KEY","FBG_NICKNAME_KEY","LobbyService","newRoom","gameCode","numPlayers","response","post","getServerAddress","send","roomID","body","gameID","joinRoom","player","playerID","playerName","name","credential","playerCredentials","setCredential","renameUser","newName","playerCredential","getCredential","credentials","getRoomMetadata","get","players","filter","map","id","currentUser","find","numberOfPlayers","length","getPlayAgainNextRoom","nextRoomID","getNickname","isSSR","localStorage","getItem","setNickname","setItem","JSON","parse","existing","newCredentials","stringify"],"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","sourcesContent":["import AddressHelper from '../Helpers/AddressHelper';\nimport request from 'superagent';\nimport SSRHelper from '../Helpers/SSRHelper';\n\nconst FBG_CREDENTIALS_KEY = 'fbgCredentials';\nconst FBG_NICKNAME_KEY = 'fbgNickname';\n\nexport interface IPlayerInRoom {\n  playerID: number;\n  name?: string;\n  roomID: string;\n}\n\nexport interface IRoomMetadata {\n  gameCode?: string;\n  roomID: string;\n  players?: IPlayerInRoom[]; // only active players\n  currentUser?: IPlayerInRoom;\n  numberOfPlayers: number;\n}\n\nexport interface IPlayerCredential {\n  playerID: number;\n  credential: string;\n}\n\nexport interface IStoredCredentials {\n  [key: string]: IPlayerCredential;\n}\n\nexport class LobbyService {\n  public static async newRoom(gameCode: string, numPlayers: number): Promise<string> {\n    const response = await request\n      .post(`${AddressHelper.getServerAddress()}/games/${gameCode}/create`)\n      .send({ numPlayers });\n    const roomID = response.body.gameID;\n    return roomID;\n    // return 'foo';\n  }\n\n  public static async joinRoom(gameCode: string, player: IPlayerInRoom): Promise<void> {\n    const response = await request\n      .post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${player.roomID}/join`)\n      .send({\n        playerID: player.playerID,\n        playerName: player.name,\n      });\n    const credential = response.body.playerCredentials;\n    this.setCredential(player, credential);\n  }\n\n  public static async renameUser(gameCode: string, player: IPlayerInRoom, newName: string): Promise<void> {\n    const playerCredential: IPlayerCredential = this.getCredential(player.roomID);\n    await request.post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${player.roomID}/rename`).send({\n      playerID: player.playerID,\n      credentials: playerCredential.credential,\n      newName,\n    });\n  }\n\n  public static async getRoomMetadata(gameCode: string, roomID: string): Promise<IRoomMetadata> {\n    const response = await request.get(`${AddressHelper.getServerAddress()}/games/${gameCode}/${roomID}`);\n    const body = response.body;\n    const players: IPlayerInRoom[] = body.players\n      .filter((player: any) => player.name)\n      .map((player: any) => ({\n        playerID: player.id,\n        name: player.name,\n        roomID,\n      }));\n    const playerCredential: IPlayerCredential = this.getCredential(roomID);\n    let currentUser;\n    if (playerCredential) {\n      currentUser = players.find((player: any) => player.playerID === playerCredential.playerID);\n    }\n    return { players, gameCode, roomID, currentUser, numberOfPlayers: body.players.length };\n  }\n\n  public static async getPlayAgainNextRoom(gameCode: string, roomID: string, numPlayers: number): Promise<string> {\n    const playerCredential: IPlayerCredential = this.getCredential(roomID);\n    const response = await request\n      .post(`${AddressHelper.getServerAddress()}/games/${gameCode}/${roomID}/playAgain`)\n      .send({ playerID: playerCredential.playerID, credentials: playerCredential.credential, numPlayers });\n    return response.body.nextRoomID;\n  }\n\n  public static getNickname(): string {\n    if (!SSRHelper.isSSR()) {\n      return localStorage.getItem(FBG_NICKNAME_KEY);\n    }\n  }\n\n  public static setNickname(name: string): void {\n    localStorage.setItem(FBG_NICKNAME_KEY, name);\n  }\n\n  public static getCredential(roomID: string): IPlayerCredential | undefined {\n    // return an empty IPlayerInRoom object if the player's identity is for another room\n    const credentials: IStoredCredentials = JSON.parse(localStorage.getItem(FBG_CREDENTIALS_KEY));\n    if (credentials) {\n      return credentials[roomID];\n    }\n  }\n\n  public static setCredential(player: IPlayerInRoom, credential: string): void {\n    const existing: IStoredCredentials = JSON.parse(localStorage.getItem(FBG_CREDENTIALS_KEY));\n    const newCredentials = { ...existing };\n    newCredentials[player.roomID] = { credential, playerID: player.playerID };\n    localStorage.setItem(FBG_CREDENTIALS_KEY, JSON.stringify(newCredentials));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}