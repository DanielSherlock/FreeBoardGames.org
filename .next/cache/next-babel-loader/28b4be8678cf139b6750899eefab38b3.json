{"ast":null,"code":"function cov_20xz5ql5by() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/reversi/ai.ts\";\n  var hash = \"61c8e8e9b7ba9b3407a62d76dded88c8378f55c5\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/reversi/ai.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 12,\n          column: 18\n        },\n        end: {\n          line: 12,\n          column: 62\n        }\n      },\n      \"1\": {\n        start: {\n          line: 14,\n          column: 17\n        },\n        end: {\n          line: 14,\n          column: 59\n        }\n      },\n      \"2\": {\n        start: {\n          line: 15,\n          column: 14\n        },\n        end: {\n          line: 15,\n          column: 22\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 14\n        },\n        end: {\n          line: 16,\n          column: 34\n        }\n      },\n      \"4\": {\n        start: {\n          line: 17,\n          column: 4\n        },\n        end: {\n          line: 17,\n          column: 41\n        }\n      },\n      \"5\": {\n        start: {\n          line: 21,\n          column: 4\n        },\n        end: {\n          line: 21,\n          column: 102\n        }\n      },\n      \"6\": {\n        start: {\n          line: 24,\n          column: 33\n        },\n        end: {\n          line: 30,\n          column: 1\n        }\n      },\n      \"7\": {\n        start: {\n          line: 26,\n          column: 4\n        },\n        end: {\n          line: 28,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 11,\n            column: 2\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 11,\n            column: 50\n          },\n          end: {\n            line: 18,\n            column: 3\n          }\n        },\n        line: 11\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 2\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 51\n          },\n          end: {\n            line: 22,\n            column: 3\n          }\n        },\n        line: 20\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 10\n          },\n          end: {\n            line: 25,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 16\n          },\n          end: {\n            line: 29,\n            column: 3\n          }\n        },\n        line: 25\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"61c8e8e9b7ba9b3407a62d76dded88c8378f55c5\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_20xz5ql5by = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_20xz5ql5by();\nimport { getValidMoves } from './game';\nexport class ReversiRandomBot {\n  async play(state, playerID) {\n    cov_20xz5ql5by().f[0]++;\n    const moves = (cov_20xz5ql5by().s[0]++, Array.from(getValidMoves(state.G, playerID))); // const move = moves[Math.floor(Math.random() * moves.length)];  // https://github.com/babel/minify/issues/904\n\n    const move = (cov_20xz5ql5by().s[1]++, moves[Math.random() * moves.length << 0]); // https://github.com/babel/minify/issues/904\n\n    const x = (cov_20xz5ql5by().s[2]++, move % 8);\n    const y = (cov_20xz5ql5by().s[3]++, Math.floor(move / 8));\n    cov_20xz5ql5by().s[4]++;\n    return this.makeMove(playerID, x, y);\n  }\n\n  makeMove(playerID, x, y) {\n    cov_20xz5ql5by().f[1]++;\n    cov_20xz5ql5by().s[5]++;\n    return {\n      action: {\n        type: 'MAKE_MOVE',\n        payload: {\n          type: 'placePiece',\n          args: [x, y],\n          playerID\n        }\n      }\n    };\n  }\n\n}\nexport const config = (cov_20xz5ql5by().s[6]++, {\n  bgioAI: () => {\n    cov_20xz5ql5by().f[2]++;\n    cov_20xz5ql5by().s[7]++;\n    return {\n      bot: ReversiRandomBot\n    };\n  }\n});\nexport default config;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/reversi/ai.ts"],"names":["getValidMoves","ReversiRandomBot","play","state","playerID","moves","Array","from","G","move","Math","random","length","x","y","floor","makeMove","action","type","payload","args","config","bgioAI","bot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAaA,aAAb,QAAkC,QAAlC;AAQA,OAAO,MAAMC,gBAAN,CAAuB;AAC5B,QAAMC,IAAN,CAAWC,KAAX,EAA8BC,QAA9B,EAAgD;AAAA;AAC9C,UAAMC,KAAK,6BAAGC,KAAK,CAACC,IAAN,CAAWP,aAAa,CAACG,KAAK,CAACK,CAAP,EAAUJ,QAAV,CAAxB,CAAH,CAAX,CAD8C,CAE9C;;AACA,UAAMK,IAAI,6BAAGJ,KAAK,CAAEK,IAAI,CAACC,MAAL,KAAgBN,KAAK,CAACO,MAAvB,IAAkC,CAAnC,CAAR,CAAV,CAH8C,CAGW;;AACzD,UAAMC,CAAC,6BAAGJ,IAAI,GAAG,CAAV,CAAP;AACA,UAAMK,CAAC,6BAAGJ,IAAI,CAACK,KAAL,CAAWN,IAAI,GAAG,CAAlB,CAAH,CAAP;AAL8C;AAM9C,WAAO,KAAKO,QAAL,CAAcZ,QAAd,EAAwBS,CAAxB,EAA2BC,CAA3B,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAACZ,QAAD,EAAmBS,CAAnB,EAA8BC,CAA9B,EAAyC;AAAA;AAAA;AAC/C,WAAO;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAI,EAAE,YAAR;AAAsBE,UAAAA,IAAI,EAAE,CAACP,CAAD,EAAIC,CAAJ,CAA5B;AAAoCV,UAAAA;AAApC;AAA9B;AAAV,KAAP;AACD;;AAZ2B;AAc9B,OAAO,MAAMiB,MAAiB,6BAAG;AAC/BC,EAAAA,MAAM,EAAE,MAAM;AAAA;AAAA;AACZ,WAAO;AACLC,MAAAA,GAAG,EAAEtB;AADA,KAAP;AAGD;AAL8B,CAAH,CAAvB;AAOP,eAAeoB,MAAf","sourcesContent":["import { IAIConfig } from '../index';\nimport { IG, getValidMoves } from './game';\nimport { IGameCtx } from 'boardgame.io/core';\n\ninterface IPlayState {\n  G: IG;\n  ctx: IGameCtx;\n}\n\nexport class ReversiRandomBot {\n  async play(state: IPlayState, playerID: string) {\n    const moves = Array.from(getValidMoves(state.G, playerID));\n    // const move = moves[Math.floor(Math.random() * moves.length)];  // https://github.com/babel/minify/issues/904\n    const move = moves[(Math.random() * moves.length) << 0]; // https://github.com/babel/minify/issues/904\n    const x = move % 8;\n    const y = Math.floor(move / 8);\n    return this.makeMove(playerID, x, y);\n  }\n\n  makeMove(playerID: string, x: number, y: number) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'placePiece', args: [x, y], playerID } } };\n  }\n}\nexport const config: IAIConfig = {\n  bgioAI: () => {\n    return {\n      bot: ReversiRandomBot,\n    };\n  },\n};\nexport default config;\n"]},"metadata":{},"sourceType":"module"}