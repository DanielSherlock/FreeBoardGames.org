{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_19ehfr7m3f() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/[mode]/AIOrLocalGame.tsx\";\n  var hash = \"cb99fb971db30919dc91317e1acf0ed8b3e49552\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/[mode]/AIOrLocalGame.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 8,\n          column: 20\n        },\n        end: {\n          line: 11,\n          column: 2\n        }\n      },\n      \"1\": {\n        start: {\n          line: 10,\n          column: 17\n        },\n        end: {\n          line: 10,\n          column: 38\n        }\n      },\n      \"2\": {\n        start: {\n          line: 21,\n          column: 4\n        },\n        end: {\n          line: 30,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 22,\n          column: 6\n        },\n        end: {\n          line: 27,\n          column: 8\n        }\n      },\n      \"4\": {\n        start: {\n          line: 29,\n          column: 6\n        },\n        end: {\n          line: 29,\n          column: 23\n        }\n      },\n      \"5\": {\n        start: {\n          line: 34,\n          column: 21\n        },\n        end: {\n          line: 34,\n          column: 52\n        }\n      },\n      \"6\": {\n        start: {\n          line: 35,\n          column: 30\n        },\n        end: {\n          line: 35,\n          column: 49\n        }\n      },\n      \"7\": {\n        start: {\n          line: 36,\n          column: 4\n        },\n        end: {\n          line: 39,\n          column: 5\n        }\n      },\n      \"8\": {\n        start: {\n          line: 37,\n          column: 6\n        },\n        end: {\n          line: 37,\n          column: 34\n        }\n      },\n      \"9\": {\n        start: {\n          line: 38,\n          column: 6\n        },\n        end: {\n          line: 38,\n          column: 23\n        }\n      },\n      \"10\": {\n        start: {\n          line: 40,\n          column: 17\n        },\n        end: {\n          line: 40,\n          column: 46\n        }\n      },\n      \"11\": {\n        start: {\n          line: 41,\n          column: 4\n        },\n        end: {\n          line: 41,\n          column: 39\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 11\n          },\n          end: {\n            line: 10,\n            column: 12\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 17\n          },\n          end: {\n            line: 10,\n            column: 38\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 2\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 11\n          },\n          end: {\n            line: 31,\n            column: 3\n          }\n        },\n        line: 20\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 33,\n            column: 2\n          },\n          end: {\n            line: 33,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 39\n          },\n          end: {\n            line: 42,\n            column: 3\n          }\n        },\n        line: 33\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }],\n        line: 21\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 36,\n            column: 4\n          },\n          end: {\n            line: 39,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 36,\n            column: 4\n          },\n          end: {\n            line: 39,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 36,\n            column: 4\n          },\n          end: {\n            line: 39,\n            column: 5\n          }\n        }],\n        line: 36\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 36,\n            column: 8\n          },\n          end: {\n            line: 36,\n            column: 30\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 36,\n            column: 8\n          },\n          end: {\n            line: 36,\n            column: 16\n          }\n        }, {\n          start: {\n            line: 36,\n            column: 20\n          },\n          end: {\n            line: 36,\n            column: 30\n          }\n        }],\n        line: 36\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"cb99fb971db30919dc91317e1acf0ed8b3e49552\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_19ehfr7m3f = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_19ehfr7m3f();\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { GAMES_MAP } from 'games';\nimport Error from 'pages/_error';\nimport SEO from 'components/SEO';\nconst GameWrapper = (cov_19ehfr7m3f().s[0]++, dynamic(import('components/App/Game/Game'), {\n  ssr: false,\n  loading: () => {\n    cov_19ehfr7m3f().f[0]++;\n    cov_19ehfr7m3f().s[1]++;\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n}));\nexport default class extends (React.Component) {\n  render() {\n    cov_19ehfr7m3f().f[1]++;\n    cov_19ehfr7m3f().s[2]++;\n\n    if (this.props.gameDef) {\n      cov_19ehfr7m3f().b[0][0]++;\n      cov_19ehfr7m3f().s[3]++;\n      return __jsx(React.Fragment, null, __jsx(SEO, {\n        noindex: true\n      }), __jsx(GameWrapper, {\n        mode: this.props.mode,\n        gameCode: this.props.gameCode,\n        matchCode: this.props.mode\n      }));\n    } else {\n      cov_19ehfr7m3f().b[0][1]++;\n      cov_19ehfr7m3f().s[4]++;\n      return __jsx(Error, null);\n    }\n  }\n\n  static async getInitialProps(router) {\n    cov_19ehfr7m3f().f[2]++;\n    const gameCode = (cov_19ehfr7m3f().s[5]++, router.query.gameCode);\n    const gameDef = (cov_19ehfr7m3f().s[6]++, GAMES_MAP[gameCode]);\n    cov_19ehfr7m3f().s[7]++;\n\n    if ((cov_19ehfr7m3f().b[2][0]++, !gameDef) && (cov_19ehfr7m3f().b[2][1]++, router.res)) {\n      cov_19ehfr7m3f().b[1][0]++;\n      cov_19ehfr7m3f().s[8]++;\n      router.res.statusCode = 404;\n      cov_19ehfr7m3f().s[9]++;\n      router.res.end();\n    } else {\n      cov_19ehfr7m3f().b[1][1]++;\n    }\n\n    const mode = (cov_19ehfr7m3f().s[10]++, router.query.mode);\n    cov_19ehfr7m3f().s[11]++;\n    return {\n      gameDef,\n      gameCode,\n      mode\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/pages/play/[gameCode]/[mode]/AIOrLocalGame.tsx"],"names":["React","dynamic","GAMES_MAP","Error","SEO","GameWrapper","ssr","loading","Component","render","props","gameDef","mode","gameCode","getInitialProps","router","query","res","statusCode","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,MAAMC,WAAW,6BAAGJ,OAAO,CAAC,OAAO,0BAAP,CAAD,EAAqC;AAC9DK,EAAAA,GAAG,EAAE,KADyD;AAE9DC,EAAAA,OAAO,EAAE,MAAM;AAAA;AAAA;AAAA;AAAqB;AAF0B,CAArC,CAAV,CAAjB;AAWA,eAAe,eAAcP,KAAK,CAACQ,SAApB,EAAoD;AACjEC,EAAAA,MAAM,GAAG;AAAA;AAAA;;AACP,QAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AAAA;AAAA;AACtB,aACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,GAAD;AAAK,QAAA,OAAO,EAAE;AAAd,QADF,EAEE,MAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAA9B;AAAoC,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAzD;AAAmE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWE;AAAzF,QAFF,CADF;AAMD,KAPD,MAOO;AAAA;AAAA;AACL,aAAO,MAAC,KAAD,OAAP;AACD;AACF;;AAED,eAAaE,eAAb,CAA6BC,MAA7B,EAAqC;AAAA;AACnC,UAAMF,QAAQ,6BAAGE,MAAM,CAACC,KAAP,CAAaH,QAAhB,CAAd;AACA,UAAMF,OAAiB,6BAAGT,SAAS,CAACW,QAAD,CAAZ,CAAvB;AAFmC;;AAGnC,QAAI,8BAACF,OAAD,kCAAYI,MAAM,CAACE,GAAnB,CAAJ,EAA4B;AAAA;AAAA;AAC1BF,MAAAA,MAAM,CAACE,GAAP,CAAWC,UAAX,GAAwB,GAAxB;AAD0B;AAE1BH,MAAAA,MAAM,CAACE,GAAP,CAAWE,GAAX;AACD,KAHD;AAAA;AAAA;;AAIA,UAAMP,IAAI,8BAAGG,MAAM,CAACC,KAAP,CAAaJ,IAAhB,CAAV;AAPmC;AAQnC,WAAO;AAAED,MAAAA,OAAF;AAAWE,MAAAA,QAAX;AAAqBD,MAAAA;AAArB,KAAP;AACD;;AAvBgE","sourcesContent":["import React from 'react';\nimport { GameMode } from 'components/App/Game/GameModePicker';\nimport dynamic from 'next/dynamic';\nimport { IGameDef, GAMES_MAP } from 'games';\nimport Error from 'pages/_error';\nimport SEO from 'components/SEO';\n\nconst GameWrapper = dynamic(import('components/App/Game/Game'), {\n  ssr: false,\n  loading: () => <div>Loading...</div>,\n});\n\ninterface AILocalGameProps {\n  gameCode: string;\n  gameDef: IGameDef;\n  mode: string;\n}\n\nexport default class extends React.Component<AILocalGameProps, {}> {\n  render() {\n    if (this.props.gameDef) {\n      return (\n        <React.Fragment>\n          <SEO noindex={true} />\n          <GameWrapper mode={this.props.mode} gameCode={this.props.gameCode} matchCode={this.props.mode} />\n        </React.Fragment>\n      );\n    } else {\n      return <Error />;\n    }\n  }\n\n  static async getInitialProps(router) {\n    const gameCode = router.query.gameCode as string;\n    const gameDef: IGameDef = GAMES_MAP[gameCode];\n    if (!gameDef && router.res) {\n      router.res.statusCode = 404;\n      router.res.end();\n    }\n    const mode = router.query.mode as GameMode;\n    return { gameDef, gameCode, mode };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}