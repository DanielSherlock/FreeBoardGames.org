{"ast":null,"code":"function cov_2gr5onh2wh() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/hooks/useWindowDimensions.ts\";\n  var hash = \"4f114065dc7cb63bff1107bea751cd3943287ae8\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/hooks/useWindowDimensions.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 6,\n          column: 20\n        },\n        end: {\n          line: 6,\n          column: 49\n        }\n      },\n      \"1\": {\n        start: {\n          line: 9,\n          column: 18\n        },\n        end: {\n          line: 9,\n          column: 54\n        }\n      },\n      \"2\": {\n        start: {\n          line: 10,\n          column: 19\n        },\n        end: {\n          line: 10,\n          column: 56\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 4\n        },\n        end: {\n          line: 14,\n          column: 6\n        }\n      },\n      \"4\": {\n        start: {\n          line: 17,\n          column: 50\n        },\n        end: {\n          line: 17,\n          column: 81\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 2\n        },\n        end: {\n          line: 27,\n          column: 18\n        }\n      },\n      \"6\": {\n        start: {\n          line: 20,\n          column: 4\n        },\n        end: {\n          line: 26,\n          column: 5\n        }\n      },\n      \"7\": {\n        start: {\n          line: 21,\n          column: 27\n        },\n        end: {\n          line: 23,\n          column: 7\n        }\n      },\n      \"8\": {\n        start: {\n          line: 22,\n          column: 8\n        },\n        end: {\n          line: 22,\n          column: 51\n        }\n      },\n      \"9\": {\n        start: {\n          line: 24,\n          column: 6\n        },\n        end: {\n          line: 24,\n          column: 54\n        }\n      },\n      \"10\": {\n        start: {\n          line: 25,\n          column: 6\n        },\n        end: {\n          line: 25,\n          column: 70\n        }\n      },\n      \"11\": {\n        start: {\n          line: 25,\n          column: 19\n        },\n        end: {\n          line: 25,\n          column: 69\n        }\n      },\n      \"12\": {\n        start: {\n          line: 29,\n          column: 2\n        },\n        end: {\n          line: 29,\n          column: 26\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"useWindowDimensions\",\n        decl: {\n          start: {\n            line: 5,\n            column: 24\n          },\n          end: {\n            line: 5,\n            column: 43\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 46\n          },\n          end: {\n            line: 30,\n            column: 1\n          }\n        },\n        line: 5\n      },\n      \"1\": {\n        name: \"getWindowDimensions\",\n        decl: {\n          start: {\n            line: 8,\n            column: 11\n          },\n          end: {\n            line: 8,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 33\n          },\n          end: {\n            line: 15,\n            column: 3\n          }\n        },\n        line: 8\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 19,\n            column: 12\n          },\n          end: {\n            line: 19,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 19,\n            column: 18\n          },\n          end: {\n            line: 27,\n            column: 3\n          }\n        },\n        line: 19\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 21,\n            column: 27\n          },\n          end: {\n            line: 21,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 33\n          },\n          end: {\n            line: 23,\n            column: 7\n          }\n        },\n        line: 21\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 13\n          },\n          end: {\n            line: 25,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 19\n          },\n          end: {\n            line: 25,\n            column: 69\n          }\n        },\n        line: 25\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 18\n          },\n          end: {\n            line: 9,\n            column: 54\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 30\n          },\n          end: {\n            line: 9,\n            column: 47\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 50\n          },\n          end: {\n            line: 9,\n            column: 54\n          }\n        }],\n        line: 9\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 10,\n            column: 19\n          },\n          end: {\n            line: 10,\n            column: 56\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 10,\n            column: 31\n          },\n          end: {\n            line: 10,\n            column: 49\n          }\n        }, {\n          start: {\n            line: 10,\n            column: 52\n          },\n          end: {\n            line: 10,\n            column: 56\n          }\n        }],\n        line: 10\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 20,\n            column: 4\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 20,\n            column: 4\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 20,\n            column: 4\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        }],\n        line: 20\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"4f114065dc7cb63bff1107bea751cd3943287ae8\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2gr5onh2wh = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2gr5onh2wh();\n// https://stackoverflow.com/a/59185109\nimport { useState, useEffect } from 'react';\nexport default function useWindowDimensions() {\n  cov_2gr5onh2wh().f[0]++;\n  const hasWindow = (cov_2gr5onh2wh().s[0]++, false);\n\n  function getWindowDimensions() {\n    cov_2gr5onh2wh().f[1]++;\n    const width = (cov_2gr5onh2wh().s[1]++, hasWindow ? (cov_2gr5onh2wh().b[0][0]++, window.innerWidth) : (cov_2gr5onh2wh().b[0][1]++, null));\n    const height = (cov_2gr5onh2wh().s[2]++, hasWindow ? (cov_2gr5onh2wh().b[1][0]++, window.innerHeight) : (cov_2gr5onh2wh().b[1][1]++, null));\n    cov_2gr5onh2wh().s[3]++;\n    return {\n      width,\n      height\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = (cov_2gr5onh2wh().s[4]++, useState(getWindowDimensions()));\n  cov_2gr5onh2wh().s[5]++;\n  useEffect(() => {\n    cov_2gr5onh2wh().f[2]++;\n    cov_2gr5onh2wh().s[6]++;\n\n    if (hasWindow) {\n      cov_2gr5onh2wh().b[2][0]++;\n      cov_2gr5onh2wh().s[7]++;\n\n      const handleResize = () => {\n        cov_2gr5onh2wh().f[3]++;\n        cov_2gr5onh2wh().s[8]++;\n        setWindowDimensions(getWindowDimensions());\n      };\n\n      cov_2gr5onh2wh().s[9]++;\n      window.addEventListener('resize', handleResize);\n      cov_2gr5onh2wh().s[10]++;\n      return () => {\n        cov_2gr5onh2wh().f[4]++;\n        cov_2gr5onh2wh().s[11]++;\n        return window.removeEventListener('resize', handleResize);\n      };\n    } else {\n      cov_2gr5onh2wh().b[2][1]++;\n    }\n  }, [hasWindow]);\n  cov_2gr5onh2wh().s[12]++;\n  return windowDimensions;\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/hooks/useWindowDimensions.ts"],"names":["useState","useEffect","useWindowDimensions","hasWindow","getWindowDimensions","width","window","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;AAC5C,QAAMC,SAAS,mCAAf;;AAEA,WAASC,mBAAT,GAA+B;AAAA;AAC7B,UAAMC,KAAK,6BAAGF,SAAS,gCAAGG,MAAM,CAACC,UAAV,iCAAuB,IAAvB,CAAZ,CAAX;AACA,UAAMC,MAAM,6BAAGL,SAAS,gCAAGG,MAAM,CAACG,WAAV,iCAAwB,IAAxB,CAAZ,CAAZ;AAF6B;AAG7B,WAAO;AACLJ,MAAAA,KADK;AAELG,MAAAA;AAFK,KAAP;AAID;;AAED,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,8BAA0CX,QAAQ,CAACI,mBAAmB,EAApB,CAAlD,CAAN;AAZ4C;AAc5CH,EAAAA,SAAS,CAAC,MAAM;AAAA;AAAA;;AACd,QAAIE,SAAJ,EAAe;AAAA;AAAA;;AACb,YAAMS,YAAY,GAAG,MAAM;AAAA;AAAA;AACzBD,QAAAA,mBAAmB,CAACP,mBAAmB,EAApB,CAAnB;AACD,OAFD;;AADa;AAIbE,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AAJa;AAKb,aAAO,MAAM;AAAA;AAAA;AAAA,eAAAN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AAAkD,OAA/D;AACD,KAND;AAAA;AAAA;AAOD,GARQ,EAQN,CAACT,SAAD,CARM,CAAT;AAd4C;AAwB5C,SAAOO,gBAAP;AACD","sourcesContent":["// https://stackoverflow.com/a/59185109\n\nimport { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}