{"ast":null,"code":"function cov_2bmn6wsyx5() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/sound.ts\";\n  var hash = \"9e547708771431fa17006a8f11abf71f9272f467\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/sound.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 10,\n          column: 19\n        },\n        end: {\n          line: 10,\n          column: 52\n        }\n      },\n      \"1\": {\n        start: {\n          line: 11,\n          column: 20\n        },\n        end: {\n          line: 11,\n          column: 80\n        }\n      },\n      \"2\": {\n        start: {\n          line: 13,\n          column: 34\n        },\n        end: {\n          line: 21,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 14,\n          column: 2\n        },\n        end: {\n          line: 20,\n          column: 3\n        }\n      },\n      \"4\": {\n        start: {\n          line: 15,\n          column: 21\n        },\n        end: {\n          line: 15,\n          column: 54\n        }\n      },\n      \"5\": {\n        start: {\n          line: 16,\n          column: 4\n        },\n        end: {\n          line: 16,\n          column: 20\n        }\n      },\n      \"6\": {\n        start: {\n          line: 17,\n          column: 9\n        },\n        end: {\n          line: 20,\n          column: 3\n        }\n      },\n      \"7\": {\n        start: {\n          line: 18,\n          column: 22\n        },\n        end: {\n          line: 18,\n          column: 56\n        }\n      },\n      \"8\": {\n        start: {\n          line: 19,\n          column: 4\n        },\n        end: {\n          line: 19,\n          column: 21\n        }\n      },\n      \"9\": {\n        start: {\n          line: 23,\n          column: 24\n        },\n        end: {\n          line: 26,\n          column: 1\n        }\n      },\n      \"10\": {\n        start: {\n          line: 24,\n          column: 14\n        },\n        end: {\n          line: 24,\n          column: 55\n        }\n      },\n      \"11\": {\n        start: {\n          line: 25,\n          column: 2\n        },\n        end: {\n          line: 25,\n          column: 48\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 34\n          },\n          end: {\n            line: 13,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 53\n          },\n          end: {\n            line: 21,\n            column: 1\n          }\n        },\n        line: 13\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 23,\n            column: 24\n          },\n          end: {\n            line: 23,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 23,\n            column: 50\n          },\n          end: {\n            line: 26,\n            column: 1\n          }\n        },\n        line: 23\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        }],\n        line: 14\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 17,\n            column: 9\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 17,\n            column: 9\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 17,\n            column: 9\n          },\n          end: {\n            line: 20,\n            column: 3\n          }\n        }],\n        line: 17\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 24,\n            column: 14\n          },\n          end: {\n            line: 24,\n            column: 55\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 24,\n            column: 31\n          },\n          end: {\n            line: 24,\n            column: 41\n          }\n        }, {\n          start: {\n            line: 24,\n            column: 44\n          },\n          end: {\n            line: 24,\n            column: 55\n          }\n        }],\n        line: 24\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"9e547708771431fa17006a8f11abf71f9272f467\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2bmn6wsyx5 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2bmn6wsyx5();\nimport HitSound1 from './media/hit1.mp3';\nimport HitSound2 from './media/hit2.mp3';\nimport HitSound3 from './media/hit3.mp3';\nimport MissSound1 from './media/miss1.mp3';\nimport MissSound2 from './media/miss2.mp3';\nimport MissSound3 from './media/miss3.mp3';\nimport MissSound4 from './media/miss4.mp3';\nimport MissSound5 from './media/miss5.mp3';\nvar HIT_SOUNDS = (cov_2bmn6wsyx5().s[0]++, [HitSound1, HitSound2, HitSound3]);\nvar MISS_SOUNDS = (cov_2bmn6wsyx5().s[1]++, [MissSound1, MissSound2, MissSound3, MissSound4, MissSound5]);\ncov_2bmn6wsyx5().s[2]++;\nexport var playSeabattleSound = function playSeabattleSound(sound) {\n  cov_2bmn6wsyx5().f[0]++;\n  cov_2bmn6wsyx5().s[3]++;\n\n  if (sound === 'HIT') {\n    cov_2bmn6wsyx5().b[0][0]++;\n    var hitSound = (cov_2bmn6wsyx5().s[4]++, new Audio(_getRandomSound('hit')));\n    cov_2bmn6wsyx5().s[5]++;\n    hitSound.play();\n  } else {\n    cov_2bmn6wsyx5().b[0][1]++;\n    cov_2bmn6wsyx5().s[6]++;\n\n    if (sound === 'MISS') {\n      cov_2bmn6wsyx5().b[1][0]++;\n      var missSound = (cov_2bmn6wsyx5().s[7]++, new Audio(_getRandomSound('miss')));\n      cov_2bmn6wsyx5().s[8]++;\n      missSound.play();\n    } else {\n      cov_2bmn6wsyx5().b[1][1]++;\n    }\n  }\n};\ncov_2bmn6wsyx5().s[9]++;\n\nvar _getRandomSound = function _getRandomSound(type) {\n  cov_2bmn6wsyx5().f[1]++;\n  var arr = (cov_2bmn6wsyx5().s[10]++, type === 'hit' ? (cov_2bmn6wsyx5().b[2][0]++, HIT_SOUNDS) : (cov_2bmn6wsyx5().b[2][1]++, MISS_SOUNDS));\n  cov_2bmn6wsyx5().s[11]++;\n  return arr[Math.random() * arr.length << 0];\n};","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/seabattle/sound.ts"],"names":["HitSound1","HitSound2","HitSound3","MissSound1","MissSound2","MissSound3","MissSound4","MissSound5","HIT_SOUNDS","MISS_SOUNDS","playSeabattleSound","sound","hitSound","Audio","_getRandomSound","play","missSound","type","arr","Math","random","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,IAAMC,UAAU,6BAAG,CAACR,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,CAAH,CAAhB;AACA,IAAMO,WAAW,6BAAG,CAACN,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,UAAjD,CAAH,CAAjB;;AAEA,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAAA;AAAA;;AACnD,MAAIA,KAAK,KAAK,KAAd,EAAqB;AAAA;AACnB,QAAMC,QAAQ,6BAAG,IAAIC,KAAJ,CAAUC,eAAe,CAAC,KAAD,CAAzB,CAAH,CAAd;AADmB;AAEnBF,IAAAA,QAAQ,CAACG,IAAT;AACD,GAHD,MAGO;AAAA;AAAA;;AAAA,QAAIJ,KAAK,KAAK,MAAd,EAAsB;AAAA;AAC3B,UAAMK,SAAS,6BAAG,IAAIH,KAAJ,CAAUC,eAAe,CAAC,MAAD,CAAzB,CAAH,CAAf;AAD2B;AAE3BE,MAAAA,SAAS,CAACD,IAAV;AACD,KAHM;AAAA;AAAA;AAGN;AACF,CARM;;;AAUP,IAAMD,eAAe,GAAG,SAAlBA,eAAkB,CAACG,IAAD,EAA0B;AAAA;AAChD,MAAMC,GAAG,8BAAGD,IAAI,KAAK,KAAT,gCAAiBT,UAAjB,iCAA8BC,WAA9B,CAAH,CAAT;AADgD;AAEhD,SAAOS,GAAG,CAAEC,IAAI,CAACC,MAAL,KAAgBF,GAAG,CAACG,MAArB,IAAgC,CAAjC,CAAV;AACD,CAHD","sourcesContent":["import HitSound1 from './media/hit1.mp3';\nimport HitSound2 from './media/hit2.mp3';\nimport HitSound3 from './media/hit3.mp3';\nimport MissSound1 from './media/miss1.mp3';\nimport MissSound2 from './media/miss2.mp3';\nimport MissSound3 from './media/miss3.mp3';\nimport MissSound4 from './media/miss4.mp3';\nimport MissSound5 from './media/miss5.mp3';\n\nconst HIT_SOUNDS = [HitSound1, HitSound2, HitSound3];\nconst MISS_SOUNDS = [MissSound1, MissSound2, MissSound3, MissSound4, MissSound5];\n\nexport const playSeabattleSound = (sound: string) => {\n  if (sound === 'HIT') {\n    const hitSound = new Audio(_getRandomSound('hit'));\n    hitSound.play();\n  } else if (sound === 'MISS') {\n    const missSound = new Audio(_getRandomSound('miss'));\n    missSound.play();\n  }\n};\n\nconst _getRandomSound = (type: 'hit' | 'miss') => {\n  const arr = type === 'hit' ? HIT_SOUNDS : MISS_SOUNDS;\n  return arr[(Math.random() * arr.length) << 0];\n};\n"]},"metadata":{},"sourceType":"module"}