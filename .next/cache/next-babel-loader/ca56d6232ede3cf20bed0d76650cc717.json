{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_dcu15cph8() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx\";\n  var hash = \"42ae862454d8feb7aa830a9751aba75c46e1ce67\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 6,\n          column: 15\n        },\n        end: {\n          line: 6,\n          column: 38\n        }\n      },\n      \"1\": {\n        start: {\n          line: 15,\n          column: 39\n        },\n        end: {\n          line: 21,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 23,\n          column: 4\n        },\n        end: {\n          line: 50,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 11\n          },\n          end: {\n            line: 51,\n            column: 3\n          }\n        },\n        line: 14\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"42ae862454d8feb7aa830a9751aba75c46e1ce67\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_dcu15cph8 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_dcu15cph8();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nvar QrCode = (cov_dcu15cph8().s[0]++, require('qrcode.react'));\nexport var QrCodePopup = /*#__PURE__*/function (_React$Component) {\n  _inherits(QrCodePopup, _React$Component);\n\n  var _super = _createSuper(QrCodePopup);\n\n  function QrCodePopup() {\n    _classCallCheck(this, QrCodePopup);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QrCodePopup, [{\n    key: \"render\",\n    value: function render() {\n      cov_dcu15cph8().f[0]++;\n      var style = (cov_dcu15cph8().s[1]++, {\n        width: '100%',\n        boxSizing: 'border-box',\n        padding: '16px',\n        height: 'auto',\n        display: 'block'\n      });\n      cov_dcu15cph8().s[2]++;\n      return __jsx(ClickAwayListener, {\n        onClickAway: this.props.toggleQrCode\n      }, __jsx(Card, {\n        style: {\n          marginBottom: '16px',\n          whiteSpace: 'nowrap',\n          marginLeft: 'auto',\n          width: '80vw',\n          maxWidth: '450px',\n          marginRight: 'auto',\n          textAlign: 'center'\n        }\n      }, __jsx(Typography, {\n        style: {\n          paddingTop: '16px'\n        },\n        variant: \"h5\",\n        component: \"h3\"\n      }, \"Scan QR code\"), __jsx(QrCode, {\n        value: this.props.url,\n        size: 500,\n        style: style,\n        renderAs: \"svg\"\n      }), __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginBottom: '16px'\n        },\n        onClick: this.props.toggleQrCode\n      }, \"Done\")));\n    }\n  }]);\n\n  return QrCodePopup;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Lobby/QrCodePopup.tsx"],"names":["React","Button","Typography","Card","ClickAwayListener","QrCode","require","QrCodePopup","style","width","boxSizing","padding","height","display","props","toggleQrCode","marginBottom","whiteSpace","marginLeft","maxWidth","marginRight","textAlign","paddingTop","url","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,IAAMC,MAAM,4BAAGC,OAAO,CAAC,cAAD,CAAV,CAAZ;AAOA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA;AACP,UAAMC,KAA0B,4BAAG;AACjCC,QAAAA,KAAK,EAAE,MAD0B;AAEjCC,QAAAA,SAAS,EAAE,YAFsB;AAGjCC,QAAAA,OAAO,EAAE,MAHwB;AAIjCC,QAAAA,MAAM,EAAE,MAJyB;AAKjCC,QAAAA,OAAO,EAAE;AALwB,OAAH,CAAhC;AADO;AASP,aACE,MAAC,iBAAD;AAAmB,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC;AAA3C,SACE,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,MADT;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,UAAU,EAAE,MAHP;AAILT,UAAAA,KAAK,EAAE,MAJF;AAKLU,UAAAA,QAAQ,EAAE,OALL;AAMLC,UAAAA,WAAW,EAAE,MANR;AAOLC,UAAAA,SAAS,EAAE;AAPN;AADT,SAWE,MAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAnB;AAA2C,QAAA,OAAO,EAAC,IAAnD;AAAwD,QAAA,SAAS,EAAC;AAAlE,wBAXF,EAcE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,GAA1B;AAA+B,QAAA,IAAI,EAAE,GAArC;AAA0C,QAAA,KAAK,EAAEf,KAAjD;AAA+D,QAAA,QAAQ,EAAC;AAAxE,QAdF,EAeE,MAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,YAAY,EAAE;AAAhB,SAHT;AAIE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC;AAJtB,gBAfF,CADF,CADF;AA4BD;AAtCH;;AAAA;AAAA,GAAiCf,KAAK,CAACwB,SAAvC","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nconst QrCode = require('qrcode.react');\n\ninterface IQrCodePopupProps {\n  url: string;\n  toggleQrCode: () => void;\n}\n\nexport class QrCodePopup extends React.Component<IQrCodePopupProps, {}> {\n  render() {\n    const style: React.CSSProperties = {\n      width: '100%',\n      boxSizing: 'border-box',\n      padding: '16px',\n      height: 'auto',\n      display: 'block',\n    };\n\n    return (\n      <ClickAwayListener onClickAway={this.props.toggleQrCode}>\n        <Card\n          style={{\n            marginBottom: '16px',\n            whiteSpace: 'nowrap',\n            marginLeft: 'auto',\n            width: '80vw',\n            maxWidth: '450px',\n            marginRight: 'auto',\n            textAlign: 'center',\n          }}\n        >\n          <Typography style={{ paddingTop: '16px' }} variant=\"h5\" component=\"h3\">\n            Scan QR code\n          </Typography>\n          <QrCode value={this.props.url} size={500} style={style as any} renderAs=\"svg\" />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginBottom: '16px' }}\n            onClick={this.props.toggleQrCode}\n          >\n            Done\n          </Button>\n        </Card>\n      </ClickAwayListener>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}