{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction cov_2bmdvunww9() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/board.tsx\";\n  var hash = \"81a00bae4e4cc266fcfda52225e22e6653d01430\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/board.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 25,\n          column: 11\n        },\n        end: {\n          line: 25,\n          column: 44\n        }\n      },\n      \"1\": {\n        start: {\n          line: 25,\n          column: 17\n        },\n        end: {\n          line: 25,\n          column: 44\n        }\n      },\n      \"2\": {\n        start: {\n          line: 27,\n          column: 17\n        },\n        end: {\n          line: 39,\n          column: 3\n        }\n      },\n      \"3\": {\n        start: {\n          line: 28,\n          column: 4\n        },\n        end: {\n          line: 38,\n          column: 6\n        }\n      },\n      \"4\": {\n        start: {\n          line: 41,\n          column: 21\n        },\n        end: {\n          line: 54,\n          column: 3\n        }\n      },\n      \"5\": {\n        start: {\n          line: 42,\n          column: 4\n        },\n        end: {\n          line: 53,\n          column: 6\n        }\n      },\n      \"6\": {\n        start: {\n          line: 56,\n          column: 19\n        },\n        end: {\n          line: 66,\n          column: 3\n        }\n      },\n      \"7\": {\n        start: {\n          line: 57,\n          column: 4\n        },\n        end: {\n          line: 65,\n          column: 6\n        }\n      },\n      \"8\": {\n        start: {\n          line: 62,\n          column: 10\n        },\n        end: {\n          line: 62,\n          column: 88\n        }\n      },\n      \"9\": {\n        start: {\n          line: 69,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 8\n        }\n      },\n      \"10\": {\n        start: {\n          line: 70,\n          column: 6\n        },\n        end: {\n          line: 76,\n          column: 8\n        }\n      },\n      \"11\": {\n        start: {\n          line: 79,\n          column: 4\n        },\n        end: {\n          line: 83,\n          column: 5\n        }\n      },\n      \"12\": {\n        start: {\n          line: 80,\n          column: 6\n        },\n        end: {\n          line: 80,\n          column: 36\n        }\n      },\n      \"13\": {\n        start: {\n          line: 82,\n          column: 6\n        },\n        end: {\n          line: 82,\n          column: 40\n        }\n      },\n      \"14\": {\n        start: {\n          line: 84,\n          column: 4\n        },\n        end: {\n          line: 88,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 11\n          },\n          end: {\n            line: 25,\n            column: 12\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 17\n          },\n          end: {\n            line: 25,\n            column: 44\n          }\n        },\n        line: 25\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 17\n          },\n          end: {\n            line: 27,\n            column: 18\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 23\n          },\n          end: {\n            line: 39,\n            column: 3\n          }\n        },\n        line: 27\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 41,\n            column: 21\n          },\n          end: {\n            line: 41,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 41,\n            column: 27\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        },\n        line: 41\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 56,\n            column: 19\n          },\n          end: {\n            line: 56,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 56,\n            column: 25\n          },\n          end: {\n            line: 66,\n            column: 3\n          }\n        },\n        line: 56\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 61,\n            column: 52\n          },\n          end: {\n            line: 61,\n            column: 53\n          }\n        },\n        loc: {\n          start: {\n            line: 61,\n            column: 59\n          },\n          end: {\n            line: 63,\n            column: 9\n          }\n        },\n        line: 61\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 68,\n            column: 2\n          },\n          end: {\n            line: 68,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 68,\n            column: 11\n          },\n          end: {\n            line: 89,\n            column: 3\n          }\n        },\n        line: 68\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 69,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 8\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 69,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 8\n          }\n        }, {\n          start: {\n            line: 69,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 8\n          }\n        }],\n        line: 69\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 72,\n            column: 20\n          },\n          end: {\n            line: 72,\n            column: 94\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 72,\n            column: 60\n          },\n          end: {\n            line: 72,\n            column: 75\n          }\n        }, {\n          start: {\n            line: 72,\n            column: 78\n          },\n          end: {\n            line: 72,\n            column: 94\n          }\n        }],\n        line: 72\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 83,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 83,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 79,\n            column: 4\n          },\n          end: {\n            line: 83,\n            column: 5\n          }\n        }],\n        line: 79\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"81a00bae4e4cc266fcfda52225e22e6653d01430\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2bmdvunww9 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2bmdvunww9();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { Phases } from './definitions';\nimport css from './board.css';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { Lobby } from './Lobby';\nimport { PlayBoard } from './PlayBoard';\nexport var Board = /*#__PURE__*/function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"isHost\", (cov_2bmdvunww9().s[0]++, function () {\n      cov_2bmdvunww9().f[0]++;\n      cov_2bmdvunww9().s[1]++;\n      return _this.props.playerID === '0';\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderLobby\", (cov_2bmdvunww9().s[2]++, function () {\n      cov_2bmdvunww9().f[1]++;\n      cov_2bmdvunww9().s[3]++;\n      return __jsx(Lobby, {\n        G: _this.props.G,\n        ctx: _this.props.ctx,\n        moves: _this.props.moves,\n        events: _this.props.events,\n        playerID: _this.props.playerID,\n        gameArgs: _this.props.gameArgs,\n        isHost: _this.isHost()\n      });\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderPlayBoard\", (cov_2bmdvunww9().s[4]++, function () {\n      cov_2bmdvunww9().f[2]++;\n      cov_2bmdvunww9().s[5]++;\n      return __jsx(PlayBoard, {\n        G: _this.props.G,\n        ctx: _this.props.ctx,\n        moves: _this.props.moves,\n        events: _this.props.events,\n        playerID: _this.props.playerID,\n        gameArgs: _this.props.gameArgs,\n        isActive: _this.props.isActive,\n        isHost: _this.isHost()\n      });\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getScoreBoard\", (cov_2bmdvunww9().s[6]++, function () {\n      cov_2bmdvunww9().f[3]++;\n      cov_2bmdvunww9().s[7]++;\n      return __jsx(\"div\", {\n        className: [css.winners].join(' ')\n      }, __jsx(\"h3\", null, \"Winners\"), _this.props.ctx.gameover.winner.players.map(function (p) {\n        cov_2bmdvunww9().f[4]++;\n        cov_2bmdvunww9().s[8]++;\n        return __jsx(\"p\", {\n          key: p.playerID\n        }, _this.props.gameArgs.players[p.playerID].name);\n      }));\n    }));\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      cov_2bmdvunww9().f[5]++;\n      cov_2bmdvunww9().s[9]++;\n\n      if (this.props.ctx.gameover) {\n        cov_2bmdvunww9().b[0][0]++;\n        cov_2bmdvunww9().s[10]++;\n        return __jsx(GameLayout, {\n          gameOver: this.props.ctx.gameover.winner.teamId ? (cov_2bmdvunww9().b[1][0]++, 'Red Team wins') : (cov_2bmdvunww9().b[1][1]++, 'Blue Team wins'),\n          extraCardContent: this._getScoreBoard(),\n          gameArgs: this.props.gameArgs\n        });\n      } else {\n        cov_2bmdvunww9().b[0][1]++;\n      }\n\n      var content;\n      cov_2bmdvunww9().s[11]++;\n\n      if (this.props.ctx.phase === Phases.lobby) {\n        cov_2bmdvunww9().b[2][0]++;\n        cov_2bmdvunww9().s[12]++;\n        content = this._renderLobby();\n      } else {\n        cov_2bmdvunww9().b[2][1]++;\n        cov_2bmdvunww9().s[13]++;\n        content = this._renderPlayBoard();\n      }\n\n      cov_2bmdvunww9().s[14]++;\n      return __jsx(GameLayout, {\n        gameArgs: this.props.gameArgs,\n        allowWiderScreen: true\n      }, content);\n    }\n  }]);\n\n  return Board;\n}((React.Component));\nexport default Board;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/board.tsx"],"names":["React","Phases","css","GameLayout","Lobby","PlayBoard","Board","props","playerID","G","ctx","moves","events","gameArgs","isHost","isActive","winners","join","gameover","winner","players","map","p","name","teamId","_getScoreBoard","content","phase","lobby","_renderLobby","_renderPlayBoard","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IG, Phases } from './definitions';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport css from './board.css';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { Lobby } from './Lobby';\nimport { PlayBoard } from './PlayBoard';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  step?: any;\n  events: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n  isActive: boolean;\n  isMultiplayer: boolean;\n}\n\ninterface IBoardState {}\n\nexport class Board extends React.Component<IBoardProps, IBoardState> {\n  isHost = () => this.props.playerID === '0';\n\n  _renderLobby = () => {\n    return (\n      <Lobby\n        G={this.props.G}\n        ctx={this.props.ctx}\n        moves={this.props.moves}\n        events={this.props.events}\n        playerID={this.props.playerID}\n        gameArgs={this.props.gameArgs}\n        isHost={this.isHost()}\n      />\n    );\n  };\n\n  _renderPlayBoard = () => {\n    return (\n      <PlayBoard\n        G={this.props.G}\n        ctx={this.props.ctx}\n        moves={this.props.moves}\n        events={this.props.events}\n        playerID={this.props.playerID}\n        gameArgs={this.props.gameArgs}\n        isActive={this.props.isActive}\n        isHost={this.isHost()}\n      />\n    );\n  };\n\n  _getScoreBoard = () => {\n    return (\n      <div className={[css.winners].join(' ')}>\n        <h3>Winners</h3>\n\n        {this.props.ctx.gameover.winner.players.map((p) => {\n          return <p key={p.playerID}>{this.props.gameArgs.players[p.playerID].name}</p>;\n        })}\n      </div>\n    );\n  };\n\n  render() {\n    if (this.props.ctx.gameover)\n      return (\n        <GameLayout\n          gameOver={this.props.ctx.gameover.winner.teamId ? 'Red Team wins' : 'Blue Team wins'}\n          extraCardContent={this._getScoreBoard()}\n          gameArgs={this.props.gameArgs}\n        />\n      );\n\n    let content;\n    if (this.props.ctx.phase === Phases.lobby) {\n      content = this._renderLobby();\n    } else {\n      content = this._renderPlayBoard();\n    }\n    return (\n      <GameLayout gameArgs={this.props.gameArgs} allowWiderScreen={true}>\n        {content}\n      </GameLayout>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}