{"ast":null,"code":"function cov_55utw0zkm() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/game.ts\";\n  var hash = \"8a4f4e967d22d8764aa7c5e362ebe13f1713576e\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 15,\n          column: 16\n        },\n        end: {\n          line: 61,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 18,\n          column: 6\n        },\n        end: {\n          line: 27,\n          column: 7\n        }\n      },\n      \"2\": {\n        start: {\n          line: 19,\n          column: 8\n        },\n        end: {\n          line: 26,\n          column: 9\n        }\n      },\n      \"3\": {\n        start: {\n          line: 19,\n          column: 21\n        },\n        end: {\n          line: 19,\n          column: 22\n        }\n      },\n      \"4\": {\n        start: {\n          line: 20,\n          column: 23\n        },\n        end: {\n          line: 20,\n          column: 33\n        }\n      },\n      \"5\": {\n        start: {\n          line: 21,\n          column: 25\n        },\n        end: {\n          line: 21,\n          column: 37\n        }\n      },\n      \"6\": {\n        start: {\n          line: 23,\n          column: 10\n        },\n        end: {\n          line: 23,\n          column: 36\n        }\n      },\n      \"7\": {\n        start: {\n          line: 24,\n          column: 10\n        },\n        end: {\n          line: 24,\n          column: 28\n        }\n      },\n      \"8\": {\n        start: {\n          line: 25,\n          column: 10\n        },\n        end: {\n          line: 25,\n          column: 40\n        }\n      },\n      \"9\": {\n        start: {\n          line: 30,\n          column: 20\n        },\n        end: {\n          line: 33,\n          column: 38\n        }\n      },\n      \"10\": {\n        start: {\n          line: 33,\n          column: 23\n        },\n        end: {\n          line: 33,\n          column: 37\n        }\n      },\n      \"11\": {\n        start: {\n          line: 34,\n          column: 32\n        },\n        end: {\n          line: 34,\n          column: 56\n        }\n      },\n      \"12\": {\n        start: {\n          line: 35,\n          column: 27\n        },\n        end: {\n          line: 35,\n          column: 53\n        }\n      },\n      \"13\": {\n        start: {\n          line: 37,\n          column: 6\n        },\n        end: {\n          line: 37,\n          column: 32\n        }\n      },\n      \"14\": {\n        start: {\n          line: 39,\n          column: 18\n        },\n        end: {\n          line: 39,\n          column: 66\n        }\n      },\n      \"15\": {\n        start: {\n          line: 40,\n          column: 6\n        },\n        end: {\n          line: 45,\n          column: 9\n        }\n      },\n      \"16\": {\n        start: {\n          line: 41,\n          column: 8\n        },\n        end: {\n          line: 44,\n          column: 72\n        }\n      },\n      \"17\": {\n        start: {\n          line: 41,\n          column: 25\n        },\n        end: {\n          line: 41,\n          column: 57\n        }\n      },\n      \"18\": {\n        start: {\n          line: 42,\n          column: 13\n        },\n        end: {\n          line: 44,\n          column: 72\n        }\n      },\n      \"19\": {\n        start: {\n          line: 42,\n          column: 29\n        },\n        end: {\n          line: 42,\n          column: 57\n        }\n      },\n      \"20\": {\n        start: {\n          line: 43,\n          column: 13\n        },\n        end: {\n          line: 44,\n          column: 72\n        }\n      },\n      \"21\": {\n        start: {\n          line: 43,\n          column: 30\n        },\n        end: {\n          line: 43,\n          column: 57\n        }\n      },\n      \"22\": {\n        start: {\n          line: 44,\n          column: 13\n        },\n        end: {\n          line: 44,\n          column: 72\n        }\n      },\n      \"23\": {\n        start: {\n          line: 47,\n          column: 6\n        },\n        end: {\n          line: 47,\n          column: 22\n        }\n      },\n      \"24\": {\n        start: {\n          line: 49,\n          column: 6\n        },\n        end: {\n          line: 53,\n          column: 9\n        }\n      },\n      \"25\": {\n        start: {\n          line: 51,\n          column: 10\n        },\n        end: {\n          line: 51,\n          column: 60\n        }\n      },\n      \"26\": {\n        start: {\n          line: 58,\n          column: 6\n        },\n        end: {\n          line: 58,\n          column: 43\n        }\n      },\n      \"27\": {\n        start: {\n          line: 63,\n          column: 30\n        },\n        end: {\n          line: 173,\n          column: 1\n        }\n      },\n      \"28\": {\n        start: {\n          line: 67,\n          column: 4\n        },\n        end: {\n          line: 71,\n          column: 6\n        }\n      },\n      \"29\": {\n        start: {\n          line: 68,\n          column: 63\n        },\n        end: {\n          line: 68,\n          column: 76\n        }\n      },\n      \"30\": {\n        start: {\n          line: 69,\n          column: 48\n        },\n        end: {\n          line: 69,\n          column: 59\n        }\n      },\n      \"31\": {\n        start: {\n          line: 75,\n          column: 4\n        },\n        end: {\n          line: 75,\n          column: 36\n        }\n      },\n      \"32\": {\n        start: {\n          line: 75,\n          column: 27\n        },\n        end: {\n          line: 75,\n          column: 36\n        }\n      },\n      \"33\": {\n        start: {\n          line: 76,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 44\n        }\n      },\n      \"34\": {\n        start: {\n          line: 76,\n          column: 35\n        },\n        end: {\n          line: 76,\n          column: 44\n        }\n      },\n      \"35\": {\n        start: {\n          line: 77,\n          column: 4\n        },\n        end: {\n          line: 77,\n          column: 51\n        }\n      },\n      \"36\": {\n        start: {\n          line: 77,\n          column: 42\n        },\n        end: {\n          line: 77,\n          column: 51\n        }\n      },\n      \"37\": {\n        start: {\n          line: 79,\n          column: 22\n        },\n        end: {\n          line: 79,\n          column: 23\n        }\n      },\n      \"38\": {\n        start: {\n          line: 80,\n          column: 4\n        },\n        end: {\n          line: 91,\n          column: 6\n        }\n      },\n      \"39\": {\n        start: {\n          line: 83,\n          column: 16\n        },\n        end: {\n          line: 86,\n          column: 9\n        }\n      },\n      \"40\": {\n        start: {\n          line: 88,\n          column: 8\n        },\n        end: {\n          line: 88,\n          column: 45\n        }\n      },\n      \"41\": {\n        start: {\n          line: 88,\n          column: 24\n        },\n        end: {\n          line: 88,\n          column: 45\n        }\n      },\n      \"42\": {\n        start: {\n          line: 89,\n          column: 8\n        },\n        end: {\n          line: 89,\n          column: 17\n        }\n      },\n      \"43\": {\n        start: {\n          line: 123,\n          column: 36\n        },\n        end: {\n          line: 123,\n          column: 77\n        }\n      },\n      \"44\": {\n        start: {\n          line: 123,\n          column: 59\n        },\n        end: {\n          line: 123,\n          column: 69\n        }\n      },\n      \"45\": {\n        start: {\n          line: 124,\n          column: 38\n        },\n        end: {\n          line: 124,\n          column: 64\n        }\n      },\n      \"46\": {\n        start: {\n          line: 125,\n          column: 42\n        },\n        end: {\n          line: 125,\n          column: 105\n        }\n      },\n      \"47\": {\n        start: {\n          line: 125,\n          column: 70\n        },\n        end: {\n          line: 125,\n          column: 104\n        }\n      },\n      \"48\": {\n        start: {\n          line: 153,\n          column: 4\n        },\n        end: {\n          line: 171,\n          column: 5\n        }\n      },\n      \"49\": {\n        start: {\n          line: 154,\n          column: 23\n        },\n        end: {\n          line: 154,\n          column: 80\n        }\n      },\n      \"50\": {\n        start: {\n          line: 154,\n          column: 46\n        },\n        end: {\n          line: 154,\n          column: 79\n        }\n      },\n      \"51\": {\n        start: {\n          line: 155,\n          column: 19\n        },\n        end: {\n          line: 155,\n          column: 92\n        }\n      },\n      \"52\": {\n        start: {\n          line: 155,\n          column: 44\n        },\n        end: {\n          line: 155,\n          column: 91\n        }\n      },\n      \"53\": {\n        start: {\n          line: 156,\n          column: 18\n        },\n        end: {\n          line: 156,\n          column: 90\n        }\n      },\n      \"54\": {\n        start: {\n          line: 156,\n          column: 43\n        },\n        end: {\n          line: 156,\n          column: 89\n        }\n      },\n      \"55\": {\n        start: {\n          line: 158,\n          column: 6\n        },\n        end: {\n          line: 162,\n          column: 7\n        }\n      },\n      \"56\": {\n        start: {\n          line: 159,\n          column: 8\n        },\n        end: {\n          line: 161,\n          column: 10\n        }\n      },\n      \"57\": {\n        start: {\n          line: 163,\n          column: 6\n        },\n        end: {\n          line: 166,\n          column: 10\n        }\n      },\n      \"58\": {\n        start: {\n          line: 164,\n          column: 8\n        },\n        end: {\n          line: 166,\n          column: 10\n        }\n      },\n      \"59\": {\n        start: {\n          line: 167,\n          column: 6\n        },\n        end: {\n          line: 170,\n          column: 10\n        }\n      },\n      \"60\": {\n        start: {\n          line: 168,\n          column: 8\n        },\n        end: {\n          line: 170,\n          column: 10\n        }\n      },\n      \"61\": {\n        start: {\n          line: 175,\n          column: 31\n        },\n        end: {\n          line: 175,\n          column: 41\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 17,\n            column: 20\n          },\n          end: {\n            line: 17,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 17,\n            column: 46\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        },\n        line: 17\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 19\n          },\n          end: {\n            line: 29,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 45\n          },\n          end: {\n            line: 54,\n            column: 5\n          }\n        },\n        line: 29\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 33,\n            column: 13\n          },\n          end: {\n            line: 33,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 23\n          },\n          end: {\n            line: 33,\n            column: 37\n          }\n        },\n        line: 33\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 14\n          },\n          end: {\n            line: 40,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 31\n          },\n          end: {\n            line: 45,\n            column: 7\n          }\n        },\n        line: 40\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 50,\n            column: 15\n          },\n          end: {\n            line: 50,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 50,\n            column: 27\n          },\n          end: {\n            line: 52,\n            column: 9\n          }\n        },\n        line: 50\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 57,\n            column: 19\n          },\n          end: {\n            line: 57,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 57,\n            column: 45\n          },\n          end: {\n            line: 59,\n            column: 5\n          }\n        },\n        line: 57\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 66,\n            column: 9\n          },\n          end: {\n            line: 66,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 66,\n            column: 32\n          },\n          end: {\n            line: 72,\n            column: 3\n          }\n        },\n        line: 66\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 68,\n            column: 53\n          },\n          end: {\n            line: 68,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 68,\n            column: 63\n          },\n          end: {\n            line: 68,\n            column: 76\n          }\n        },\n        line: 68\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 69,\n            column: 38\n          },\n          end: {\n            line: 69,\n            column: 39\n          }\n        },\n        loc: {\n          start: {\n            line: 69,\n            column: 48\n          },\n          end: {\n            line: 69,\n            column: 59\n          }\n        },\n        line: 69\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 74,\n            column: 14\n          },\n          end: {\n            line: 74,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 74,\n            column: 63\n          },\n          end: {\n            line: 92,\n            column: 3\n          }\n        },\n        line: 74\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 82,\n            column: 23\n          },\n          end: {\n            line: 82,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 82,\n            column: 39\n          },\n          end: {\n            line: 90,\n            column: 7\n          }\n        },\n        line: 82\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 123,\n            column: 17\n          },\n          end: {\n            line: 123,\n            column: 18\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 36\n          },\n          end: {\n            line: 123,\n            column: 77\n          }\n        },\n        line: 123\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 123,\n            column: 49\n          },\n          end: {\n            line: 123,\n            column: 50\n          }\n        },\n        loc: {\n          start: {\n            line: 123,\n            column: 59\n          },\n          end: {\n            line: 123,\n            column: 69\n          }\n        },\n        line: 123\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 124,\n            column: 16\n          },\n          end: {\n            line: 124,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 124,\n            column: 38\n          },\n          end: {\n            line: 124,\n            column: 64\n          }\n        },\n        line: 124\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 125,\n            column: 21\n          },\n          end: {\n            line: 125,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 125,\n            column: 42\n          },\n          end: {\n            line: 125,\n            column: 105\n          }\n        },\n        line: 125\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 125,\n            column: 54\n          },\n          end: {\n            line: 125,\n            column: 55\n          }\n        },\n        loc: {\n          start: {\n            line: 125,\n            column: 70\n          },\n          end: {\n            line: 125,\n            column: 104\n          }\n        },\n        line: 125\n      },\n      \"16\": {\n        name: \"(anonymous_16)\",\n        decl: {\n          start: {\n            line: 152,\n            column: 9\n          },\n          end: {\n            line: 152,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 152,\n            column: 35\n          },\n          end: {\n            line: 172,\n            column: 3\n          }\n        },\n        line: 152\n      },\n      \"17\": {\n        name: \"(anonymous_17)\",\n        decl: {\n          start: {\n            line: 154,\n            column: 36\n          },\n          end: {\n            line: 154,\n            column: 37\n          }\n        },\n        loc: {\n          start: {\n            line: 154,\n            column: 46\n          },\n          end: {\n            line: 154,\n            column: 79\n          }\n        },\n        line: 154\n      },\n      \"18\": {\n        name: \"(anonymous_18)\",\n        decl: {\n          start: {\n            line: 155,\n            column: 34\n          },\n          end: {\n            line: 155,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 155,\n            column: 44\n          },\n          end: {\n            line: 155,\n            column: 91\n          }\n        },\n        line: 155\n      },\n      \"19\": {\n        name: \"(anonymous_19)\",\n        decl: {\n          start: {\n            line: 156,\n            column: 33\n          },\n          end: {\n            line: 156,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 156,\n            column: 43\n          },\n          end: {\n            line: 156,\n            column: 89\n          }\n        },\n        line: 156\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 27,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 27,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 6\n          },\n          end: {\n            line: 27,\n            column: 7\n          }\n        }],\n        line: 18\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }, {\n          start: {\n            line: 41,\n            column: 8\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }],\n        line: 41\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }],\n        line: 42\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 43,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 43,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }, {\n          start: {\n            line: 43,\n            column: 13\n          },\n          end: {\n            line: 44,\n            column: 72\n          }\n        }],\n        line: 43\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 44,\n            column: 26\n          },\n          end: {\n            line: 44,\n            column: 71\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 44,\n            column: 41\n          },\n          end: {\n            line: 44,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 44,\n            column: 57\n          },\n          end: {\n            line: 44,\n            column: 71\n          }\n        }],\n        line: 44\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 75,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 36\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 75,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 75,\n            column: 4\n          },\n          end: {\n            line: 75,\n            column: 36\n          }\n        }],\n        line: 75\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 76,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 44\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 76,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 44\n          }\n        }, {\n          start: {\n            line: 76,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 44\n          }\n        }],\n        line: 76\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 77,\n            column: 4\n          },\n          end: {\n            line: 77,\n            column: 51\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 77,\n            column: 4\n          },\n          end: {\n            line: 77,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 77,\n            column: 4\n          },\n          end: {\n            line: 77,\n            column: 51\n          }\n        }],\n        line: 77\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 88,\n            column: 8\n          },\n          end: {\n            line: 88,\n            column: 45\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 88,\n            column: 8\n          },\n          end: {\n            line: 88,\n            column: 45\n          }\n        }, {\n          start: {\n            line: 88,\n            column: 8\n          },\n          end: {\n            line: 88,\n            column: 45\n          }\n        }],\n        line: 88\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 153,\n            column: 4\n          },\n          end: {\n            line: 171,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 153,\n            column: 4\n          },\n          end: {\n            line: 171,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 153,\n            column: 4\n          },\n          end: {\n            line: 171,\n            column: 5\n          }\n        }],\n        line: 153\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 155,\n            column: 44\n          },\n          end: {\n            line: 155,\n            column: 91\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 155,\n            column: 44\n          },\n          end: {\n            line: 155,\n            column: 73\n          }\n        }, {\n          start: {\n            line: 155,\n            column: 77\n          },\n          end: {\n            line: 155,\n            column: 91\n          }\n        }],\n        line: 155\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 156,\n            column: 43\n          },\n          end: {\n            line: 156,\n            column: 89\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 156,\n            column: 43\n          },\n          end: {\n            line: 156,\n            column: 71\n          }\n        }, {\n          start: {\n            line: 156,\n            column: 75\n          },\n          end: {\n            line: 156,\n            column: 89\n          }\n        }],\n        line: 156\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 158,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 158,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 158,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        }],\n        line: 158\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 163,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 10\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 163,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 10\n          }\n        }, {\n          start: {\n            line: 163,\n            column: 6\n          },\n          end: {\n            line: 166,\n            column: 10\n          }\n        }],\n        line: 163\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 170,\n            column: 10\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 170,\n            column: 10\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 170,\n            column: 10\n          }\n        }],\n        line: 167\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"8a4f4e967d22d8764aa7c5e362ebe13f1713576e\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_55utw0zkm = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_55utw0zkm();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { words } from './constants';\nimport { Phases, Stages, CardColor } from './definitions';\nimport { switchTeam, clueGiven, makeSpymaster, getCurrentTeam, chooseCard, makeCard, makePlayer, makeTeam } from './util';\nconst onBegin = (cov_55utw0zkm().s[0]++, {\n  phases: {\n    [Phases.lobby]: (G, ctx) => {\n      cov_55utw0zkm().f[0]++;\n      cov_55utw0zkm().s[1]++;\n\n      if (G.players.length == 2) {\n        cov_55utw0zkm().b[0][0]++;\n        cov_55utw0zkm().s[2]++;\n\n        for (let i = (cov_55utw0zkm().s[3]++, 0); i < 2; i += 1) {\n          const team = (cov_55utw0zkm().s[4]++, G.teams[i]);\n          const player = (cov_55utw0zkm().s[5]++, G.players[i]);\n          cov_55utw0zkm().s[6]++;\n          team.players.push(player);\n          cov_55utw0zkm().s[7]++;\n          player.teamID = i;\n          cov_55utw0zkm().s[8]++;\n          makeSpymaster(G, ctx, player);\n        }\n      } else {\n        cov_55utw0zkm().b[0][1]++;\n      }\n    },\n    [Phases.play]: (G, ctx) => {\n      cov_55utw0zkm().f[1]++;\n      const cards = (cov_55utw0zkm().s[9]++, ctx.random.Shuffle(words).slice(0, 25).map(word => {\n        cov_55utw0zkm().f[2]++;\n        cov_55utw0zkm().s[10]++;\n        return makeCard(word);\n      }));\n      const startingTeamIndex = (cov_55utw0zkm().s[11]++, ctx.random.Die(2, 1) % 2);\n      const startingTeam = (cov_55utw0zkm().s[12]++, G.teams[startingTeamIndex]);\n      cov_55utw0zkm().s[13]++;\n      startingTeam.start = true;\n      const key = (cov_55utw0zkm().s[14]++, ctx.random.Shuffle(cards).slice(0, 18));\n      cov_55utw0zkm().s[15]++;\n      key.map((card, index) => {\n        cov_55utw0zkm().f[3]++;\n        cov_55utw0zkm().s[16]++;\n\n        if (index === 0) {\n          cov_55utw0zkm().b[1][0]++;\n          cov_55utw0zkm().s[17]++;\n          card.color = CardColor.assassin;\n        } else {\n          cov_55utw0zkm().b[1][1]++;\n          cov_55utw0zkm().s[18]++;\n\n          if (index <= 8) {\n            cov_55utw0zkm().b[2][0]++;\n            cov_55utw0zkm().s[19]++;\n            card.color = CardColor.blue;\n          } else {\n            cov_55utw0zkm().b[2][1]++;\n            cov_55utw0zkm().s[20]++;\n\n            if (index <= 16) {\n              cov_55utw0zkm().b[3][0]++;\n              cov_55utw0zkm().s[21]++;\n              card.color = CardColor.red;\n            } else {\n              cov_55utw0zkm().b[3][1]++;\n              cov_55utw0zkm().s[22]++;\n              card.color = startingTeam ? (cov_55utw0zkm().b[4][0]++, CardColor.red) : (cov_55utw0zkm().b[4][1]++, CardColor.blue);\n            }\n          }\n        }\n      });\n      cov_55utw0zkm().s[23]++;\n      G.cards = cards;\n      cov_55utw0zkm().s[24]++;\n      ctx.events.endTurn({\n        next: function () {\n          cov_55utw0zkm().f[4]++;\n          cov_55utw0zkm().s[25]++;\n          return startingTeam.spymaster.playerID.toString();\n        }()\n      });\n    }\n  },\n  turns: {\n    [Phases.play]: (G, ctx) => {\n      cov_55utw0zkm().f[5]++;\n      cov_55utw0zkm().s[26]++;\n      ctx.events.setStage(Stages.giveClue);\n    }\n  }\n});\nconst GameConfig = (cov_55utw0zkm().s[27]++, {\n  name: 'secretcodes',\n  setup: ctx => {\n    cov_55utw0zkm().f[6]++;\n    cov_55utw0zkm().s[28]++;\n    return {\n      players: new Array(ctx.numPlayers).fill(0).map((_, i) => {\n        cov_55utw0zkm().f[7]++;\n        cov_55utw0zkm().s[29]++;\n        return makePlayer(i);\n      }),\n      teams: new Array(2).fill(0).map((_, i) => {\n        cov_55utw0zkm().f[8]++;\n        cov_55utw0zkm().s[30]++;\n        return makeTeam(i);\n      }),\n      cards: []\n    };\n  },\n  playerView: (G, ctx, playerID) => {\n    cov_55utw0zkm().f[9]++;\n    cov_55utw0zkm().s[31]++;\n\n    if (playerID === null) {\n      cov_55utw0zkm().b[5][0]++;\n      cov_55utw0zkm().s[32]++;\n      return G;\n    } else {\n      cov_55utw0zkm().b[5][1]++;\n    }\n\n    cov_55utw0zkm().s[33]++;\n\n    if (ctx.phase !== Phases.play) {\n      cov_55utw0zkm().b[6][0]++;\n      cov_55utw0zkm().s[34]++;\n      return G;\n    } else {\n      cov_55utw0zkm().b[6][1]++;\n    }\n\n    cov_55utw0zkm().s[35]++;\n\n    if (ctx.playOrder.includes(playerID)) {\n      cov_55utw0zkm().b[7][0]++;\n      cov_55utw0zkm().s[36]++;\n      return G;\n    } else {\n      cov_55utw0zkm().b[7][1]++;\n    }\n\n    const {\n      cards\n    } = (cov_55utw0zkm().s[37]++, G);\n    cov_55utw0zkm().s[38]++;\n    return _objectSpread({}, G, {\n      cards: cards.map(card => {\n        cov_55utw0zkm().f[10]++;\n        let c = (cov_55utw0zkm().s[39]++, {\n          word: card.word,\n          revealed: card.revealed\n        }); // @ts-ignore\n\n        cov_55utw0zkm().s[40]++;\n\n        if (c.revealed) {\n          cov_55utw0zkm().b[8][0]++;\n          cov_55utw0zkm().s[41]++;\n          c.color = card.color;\n        } else {\n          cov_55utw0zkm().b[8][1]++;\n        }\n\n        cov_55utw0zkm().s[42]++;\n        return c;\n      })\n    });\n  },\n  phases: {\n    [Phases.lobby]: {\n      start: true,\n      onBegin: onBegin.phases[Phases.lobby],\n      next: Phases.play,\n      turn: {\n        activePlayers: {\n          all: Stages.chooseTeam\n        },\n        stages: {\n          [Stages.chooseTeam]: {\n            moves: {\n              switchTeam,\n              makeSpymaster\n            }\n          }\n        }\n      }\n    },\n    [Phases.play]: {\n      onBegin: onBegin.phases[Phases.play],\n      turn: {\n        order: {\n          first: G => {\n            cov_55utw0zkm().f[11]++;\n            cov_55utw0zkm().s[43]++;\n            return G.teams.find(team => {\n              cov_55utw0zkm().f[12]++;\n              cov_55utw0zkm().s[44]++;\n              return team.start;\n            }).teamID;\n          },\n          next: (_, ctx) => {\n            cov_55utw0zkm().f[13]++;\n            cov_55utw0zkm().s[45]++;\n            return (ctx.playOrderPos + 1) % 2;\n          },\n          playOrder: G => {\n            cov_55utw0zkm().f[14]++;\n            cov_55utw0zkm().s[46]++;\n            return G.teams.map(team => {\n              cov_55utw0zkm().f[15]++;\n              cov_55utw0zkm().s[47]++;\n              return team.spymaster.playerID.toString();\n            });\n          }\n        },\n        onBegin: onBegin.turns[Phases.play],\n        stages: {\n          [Stages.giveClue]: {\n            moves: {\n              clueGiven\n            },\n            next: Stages.guess\n          },\n          [Stages.guess]: {\n            moves: {\n              chooseCard: {\n                // @ts-ignore\n                move: chooseCard,\n                client: false\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  endIf: (G, ctx) => {\n    cov_55utw0zkm().f[16]++;\n    cov_55utw0zkm().s[48]++;\n\n    if (ctx.turn >= 2) {\n      cov_55utw0zkm().b[9][0]++;\n      const assassin = (cov_55utw0zkm().s[49]++, G.cards.find(card => {\n        cov_55utw0zkm().f[17]++;\n        cov_55utw0zkm().s[50]++;\n        return card.color === CardColor.assassin;\n      }));\n      const blue = (cov_55utw0zkm().s[51]++, G.cards.filter(card => {\n        cov_55utw0zkm().f[18]++;\n        cov_55utw0zkm().s[52]++;\n        return (cov_55utw0zkm().b[10][0]++, card.color === CardColor.blue) && (cov_55utw0zkm().b[10][1]++, !card.revealed);\n      }));\n      const red = (cov_55utw0zkm().s[53]++, G.cards.filter(card => {\n        cov_55utw0zkm().f[19]++;\n        cov_55utw0zkm().s[54]++;\n        return (cov_55utw0zkm().b[11][0]++, card.color === CardColor.red) && (cov_55utw0zkm().b[11][1]++, !card.revealed);\n      }));\n      cov_55utw0zkm().s[55]++;\n\n      if (assassin.revealed) {\n        cov_55utw0zkm().b[12][0]++;\n        cov_55utw0zkm().s[56]++;\n        return {\n          winner: G.teams[(getCurrentTeam(G, ctx).teamID + 1) % 2]\n        };\n      } else {\n        cov_55utw0zkm().b[12][1]++;\n      }\n\n      cov_55utw0zkm().s[57]++;\n\n      if (blue.length === 0) {\n        cov_55utw0zkm().b[13][0]++;\n        cov_55utw0zkm().s[58]++;\n        return {\n          winner: G.teams[0]\n        };\n      } else {\n        cov_55utw0zkm().b[13][1]++;\n      }\n\n      cov_55utw0zkm().s[59]++;\n\n      if (red.length === 0) {\n        cov_55utw0zkm().b[14][0]++;\n        cov_55utw0zkm().s[60]++;\n        return {\n          winner: G.teams[1]\n        };\n      } else {\n        cov_55utw0zkm().b[14][1]++;\n      }\n    } else {\n      cov_55utw0zkm().b[9][1]++;\n    }\n  }\n});\nexport const SecretcodesGame = (cov_55utw0zkm().s[61]++, GameConfig);","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/game.ts"],"names":["words","Phases","Stages","CardColor","switchTeam","clueGiven","makeSpymaster","getCurrentTeam","chooseCard","makeCard","makePlayer","makeTeam","onBegin","phases","lobby","G","ctx","players","length","i","team","teams","player","push","teamID","play","cards","random","Shuffle","slice","map","word","startingTeamIndex","Die","startingTeam","start","key","card","index","color","assassin","blue","red","events","endTurn","next","spymaster","playerID","toString","turns","setStage","giveClue","GameConfig","name","setup","Array","numPlayers","fill","_","playerView","phase","playOrder","includes","c","revealed","turn","activePlayers","all","chooseTeam","stages","moves","order","first","find","playOrderPos","guess","move","client","endIf","filter","winner","SecretcodesGame"],"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","sourcesContent":["import { IGameArgs, IGameCtx } from 'boardgame.io/core';\nimport { words } from './constants';\nimport { IG, Phases, Stages, CardColor, Team, Card } from './definitions';\nimport {\n  switchTeam,\n  clueGiven,\n  makeSpymaster,\n  getCurrentTeam,\n  chooseCard,\n  makeCard,\n  makePlayer,\n  makeTeam,\n} from './util';\n\nconst onBegin = {\n  phases: {\n    [Phases.lobby]: (G: IG, ctx: IGameCtx) => {\n      if (G.players.length == 2) {\n        for (let i = 0; i < 2; i += 1) {\n          const team = G.teams[i];\n          const player = G.players[i];\n\n          team.players.push(player);\n          player.teamID = i;\n          makeSpymaster(G, ctx, player);\n        }\n      }\n    },\n    [Phases.play]: (G: IG, ctx: IGameCtx) => {\n      const cards = ctx.random\n        .Shuffle(words)\n        .slice(0, 25)\n        .map((word) => makeCard(word));\n      const startingTeamIndex = ctx.random.Die(2, 1) % 2;\n      const startingTeam = G.teams[startingTeamIndex];\n\n      startingTeam.start = true;\n\n      const key = ctx.random.Shuffle(cards).slice(0, 18) as Card[];\n      key.map((card, index) => {\n        if (index === 0) card.color = CardColor.assassin;\n        else if (index <= 8) card.color = CardColor.blue;\n        else if (index <= 16) card.color = CardColor.red;\n        else card.color = startingTeam ? CardColor.red : CardColor.blue;\n      });\n\n      G.cards = cards;\n\n      ctx.events.endTurn({\n        next: (function () {\n          return startingTeam.spymaster.playerID.toString();\n        })(),\n      });\n    },\n  },\n  turns: {\n    [Phases.play]: (G: IG, ctx: IGameCtx) => {\n      ctx.events.setStage(Stages.giveClue);\n    },\n  },\n};\n\nconst GameConfig: IGameArgs = {\n  name: 'secretcodes',\n\n  setup: (ctx: IGameCtx): IG => {\n    return {\n      players: new Array(ctx.numPlayers).fill(0).map((_, i) => makePlayer(i)),\n      teams: new Array(2).fill(0).map((_, i) => makeTeam(i)),\n      cards: [],\n    };\n  },\n\n  playerView: (G: IG, ctx: IGameCtx, playerID: string): any => {\n    if (playerID === null) return G;\n    if (ctx.phase !== Phases.play) return G;\n    if (ctx.playOrder.includes(playerID)) return G;\n\n    const { cards } = G;\n    return {\n      ...G,\n      cards: cards.map((card: Card) => {\n        let c = {\n          word: card.word,\n          revealed: card.revealed,\n        };\n        // @ts-ignore\n        if (c.revealed) c.color = card.color;\n        return c;\n      }),\n    };\n  },\n\n  phases: {\n    [Phases.lobby]: {\n      start: true,\n\n      onBegin: onBegin.phases[Phases.lobby],\n\n      next: Phases.play,\n\n      turn: {\n        activePlayers: {\n          all: Stages.chooseTeam,\n        },\n\n        stages: {\n          [Stages.chooseTeam]: {\n            moves: {\n              switchTeam,\n              makeSpymaster,\n            },\n          },\n        },\n      },\n    },\n\n    [Phases.play]: {\n      onBegin: onBegin.phases[Phases.play],\n\n      turn: {\n        order: {\n          first: (G: IG): number => G.teams.find((team) => team.start).teamID,\n          next: (_, ctx: IGameCtx) => (ctx.playOrderPos + 1) % 2,\n          playOrder: (G: IG): string[] => G.teams.map((team: Team) => team.spymaster.playerID.toString()),\n        },\n        onBegin: onBegin.turns[Phases.play],\n\n        stages: {\n          [Stages.giveClue]: {\n            moves: {\n              clueGiven,\n            },\n\n            next: Stages.guess,\n          },\n\n          [Stages.guess]: {\n            moves: {\n              chooseCard: {\n                // @ts-ignore\n                move: chooseCard,\n                client: false,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n\n  endIf: (G: IG, ctx: IGameCtx) => {\n    if (ctx.turn >= 2) {\n      const assassin = G.cards.find((card) => card.color === CardColor.assassin);\n      const blue = G.cards.filter((card) => card.color === CardColor.blue && !card.revealed);\n      const red = G.cards.filter((card) => card.color === CardColor.red && !card.revealed);\n\n      if (assassin.revealed) {\n        return {\n          winner: G.teams[(getCurrentTeam(G, ctx).teamID + 1) % 2],\n        };\n      }\n      if (blue.length === 0)\n        return {\n          winner: G.teams[0],\n        };\n      if (red.length === 0)\n        return {\n          winner: G.teams[1],\n        };\n    }\n  },\n};\n\nexport const SecretcodesGame = GameConfig;\n"]},"metadata":{},"sourceType":"module"}