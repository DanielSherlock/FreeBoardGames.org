{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_9l7gilmze() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bplay.tsx\";\n  var hash = \"ef4b33631e795cf9df4ba682aaf73bc6774df6ee\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bplay.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 9,\n          column: 11\n        },\n        end: {\n          line: 9,\n          column: 43\n        }\n      },\n      \"1\": {\n        start: {\n          line: 10,\n          column: 12\n        },\n        end: {\n          line: 10,\n          column: 45\n        }\n      },\n      \"2\": {\n        start: {\n          line: 11,\n          column: 11\n        },\n        end: {\n          line: 11,\n          column: 44\n        }\n      },\n      \"3\": {\n        start: {\n          line: 13,\n          column: 18\n        },\n        end: {\n          line: 19,\n          column: 1\n        }\n      },\n      \"4\": {\n        start: {\n          line: 21,\n          column: 17\n        },\n        end: {\n          line: 24,\n          column: 1\n        }\n      },\n      \"5\": {\n        start: {\n          line: 28,\n          column: 8\n        },\n        end: {\n          line: 46,\n          column: 9\n        }\n      },\n      \"6\": {\n        start: {\n          line: 29,\n          column: 12\n        },\n        end: {\n          line: 45,\n          column: 13\n        }\n      },\n      \"7\": {\n        start: {\n          line: 47,\n          column: 8\n        },\n        end: {\n          line: 53,\n          column: 9\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 27,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 13\n          },\n          end: {\n            line: 54,\n            column: 5\n          }\n        },\n        line: 27\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 28,\n            column: 8\n          },\n          end: {\n            line: 46,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 28,\n            column: 8\n          },\n          end: {\n            line: 46,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 28,\n            column: 8\n          },\n          end: {\n            line: 46,\n            column: 9\n          }\n        }],\n        line: 28\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"ef4b33631e795cf9df4ba682aaf73bc6774df6ee\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_9l7gilmze = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_9l7gilmze();\nimport React from 'react';\nvar play = (cov_9l7gilmze().s[0]++, require('./media/play_temp.png'));\nvar trash = (cov_9l7gilmze().s[1]++, require('./media/trash_temp.png'));\nvar wait = (cov_9l7gilmze().s[2]++, require('./media/countdown2.png'));\nlet buttonStyle = (cov_9l7gilmze().s[3]++, {\n  background: 'none',\n  border: '0',\n  padding: '0',\n  height: '50%',\n  width: '50%'\n});\nlet imageStyle = (cov_9l7gilmze().s[4]++, {\n  height: '100%',\n  width: '100%'\n});\nexport class BPlay extends (React.Component) {\n  render() {\n    cov_9l7gilmze().f[0]++;\n    cov_9l7gilmze().s[5]++;\n\n    if (this.props.myTurn) {\n      cov_9l7gilmze().b[0][0]++;\n      cov_9l7gilmze().s[6]++;\n      return __jsx(\"div\", null, __jsx(\"button\", {\n        onClick: this.props.onPlay,\n        style: buttonStyle\n      }, __jsx(\"img\", {\n        src: play,\n        style: imageStyle\n      })), __jsx(\"button\", {\n        onClick: this.props.onTrash,\n        style: buttonStyle\n      }, __jsx(\"img\", {\n        src: trash,\n        style: imageStyle\n      })));\n    } else {\n      cov_9l7gilmze().b[0][1]++;\n    }\n\n    cov_9l7gilmze().s[7]++;\n    return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: wait,\n      height: \"50\",\n      width: \"50\"\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bplay.tsx"],"names":["React","play","require","trash","wait","buttonStyle","background","border","padding","height","width","imageStyle","BPlay","Component","render","props","myTurn","onPlay","onTrash"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,IAAIC,IAAI,4BAAGC,OAAO,CAAC,uBAAD,CAAV,CAAR;AACA,IAAIC,KAAK,4BAAGD,OAAO,CAAC,wBAAD,CAAV,CAAT;AACA,IAAIE,IAAI,4BAAGF,OAAO,CAAC,wBAAD,CAAV,CAAR;AAEA,IAAIG,WAAW,4BAAG;AAChBC,EAAAA,UAAU,EAAE,MADI;AAEhBC,EAAAA,MAAM,EAAE,GAFQ;AAGhBC,EAAAA,OAAO,EAAE,GAHO;AAIhBC,EAAAA,MAAM,EAAE,KAJQ;AAKhBC,EAAAA,KAAK,EAAE;AALS,CAAH,CAAf;AAQA,IAAIC,UAAU,4BAAG;AACfF,EAAAA,MAAM,EAAE,MADO;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAH,CAAd;AAKA,OAAO,MAAME,KAAN,UAAoBZ,KAAK,CAACa,SAA1B,EAAyD;AAC5DC,EAAAA,MAAM,GAAG;AAAA;AAAA;;AACL,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAsB;AAAA;AAAA;AAClB,aACI,mBACI;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,MADtB;AAEE,QAAA,KAAK,EAAEZ;AAFT,SAII;AAAK,QAAA,GAAG,EAAGJ,IAAX;AAAkB,QAAA,KAAK,EAAGU;AAA1B,QAJJ,CADJ,EAQI;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWG,OADtB;AAEE,QAAA,KAAK,EAAEb;AAFT,SAII;AAAK,QAAA,GAAG,EAAGF,KAAX;AAAmB,QAAA,KAAK,EAAGQ;AAA3B,QAJJ,CARJ,CADJ;AAiBH,KAlBD;AAAA;AAAA;;AADK;AAoBL,WACI,mBACI,mBACI;AAAK,MAAA,GAAG,EAAGP,IAAX;AAAkB,MAAA,MAAM,EAAC,IAAzB;AAA8B,MAAA,KAAK,EAAC;AAApC,MADJ,CADJ,CADJ;AAOH;;AA5B2D","sourcesContent":["import React from 'react';\n\ninterface InnerWrapper {\n    onPlay(): any;\n    onTrash(): any;\n    myTurn: boolean;\n}\n\nvar play = require('./media/play_temp.png')\nvar trash = require('./media/trash_temp.png')\nvar wait = require('./media/countdown2.png')\n\nlet buttonStyle = {\n  background: 'none',\n  border: '0',\n  padding: '0',\n  height: '50%',\n  width: '50%'\n}\n\nlet imageStyle = {\n  height: '100%',\n  width: '100%'\n}\n\nexport class BPlay extends React.Component< InnerWrapper, { } > {\n    render() {\n        if (this.props.myTurn){\n            return (\n                <div>\n                    <button \n                      onClick={this.props.onPlay}\n                      style={buttonStyle}\n                      >\n                        <img src={ play } style={ imageStyle }></img>\n                    </button>\n                    \n                    <button \n                      onClick={this.props.onTrash}\n                      style={buttonStyle}\n                      >\n                        <img src={ trash } style={ imageStyle }></img>\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <div>\n                    <img src={ wait } height=\"50\" width=\"50\"></img>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}