{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_s9mdjdutx() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx\";\n  var hash = \"065c0c3ca450449a1b4b2075817619bcc2f35a6c\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 18,\n          column: 4\n        },\n        end: {\n          line: 36,\n          column: 5\n        }\n      },\n      \"1\": {\n        start: {\n          line: 19,\n          column: 6\n        },\n        end: {\n          line: 25,\n          column: 8\n        }\n      },\n      \"2\": {\n        start: {\n          line: 27,\n          column: 6\n        },\n        end: {\n          line: 35,\n          column: 8\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 17,\n            column: 2\n          },\n          end: {\n            line: 17,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 17,\n            column: 11\n          },\n          end: {\n            line: 37,\n            column: 3\n          }\n        },\n        line: 17\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 18,\n            column: 4\n          },\n          end: {\n            line: 36,\n            column: 5\n          }\n        }],\n        line: 18\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"065c0c3ca450449a1b4b2075817619bcc2f35a6c\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_s9mdjdutx = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_s9mdjdutx();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { GameOver } from './GameOver';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nexport var GameLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(GameLayout, _React$Component);\n\n  var _super = _createSuper(GameLayout);\n\n  function GameLayout() {\n    _classCallCheck(this, GameLayout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GameLayout, [{\n    key: \"render\",\n    value: function render() {\n      cov_s9mdjdutx().f[0]++;\n      cov_s9mdjdutx().s[0]++;\n\n      if (this.props.gameOver) {\n        cov_s9mdjdutx().b[0][0]++;\n        cov_s9mdjdutx().s[1]++;\n        return __jsx(GameOver, {\n          result: this.props.gameOver,\n          gameArgs: this.props.gameArgs,\n          extraCardContent: this.props.extraCardContent\n        });\n      } else {\n        cov_s9mdjdutx().b[0][1]++;\n        cov_s9mdjdutx().s[2]++;\n        return __jsx(GameDarkSublayout, {\n          optionsMenuItems: this.props.optionsMenuItems,\n          allowWiderScreen: this.props.allowWiderScreen,\n          gameArgs: this.props.gameArgs\n        }, this.props.children);\n      }\n    }\n  }]);\n\n  return GameLayout;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx"],"names":["React","GameOver","GameDarkSublayout","GameLayout","props","gameOver","gameArgs","extraCardContent","optionsMenuItems","allowWiderScreen","children","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAYA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA;AAAA;;AACP,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AAAA;AAAA;AACvB,eACE,MAAC,QAAD;AACE,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,QADrB;AAEE,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,UAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWG;AAH/B,UADF;AAOD,OARD,MAQO;AAAA;AAAA;AACL,eACE,MAAC,iBAAD;AACE,UAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWI,gBAD/B;AAEE,UAAA,gBAAgB,EAAE,KAAKJ,KAAL,CAAWK,gBAF/B;AAGE,UAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE;AAHvB,WAKG,KAAKF,KAAL,CAAWM,QALd,CADF;AASD;AACF;AArBH;;AAAA;AAAA,GAAgCV,KAAK,CAACW,SAAtC","sourcesContent":["import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}