{"ast":null,"code":"function cov_2insq324cv() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/ai.ts\";\n  var hash = \"d42cc8ee4b671337da1fe8f594258b5ff23c5fec\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/ai.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 12,\n          column: 21\n        }\n      },\n      \"1\": {\n        start: {\n          line: 13,\n          column: 4\n        },\n        end: {\n          line: 20,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 15,\n          column: 25\n        },\n        end: {\n          line: 15,\n          column: 93\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 6\n        },\n        end: {\n          line: 16,\n          column: 59\n        }\n      },\n      \"4\": {\n        start: {\n          line: 18,\n          column: 21\n        },\n        end: {\n          line: 18,\n          column: 56\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 6\n        },\n        end: {\n          line: 19,\n          column: 55\n        }\n      },\n      \"6\": {\n        start: {\n          line: 24,\n          column: 32\n        },\n        end: {\n          line: 24,\n          column: 53\n        }\n      },\n      \"7\": {\n        start: {\n          line: 25,\n          column: 4\n        },\n        end: {\n          line: 31,\n          column: 5\n        }\n      },\n      \"8\": {\n        start: {\n          line: 26,\n          column: 6\n        },\n        end: {\n          line: 28,\n          column: 49\n        }\n      },\n      \"9\": {\n        start: {\n          line: 27,\n          column: 27\n        },\n        end: {\n          line: 27,\n          column: 92\n        }\n      },\n      \"10\": {\n        start: {\n          line: 27,\n          column: 63\n        },\n        end: {\n          line: 27,\n          column: 79\n        }\n      },\n      \"11\": {\n        start: {\n          line: 28,\n          column: 24\n        },\n        end: {\n          line: 28,\n          column: 41\n        }\n      },\n      \"12\": {\n        start: {\n          line: 30,\n          column: 6\n        },\n        end: {\n          line: 30,\n          column: 75\n        }\n      },\n      \"13\": {\n        start: {\n          line: 30,\n          column: 44\n        },\n        end: {\n          line: 30,\n          column: 73\n        }\n      },\n      \"14\": {\n        start: {\n          line: 35,\n          column: 4\n        },\n        end: {\n          line: 35,\n          column: 104\n        }\n      },\n      \"15\": {\n        start: {\n          line: 39,\n          column: 4\n        },\n        end: {\n          line: 39,\n          column: 104\n        }\n      },\n      \"16\": {\n        start: {\n          line: 43,\n          column: 33\n        },\n        end: {\n          line: 47,\n          column: 1\n        }\n      },\n      \"17\": {\n        start: {\n          line: 45,\n          column: 4\n        },\n        end: {\n          line: 45,\n          column: 22\n        }\n      },\n      \"18\": {\n        start: {\n          line: 50,\n          column: 2\n        },\n        end: {\n          line: 52,\n          column: 5\n        }\n      },\n      \"19\": {\n        start: {\n          line: 51,\n          column: 4\n        },\n        end: {\n          line: 51,\n          column: 38\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 11,\n            column: 2\n          },\n          end: {\n            line: 11,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 11,\n            column: 50\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        },\n        line: 11\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 23,\n            column: 2\n          },\n          end: {\n            line: 23,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 23,\n            column: 47\n          },\n          end: {\n            line: 32,\n            column: 3\n          }\n        },\n        line: 23\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 13\n          },\n          end: {\n            line: 27,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 27\n          },\n          end: {\n            line: 27,\n            column: 92\n          }\n        },\n        line: 27\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 27,\n            column: 48\n          },\n          end: {\n            line: 27,\n            column: 49\n          }\n        },\n        loc: {\n          start: {\n            line: 27,\n            column: 63\n          },\n          end: {\n            line: 27,\n            column: 79\n          }\n        },\n        line: 27\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 28,\n            column: 14\n          },\n          end: {\n            line: 28,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 28,\n            column: 24\n          },\n          end: {\n            line: 28,\n            column: 41\n          }\n        },\n        line: 28\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 31\n          },\n          end: {\n            line: 30,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 44\n          },\n          end: {\n            line: 30,\n            column: 73\n          }\n        },\n        line: 30\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 34,\n            column: 2\n          },\n          end: {\n            line: 34,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 34,\n            column: 55\n          },\n          end: {\n            line: 36,\n            column: 3\n          }\n        },\n        line: 34\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 38,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 38,\n            column: 55\n          },\n          end: {\n            line: 40,\n            column: 3\n          }\n        },\n        line: 38\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 44,\n            column: 10\n          },\n          end: {\n            line: 44,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 44,\n            column: 16\n          },\n          end: {\n            line: 46,\n            column: 3\n          }\n        },\n        line: 44\n      },\n      \"9\": {\n        name: \"sleep\",\n        decl: {\n          start: {\n            line: 49,\n            column: 9\n          },\n          end: {\n            line: 49,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 49,\n            column: 37\n          },\n          end: {\n            line: 53,\n            column: 1\n          }\n        },\n        line: 49\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 50,\n            column: 21\n          },\n          end: {\n            line: 50,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 50,\n            column: 34\n          },\n          end: {\n            line: 52,\n            column: 3\n          }\n        },\n        line: 50\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 20,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 20,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 20,\n            column: 5\n          }\n        }],\n        line: 13\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 25,\n            column: 4\n          },\n          end: {\n            line: 31,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 4\n          },\n          end: {\n            line: 31,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 25,\n            column: 4\n          },\n          end: {\n            line: 31,\n            column: 5\n          }\n        }],\n        line: 25\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"d42cc8ee4b671337da1fe8f594258b5ff23c5fec\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2insq324cv = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2insq324cv();\nimport { getCards, isAllowedDeck } from './game';\nexport class TakeSixBot {\n  async play(state, playerID) {\n    cov_2insq324cv().f[0]++;\n    cov_2insq324cv().s[0]++;\n    await sleep(300);\n    cov_2insq324cv().s[1]++;\n\n    if (state.ctx.phase === 'CARD_SELECT') {\n      cov_2insq324cv().b[0][0]++;\n      // const randomCard = Math.floor(state.G.players[playerID as any].cards.length * Math.random());  // https://github.com/babel/minify/issues/904\n      const randomCard = (cov_2insq324cv().s[2]++, state.G.players[playerID].cards.length * Math.random() << 0);\n      cov_2insq324cv().s[3]++;\n      return this.makeSelectCardMove(randomCard, playerID);\n    } else {\n      cov_2insq324cv().b[0][1]++;\n      const deckId = (cov_2insq324cv().s[4]++, this.getBestDeck(state.G, playerID));\n      cov_2insq324cv().s[5]++;\n      return this.makeSelectDeckMove(deckId, playerID);\n    }\n  }\n\n  getBestDeck(G, playerID) {\n    cov_2insq324cv().f[1]++;\n    const {\n      card,\n      lastCards\n    } = (cov_2insq324cv().s[6]++, getCards(G, playerID));\n    cov_2insq324cv().s[7]++;\n\n    if (card.number < lastCards[0].number) {\n      cov_2insq324cv().b[1][0]++;\n      cov_2insq324cv().s[8]++;\n      return G.decks.map((deck, i) => {\n        cov_2insq324cv().f[2]++;\n        cov_2insq324cv().s[9]++;\n        return {\n          value: deck.reduce((acc, card) => {\n            cov_2insq324cv().f[3]++;\n            cov_2insq324cv().s[10]++;\n            return acc + card.value;\n          }, 0),\n          id: i\n        };\n      }, 0).sort((a, b) => {\n        cov_2insq324cv().f[4]++;\n        cov_2insq324cv().s[11]++;\n        return a.value - b.value;\n      })[0].id;\n    } else {\n      cov_2insq324cv().b[1][1]++;\n      cov_2insq324cv().s[12]++;\n      return G.decks.findIndex((deck, i) => {\n        cov_2insq324cv().f[5]++;\n        cov_2insq324cv().s[13]++;\n        return isAllowedDeck(G, i, playerID);\n      });\n    }\n  }\n\n  makeSelectCardMove(cardId, playerID) {\n    cov_2insq324cv().f[6]++;\n    cov_2insq324cv().s[14]++;\n    return {\n      action: {\n        type: 'MAKE_MOVE',\n        payload: {\n          type: 'selectCard',\n          args: [cardId],\n          playerID\n        }\n      }\n    };\n  }\n\n  makeSelectDeckMove(deckId, playerID) {\n    cov_2insq324cv().f[7]++;\n    cov_2insq324cv().s[15]++;\n    return {\n      action: {\n        type: 'MAKE_MOVE',\n        payload: {\n          type: 'selectDeck',\n          args: [deckId],\n          playerID\n        }\n      }\n    };\n  }\n\n}\nexport const config = (cov_2insq324cv().s[16]++, {\n  bgioAI: () => {\n    cov_2insq324cv().f[8]++;\n    cov_2insq324cv().s[17]++;\n    return TakeSixBot;\n  }\n});\n\nfunction sleep(milliseconds) {\n  cov_2insq324cv().f[9]++;\n  cov_2insq324cv().s[18]++;\n  return new Promise(resolve => {\n    cov_2insq324cv().f[10]++;\n    cov_2insq324cv().s[19]++;\n    setTimeout(resolve, milliseconds);\n  });\n}\n\nexport default config;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/takesix/ai.ts"],"names":["getCards","isAllowedDeck","TakeSixBot","play","state","playerID","sleep","ctx","phase","randomCard","G","players","cards","length","Math","random","makeSelectCardMove","deckId","getBestDeck","makeSelectDeckMove","card","lastCards","number","decks","map","deck","i","value","reduce","acc","id","sort","a","b","findIndex","cardId","action","type","payload","args","config","bgioAI","milliseconds","Promise","resolve","setTimeout"],"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","sourcesContent":["import { IAIConfig } from '../index';\nimport { IG, getCards, isAllowedDeck } from './game';\nimport { IGameCtx } from 'boardgame.io/core';\n\ninterface IPlayState {\n  G: IG;\n  ctx: IGameCtx;\n}\n\nexport class TakeSixBot {\n  async play(state: IPlayState, playerID: string) {\n    await sleep(300);\n    if (state.ctx.phase === 'CARD_SELECT') {\n      // const randomCard = Math.floor(state.G.players[playerID as any].cards.length * Math.random());  // https://github.com/babel/minify/issues/904\n      const randomCard = (state.G.players[playerID as any].cards.length * Math.random()) << 0;\n      return this.makeSelectCardMove(randomCard, playerID);\n    } else {\n      const deckId = this.getBestDeck(state.G, playerID);\n      return this.makeSelectDeckMove(deckId, playerID);\n    }\n  }\n\n  getBestDeck(G: IG, playerID: string): number {\n    const { card, lastCards } = getCards(G, playerID);\n    if (card.number < lastCards[0].number) {\n      return G.decks\n        .map((deck, i) => ({ value: deck.reduce((acc, card) => acc + card.value, 0), id: i }), 0)\n        .sort((a, b) => a.value - b.value)[0].id;\n    } else {\n      return G.decks.findIndex((deck, i) => isAllowedDeck(G, i, playerID));\n    }\n  }\n\n  makeSelectCardMove(cardId: number, playerID: string) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'selectCard', args: [cardId], playerID } } };\n  }\n\n  makeSelectDeckMove(deckId: number, playerID: string) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'selectDeck', args: [deckId], playerID } } };\n  }\n}\n\nexport const config: IAIConfig = {\n  bgioAI: () => {\n    return TakeSixBot;\n  },\n};\n\nfunction sleep(milliseconds: number) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, milliseconds);\n  });\n}\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}