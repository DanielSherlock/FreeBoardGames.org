{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction cov_1tw1xj74zh() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/board.tsx\";\n  var hash = \"da22d64bcfee43c6d4dd30bdfb89b3b2ac6b78ea\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/board.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 20,\n          column: 12\n        },\n        end: {\n          line: 24,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 20,\n          column: 28\n        },\n        end: {\n          line: 24,\n          column: 3\n        }\n      },\n      \"2\": {\n        start: {\n          line: 21,\n          column: 4\n        },\n        end: {\n          line: 23,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 22,\n          column: 6\n        },\n        end: {\n          line: 22,\n          column: 40\n        }\n      },\n      \"4\": {\n        start: {\n          line: 27,\n          column: 18\n        },\n        end: {\n          line: 27,\n          column: 25\n        }\n      },\n      \"5\": {\n        start: {\n          line: 28,\n          column: 18\n        },\n        end: {\n          line: 28,\n          column: 37\n        }\n      },\n      \"6\": {\n        start: {\n          line: 29,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 75\n        }\n      },\n      \"7\": {\n        start: {\n          line: 33,\n          column: 4\n        },\n        end: {\n          line: 42,\n          column: 5\n        }\n      },\n      \"8\": {\n        start: {\n          line: 34,\n          column: 6\n        },\n        end: {\n          line: 38,\n          column: 7\n        }\n      },\n      \"9\": {\n        start: {\n          line: 35,\n          column: 8\n        },\n        end: {\n          line: 35,\n          column: 27\n        }\n      },\n      \"10\": {\n        start: {\n          line: 37,\n          column: 8\n        },\n        end: {\n          line: 37,\n          column: 41\n        }\n      },\n      \"11\": {\n        start: {\n          line: 41,\n          column: 6\n        },\n        end: {\n          line: 41,\n          column: 72\n        }\n      },\n      \"12\": {\n        start: {\n          line: 46,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 5\n        }\n      },\n      \"13\": {\n        start: {\n          line: 48,\n          column: 6\n        },\n        end: {\n          line: 56,\n          column: 7\n        }\n      },\n      \"14\": {\n        start: {\n          line: 49,\n          column: 8\n        },\n        end: {\n          line: 53,\n          column: 9\n        }\n      },\n      \"15\": {\n        start: {\n          line: 50,\n          column: 10\n        },\n        end: {\n          line: 50,\n          column: 27\n        }\n      },\n      \"16\": {\n        start: {\n          line: 52,\n          column: 10\n        },\n        end: {\n          line: 52,\n          column: 28\n        }\n      },\n      \"17\": {\n        start: {\n          line: 55,\n          column: 8\n        },\n        end: {\n          line: 55,\n          column: 22\n        }\n      },\n      \"18\": {\n        start: {\n          line: 57,\n          column: 11\n        },\n        end: {\n          line: 76,\n          column: 5\n        }\n      },\n      \"19\": {\n        start: {\n          line: 58,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 7\n        }\n      },\n      \"20\": {\n        start: {\n          line: 60,\n          column: 10\n        },\n        end: {\n          line: 60,\n          column: 27\n        }\n      },\n      \"21\": {\n        start: {\n          line: 62,\n          column: 10\n        },\n        end: {\n          line: 62,\n          column: 28\n        }\n      },\n      \"22\": {\n        start: {\n          line: 64,\n          column: 10\n        },\n        end: {\n          line: 64,\n          column: 24\n        }\n      },\n      \"23\": {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 75,\n          column: 7\n        }\n      },\n      \"24\": {\n        start: {\n          line: 70,\n          column: 10\n        },\n        end: {\n          line: 70,\n          column: 48\n        }\n      },\n      \"25\": {\n        start: {\n          line: 72,\n          column: 10\n        },\n        end: {\n          line: 72,\n          column: 48\n        }\n      },\n      \"26\": {\n        start: {\n          line: 74,\n          column: 10\n        },\n        end: {\n          line: 74,\n          column: 24\n        }\n      },\n      \"27\": {\n        start: {\n          line: 80,\n          column: 4\n        },\n        end: {\n          line: 88,\n          column: 5\n        }\n      },\n      \"28\": {\n        start: {\n          line: 81,\n          column: 6\n        },\n        end: {\n          line: 87,\n          column: 8\n        }\n      },\n      \"29\": {\n        start: {\n          line: 89,\n          column: 4\n        },\n        end: {\n          line: 89,\n          column: 86\n        }\n      },\n      \"30\": {\n        start: {\n          line: 93,\n          column: 18\n        },\n        end: {\n          line: 93,\n          column: 20\n        }\n      },\n      \"31\": {\n        start: {\n          line: 94,\n          column: 4\n        },\n        end: {\n          line: 121,\n          column: 5\n        }\n      },\n      \"32\": {\n        start: {\n          line: 94,\n          column: 17\n        },\n        end: {\n          line: 94,\n          column: 18\n        }\n      },\n      \"33\": {\n        start: {\n          line: 95,\n          column: 6\n        },\n        end: {\n          line: 120,\n          column: 7\n        }\n      },\n      \"34\": {\n        start: {\n          line: 95,\n          column: 19\n        },\n        end: {\n          line: 95,\n          column: 20\n        }\n      },\n      \"35\": {\n        start: {\n          line: 96,\n          column: 19\n        },\n        end: {\n          line: 96,\n          column: 29\n        }\n      },\n      \"36\": {\n        start: {\n          line: 97,\n          column: 8\n        },\n        end: {\n          line: 108,\n          column: 10\n        }\n      },\n      \"37\": {\n        start: {\n          line: 109,\n          column: 8\n        },\n        end: {\n          line: 109,\n          column: 98\n        }\n      },\n      \"38\": {\n        start: {\n          line: 112,\n          column: 8\n        },\n        end: {\n          line: 116,\n          column: 9\n        }\n      },\n      \"39\": {\n        start: {\n          line: 113,\n          column: 10\n        },\n        end: {\n          line: 113,\n          column: 66\n        }\n      },\n      \"40\": {\n        start: {\n          line: 114,\n          column: 15\n        },\n        end: {\n          line: 116,\n          column: 9\n        }\n      },\n      \"41\": {\n        start: {\n          line: 115,\n          column: 10\n        },\n        end: {\n          line: 115,\n          column: 65\n        }\n      },\n      \"42\": {\n        start: {\n          line: 117,\n          column: 8\n        },\n        end: {\n          line: 119,\n          column: 9\n        }\n      },\n      \"43\": {\n        start: {\n          line: 118,\n          column: 10\n        },\n        end: {\n          line: 118,\n          column: 30\n        }\n      },\n      \"44\": {\n        start: {\n          line: 122,\n          column: 4\n        },\n        end: {\n          line: 122,\n          column: 17\n        }\n      },\n      \"45\": {\n        start: {\n          line: 125,\n          column: 4\n        },\n        end: {\n          line: 134,\n          column: 6\n        }\n      },\n      \"46\": {\n        start: {\n          line: 138,\n          column: 4\n        },\n        end: {\n          line: 144,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 12\n          },\n          end: {\n            line: 20,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 28\n          },\n          end: {\n            line: 24,\n            column: 3\n          }\n        },\n        line: 20\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 28\n          },\n          end: {\n            line: 20,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 34\n          },\n          end: {\n            line: 24,\n            column: 3\n          }\n        },\n        line: 20\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 26,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 26,\n            column: 23\n          },\n          end: {\n            line: 30,\n            column: 3\n          }\n        },\n        line: 26\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 32,\n            column: 2\n          },\n          end: {\n            line: 32,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 32,\n            column: 15\n          },\n          end: {\n            line: 43,\n            column: 3\n          }\n        },\n        line: 32\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 45,\n            column: 2\n          },\n          end: {\n            line: 45,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 45,\n            column: 17\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        },\n        line: 45\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 79,\n            column: 2\n          },\n          end: {\n            line: 79,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 79,\n            column: 11\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        },\n        line: 79\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 92,\n            column: 2\n          },\n          end: {\n            line: 92,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 92,\n            column: 14\n          },\n          end: {\n            line: 123,\n            column: 3\n          }\n        },\n        line: 92\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 124,\n            column: 2\n          },\n          end: {\n            line: 124,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 124,\n            column: 14\n          },\n          end: {\n            line: 135,\n            column: 3\n          }\n        },\n        line: 124\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 137,\n            column: 2\n          },\n          end: {\n            line: 137,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 137,\n            column: 22\n          },\n          end: {\n            line: 145,\n            column: 3\n          }\n        },\n        line: 137\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 23,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 23,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 23,\n            column: 5\n          }\n        }],\n        line: 21\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 29,\n            column: 11\n          },\n          end: {\n            line: 29,\n            column: 74\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 29,\n            column: 11\n          },\n          end: {\n            line: 29,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 29,\n            column: 34\n          },\n          end: {\n            line: 29,\n            column: 74\n          }\n        }],\n        line: 29\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 42,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 42,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 42,\n            column: 5\n          }\n        }],\n        line: 33\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 6\n          },\n          end: {\n            line: 38,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 34,\n            column: 6\n          },\n          end: {\n            line: 38,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 34,\n            column: 6\n          },\n          end: {\n            line: 38,\n            column: 7\n          }\n        }],\n        line: 34\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 46,\n            column: 4\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        }],\n        line: 46\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 48,\n            column: 6\n          },\n          end: {\n            line: 56,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 48,\n            column: 6\n          },\n          end: {\n            line: 56,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 48,\n            column: 6\n          },\n          end: {\n            line: 56,\n            column: 7\n          }\n        }],\n        line: 48\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 49,\n            column: 8\n          },\n          end: {\n            line: 53,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 49,\n            column: 8\n          },\n          end: {\n            line: 53,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 49,\n            column: 8\n          },\n          end: {\n            line: 53,\n            column: 9\n          }\n        }],\n        line: 49\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 57,\n            column: 11\n          },\n          end: {\n            line: 76,\n            column: 5\n          }\n        }],\n        line: 57\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 58,\n            column: 6\n          },\n          end: {\n            line: 65,\n            column: 7\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 59,\n            column: 8\n          },\n          end: {\n            line: 60,\n            column: 27\n          }\n        }, {\n          start: {\n            line: 61,\n            column: 8\n          },\n          end: {\n            line: 62,\n            column: 28\n          }\n        }, {\n          start: {\n            line: 63,\n            column: 8\n          },\n          end: {\n            line: 64,\n            column: 24\n          }\n        }],\n        line: 58\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 68,\n            column: 6\n          },\n          end: {\n            line: 75,\n            column: 7\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 69,\n            column: 8\n          },\n          end: {\n            line: 70,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 71,\n            column: 8\n          },\n          end: {\n            line: 72,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 73,\n            column: 8\n          },\n          end: {\n            line: 74,\n            column: 24\n          }\n        }],\n        line: 68\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 80,\n            column: 4\n          },\n          end: {\n            line: 88,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 80,\n            column: 4\n          },\n          end: {\n            line: 88,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 80,\n            column: 4\n          },\n          end: {\n            line: 88,\n            column: 5\n          }\n        }],\n        line: 80\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 112,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 112,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 112,\n            column: 8\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }],\n        line: 112\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 114,\n            column: 15\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 114,\n            column: 15\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 114,\n            column: 15\n          },\n          end: {\n            line: 116,\n            column: 9\n          }\n        }],\n        line: 114\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 117,\n            column: 8\n          },\n          end: {\n            line: 119,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 117,\n            column: 8\n          },\n          end: {\n            line: 119,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 117,\n            column: 8\n          },\n          end: {\n            line: 119,\n            column: 9\n          }\n        }],\n        line: 117\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0, 0],\n      \"9\": [0, 0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"da22d64bcfee43c6d4dd30bdfb89b3b2ac6b78ea\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1tw1xj74zh = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1tw1xj74zh();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { GameLayout } from 'components/App/Game/GameLayout';\nimport { EmptyDisk, CircleBlue, CircleRed } from './Shapes';\nimport Typography from '@material-ui/core/Typography';\nimport { isOnlineGame, isAIGame } from '../common/gameMode';\nimport { numOfColumns, numOfRows, localPlayerNames } from './constants';\nexport var Board = /*#__PURE__*/function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", (cov_1tw1xj74zh().s[0]++, function (id) {\n      cov_1tw1xj74zh().f[0]++;\n      cov_1tw1xj74zh().s[1]++;\n      return function () {\n        cov_1tw1xj74zh().f[1]++;\n        cov_1tw1xj74zh().s[2]++;\n\n        if (_this.isActive(id)) {\n          cov_1tw1xj74zh().b[0][0]++;\n          cov_1tw1xj74zh().s[3]++;\n\n          _this.props.moves.selectColumn(id);\n        } else {\n          cov_1tw1xj74zh().b[0][1]++;\n        }\n      };\n    }));\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"isActive\",\n    value: function isActive(id) {\n      cov_1tw1xj74zh().f[2]++;\n      var rowId = (cov_1tw1xj74zh().s[4]++, id % 10);\n      var colId = (cov_1tw1xj74zh().s[5]++, Math.floor(id / 10));\n      cov_1tw1xj74zh().s[6]++;\n      return (cov_1tw1xj74zh().b[1][0]++, this.props.isActive) && (cov_1tw1xj74zh().b[1][1]++, this.props.G.grid[colId][rowId] === null);\n    }\n  }, {\n    key: \"_getStatus\",\n    value: function _getStatus() {\n      cov_1tw1xj74zh().f[3]++;\n      cov_1tw1xj74zh().s[7]++;\n\n      if (isOnlineGame(this.props.gameArgs)) {\n        cov_1tw1xj74zh().b[2][0]++;\n        cov_1tw1xj74zh().s[8]++;\n\n        if (this.props.ctx.currentPlayer === this.props.playerID) {\n          cov_1tw1xj74zh().b[3][0]++;\n          cov_1tw1xj74zh().s[9]++;\n          return 'YOUR TURN';\n        } else {\n          cov_1tw1xj74zh().b[3][1]++;\n          cov_1tw1xj74zh().s[10]++;\n          return 'Waiting for opponent...';\n        }\n      } else {\n        cov_1tw1xj74zh().b[2][1]++;\n        cov_1tw1xj74zh().s[11]++;\n        // Local or AI game\n        return localPlayerNames[this.props.ctx.currentPlayer] + \"'s turn\";\n      }\n    }\n  }, {\n    key: \"_getGameOver\",\n    value: function _getGameOver() {\n      cov_1tw1xj74zh().f[4]++;\n      cov_1tw1xj74zh().s[12]++;\n\n      if (isOnlineGame(this.props.gameArgs)) {\n        cov_1tw1xj74zh().b[4][0]++;\n        cov_1tw1xj74zh().s[13]++;\n\n        // Online game\n        if (this.props.ctx.gameover.winner !== undefined) {\n          cov_1tw1xj74zh().b[5][0]++;\n          cov_1tw1xj74zh().s[14]++;\n\n          if (this.props.ctx.gameover.winner === this.props.playerID) {\n            cov_1tw1xj74zh().b[6][0]++;\n            cov_1tw1xj74zh().s[15]++;\n            return 'you won';\n          } else {\n            cov_1tw1xj74zh().b[6][1]++;\n            cov_1tw1xj74zh().s[16]++;\n            return 'you lost';\n          }\n        } else {\n          cov_1tw1xj74zh().b[5][1]++;\n          cov_1tw1xj74zh().s[17]++;\n          return 'draw';\n        }\n      } else {\n        cov_1tw1xj74zh().b[4][1]++;\n        cov_1tw1xj74zh().s[18]++;\n\n        if (isAIGame(this.props.gameArgs)) {\n          cov_1tw1xj74zh().b[7][0]++;\n          cov_1tw1xj74zh().s[19]++;\n\n          switch (this.props.ctx.gameover.winner) {\n            case '0':\n              cov_1tw1xj74zh().b[8][0]++;\n              cov_1tw1xj74zh().s[20]++;\n              return 'you won';\n\n            case '1':\n              cov_1tw1xj74zh().b[8][1]++;\n              cov_1tw1xj74zh().s[21]++;\n              return 'you lost';\n\n            case undefined:\n              cov_1tw1xj74zh().b[8][2]++;\n              cov_1tw1xj74zh().s[22]++;\n              return 'draw';\n          }\n        } else {\n          cov_1tw1xj74zh().b[7][1]++;\n          cov_1tw1xj74zh().s[23]++;\n\n          // Local game\n          switch (this.props.ctx.gameover.winner) {\n            case '0':\n              cov_1tw1xj74zh().b[9][0]++;\n              cov_1tw1xj74zh().s[24]++;\n              return localPlayerNames['0'] + ' won';\n\n            case '1':\n              cov_1tw1xj74zh().b[9][1]++;\n              cov_1tw1xj74zh().s[25]++;\n              return localPlayerNames['1'] + ' won';\n\n            case undefined:\n              cov_1tw1xj74zh().b[9][2]++;\n              cov_1tw1xj74zh().s[26]++;\n              return 'draw';\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      cov_1tw1xj74zh().f[5]++;\n      cov_1tw1xj74zh().s[27]++;\n\n      if (this.props.ctx.gameover) {\n        cov_1tw1xj74zh().b[10][0]++;\n        cov_1tw1xj74zh().s[28]++;\n        return __jsx(GameLayout, {\n          gameOver: this._getGameOver(),\n          extraCardContent: this._getGameOverBoard(),\n          gameArgs: this.props.gameArgs\n        });\n      } else {\n        cov_1tw1xj74zh().b[10][1]++;\n      }\n\n      cov_1tw1xj74zh().s[29]++;\n      return __jsx(GameLayout, {\n        gameArgs: this.props.gameArgs\n      }, this._getBoard());\n    }\n  }, {\n    key: \"_getCells\",\n    value: function _getCells() {\n      cov_1tw1xj74zh().f[6]++;\n      var cells = (cov_1tw1xj74zh().s[30]++, []);\n      cov_1tw1xj74zh().s[31]++;\n\n      for (var i = (cov_1tw1xj74zh().s[32]++, 0); i < numOfColumns; i++) {\n        cov_1tw1xj74zh().s[33]++;\n\n        for (var j = (cov_1tw1xj74zh().s[34]++, 0); j < numOfRows; j++) {\n          var id = (cov_1tw1xj74zh().s[35]++, 10 * i + j);\n          cov_1tw1xj74zh().s[36]++;\n          cells.push(__jsx(\"rect\", {\n            key: \"cell_\".concat(id),\n            x: i,\n            y: j,\n            width: \"1\",\n            height: \"1\" //fill=\"#dac292\"\n            //stroke=\"#dac292\"\n            ,\n            strokeWidth: \"0.05\"\n          }));\n          cov_1tw1xj74zh().s[37]++;\n          cells.push(__jsx(EmptyDisk, {\n            x: i,\n            y: j,\n            key: \"empty_chip_\".concat(id),\n            onClick: this.onClick(id)\n          }));\n          var overlay = void 0;\n          cov_1tw1xj74zh().s[38]++;\n\n          if (this.props.G.grid[i][j] === '0') {\n            cov_1tw1xj74zh().b[11][0]++;\n            cov_1tw1xj74zh().s[39]++;\n            overlay = __jsx(CircleBlue, {\n              x: i,\n              y: j,\n              key: \"chip_\".concat(id)\n            });\n          } else {\n            cov_1tw1xj74zh().b[11][1]++;\n            cov_1tw1xj74zh().s[40]++;\n\n            if (this.props.G.grid[i][j] === '1') {\n              cov_1tw1xj74zh().b[12][0]++;\n              cov_1tw1xj74zh().s[41]++;\n              overlay = __jsx(CircleRed, {\n                x: i,\n                y: j,\n                key: \"chip_\".concat(id)\n              });\n            } else {\n              cov_1tw1xj74zh().b[12][1]++;\n            }\n          }\n\n          cov_1tw1xj74zh().s[42]++;\n\n          if (overlay) {\n            cov_1tw1xj74zh().b[13][0]++;\n            cov_1tw1xj74zh().s[43]++;\n            cells.push(overlay);\n          } else {\n            cov_1tw1xj74zh().b[13][1]++;\n          }\n        }\n      }\n\n      cov_1tw1xj74zh().s[44]++;\n      return cells;\n    }\n  }, {\n    key: \"_getBoard\",\n    value: function _getBoard() {\n      cov_1tw1xj74zh().f[7]++;\n      cov_1tw1xj74zh().s[45]++;\n      return __jsx(\"div\", null, __jsx(Typography, {\n        variant: \"h5\",\n        style: {\n          textAlign: 'center',\n          color: 'white',\n          marginBottom: '16px'\n        }\n      }, this._getStatus()), __jsx(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 7 6\"\n      }, this._getCells()));\n    }\n  }, {\n    key: \"_getGameOverBoard\",\n    value: function _getGameOverBoard() {\n      cov_1tw1xj74zh().f[8]++;\n      cov_1tw1xj74zh().s[46]++;\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, __jsx(\"svg\", {\n        width: \"50%\",\n        height: \"50%\",\n        viewBox: \"0 0 7 6\"\n      }, this._getCells()));\n    }\n  }]);\n\n  return Board;\n}((React.Component));\nexport default Board;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/fourinarow/board.tsx"],"names":["React","GameLayout","EmptyDisk","CircleBlue","CircleRed","Typography","isOnlineGame","isAIGame","numOfColumns","numOfRows","localPlayerNames","Board","id","isActive","props","moves","selectColumn","rowId","colId","Math","floor","G","grid","gameArgs","ctx","currentPlayer","playerID","gameover","winner","undefined","_getGameOver","_getGameOverBoard","_getBoard","cells","i","j","push","onClick","overlay","textAlign","color","marginBottom","_getStatus","_getCells","Component"],"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","sourcesContent":["import * as React from 'react';\nimport { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameLayout } from 'components/App/Game/GameLayout';\nimport { EmptyDisk, CircleBlue, CircleRed } from './Shapes';\nimport Typography from '@material-ui/core/Typography';\nimport { isOnlineGame, isAIGame } from '../common/gameMode';\nimport { numOfColumns, numOfRows, localPlayerNames } from './constants';\n\ninterface IBoardProps {\n  G: any;\n  ctx: any;\n  moves: any;\n  playerID: string;\n  isActive: boolean;\n  gameArgs?: IGameArgs;\n  step?: any;\n}\n\nexport class Board extends React.Component<IBoardProps, {}> {\n  onClick = (id: number) => () => {\n    if (this.isActive(id)) {\n      this.props.moves.selectColumn(id);\n    }\n  };\n\n  isActive(id: number) {\n    const rowId = id % 10;\n    const colId = Math.floor(id / 10);\n    return this.props.isActive && this.props.G.grid[colId][rowId] === null;\n  }\n\n  _getStatus() {\n    if (isOnlineGame(this.props.gameArgs)) {\n      if (this.props.ctx.currentPlayer === this.props.playerID) {\n        return 'YOUR TURN';\n      } else {\n        return 'Waiting for opponent...';\n      }\n    } else {\n      // Local or AI game\n      return localPlayerNames[this.props.ctx.currentPlayer] + \"'s turn\";\n    }\n  }\n\n  _getGameOver() {\n    if (isOnlineGame(this.props.gameArgs)) {\n      // Online game\n      if (this.props.ctx.gameover.winner !== undefined) {\n        if (this.props.ctx.gameover.winner === this.props.playerID) {\n          return 'you won';\n        } else {\n          return 'you lost';\n        }\n      } else {\n        return 'draw';\n      }\n    } else if (isAIGame(this.props.gameArgs)) {\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return 'you won';\n        case '1':\n          return 'you lost';\n        case undefined:\n          return 'draw';\n      }\n    } else {\n      // Local game\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return localPlayerNames['0'] + ' won';\n        case '1':\n          return localPlayerNames['1'] + ' won';\n        case undefined:\n          return 'draw';\n      }\n    }\n  }\n\n  render() {\n    if (this.props.ctx.gameover) {\n      return (\n        <GameLayout\n          gameOver={this._getGameOver()}\n          extraCardContent={this._getGameOverBoard()}\n          gameArgs={this.props.gameArgs}\n        />\n      );\n    }\n    return <GameLayout gameArgs={this.props.gameArgs}>{this._getBoard()}</GameLayout>;\n  }\n\n  _getCells() {\n    const cells = [];\n    for (let i = 0; i < numOfColumns; i++) {\n      for (let j = 0; j < numOfRows; j++) {\n        const id = 10 * i + j;\n        cells.push(\n          <rect\n            key={`cell_${id}`}\n            x={i}\n            y={j}\n            width=\"1\"\n            height=\"1\"\n            //fill=\"#dac292\"\n            //stroke=\"#dac292\"\n            strokeWidth=\"0.05\"\n          />,\n        );\n        cells.push(<EmptyDisk x={i} y={j} key={`empty_chip_${id}`} onClick={this.onClick(id)} />);\n\n        let overlay;\n        if (this.props.G.grid[i][j] === '0') {\n          overlay = <CircleBlue x={i} y={j} key={`chip_${id}`} />;\n        } else if (this.props.G.grid[i][j] === '1') {\n          overlay = <CircleRed x={i} y={j} key={`chip_${id}`} />;\n        }\n        if (overlay) {\n          cells.push(overlay);\n        }\n      }\n    }\n    return cells;\n  }\n  _getBoard() {\n    return (\n      <div>\n        <Typography variant=\"h5\" style={{ textAlign: 'center', color: 'white', marginBottom: '16px' }}>\n          {this._getStatus()}\n        </Typography>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 7 6\">\n          {this._getCells()}\n        </svg>\n      </div>\n    );\n  }\n\n  _getGameOverBoard() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <svg width=\"50%\" height=\"50%\" viewBox=\"0 0 7 6\">\n          {this._getCells()}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}