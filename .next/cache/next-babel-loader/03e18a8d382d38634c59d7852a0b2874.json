{"ast":null,"code":"function cov_25ooxr3i2d() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/hangman/constants.ts\";\n  var hash = \"4586ca4eb56550e050d0a9a24e122edb853807b7\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/hangman/constants.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 51\n        },\n        end: {\n          line: 5,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 7,\n          column: 31\n        },\n        end: {\n          line: 7,\n          column: 33\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 33\n        },\n        end: {\n          line: 9,\n          column: 34\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 24\n        },\n        end: {\n          line: 11,\n          column: 52\n        }\n      }\n    },\n    fnMap: {},\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {},\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"4586ca4eb56550e050d0a9a24e122edb853807b7\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_25ooxr3i2d = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_25ooxr3i2d();\nexport const HANGMAN_INITIAL_STATE = (cov_25ooxr3i2d().s[0]++, {\n  players: {}\n});\nexport const MAX_WORD_LENGTH = (cov_25ooxr3i2d().s[1]++, 16);\nexport const MAX_MISTAKE_COUNT = (cov_25ooxr3i2d().s[2]++, 6);\nexport const ALPHABET = (cov_25ooxr3i2d().s[3]++, 'abcdefghijklmnopqrstuvwxyz');","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/hangman/constants.ts"],"names":["HANGMAN_INITIAL_STATE","players","MAX_WORD_LENGTH","MAX_MISTAKE_COUNT","ALPHABET"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,MAAMA,qBAAmC,6BAAG;AACjDC,EAAAA,OAAO,EAAE;AADwC,CAAH,CAAzC;AAIP,OAAO,MAAMC,eAAe,6BAAG,EAAH,CAArB;AAEP,OAAO,MAAMC,iBAAiB,6BAAG,CAAH,CAAvB;AAEP,OAAO,MAAMC,QAAQ,6BAAG,4BAAH,CAAd","sourcesContent":["import { HangmanState } from './definitions';\n\nexport const HANGMAN_INITIAL_STATE: HangmanState = {\n  players: {},\n};\n\nexport const MAX_WORD_LENGTH = 16;\n\nexport const MAX_MISTAKE_COUNT = 6;\n\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n"]},"metadata":{},"sourceType":"module"}