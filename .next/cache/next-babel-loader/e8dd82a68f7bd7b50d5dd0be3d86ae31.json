{"ast":null,"code":"function cov_sfj9wcmwy() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/util.ts\";\n  var hash = \"bb2762b0d7bf64044dad809afda62f58c72fd63d\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/util.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 17\n        },\n        end: {\n          line: 5,\n          column: 34\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 2\n        },\n        end: {\n          line: 6,\n          column: 39\n        }\n      },\n      \"2\": {\n        start: {\n          line: 6,\n          column: 32\n        },\n        end: {\n          line: 6,\n          column: 39\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 18\n        },\n        end: {\n          line: 8,\n          column: 33\n        }\n      },\n      \"4\": {\n        start: {\n          line: 9,\n          column: 18\n        },\n        end: {\n          line: 9,\n          column: 43\n        }\n      },\n      \"5\": {\n        start: {\n          line: 11,\n          column: 2\n        },\n        end: {\n          line: 14,\n          column: 3\n        }\n      },\n      \"6\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 12,\n          column: 31\n        }\n      },\n      \"7\": {\n        start: {\n          line: 13,\n          column: 4\n        },\n        end: {\n          line: 13,\n          column: 29\n        }\n      },\n      \"8\": {\n        start: {\n          line: 16,\n          column: 2\n        },\n        end: {\n          line: 16,\n          column: 82\n        }\n      },\n      \"9\": {\n        start: {\n          line: 16,\n          column: 50\n        },\n        end: {\n          line: 16,\n          column: 80\n        }\n      },\n      \"10\": {\n        start: {\n          line: 18,\n          column: 2\n        },\n        end: {\n          line: 18,\n          column: 31\n        }\n      },\n      \"11\": {\n        start: {\n          line: 19,\n          column: 2\n        },\n        end: {\n          line: 19,\n          column: 25\n        }\n      },\n      \"12\": {\n        start: {\n          line: 23,\n          column: 2\n        },\n        end: {\n          line: 23,\n          column: 24\n        }\n      },\n      \"13\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 41,\n          column: 4\n        }\n      },\n      \"14\": {\n        start: {\n          line: 26,\n          column: 6\n        },\n        end: {\n          line: 29,\n          column: 10\n        }\n      },\n      \"15\": {\n        start: {\n          line: 27,\n          column: 8\n        },\n        end: {\n          line: 29,\n          column: 10\n        }\n      },\n      \"16\": {\n        start: {\n          line: 31,\n          column: 6\n        },\n        end: {\n          line: 39,\n          column: 8\n        }\n      },\n      \"17\": {\n        start: {\n          line: 34,\n          column: 10\n        },\n        end: {\n          line: 34,\n          column: 45\n        }\n      },\n      \"18\": {\n        start: {\n          line: 34,\n          column: 34\n        },\n        end: {\n          line: 34,\n          column: 45\n        }\n      },\n      \"19\": {\n        start: {\n          line: 36,\n          column: 10\n        },\n        end: {\n          line: 36,\n          column: 57\n        }\n      },\n      \"20\": {\n        start: {\n          line: 37,\n          column: 10\n        },\n        end: {\n          line: 37,\n          column: 21\n        }\n      },\n      \"21\": {\n        start: {\n          line: 45,\n          column: 17\n        },\n        end: {\n          line: 45,\n          column: 38\n        }\n      },\n      \"22\": {\n        start: {\n          line: 46,\n          column: 31\n        },\n        end: {\n          line: 46,\n          column: 37\n        }\n      },\n      \"23\": {\n        start: {\n          line: 48,\n          column: 20\n        },\n        end: {\n          line: 48,\n          column: 45\n        }\n      },\n      \"24\": {\n        start: {\n          line: 49,\n          column: 2\n        },\n        end: {\n          line: 53,\n          column: 3\n        }\n      },\n      \"25\": {\n        start: {\n          line: 50,\n          column: 4\n        },\n        end: {\n          line: 50,\n          column: 48\n        }\n      },\n      \"26\": {\n        start: {\n          line: 50,\n          column: 41\n        },\n        end: {\n          line: 50,\n          column: 48\n        }\n      },\n      \"27\": {\n        start: {\n          line: 52,\n          column: 4\n        },\n        end: {\n          line: 52,\n          column: 34\n        }\n      },\n      \"28\": {\n        start: {\n          line: 55,\n          column: 2\n        },\n        end: {\n          line: 55,\n          column: 37\n        }\n      },\n      \"29\": {\n        start: {\n          line: 56,\n          column: 2\n        },\n        end: {\n          line: 56,\n          column: 41\n        }\n      },\n      \"30\": {\n        start: {\n          line: 60,\n          column: 2\n        },\n        end: {\n          line: 60,\n          column: 43\n        }\n      },\n      \"31\": {\n        start: {\n          line: 64,\n          column: 2\n        },\n        end: {\n          line: 64,\n          column: 48\n        }\n      },\n      \"32\": {\n        start: {\n          line: 68,\n          column: 2\n        },\n        end: {\n          line: 68,\n          column: 46\n        }\n      },\n      \"33\": {\n        start: {\n          line: 72,\n          column: 2\n        },\n        end: {\n          line: 72,\n          column: 62\n        }\n      },\n      \"34\": {\n        start: {\n          line: 76,\n          column: 2\n        },\n        end: {\n          line: 76,\n          column: 64\n        }\n      },\n      \"35\": {\n        start: {\n          line: 80,\n          column: 2\n        },\n        end: {\n          line: 80,\n          column: 56\n        }\n      },\n      \"36\": {\n        start: {\n          line: 84,\n          column: 2\n        },\n        end: {\n          line: 84,\n          column: 37\n        }\n      },\n      \"37\": {\n        start: {\n          line: 86,\n          column: 16\n        },\n        end: {\n          line: 86,\n          column: 80\n        }\n      },\n      \"38\": {\n        start: {\n          line: 88,\n          column: 2\n        },\n        end: {\n          line: 90,\n          column: 3\n        }\n      },\n      \"39\": {\n        start: {\n          line: 89,\n          column: 4\n        },\n        end: {\n          line: 89,\n          column: 25\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"switchTeam\",\n        decl: {\n          start: {\n            line: 4,\n            column: 16\n          },\n          end: {\n            line: 4,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 65\n          },\n          end: {\n            line: 20,\n            column: 1\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 43\n          },\n          end: {\n            line: 16,\n            column: 44\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 50\n          },\n          end: {\n            line: 16,\n            column: 80\n          }\n        },\n        line: 16\n      },\n      \"2\": {\n        name: \"clueGiven\",\n        decl: {\n          start: {\n            line: 22,\n            column: 16\n          },\n          end: {\n            line: 22,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 22,\n            column: 48\n          },\n          end: {\n            line: 42,\n            column: 1\n          }\n        },\n        line: 22\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 5\n          },\n          end: {\n            line: 25,\n            column: 6\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 37\n          },\n          end: {\n            line: 40,\n            column: 5\n          }\n        },\n        line: 25\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 33,\n            column: 53\n          },\n          end: {\n            line: 33,\n            column: 54\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 70\n          },\n          end: {\n            line: 38,\n            column: 9\n          }\n        },\n        line: 33\n      },\n      \"5\": {\n        name: \"makeSpymaster\",\n        decl: {\n          start: {\n            line: 44,\n            column: 16\n          },\n          end: {\n            line: 44,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 44,\n            column: 63\n          },\n          end: {\n            line: 57,\n            column: 1\n          }\n        },\n        line: 44\n      },\n      \"6\": {\n        name: \"getPlayer\",\n        decl: {\n          start: {\n            line: 59,\n            column: 16\n          },\n          end: {\n            line: 59,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 59,\n            column: 56\n          },\n          end: {\n            line: 61,\n            column: 1\n          }\n        },\n        line: 59\n      },\n      \"7\": {\n        name: \"getCurrentPlayer\",\n        decl: {\n          start: {\n            line: 63,\n            column: 16\n          },\n          end: {\n            line: 63,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 63,\n            column: 63\n          },\n          end: {\n            line: 65,\n            column: 1\n          }\n        },\n        line: 63\n      },\n      \"8\": {\n        name: \"getCurrentTeam\",\n        decl: {\n          start: {\n            line: 67,\n            column: 16\n          },\n          end: {\n            line: 67,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 67,\n            column: 59\n          },\n          end: {\n            line: 69,\n            column: 1\n          }\n        },\n        line: 67\n      },\n      \"9\": {\n        name: \"makeCard\",\n        decl: {\n          start: {\n            line: 71,\n            column: 16\n          },\n          end: {\n            line: 71,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 71,\n            column: 45\n          },\n          end: {\n            line: 73,\n            column: 1\n          }\n        },\n        line: 71\n      },\n      \"10\": {\n        name: \"makeTeam\",\n        decl: {\n          start: {\n            line: 75,\n            column: 16\n          },\n          end: {\n            line: 75,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 75,\n            column: 47\n          },\n          end: {\n            line: 77,\n            column: 1\n          }\n        },\n        line: 75\n      },\n      \"11\": {\n        name: \"makePlayer\",\n        decl: {\n          start: {\n            line: 79,\n            column: 16\n          },\n          end: {\n            line: 79,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 79,\n            column: 53\n          },\n          end: {\n            line: 81,\n            column: 1\n          }\n        },\n        line: 79\n      },\n      \"12\": {\n        name: \"chooseCard\",\n        decl: {\n          start: {\n            line: 83,\n            column: 16\n          },\n          end: {\n            line: 83,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 83,\n            column: 68\n          },\n          end: {\n            line: 91,\n            column: 1\n          }\n        },\n        line: 83\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 6,\n            column: 39\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 6,\n            column: 39\n          }\n        }, {\n          start: {\n            line: 6,\n            column: 2\n          },\n          end: {\n            line: 6,\n            column: 39\n          }\n        }],\n        line: 6\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 11,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 11,\n            column: 2\n          },\n          end: {\n            line: 14,\n            column: 3\n          }\n        }],\n        line: 11\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 6\n          },\n          end: {\n            line: 29,\n            column: 10\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 6\n          },\n          end: {\n            line: 29,\n            column: 10\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 6\n          },\n          end: {\n            line: 29,\n            column: 10\n          }\n        }],\n        line: 26\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 10\n          },\n          end: {\n            line: 26,\n            column: 79\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 10\n          },\n          end: {\n            line: 26,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 36\n          },\n          end: {\n            line: 26,\n            column: 79\n          }\n        }],\n        line: 26\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 10\n          },\n          end: {\n            line: 34,\n            column: 45\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 34,\n            column: 10\n          },\n          end: {\n            line: 34,\n            column: 45\n          }\n        }, {\n          start: {\n            line: 34,\n            column: 10\n          },\n          end: {\n            line: 34,\n            column: 45\n          }\n        }],\n        line: 34\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 49,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 49,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 49,\n            column: 2\n          },\n          end: {\n            line: 53,\n            column: 3\n          }\n        }],\n        line: 49\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 50,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 48\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 50,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 50,\n            column: 4\n          },\n          end: {\n            line: 50,\n            column: 48\n          }\n        }],\n        line: 50\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 86,\n            column: 16\n          },\n          end: {\n            line: 86,\n            column: 80\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 86,\n            column: 50\n          },\n          end: {\n            line: 86,\n            column: 63\n          }\n        }, {\n          start: {\n            line: 86,\n            column: 66\n          },\n          end: {\n            line: 86,\n            column: 80\n          }\n        }],\n        line: 86\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 88,\n            column: 2\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 88,\n            column: 2\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 88,\n            column: 2\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        }],\n        line: 88\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"bb2762b0d7bf64044dad809afda62f58c72fd63d\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_sfj9wcmwy = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_sfj9wcmwy();\nimport { Stages, CardColor } from './definitions';\nimport { Stage } from 'boardgame.io/core';\nexport function switchTeam(G, ctx, teamID) {\n  cov_sfj9wcmwy().f[0]++;\n  const player = (cov_sfj9wcmwy().s[0]++, getPlayer(G, ctx));\n  cov_sfj9wcmwy().s[1]++;\n\n  if (player.teamID === teamID) {\n    cov_sfj9wcmwy().b[0][0]++;\n    cov_sfj9wcmwy().s[2]++;\n    return;\n  } else {\n    cov_sfj9wcmwy().b[0][1]++;\n  }\n\n  const newTeam = (cov_sfj9wcmwy().s[3]++, G.teams[teamID]);\n  const oldTeam = (cov_sfj9wcmwy().s[4]++, G.teams[(teamID + 1) % 2]);\n  cov_sfj9wcmwy().s[5]++;\n\n  if (player.isSpymaster) {\n    cov_sfj9wcmwy().b[1][0]++;\n    cov_sfj9wcmwy().s[6]++;\n    player.isSpymaster = false;\n    cov_sfj9wcmwy().s[7]++;\n    oldTeam.spymaster = null;\n  } else {\n    cov_sfj9wcmwy().b[1][1]++;\n  }\n\n  cov_sfj9wcmwy().s[8]++;\n  oldTeam.players = oldTeam.players.filter(p => {\n    cov_sfj9wcmwy().f[1]++;\n    cov_sfj9wcmwy().s[9]++;\n    return p.playerID !== player.playerID;\n  });\n  cov_sfj9wcmwy().s[10]++;\n  newTeam.players.push(player);\n  cov_sfj9wcmwy().s[11]++;\n  player.teamID = teamID;\n}\nexport function clueGiven(G, ctx) {\n  cov_sfj9wcmwy().f[2]++;\n  cov_sfj9wcmwy().s[12]++;\n  ctx.events.endStage();\n  cov_sfj9wcmwy().s[13]++;\n  ctx.events.setActivePlayers(function (G, ctx) {\n    cov_sfj9wcmwy().f[3]++;\n    cov_sfj9wcmwy().s[14]++;\n\n    if ((cov_sfj9wcmwy().b[3][0]++, G.players.length === 2) || (cov_sfj9wcmwy().b[3][1]++, getCurrentTeam(G, ctx).players.length === 1)) {\n      cov_sfj9wcmwy().b[2][0]++;\n      cov_sfj9wcmwy().s[15]++;\n      return {\n        currentPlayer: Stages.guess\n      };\n    } else {\n      cov_sfj9wcmwy().b[2][1]++;\n    }\n\n    cov_sfj9wcmwy().s[16]++;\n    return {\n      currentPlayer: Stage.NULL,\n      value: getCurrentTeam(G, ctx).players.reduce((acc, player) => {\n        cov_sfj9wcmwy().f[4]++;\n        cov_sfj9wcmwy().s[17]++;\n\n        if (player.isSpymaster) {\n          cov_sfj9wcmwy().b[4][0]++;\n          cov_sfj9wcmwy().s[18]++;\n          return acc;\n        } else {\n          cov_sfj9wcmwy().b[4][1]++;\n        }\n\n        cov_sfj9wcmwy().s[19]++;\n        acc[player.playerID.toString()] = Stages.guess;\n        cov_sfj9wcmwy().s[20]++;\n        return acc;\n      }, {})\n    };\n  }(G, ctx));\n}\nexport function makeSpymaster(G, ctx, p) {\n  cov_sfj9wcmwy().f[5]++;\n  const player = (cov_sfj9wcmwy().s[21]++, G.players[p.playerID]);\n  const {\n    teamID,\n    playerID\n  } = (cov_sfj9wcmwy().s[22]++, player);\n  const spymaster = (cov_sfj9wcmwy().s[23]++, G.teams[teamID].spymaster);\n  cov_sfj9wcmwy().s[24]++;\n\n  if (spymaster !== null) {\n    cov_sfj9wcmwy().b[5][0]++;\n    cov_sfj9wcmwy().s[25]++;\n\n    if (spymaster.playerID === playerID) {\n      cov_sfj9wcmwy().b[6][0]++;\n      cov_sfj9wcmwy().s[26]++;\n      return;\n    } else {\n      cov_sfj9wcmwy().b[6][1]++;\n    }\n\n    cov_sfj9wcmwy().s[27]++;\n    spymaster.isSpymaster = false;\n  } else {\n    cov_sfj9wcmwy().b[5][1]++;\n  }\n\n  cov_sfj9wcmwy().s[28]++;\n  G.teams[teamID].spymaster = player;\n  cov_sfj9wcmwy().s[29]++;\n  G.players[playerID].isSpymaster = true;\n}\nexport function getPlayer(G, ctx) {\n  cov_sfj9wcmwy().f[6]++;\n  cov_sfj9wcmwy().s[30]++;\n  return G.players[parseInt(ctx.playerID)];\n}\nexport function getCurrentPlayer(G, ctx) {\n  cov_sfj9wcmwy().f[7]++;\n  cov_sfj9wcmwy().s[31]++;\n  return G.players[parseInt(ctx.currentPlayer)];\n}\nexport function getCurrentTeam(G, ctx) {\n  cov_sfj9wcmwy().f[8]++;\n  cov_sfj9wcmwy().s[32]++;\n  return G.teams[parseInt(ctx.currentPlayer)];\n}\nexport function makeCard(word) {\n  cov_sfj9wcmwy().f[9]++;\n  cov_sfj9wcmwy().s[33]++;\n  return {\n    word,\n    color: CardColor.civilian,\n    revealed: false\n  };\n}\nexport function makeTeam(teamID) {\n  cov_sfj9wcmwy().f[10]++;\n  cov_sfj9wcmwy().s[34]++;\n  return {\n    teamID,\n    players: [],\n    spymaster: null,\n    start: false\n  };\n}\nexport function makePlayer(playerID) {\n  cov_sfj9wcmwy().f[11]++;\n  cov_sfj9wcmwy().s[35]++;\n  return {\n    playerID,\n    teamID: null,\n    isSpymaster: false\n  };\n}\nexport function chooseCard(G, ctx, cardIndex) {\n  cov_sfj9wcmwy().f[12]++;\n  cov_sfj9wcmwy().s[36]++;\n  G.cards[cardIndex].revealed = true;\n  const color = (cov_sfj9wcmwy().s[37]++, getCurrentPlayer(G, ctx).teamID ? (cov_sfj9wcmwy().b[7][0]++, CardColor.red) : (cov_sfj9wcmwy().b[7][1]++, CardColor.blue));\n  cov_sfj9wcmwy().s[38]++;\n\n  if (G.cards[cardIndex].color !== color) {\n    cov_sfj9wcmwy().b[8][0]++;\n    cov_sfj9wcmwy().s[39]++;\n    ctx.events.endTurn();\n  } else {\n    cov_sfj9wcmwy().b[8][1]++;\n  }\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/secretcodes/util.ts"],"names":["Stages","CardColor","Stage","switchTeam","G","ctx","teamID","player","getPlayer","newTeam","teams","oldTeam","isSpymaster","spymaster","players","filter","p","playerID","push","clueGiven","events","endStage","setActivePlayers","length","getCurrentTeam","currentPlayer","guess","NULL","value","reduce","acc","toString","makeSpymaster","parseInt","getCurrentPlayer","makeCard","word","color","civilian","revealed","makeTeam","start","makePlayer","chooseCard","cardIndex","cards","red","blue","endTurn"],"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","sourcesContent":["import { IG, Stages, Player, Team, CardColor, Card } from './definitions';\nimport { Stage, IGameCtx } from 'boardgame.io/core';\n\nexport function switchTeam(G: IG, ctx: IGameCtx, teamID: number) {\n  const player = getPlayer(G, ctx);\n  if (player.teamID === teamID) return;\n\n  const newTeam = G.teams[teamID];\n  const oldTeam = G.teams[(teamID + 1) % 2];\n\n  if (player.isSpymaster) {\n    player.isSpymaster = false;\n    oldTeam.spymaster = null;\n  }\n\n  oldTeam.players = oldTeam.players.filter((p) => p.playerID !== player.playerID);\n\n  newTeam.players.push(player);\n  player.teamID = teamID;\n}\n\nexport function clueGiven(G: IG, ctx: IGameCtx) {\n  ctx.events.endStage();\n  ctx.events.setActivePlayers(\n    (function (G: IG, ctx: IGameCtx) {\n      if (G.players.length === 2 || getCurrentTeam(G, ctx).players.length === 1)\n        return {\n          currentPlayer: Stages.guess,\n        };\n\n      return {\n        currentPlayer: Stage.NULL,\n        value: getCurrentTeam(G, ctx).players.reduce((acc, player) => {\n          if (player.isSpymaster) return acc;\n\n          acc[player.playerID.toString()] = Stages.guess;\n          return acc;\n        }, {}),\n      };\n    })(G, ctx),\n  );\n}\n\nexport function makeSpymaster(G: IG, ctx: IGameCtx, p: Player) {\n  const player = G.players[p.playerID];\n  const { teamID, playerID } = player;\n\n  const spymaster = G.teams[teamID].spymaster;\n  if (spymaster !== null) {\n    if (spymaster.playerID === playerID) return;\n\n    spymaster.isSpymaster = false;\n  }\n\n  G.teams[teamID].spymaster = player;\n  G.players[playerID].isSpymaster = true;\n}\n\nexport function getPlayer(G: IG, ctx: IGameCtx): Player {\n  return G.players[parseInt(ctx.playerID)];\n}\n\nexport function getCurrentPlayer(G: IG, ctx: IGameCtx): Player {\n  return G.players[parseInt(ctx.currentPlayer)];\n}\n\nexport function getCurrentTeam(G: IG, ctx: IGameCtx): Team {\n  return G.teams[parseInt(ctx.currentPlayer)];\n}\n\nexport function makeCard(word: string): Card {\n  return { word, color: CardColor.civilian, revealed: false };\n}\n\nexport function makeTeam(teamID: number): Team {\n  return { teamID, players: [], spymaster: null, start: false };\n}\n\nexport function makePlayer(playerID: number): Player {\n  return { playerID, teamID: null, isSpymaster: false };\n}\n\nexport function chooseCard(G: IG, ctx: IGameCtx, cardIndex: number) {\n  G.cards[cardIndex].revealed = true;\n\n  const color = getCurrentPlayer(G, ctx).teamID ? CardColor.red : CardColor.blue;\n\n  if (G.cards[cardIndex].color !== color) {\n    ctx.events.endTurn();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}