{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction cov_2n3q47fb5q() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/chess/pieces/knight.tsx\";\n  var hash = \"13879152a0c486bf01a5af55600ee9b8a7cefe7f\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/chess/pieces/knight.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 17,\n          column: 21\n        },\n        end: {\n          line: 19,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 22,\n          column: 25\n        },\n        end: {\n          line: 22,\n          column: 73\n        }\n      },\n      \"2\": {\n        start: {\n          line: 23,\n          column: 27\n        },\n        end: {\n          line: 23,\n          column: 75\n        }\n      },\n      \"3\": {\n        start: {\n          line: 24,\n          column: 16\n        },\n        end: {\n          line: 24,\n          column: 20\n        }\n      },\n      \"4\": {\n        start: {\n          line: 25,\n          column: 18\n        },\n        end: {\n          line: 28,\n          column: 19\n        }\n      },\n      \"5\": {\n        start: {\n          line: 29,\n          column: 18\n        },\n        end: {\n          line: 33,\n          column: 28\n        }\n      },\n      \"6\": {\n        start: {\n          line: 34,\n          column: 4\n        },\n        end: {\n          line: 44,\n          column: 5\n        }\n      },\n      \"7\": {\n        start: {\n          line: 35,\n          column: 6\n        },\n        end: {\n          line: 43,\n          column: 8\n        }\n      },\n      \"8\": {\n        start: {\n          line: 45,\n          column: 4\n        },\n        end: {\n          line: 94,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 21,\n            column: 2\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 11\n          },\n          end: {\n            line: 95,\n            column: 3\n          }\n        },\n        line: 21\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 22,\n            column: 25\n          },\n          end: {\n            line: 22,\n            column: 73\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 22,\n            column: 52\n          },\n          end: {\n            line: 22,\n            column: 61\n          }\n        }, {\n          start: {\n            line: 22,\n            column: 64\n          },\n          end: {\n            line: 22,\n            column: 73\n          }\n        }],\n        line: 22\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 23,\n            column: 27\n          },\n          end: {\n            line: 23,\n            column: 75\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 23,\n            column: 54\n          },\n          end: {\n            line: 23,\n            column: 63\n          }\n        }, {\n          start: {\n            line: 23,\n            column: 66\n          },\n          end: {\n            line: 23,\n            column: 75\n          }\n        }],\n        line: 23\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 44,\n            column: 5\n          }\n        }],\n        line: 34\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"13879152a0c486bf01a5af55600ee9b8a7cefe7f\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2n3q47fb5q = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2n3q47fb5q();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Knight = /*#__PURE__*/function (_React$Component) {\n  _inherits(Knight, _React$Component);\n\n  var _super = _createSuper(Knight);\n\n  function Knight() {\n    _classCallCheck(this, Knight);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Knight, [{\n    key: \"render\",\n    value: function render() {\n      cov_2n3q47fb5q().f[0]++;\n      var primaryColor = (cov_2n3q47fb5q().s[1]++, this.props.color === 'b' ? (cov_2n3q47fb5q().b[0][0]++, '#000000') : (cov_2n3q47fb5q().b[0][1]++, '#FFFFFF'));\n      var secondaryColor = (cov_2n3q47fb5q().s[2]++, this.props.color === 'b' ? (cov_2n3q47fb5q().b[1][0]++, '#FFFFFF') : (cov_2n3q47fb5q().b[1][1]++, '#000000'));\n      var extra = (cov_2n3q47fb5q().s[3]++, null);\n      var path1 = (cov_2n3q47fb5q().s[4]++, \"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49\\n    32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L\\n    37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5\\n    L 24.55,10.4 z\");\n      var path2 = (cov_2n3q47fb5q().s[5]++, \"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34\\n    11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30\\n    5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506\\n    13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008\\n    21,7 C 22,7 22,10 22,10\");\n      cov_2n3q47fb5q().s[6]++;\n\n      if (this.props.color === 'b') {\n        cov_2n3q47fb5q().b[2][0]++;\n        cov_2n3q47fb5q().s[7]++;\n        extra = __jsx(\"path\", {\n          d: path1,\n          style: {\n            fill: '#ffffff',\n            stroke: 'none'\n          }\n        });\n      } else {\n        cov_2n3q47fb5q().b[2][1]++;\n      }\n\n      cov_2n3q47fb5q().s[8]++;\n      return __jsx(\"g\", {\n        transform: \"scale(.022222,.022222)\"\n      }, __jsx(\"g\", {\n        style: {\n          opacity: 1,\n          fill: 'none',\n          fillOpacity: 1,\n          fillRule: 'evenodd',\n          stroke: '#000000',\n          strokeWidth: 1.5,\n          strokeLinecap: 'round',\n          strokeLinejoin: 'round',\n          strokeMiterlimit: 4,\n          strokeDasharray: 'none',\n          strokeOpacity: 1\n        }\n      }, __jsx(\"path\", {\n        d: \"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\",\n        style: {\n          fill: primaryColor,\n          stroke: '#000000'\n        }\n      }), __jsx(\"path\", {\n        d: path2,\n        style: {\n          fill: primaryColor,\n          stroke: '#000000'\n        }\n      }), __jsx(\"path\", {\n        d: \"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\",\n        style: {\n          fill: secondaryColor,\n          stroke: secondaryColor\n        }\n      }), __jsx(\"path\", {\n        d: \"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\",\n        transform: \"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\",\n        style: {\n          fill: secondaryColor,\n          stroke: secondaryColor\n        }\n      }), extra));\n    }\n  }]);\n\n  return Knight;\n}((React.Component));\n\n_defineProperty(Knight, \"propTypes\", (cov_2n3q47fb5q().s[0]++, {\n  color: PropTypes.string\n}));\n\nexport default Knight;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/chess/pieces/knight.tsx"],"names":["React","PropTypes","Knight","primaryColor","props","color","secondaryColor","extra","path1","path2","fill","stroke","opacity","fillOpacity","fillRule","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","Component","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAQA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAMMC,M;;;;;;;;;;;;;6BAKK;AAAA;AACP,UAAMC,YAAY,6BAAG,KAAKC,KAAL,CAAWC,KAAX,KAAqB,GAArB,gCAA2B,SAA3B,iCAAuC,SAAvC,CAAH,CAAlB;AACA,UAAMC,cAAc,6BAAG,KAAKF,KAAL,CAAWC,KAAX,KAAqB,GAArB,gCAA2B,SAA3B,iCAAuC,SAAvC,CAAH,CAApB;AACA,UAAIE,KAAK,6BAAG,IAAH,CAAT;AACA,UAAMC,KAAK,iRAAX;AAIA,UAAMC,KAAK,qWAAX;AARO;;AAaP,UAAI,KAAKL,KAAL,CAAWC,KAAX,KAAqB,GAAzB,EAA8B;AAAA;AAAA;AAC5BE,QAAAA,KAAK,GACH;AACE,UAAA,CAAC,EAAEC,KADL;AAEE,UAAA,KAAK,EAAE;AACLE,YAAAA,IAAI,EAAE,SADD;AAELC,YAAAA,MAAM,EAAE;AAFH;AAFT,UADF;AASD,OAVD;AAAA;AAAA;;AAbO;AAwBP,aACE;AAAG,QAAA,SAAS,EAAC;AAAb,SACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,CADJ;AAELF,UAAAA,IAAI,EAAE,MAFD;AAGLG,UAAAA,WAAW,EAAE,CAHR;AAILC,UAAAA,QAAQ,EAAE,SAJL;AAKLH,UAAAA,MAAM,EAAE,SALH;AAMLI,UAAAA,WAAW,EAAE,GANR;AAOLC,UAAAA,aAAa,EAAE,OAPV;AAQLC,UAAAA,cAAc,EAAE,OARX;AASLC,UAAAA,gBAAgB,EAAE,CATb;AAULC,UAAAA,eAAe,EAAE,MAVZ;AAWLC,UAAAA,aAAa,EAAE;AAXV;AADT,SAeE;AACE,QAAA,CAAC,EAAC,+DADJ;AAEE,QAAA,KAAK,EAAE;AACLV,UAAAA,IAAI,EAAEP,YADD;AAELQ,UAAAA,MAAM,EAAE;AAFH;AAFT,QAfF,EAsBE;AACE,QAAA,CAAC,EAAEF,KADL;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAEP,YADD;AAELQ,UAAAA,MAAM,EAAE;AAFH;AAFT,QAtBF,EA6BE;AACE,QAAA,CAAC,EAAC,gEADJ;AAEE,QAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAEJ,cADD;AAELK,UAAAA,MAAM,EAAEL;AAFH;AAFT,QA7BF,EAoCE;AACE,QAAA,CAAC,EAAC,+DADJ;AAEE,QAAA,SAAS,EAAC,2CAFZ;AAGE,QAAA,KAAK,EAAE;AACLI,UAAAA,IAAI,EAAEJ,cADD;AAELK,UAAAA,MAAM,EAAEL;AAFH;AAHT,QApCF,EA4CGC,KA5CH,CADF,CADF;AAkDD;;;;GA/EkBP,KAAK,CAACqB,S;;gBAArBnB,M,yCACe;AACjBG,EAAAA,KAAK,EAAEJ,SAAS,CAACqB;AADA,C;;AAiFrB,eAAepB,MAAf","sourcesContent":["/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\ninterface IKnightProps {\n  color: string;\n}\n\nclass Knight extends React.Component<IKnightProps, {}> {\n  static propTypes = {\n    color: PropTypes.string,\n  };\n\n  render() {\n    const primaryColor = this.props.color === 'b' ? '#000000' : '#FFFFFF';\n    const secondaryColor = this.props.color === 'b' ? '#FFFFFF' : '#000000';\n    let extra = null;\n    const path1 = `M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49\n    32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L\n    37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5\n    L 24.55,10.4 z`;\n    const path2 = `M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34\n    11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30\n    5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506\n    13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008\n    21,7 C 22,7 22,10 22,10`;\n    if (this.props.color === 'b') {\n      extra = (\n        <path\n          d={path1}\n          style={{\n            fill: '#ffffff',\n            stroke: 'none',\n          }}\n        />\n      );\n    }\n    return (\n      <g transform=\"scale(.022222,.022222)\">\n        <g\n          style={{\n            opacity: 1,\n            fill: 'none',\n            fillOpacity: 1,\n            fillRule: 'evenodd',\n            stroke: '#000000',\n            strokeWidth: 1.5,\n            strokeLinecap: 'round',\n            strokeLinejoin: 'round',\n            strokeMiterlimit: 4,\n            strokeDasharray: 'none',\n            strokeOpacity: 1,\n          }}\n        >\n          <path\n            d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n            style={{\n              fill: primaryColor,\n              stroke: '#000000',\n            }}\n          />\n          <path\n            d={path2}\n            style={{\n              fill: primaryColor,\n              stroke: '#000000',\n            }}\n          />\n          <path\n            d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n            style={{\n              fill: secondaryColor,\n              stroke: secondaryColor,\n            }}\n          />\n          <path\n            d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n            transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n            style={{\n              fill: secondaryColor,\n              stroke: secondaryColor,\n            }}\n          />\n          {extra}\n        </g>\n      </g>\n    );\n  }\n}\n\nexport default Knight;\n"]},"metadata":{},"sourceType":"module"}