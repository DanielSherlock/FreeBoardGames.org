{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_17lf02dutf() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameOver.tsx\";\n  var hash = \"557fa5317d84991a365db8ca70b9fd8efabba6e4\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameOver.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 25,\n          column: 10\n        },\n        end: {\n          line: 25,\n          column: 28\n        }\n      },\n      \"1\": {\n        start: {\n          line: 27,\n          column: 4\n        },\n        end: {\n          line: 30,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 28,\n          column: 19\n        },\n        end: {\n          line: 28,\n          column: 58\n        }\n      },\n      \"3\": {\n        start: {\n          line: 29,\n          column: 6\n        },\n        end: {\n          line: 29,\n          column: 22\n        }\n      },\n      \"4\": {\n        start: {\n          line: 32,\n          column: 29\n        },\n        end: {\n          line: 32,\n          column: 56\n        }\n      },\n      \"5\": {\n        start: {\n          line: 33,\n          column: 4\n        },\n        end: {\n          line: 46,\n          column: 5\n        }\n      },\n      \"6\": {\n        start: {\n          line: 34,\n          column: 6\n        },\n        end: {\n          line: 45,\n          column: 8\n        }\n      },\n      \"7\": {\n        start: {\n          line: 47,\n          column: 4\n        },\n        end: {\n          line: 51,\n          column: 7\n        }\n      },\n      \"8\": {\n        start: {\n          line: 52,\n          column: 4\n        },\n        end: {\n          line: 61,\n          column: 6\n        }\n      },\n      \"9\": {\n        start: {\n          line: 63,\n          column: 25\n        },\n        end: {\n          line: 71,\n          column: 3\n        }\n      },\n      \"10\": {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 5\n        }\n      },\n      \"11\": {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 18\n        }\n      },\n      \"12\": {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 68,\n          column: 115\n        }\n      },\n      \"13\": {\n        start: {\n          line: 70,\n          column: 4\n        },\n        end: {\n          line: 70,\n          column: 27\n        }\n      },\n      \"14\": {\n        start: {\n          line: 73,\n          column: 21\n        },\n        end: {\n          line: 88,\n          column: 3\n        }\n      },\n      \"15\": {\n        start: {\n          line: 74,\n          column: 17\n        },\n        end: {\n          line: 74,\n          column: 36\n        }\n      },\n      \"16\": {\n        start: {\n          line: 75,\n          column: 4\n        },\n        end: {\n          line: 79,\n          column: 7\n        }\n      },\n      \"17\": {\n        start: {\n          line: 81,\n          column: 4\n        },\n        end: {\n          line: 87,\n          column: 5\n        }\n      },\n      \"18\": {\n        start: {\n          line: 82,\n          column: 6\n        },\n        end: {\n          line: 82,\n          column: 44\n        }\n      },\n      \"19\": {\n        start: {\n          line: 84,\n          column: 6\n        },\n        end: {\n          line: 84,\n          column: 39\n        }\n      },\n      \"20\": {\n        start: {\n          line: 85,\n          column: 25\n        },\n        end: {\n          line: 85,\n          column: 116\n        }\n      },\n      \"21\": {\n        start: {\n          line: 86,\n          column: 6\n        },\n        end: {\n          line: 86,\n          column: 65\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 26,\n            column: 2\n          },\n          end: {\n            line: 26,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 26,\n            column: 11\n          },\n          end: {\n            line: 62,\n            column: 3\n          }\n        },\n        line: 26\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 63,\n            column: 25\n          },\n          end: {\n            line: 63,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 63,\n            column: 31\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        },\n        line: 63\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 73,\n            column: 21\n          },\n          end: {\n            line: 73,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 73,\n            column: 33\n          },\n          end: {\n            line: 88,\n            column: 3\n          }\n        },\n        line: 73\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }],\n        line: 27\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 4\n          },\n          end: {\n            line: 46,\n            column: 5\n          }\n        }],\n        line: 33\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }],\n        line: 64\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 81,\n            column: 4\n          },\n          end: {\n            line: 87,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 81,\n            column: 4\n          },\n          end: {\n            line: 87,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 81,\n            column: 4\n          },\n          end: {\n            line: 87,\n            column: 5\n          }\n        }],\n        line: 81\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 81,\n            column: 8\n          },\n          end: {\n            line: 81,\n            column: 71\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 81,\n            column: 8\n          },\n          end: {\n            line: 81,\n            column: 33\n          }\n        }, {\n          start: {\n            line: 81,\n            column: 37\n          },\n          end: {\n            line: 81,\n            column: 71\n          }\n        }],\n        line: 81\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"557fa5317d84991a365db8ca70b9fd8efabba6e4\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_17lf02dutf = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_17lf02dutf();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\nexport class GameOver extends (React.Component) {\n  constructor(..._args) {\n    super(..._args);\n\n    _defineProperty(this, \"state\", (cov_17lf02dutf().s[0]++, {\n      loading: false\n    }));\n\n    _defineProperty(this, \"_getExtraCardContent\", (cov_17lf02dutf().s[9]++, () => {\n      cov_17lf02dutf().f[1]++;\n      cov_17lf02dutf().s[10]++;\n\n      if (!this.props.extraCardContent) {\n        cov_17lf02dutf().b[2][0]++;\n        cov_17lf02dutf().s[11]++;\n        return null;\n      } else {\n        cov_17lf02dutf().b[2][1]++;\n      }\n\n      const otherPlayerCard = (cov_17lf02dutf().s[12]++, __jsx(\"div\", {\n        style: {\n          paddingBottom: '12px',\n          maxWidth: '500px',\n          margin: 'auto'\n        }\n      }, this.props.extraCardContent));\n      cov_17lf02dutf().s[13]++;\n      return otherPlayerCard;\n    }));\n\n    _defineProperty(this, \"_playAgainHandle\", (cov_17lf02dutf().s[14]++, async () => {\n      cov_17lf02dutf().f[2]++;\n      const args = (cov_17lf02dutf().s[15]++, this.props.gameArgs);\n      cov_17lf02dutf().s[16]++;\n      ReactGA.event({\n        category: 'GameOver',\n        action: 'Clicked play again',\n        label: args.gameCode\n      });\n      cov_17lf02dutf().s[17]++;\n\n      if ((cov_17lf02dutf().b[4][0]++, args.mode === GameMode.AI) || (cov_17lf02dutf().b[4][1]++, args.mode === GameMode.LocalFriend)) {\n        cov_17lf02dutf().b[3][0]++;\n        cov_17lf02dutf().s[18]++;\n        Router.push(window.location.pathname);\n      } else {\n        cov_17lf02dutf().b[3][1]++;\n        cov_17lf02dutf().s[19]++;\n        this.setState({\n          loading: true\n        });\n        const nextRoomId = (cov_17lf02dutf().s[20]++, await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length));\n        cov_17lf02dutf().s[21]++;\n        Router.push(`/room/${args.gameCode}/${nextRoomId}`);\n      }\n    }));\n  }\n\n  render() {\n    cov_17lf02dutf().f[0]++;\n    cov_17lf02dutf().s[1]++;\n\n    if (this.state.loading) {\n      cov_17lf02dutf().b[0][0]++;\n      const Page = (cov_17lf02dutf().s[2]++, getMessagePage('loading', 'Loading...'));\n      cov_17lf02dutf().s[3]++;\n      return __jsx(Page, null);\n    } else {\n      cov_17lf02dutf().b[0][1]++;\n    }\n\n    let playAgain;\n    const extraCardContent = (cov_17lf02dutf().s[4]++, this._getExtraCardContent());\n    cov_17lf02dutf().s[5]++;\n\n    if (this.props.gameArgs) {\n      cov_17lf02dutf().b[1][0]++;\n      cov_17lf02dutf().s[6]++;\n      playAgain = __jsx(\"div\", {\n        style: {\n          textAlign: 'center'\n        }\n      }, __jsx(Button, {\n        onClick: this._playAgainHandle,\n        variant: \"outlined\",\n        style: {\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          marginBottom: '24px'\n        }\n      }, __jsx(ReplayIcon, {\n        style: {\n          marginRight: '8px'\n        }\n      }), \"Play Again\"));\n    } else {\n      cov_17lf02dutf().b[1][1]++;\n    }\n\n    cov_17lf02dutf().s[7]++;\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over'\n    });\n    cov_17lf02dutf().s[8]++;\n    return __jsx(FreeBoardGamesBar, {\n      FEATURE_FLAG_readyForDesktopView: true\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      align: \"center\",\n      style: {\n        marginTop: '16px'\n      }\n    }, \"Game Over, \", this.props.result, \"!\"), playAgain, extraCardContent, __jsx(GamesList, null));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameOver.tsx"],"names":["React","GameMode","GamesList","FreeBoardGamesBar","Typography","Button","ReplayIcon","ReactGA","getMessagePage","LobbyService","Router","GameOver","Component","loading","props","extraCardContent","otherPlayerCard","paddingBottom","maxWidth","margin","args","gameArgs","event","category","action","label","gameCode","mode","AI","LocalFriend","push","window","location","pathname","setState","nextRoomId","getPlayAgainNextRoom","matchCode","players","length","render","state","Page","playAgain","_getExtraCardContent","textAlign","_playAgainHandle","marginRight","marginLeft","marginBottom","marginTop","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\n\nexport interface IGameOverProps {\n  result: string;\n  gameArgs?: IGameArgs;\n  extraCardContent?: React.ReactNode;\n}\n\nexport interface IGameOverState {\n  loading: boolean;\n}\n\nexport class GameOver extends React.Component<IGameOverProps, {}> {\n  state = { loading: false };\n  render() {\n    if (this.state.loading) {\n      const Page = getMessagePage('loading', 'Loading...');\n      return <Page />;\n    }\n    let playAgain;\n    const extraCardContent = this._getExtraCardContent();\n    if (this.props.gameArgs) {\n      playAgain = (\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            onClick={this._playAgainHandle}\n            variant=\"outlined\"\n            style={{ marginRight: 'auto', marginLeft: 'auto', marginBottom: '24px' }}\n          >\n            <ReplayIcon style={{ marginRight: '8px' }} />\n            Play Again\n          </Button>\n        </div>\n      );\n    }\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over',\n    });\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <Typography variant=\"h6\" gutterBottom={true} align=\"center\" style={{ marginTop: '16px' }}>\n          Game Over, {this.props.result}!\n        </Typography>\n        {playAgain}\n        {extraCardContent}\n        <GamesList />\n      </FreeBoardGamesBar>\n    );\n  }\n  _getExtraCardContent = () => {\n    if (!this.props.extraCardContent) {\n      return null;\n    }\n    const otherPlayerCard = (\n      <div style={{ paddingBottom: '12px', maxWidth: '500px', margin: 'auto' }}>{this.props.extraCardContent}</div>\n    );\n    return otherPlayerCard;\n  };\n\n  _playAgainHandle = async () => {\n    const args = this.props.gameArgs;\n    ReactGA.event({\n      category: 'GameOver',\n      action: 'Clicked play again',\n      label: args.gameCode,\n    });\n\n    if (args.mode === GameMode.AI || args.mode === GameMode.LocalFriend) {\n      Router.push(window.location.pathname);\n    } else {\n      this.setState({ loading: true });\n      const nextRoomId = await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length);\n      Router.push(`/room/${args.gameCode}/${nextRoomId}` as any);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}