{"ast":null,"code":"function cov_m37usqyvk() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/checkers/game.ts\";\n  var hash = \"f9f7f2b66764e4755280cd59326ebff4c5a77528\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/checkers/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 30,\n          column: 14\n        },\n        end: {\n          line: 30,\n          column: 113\n        }\n      },\n      \"1\": {\n        start: {\n          line: 30,\n          column: 62\n        },\n        end: {\n          line: 30,\n          column: 112\n        }\n      },\n      \"2\": {\n        start: {\n          line: 32,\n          column: 38\n        },\n        end: {\n          line: 97,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 99,\n          column: 17\n        },\n        end: {\n          line: 108,\n          column: 1\n        }\n      },\n      \"4\": {\n        start: {\n          line: 110,\n          column: 18\n        },\n        end: {\n          line: 115,\n          column: 1\n        }\n      },\n      \"5\": {\n        start: {\n          line: 118,\n          column: 2\n        },\n        end: {\n          line: 118,\n          column: 40\n        }\n      },\n      \"6\": {\n        start: {\n          line: 122,\n          column: 2\n        },\n        end: {\n          line: 122,\n          column: 62\n        }\n      },\n      \"7\": {\n        start: {\n          line: 126,\n          column: 2\n        },\n        end: {\n          line: 126,\n          column: 68\n        }\n      },\n      \"8\": {\n        start: {\n          line: 130,\n          column: 12\n        },\n        end: {\n          line: 130,\n          column: 24\n        }\n      },\n      \"9\": {\n        start: {\n          line: 131,\n          column: 12\n        },\n        end: {\n          line: 131,\n          column: 36\n        }\n      },\n      \"10\": {\n        start: {\n          line: 132,\n          column: 2\n        },\n        end: {\n          line: 132,\n          column: 18\n        }\n      },\n      \"11\": {\n        start: {\n          line: 136,\n          column: 2\n        },\n        end: {\n          line: 136,\n          column: 31\n        }\n      },\n      \"12\": {\n        start: {\n          line: 140,\n          column: 2\n        },\n        end: {\n          line: 140,\n          column: 36\n        }\n      },\n      \"13\": {\n        start: {\n          line: 149,\n          column: 15\n        },\n        end: {\n          line: 149,\n          column: 67\n        }\n      },\n      \"14\": {\n        start: {\n          line: 150,\n          column: 23\n        },\n        end: {\n          line: 150,\n          column: 25\n        }\n      },\n      \"15\": {\n        start: {\n          line: 151,\n          column: 15\n        },\n        end: {\n          line: 151,\n          column: 20\n        }\n      },\n      \"16\": {\n        start: {\n          line: 153,\n          column: 2\n        },\n        end: {\n          line: 192,\n          column: 3\n        }\n      },\n      \"17\": {\n        start: {\n          line: 155,\n          column: 25\n        },\n        end: {\n          line: 155,\n          column: 29\n        }\n      },\n      \"18\": {\n        start: {\n          line: 156,\n          column: 4\n        },\n        end: {\n          line: 191,\n          column: 5\n        }\n      },\n      \"19\": {\n        start: {\n          line: 156,\n          column: 17\n        },\n        end: {\n          line: 156,\n          column: 18\n        }\n      },\n      \"20\": {\n        start: {\n          line: 157,\n          column: 20\n        },\n        end: {\n          line: 157,\n          column: 59\n        }\n      },\n      \"21\": {\n        start: {\n          line: 160,\n          column: 6\n        },\n        end: {\n          line: 162,\n          column: 7\n        }\n      },\n      \"22\": {\n        start: {\n          line: 161,\n          column: 8\n        },\n        end: {\n          line: 161,\n          column: 14\n        }\n      },\n      \"23\": {\n        start: {\n          line: 164,\n          column: 21\n        },\n        end: {\n          line: 164,\n          column: 44\n        }\n      },\n      \"24\": {\n        start: {\n          line: 167,\n          column: 6\n        },\n        end: {\n          line: 169,\n          column: 7\n        }\n      },\n      \"25\": {\n        start: {\n          line: 168,\n          column: 8\n        },\n        end: {\n          line: 168,\n          column: 14\n        }\n      },\n      \"26\": {\n        start: {\n          line: 171,\n          column: 6\n        },\n        end: {\n          line: 177,\n          column: 7\n        }\n      },\n      \"27\": {\n        start: {\n          line: 173,\n          column: 8\n        },\n        end: {\n          line: 175,\n          column: 9\n        }\n      },\n      \"28\": {\n        start: {\n          line: 174,\n          column: 10\n        },\n        end: {\n          line: 174,\n          column: 16\n        }\n      },\n      \"29\": {\n        start: {\n          line: 176,\n          column: 8\n        },\n        end: {\n          line: 176,\n          column: 31\n        }\n      },\n      \"30\": {\n        start: {\n          line: 179,\n          column: 6\n        },\n        end: {\n          line: 190,\n          column: 7\n        }\n      },\n      \"31\": {\n        start: {\n          line: 180,\n          column: 8\n        },\n        end: {\n          line: 180,\n          column: 71\n        }\n      },\n      \"32\": {\n        start: {\n          line: 181,\n          column: 8\n        },\n        end: {\n          line: 184,\n          column: 9\n        }\n      },\n      \"33\": {\n        start: {\n          line: 182,\n          column: 10\n        },\n        end: {\n          line: 182,\n          column: 24\n        }\n      },\n      \"34\": {\n        start: {\n          line: 183,\n          column: 10\n        },\n        end: {\n          line: 183,\n          column: 16\n        }\n      },\n      \"35\": {\n        start: {\n          line: 187,\n          column: 8\n        },\n        end: {\n          line: 189,\n          column: 9\n        }\n      },\n      \"36\": {\n        start: {\n          line: 188,\n          column: 10\n        },\n        end: {\n          line: 188,\n          column: 16\n        }\n      },\n      \"37\": {\n        start: {\n          line: 194,\n          column: 2\n        },\n        end: {\n          line: 194,\n          column: 27\n        }\n      },\n      \"38\": {\n        start: {\n          line: 198,\n          column: 28\n        },\n        end: {\n          line: 198,\n          column: 30\n        }\n      },\n      \"39\": {\n        start: {\n          line: 199,\n          column: 20\n        },\n        end: {\n          line: 199,\n          column: 25\n        }\n      },\n      \"40\": {\n        start: {\n          line: 201,\n          column: 2\n        },\n        end: {\n          line: 214,\n          column: 3\n        }\n      },\n      \"41\": {\n        start: {\n          line: 202,\n          column: 4\n        },\n        end: {\n          line: 209,\n          column: 7\n        }\n      },\n      \"42\": {\n        start: {\n          line: 203,\n          column: 6\n        },\n        end: {\n          line: 208,\n          column: 7\n        }\n      },\n      \"43\": {\n        start: {\n          line: 204,\n          column: 22\n        },\n        end: {\n          line: 204,\n          column: 36\n        }\n      },\n      \"44\": {\n        start: {\n          line: 205,\n          column: 34\n        },\n        end: {\n          line: 205,\n          column: 74\n        }\n      },\n      \"45\": {\n        start: {\n          line: 206,\n          column: 8\n        },\n        end: {\n          line: 206,\n          column: 34\n        }\n      },\n      \"46\": {\n        start: {\n          line: 207,\n          column: 8\n        },\n        end: {\n          line: 207,\n          column: 44\n        }\n      },\n      \"47\": {\n        start: {\n          line: 211,\n          column: 30\n        },\n        end: {\n          line: 211,\n          column: 85\n        }\n      },\n      \"48\": {\n        start: {\n          line: 212,\n          column: 4\n        },\n        end: {\n          line: 212,\n          column: 23\n        }\n      },\n      \"49\": {\n        start: {\n          line: 213,\n          column: 4\n        },\n        end: {\n          line: 213,\n          column: 25\n        }\n      },\n      \"50\": {\n        start: {\n          line: 216,\n          column: 2\n        },\n        end: {\n          line: 220,\n          column: 3\n        }\n      },\n      \"51\": {\n        start: {\n          line: 217,\n          column: 4\n        },\n        end: {\n          line: 217,\n          column: 52\n        }\n      },\n      \"52\": {\n        start: {\n          line: 217,\n          column: 39\n        },\n        end: {\n          line: 217,\n          column: 50\n        }\n      },\n      \"53\": {\n        start: {\n          line: 219,\n          column: 4\n        },\n        end: {\n          line: 219,\n          column: 22\n        }\n      },\n      \"54\": {\n        start: {\n          line: 224,\n          column: 20\n        },\n        end: {\n          line: 224,\n          column: 33\n        }\n      },\n      \"55\": {\n        start: {\n          line: 225,\n          column: 18\n        },\n        end: {\n          line: 225,\n          column: 29\n        }\n      },\n      \"56\": {\n        start: {\n          line: 226,\n          column: 16\n        },\n        end: {\n          line: 226,\n          column: 34\n        }\n      },\n      \"57\": {\n        start: {\n          line: 227,\n          column: 20\n        },\n        end: {\n          line: 227,\n          column: 48\n        }\n      },\n      \"58\": {\n        start: {\n          line: 229,\n          column: 2\n        },\n        end: {\n          line: 231,\n          column: 3\n        }\n      },\n      \"59\": {\n        start: {\n          line: 230,\n          column: 4\n        },\n        end: {\n          line: 230,\n          column: 24\n        }\n      },\n      \"60\": {\n        start: {\n          line: 233,\n          column: 16\n        },\n        end: {\n          line: 233,\n          column: 111\n        }\n      },\n      \"61\": {\n        start: {\n          line: 234,\n          column: 15\n        },\n        end: {\n          line: 234,\n          column: 99\n        }\n      },\n      \"62\": {\n        start: {\n          line: 234,\n          column: 36\n        },\n        end: {\n          line: 234,\n          column: 98\n        }\n      },\n      \"63\": {\n        start: {\n          line: 236,\n          column: 2\n        },\n        end: {\n          line: 238,\n          column: 3\n        }\n      },\n      \"64\": {\n        start: {\n          line: 237,\n          column: 4\n        },\n        end: {\n          line: 237,\n          column: 24\n        }\n      },\n      \"65\": {\n        start: {\n          line: 240,\n          column: 17\n        },\n        end: {\n          line: 240,\n          column: 65\n        }\n      },\n      \"66\": {\n        start: {\n          line: 241,\n          column: 17\n        },\n        end: {\n          line: 241,\n          column: 51\n        }\n      },\n      \"67\": {\n        start: {\n          line: 243,\n          column: 19\n        },\n        end: {\n          line: 261,\n          column: 3\n        }\n      },\n      \"68\": {\n        start: {\n          line: 246,\n          column: 6\n        },\n        end: {\n          line: 258,\n          column: 7\n        }\n      },\n      \"69\": {\n        start: {\n          line: 248,\n          column: 10\n        },\n        end: {\n          line: 248,\n          column: 22\n        }\n      },\n      \"70\": {\n        start: {\n          line: 250,\n          column: 10\n        },\n        end: {\n          line: 253,\n          column: 12\n        }\n      },\n      \"71\": {\n        start: {\n          line: 255,\n          column: 10\n        },\n        end: {\n          line: 255,\n          column: 22\n        }\n      },\n      \"72\": {\n        start: {\n          line: 257,\n          column: 10\n        },\n        end: {\n          line: 257,\n          column: 24\n        }\n      },\n      \"73\": {\n        start: {\n          line: 263,\n          column: 2\n        },\n        end: {\n          line: 265,\n          column: 3\n        }\n      },\n      \"74\": {\n        start: {\n          line: 264,\n          column: 4\n        },\n        end: {\n          line: 264,\n          column: 16\n        }\n      },\n      \"75\": {\n        start: {\n          line: 267,\n          column: 18\n        },\n        end: {\n          line: 273,\n          column: 3\n        }\n      },\n      \"76\": {\n        start: {\n          line: 274,\n          column: 20\n        },\n        end: {\n          line: 274,\n          column: 62\n        }\n      },\n      \"77\": {\n        start: {\n          line: 276,\n          column: 2\n        },\n        end: {\n          line: 281,\n          column: 3\n        }\n      },\n      \"78\": {\n        start: {\n          line: 277,\n          column: 4\n        },\n        end: {\n          line: 280,\n          column: 6\n        }\n      },\n      \"79\": {\n        start: {\n          line: 283,\n          column: 2\n        },\n        end: {\n          line: 283,\n          column: 14\n        }\n      },\n      \"80\": {\n        start: {\n          line: 286,\n          column: 39\n        },\n        end: {\n          line: 304,\n          column: 1\n        }\n      },\n      \"81\": {\n        start: {\n          line: 288,\n          column: 20\n        },\n        end: {\n          line: 288,\n          column: 59\n        }\n      },\n      \"82\": {\n        start: {\n          line: 295,\n          column: 19\n        },\n        end: {\n          line: 295,\n          column: 20\n        }\n      },\n      \"83\": {\n        start: {\n          line: 296,\n          column: 29\n        },\n        end: {\n          line: 296,\n          column: 108\n        }\n      },\n      \"84\": {\n        start: {\n          line: 300,\n          column: 4\n        },\n        end: {\n          line: 302,\n          column: 5\n        }\n      },\n      \"85\": {\n        start: {\n          line: 301,\n          column: 6\n        },\n        end: {\n          line: 301,\n          column: 43\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 14\n          },\n          end: {\n            line: 30,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 62\n          },\n          end: {\n            line: 30,\n            column: 112\n          }\n        },\n        line: 30\n      },\n      \"1\": {\n        name: \"sumCoords\",\n        decl: {\n          start: {\n            line: 117,\n            column: 16\n          },\n          end: {\n            line: 117,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 117,\n            column: 48\n          },\n          end: {\n            line: 119,\n            column: 1\n          }\n        },\n        line: 117\n      },\n      \"2\": {\n        name: \"multiplyCoord\",\n        decl: {\n          start: {\n            line: 121,\n            column: 16\n          },\n          end: {\n            line: 121,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 121,\n            column: 65\n          },\n          end: {\n            line: 123,\n            column: 1\n          }\n        },\n        line: 121\n      },\n      \"3\": {\n        name: \"inBounds\",\n        decl: {\n          start: {\n            line: 125,\n            column: 16\n          },\n          end: {\n            line: 125,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 125,\n            column: 40\n          },\n          end: {\n            line: 127,\n            column: 1\n          }\n        },\n        line: 125\n      },\n      \"4\": {\n        name: \"toCoord\",\n        decl: {\n          start: {\n            line: 129,\n            column: 16\n          },\n          end: {\n            line: 129,\n            column: 23\n          }\n        },\n        loc: {\n          start: {\n            line: 129,\n            column: 50\n          },\n          end: {\n            line: 133,\n            column: 1\n          }\n        },\n        line: 129\n      },\n      \"5\": {\n        name: \"toIndex\",\n        decl: {\n          start: {\n            line: 135,\n            column: 16\n          },\n          end: {\n            line: 135,\n            column: 23\n          }\n        },\n        loc: {\n          start: {\n            line: 135,\n            column: 39\n          },\n          end: {\n            line: 137,\n            column: 1\n          }\n        },\n        line: 135\n      },\n      \"6\": {\n        name: \"areCoordsEqual\",\n        decl: {\n          start: {\n            line: 139,\n            column: 16\n          },\n          end: {\n            line: 139,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 139,\n            column: 53\n          },\n          end: {\n            line: 141,\n            column: 1\n          }\n        },\n        line: 139\n      },\n      \"7\": {\n        name: \"checkPosition\",\n        decl: {\n          start: {\n            line: 143,\n            column: 16\n          },\n          end: {\n            line: 143,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 148,\n            column: 39\n          },\n          end: {\n            line: 195,\n            column: 1\n          }\n        },\n        line: 148\n      },\n      \"8\": {\n        name: \"getValidMoves\",\n        decl: {\n          start: {\n            line: 197,\n            column: 16\n          },\n          end: {\n            line: 197,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 197,\n            column: 89\n          },\n          end: {\n            line: 221,\n            column: 1\n          }\n        },\n        line: 197\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 202,\n            column: 20\n          },\n          end: {\n            line: 202,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 202,\n            column: 38\n          },\n          end: {\n            line: 209,\n            column: 5\n          }\n        },\n        line: 202\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 217,\n            column: 29\n          },\n          end: {\n            line: 217,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 217,\n            column: 39\n          },\n          end: {\n            line: 217,\n            column: 50\n          }\n        },\n        line: 217\n      },\n      \"11\": {\n        name: \"move\",\n        decl: {\n          start: {\n            line: 223,\n            column: 16\n          },\n          end: {\n            line: 223,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 223,\n            column: 82\n          },\n          end: {\n            line: 284,\n            column: 1\n          }\n        },\n        line: 223\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 234,\n            column: 26\n          },\n          end: {\n            line: 234,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 234,\n            column: 36\n          },\n          end: {\n            line: 234,\n            column: 98\n          }\n        },\n        line: 234\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 245,\n            column: 23\n          },\n          end: {\n            line: 245,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 245,\n            column: 38\n          },\n          end: {\n            line: 259,\n            column: 5\n          }\n        },\n        line: 245\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 288,\n            column: 9\n          },\n          end: {\n            line: 288,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 288,\n            column: 20\n          },\n          end: {\n            line: 288,\n            column: 59\n          }\n        },\n        line: 288\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 295,\n            column: 13\n          },\n          end: {\n            line: 295,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 295,\n            column: 19\n          },\n          end: {\n            line: 295,\n            column: 20\n          }\n        },\n        line: 295\n      },\n      \"16\": {\n        name: \"(anonymous_16)\",\n        decl: {\n          start: {\n            line: 296,\n            column: 12\n          },\n          end: {\n            line: 296,\n            column: 13\n          }\n        },\n        loc: {\n          start: {\n            line: 296,\n            column: 29\n          },\n          end: {\n            line: 296,\n            column: 108\n          }\n        },\n        line: 296\n      },\n      \"17\": {\n        name: \"(anonymous_17)\",\n        decl: {\n          start: {\n            line: 299,\n            column: 9\n          },\n          end: {\n            line: 299,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 299,\n            column: 25\n          },\n          end: {\n            line: 303,\n            column: 3\n          }\n        },\n        line: 299\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 126,\n            column: 9\n          },\n          end: {\n            line: 126,\n            column: 67\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 126,\n            column: 9\n          },\n          end: {\n            line: 126,\n            column: 21\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 25\n          },\n          end: {\n            line: 126,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 40\n          },\n          end: {\n            line: 126,\n            column: 52\n          }\n        }, {\n          start: {\n            line: 126,\n            column: 56\n          },\n          end: {\n            line: 126,\n            column: 67\n          }\n        }],\n        line: 126\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 140,\n            column: 9\n          },\n          end: {\n            line: 140,\n            column: 35\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 140,\n            column: 9\n          },\n          end: {\n            line: 140,\n            column: 20\n          }\n        }, {\n          start: {\n            line: 140,\n            column: 24\n          },\n          end: {\n            line: 140,\n            column: 35\n          }\n        }],\n        line: 140\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 149,\n            column: 15\n          },\n          end: {\n            line: 149,\n            column: 67\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 149,\n            column: 30\n          },\n          end: {\n            line: 149,\n            column: 39\n          }\n        }, {\n          start: {\n            line: 149,\n            column: 42\n          },\n          end: {\n            line: 149,\n            column: 67\n          }\n        }],\n        line: 149\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 156,\n            column: 20\n          },\n          end: {\n            line: 156,\n            column: 47\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 156,\n            column: 35\n          },\n          end: {\n            line: 156,\n            column: 39\n          }\n        }, {\n          start: {\n            line: 156,\n            column: 42\n          },\n          end: {\n            line: 156,\n            column: 47\n          }\n        }],\n        line: 156\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 160,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 160,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 160,\n            column: 6\n          },\n          end: {\n            line: 162,\n            column: 7\n          }\n        }],\n        line: 160\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 169,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 169,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 6\n          },\n          end: {\n            line: 169,\n            column: 7\n          }\n        }],\n        line: 167\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 10\n          },\n          end: {\n            line: 167,\n            column: 57\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 10\n          },\n          end: {\n            line: 167,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 29\n          },\n          end: {\n            line: 167,\n            column: 57\n          }\n        }],\n        line: 167\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 171,\n            column: 6\n          },\n          end: {\n            line: 177,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 171,\n            column: 6\n          },\n          end: {\n            line: 177,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 171,\n            column: 6\n          },\n          end: {\n            line: 177,\n            column: 7\n          }\n        }],\n        line: 171\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 171,\n            column: 10\n          },\n          end: {\n            line: 171,\n            column: 57\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 171,\n            column: 10\n          },\n          end: {\n            line: 171,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 171,\n            column: 29\n          },\n          end: {\n            line: 171,\n            column: 57\n          }\n        }],\n        line: 171\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 173,\n            column: 8\n          },\n          end: {\n            line: 175,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 173,\n            column: 8\n          },\n          end: {\n            line: 175,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 173,\n            column: 8\n          },\n          end: {\n            line: 175,\n            column: 9\n          }\n        }],\n        line: 173\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 179,\n            column: 6\n          },\n          end: {\n            line: 190,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 179,\n            column: 6\n          },\n          end: {\n            line: 190,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 179,\n            column: 6\n          },\n          end: {\n            line: 190,\n            column: 7\n          }\n        }],\n        line: 179\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 181,\n            column: 8\n          },\n          end: {\n            line: 184,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 181,\n            column: 8\n          },\n          end: {\n            line: 184,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 181,\n            column: 8\n          },\n          end: {\n            line: 184,\n            column: 9\n          }\n        }],\n        line: 181\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 187,\n            column: 8\n          },\n          end: {\n            line: 189,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 187,\n            column: 8\n          },\n          end: {\n            line: 189,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 187,\n            column: 8\n          },\n          end: {\n            line: 189,\n            column: 9\n          }\n        }],\n        line: 187\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 201,\n            column: 2\n          },\n          end: {\n            line: 214,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 201,\n            column: 2\n          },\n          end: {\n            line: 214,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 201,\n            column: 2\n          },\n          end: {\n            line: 214,\n            column: 3\n          }\n        }],\n        line: 201\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 203,\n            column: 6\n          },\n          end: {\n            line: 208,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 203,\n            column: 6\n          },\n          end: {\n            line: 208,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 203,\n            column: 6\n          },\n          end: {\n            line: 208,\n            column: 7\n          }\n        }],\n        line: 203\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 203,\n            column: 10\n          },\n          end: {\n            line: 203,\n            column: 55\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 203,\n            column: 10\n          },\n          end: {\n            line: 203,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 203,\n            column: 28\n          },\n          end: {\n            line: 203,\n            column: 55\n          }\n        }],\n        line: 203\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 207,\n            column: 22\n          },\n          end: {\n            line: 207,\n            column: 43\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 207,\n            column: 22\n          },\n          end: {\n            line: 207,\n            column: 33\n          }\n        }, {\n          start: {\n            line: 207,\n            column: 37\n          },\n          end: {\n            line: 207,\n            column: 43\n          }\n        }],\n        line: 207\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 216,\n            column: 2\n          },\n          end: {\n            line: 220,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 216,\n            column: 2\n          },\n          end: {\n            line: 220,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 216,\n            column: 2\n          },\n          end: {\n            line: 220,\n            column: 3\n          }\n        }],\n        line: 216\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 227,\n            column: 20\n          },\n          end: {\n            line: 227,\n            column: 48\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 227,\n            column: 43\n          },\n          end: {\n            line: 227,\n            column: 44\n          }\n        }, {\n          start: {\n            line: 227,\n            column: 47\n          },\n          end: {\n            line: 227,\n            column: 48\n          }\n        }],\n        line: 227\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 229,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 229,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 2\n          },\n          end: {\n            line: 231,\n            column: 3\n          }\n        }],\n        line: 229\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 229,\n            column: 6\n          },\n          end: {\n            line: 229,\n            column: 84\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 229,\n            column: 6\n          },\n          end: {\n            line: 229,\n            column: 20\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 24\n          },\n          end: {\n            line: 229,\n            column: 55\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 59\n          },\n          end: {\n            line: 229,\n            column: 84\n          }\n        }],\n        line: 229\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 233,\n            column: 16\n          },\n          end: {\n            line: 233,\n            column: 111\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 233,\n            column: 37\n          },\n          end: {\n            line: 233,\n            column: 67\n          }\n        }, {\n          start: {\n            line: 233,\n            column: 70\n          },\n          end: {\n            line: 233,\n            column: 111\n          }\n        }],\n        line: 233\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 234,\n            column: 36\n          },\n          end: {\n            line: 234,\n            column: 98\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 234,\n            column: 36\n          },\n          end: {\n            line: 234,\n            column: 67\n          }\n        }, {\n          start: {\n            line: 234,\n            column: 71\n          },\n          end: {\n            line: 234,\n            column: 98\n          }\n        }],\n        line: 234\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 236,\n            column: 2\n          },\n          end: {\n            line: 238,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 236,\n            column: 2\n          },\n          end: {\n            line: 238,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 236,\n            column: 2\n          },\n          end: {\n            line: 238,\n            column: 3\n          }\n        }],\n        line: 236\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 240,\n            column: 17\n          },\n          end: {\n            line: 240,\n            column: 65\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 240,\n            column: 40\n          },\n          end: {\n            line: 240,\n            column: 60\n          }\n        }, {\n          start: {\n            line: 240,\n            column: 63\n          },\n          end: {\n            line: 240,\n            column: 65\n          }\n        }],\n        line: 240\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 241,\n            column: 17\n          },\n          end: {\n            line: 241,\n            column: 51\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 241,\n            column: 17\n          },\n          end: {\n            line: 241,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 241,\n            column: 33\n          },\n          end: {\n            line: 241,\n            column: 51\n          }\n        }],\n        line: 241\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 246,\n            column: 6\n          },\n          end: {\n            line: 258,\n            column: 7\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 247,\n            column: 8\n          },\n          end: {\n            line: 248,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 249,\n            column: 8\n          },\n          end: {\n            line: 253,\n            column: 12\n          }\n        }, {\n          start: {\n            line: 254,\n            column: 8\n          },\n          end: {\n            line: 255,\n            column: 22\n          }\n        }, {\n          start: {\n            line: 256,\n            column: 8\n          },\n          end: {\n            line: 257,\n            column: 24\n          }\n        }],\n        line: 246\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 263,\n            column: 2\n          },\n          end: {\n            line: 265,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 263,\n            column: 2\n          },\n          end: {\n            line: 265,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 263,\n            column: 2\n          },\n          end: {\n            line: 265,\n            column: 3\n          }\n        }],\n        line: 263\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 276,\n            column: 2\n          },\n          end: {\n            line: 281,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 276,\n            column: 2\n          },\n          end: {\n            line: 281,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 276,\n            column: 2\n          },\n          end: {\n            line: 281,\n            column: 3\n          }\n        }],\n        line: 276\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 276,\n            column: 6\n          },\n          end: {\n            line: 276,\n            column: 58\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 276,\n            column: 6\n          },\n          end: {\n            line: 276,\n            column: 26\n          }\n        }, {\n          start: {\n            line: 276,\n            column: 30\n          },\n          end: {\n            line: 276,\n            column: 58\n          }\n        }],\n        line: 276\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 296,\n            column: 29\n          },\n          end: {\n            line: 296,\n            column: 108\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 296,\n            column: 50\n          },\n          end: {\n            line: 296,\n            column: 89\n          }\n        }, {\n          start: {\n            line: 296,\n            column: 92\n          },\n          end: {\n            line: 296,\n            column: 108\n          }\n        }],\n        line: 296\n      },\n      \"31\": {\n        loc: {\n          start: {\n            line: 300,\n            column: 4\n          },\n          end: {\n            line: 302,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 300,\n            column: 4\n          },\n          end: {\n            line: 302,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 300,\n            column: 4\n          },\n          end: {\n            line: 302,\n            column: 5\n          }\n        }],\n        line: 300\n      },\n      \"32\": {\n        loc: {\n          start: {\n            line: 300,\n            column: 25\n          },\n          end: {\n            line: 300,\n            column: 62\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 300,\n            column: 53\n          },\n          end: {\n            line: 300,\n            column: 56\n          }\n        }, {\n          start: {\n            line: 300,\n            column: 59\n          },\n          end: {\n            line: 300,\n            column: 62\n          }\n        }],\n        line: 300\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0\n    },\n    b: {\n      \"0\": [0, 0, 0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0, 0],\n      \"21\": [0, 0],\n      \"22\": [0, 0],\n      \"23\": [0, 0],\n      \"24\": [0, 0],\n      \"25\": [0, 0],\n      \"26\": [0, 0, 0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0],\n      \"29\": [0, 0],\n      \"30\": [0, 0],\n      \"31\": [0, 0],\n      \"32\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"f9f7f2b66764e4755280cd59326ebff4c5a77528\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_m37usqyvk = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_m37usqyvk();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { INVALID_MOVE } from 'boardgame.io/core';\ncov_m37usqyvk().s[0]++;\n\nconst piece = (id, player) => {\n  cov_m37usqyvk().f[0]++;\n  cov_m37usqyvk().s[1]++;\n  return {\n    id,\n    playerID: player.toString(),\n    isKing: false\n  };\n};\n\nexport const INITIAL_BOARD = (cov_m37usqyvk().s[2]++, [null, piece(0, 1), null, piece(1, 1), null, piece(2, 1), null, piece(3, 1), piece(4, 1), null, piece(5, 1), null, piece(6, 1), null, piece(7, 1), null, null, piece(8, 1), null, piece(9, 1), null, piece(10, 1), null, piece(11, 1), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, piece(12, 0), null, piece(13, 0), null, piece(14, 0), null, piece(15, 0), null, null, piece(16, 0), null, piece(17, 0), null, piece(18, 0), null, piece(19, 0), piece(20, 0), null, piece(21, 0), null, piece(22, 0), null, piece(23, 0), null]);\nconst MAN_DIRS = (cov_m37usqyvk().s[3]++, [[{\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}], [{\n  x: -1,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}]]);\nconst KING_DIRS = (cov_m37usqyvk().s[4]++, [{\n  x: -1,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}]);\nexport function sumCoords(a, b) {\n  cov_m37usqyvk().f[1]++;\n  cov_m37usqyvk().s[5]++;\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n}\nexport function multiplyCoord(coord, multiplier) {\n  cov_m37usqyvk().f[2]++;\n  cov_m37usqyvk().s[6]++;\n  return {\n    x: coord.x * multiplier,\n    y: coord.y * multiplier\n  };\n}\nexport function inBounds(coord) {\n  cov_m37usqyvk().f[3]++;\n  cov_m37usqyvk().s[7]++;\n  return (cov_m37usqyvk().b[0][0]++, coord.x >= 0) && (cov_m37usqyvk().b[0][1]++, coord.x < 8) && (cov_m37usqyvk().b[0][2]++, coord.y >= 0) && (cov_m37usqyvk().b[0][3]++, coord.y < 8);\n}\nexport function toCoord(position) {\n  cov_m37usqyvk().f[4]++;\n  const x = (cov_m37usqyvk().s[8]++, position % 8);\n  const y = (cov_m37usqyvk().s[9]++, Math.floor(position / 8));\n  cov_m37usqyvk().s[10]++;\n  return {\n    x,\n    y\n  };\n}\nexport function toIndex(coord) {\n  cov_m37usqyvk().f[5]++;\n  cov_m37usqyvk().s[11]++;\n  return coord.x + coord.y * 8;\n}\nexport function areCoordsEqual(a, b) {\n  cov_m37usqyvk().f[6]++;\n  cov_m37usqyvk().s[12]++;\n  return (cov_m37usqyvk().b[1][0]++, a.x === b.x) && (cov_m37usqyvk().b[1][1]++, a.y === b.y);\n}\nexport function checkPosition(G, playerID, piece, coord) {\n  cov_m37usqyvk().f[7]++;\n  const dirs = (cov_m37usqyvk().s[13]++, piece.isKing ? (cov_m37usqyvk().b[2][0]++, KING_DIRS) : (cov_m37usqyvk().b[2][1]++, MAN_DIRS[playerID]));\n  let moves = (cov_m37usqyvk().s[14]++, []);\n  let jumped = (cov_m37usqyvk().s[15]++, false);\n  cov_m37usqyvk().s[16]++;\n\n  for (const dir of dirs) {\n    // Look into all valid directions\n    let opponentBefore = (cov_m37usqyvk().s[17]++, null);\n    cov_m37usqyvk().s[18]++;\n\n    for (let i = (cov_m37usqyvk().s[19]++, 1); piece.isKing ? (cov_m37usqyvk().b[3][0]++, true) : (cov_m37usqyvk().b[3][1]++, i < 3); i++) {\n      const final = (cov_m37usqyvk().s[20]++, sumCoords(coord, multiplyCoord(dir, i))); // Break if move is out of bounds\n\n      cov_m37usqyvk().s[21]++;\n\n      if (!inBounds(final)) {\n        cov_m37usqyvk().b[4][0]++;\n        cov_m37usqyvk().s[22]++;\n        break;\n      } else {\n        cov_m37usqyvk().b[4][1]++;\n      }\n\n      const moveTo = (cov_m37usqyvk().s[23]++, G.board[toIndex(final)]); // Break if we encounter our piece\n\n      cov_m37usqyvk().s[24]++;\n\n      if ((cov_m37usqyvk().b[6][0]++, moveTo !== null) && (cov_m37usqyvk().b[6][1]++, moveTo.playerID === playerID)) {\n        cov_m37usqyvk().b[5][0]++;\n        cov_m37usqyvk().s[25]++;\n        break;\n      } else {\n        cov_m37usqyvk().b[5][1]++;\n      }\n\n      cov_m37usqyvk().s[26]++;\n\n      if ((cov_m37usqyvk().b[8][0]++, moveTo !== null) && (cov_m37usqyvk().b[8][1]++, moveTo.playerID !== playerID)) {\n        cov_m37usqyvk().b[7][0]++;\n        cov_m37usqyvk().s[27]++;\n\n        // If we already encountered opponent the directions is blocked\n        if (opponentBefore) {\n          cov_m37usqyvk().b[9][0]++;\n          cov_m37usqyvk().s[28]++;\n          break;\n        } else {\n          cov_m37usqyvk().b[9][1]++;\n        }\n\n        cov_m37usqyvk().s[29]++;\n        opponentBefore = final;\n      } else {\n        cov_m37usqyvk().b[7][1]++;\n      }\n\n      cov_m37usqyvk().s[30]++;\n\n      if (moveTo === null) {\n        cov_m37usqyvk().b[10][0]++;\n        cov_m37usqyvk().s[31]++;\n        moves.push({\n          from: coord,\n          to: final,\n          jumped: opponentBefore\n        });\n        cov_m37usqyvk().s[32]++;\n\n        if (opponentBefore) {\n          cov_m37usqyvk().b[11][0]++;\n          cov_m37usqyvk().s[33]++;\n          jumped = true;\n          cov_m37usqyvk().s[34]++;\n          break;\n        } else {\n          cov_m37usqyvk().b[11][1]++;\n        } // If there is nothing and the piece isn't king there is no need to continue\n\n\n        cov_m37usqyvk().s[35]++;\n\n        if (!piece.isKing) {\n          cov_m37usqyvk().b[12][0]++;\n          cov_m37usqyvk().s[36]++;\n          break;\n        } else {\n          cov_m37usqyvk().b[12][1]++;\n        }\n      } else {\n        cov_m37usqyvk().b[10][1]++;\n      }\n    }\n  }\n\n  cov_m37usqyvk().s[37]++;\n  return {\n    moves,\n    jumped\n  };\n}\nexport function getValidMoves(G, playerID, jumping) {\n  cov_m37usqyvk().f[8]++;\n  let movesTotal = (cov_m37usqyvk().s[38]++, []);\n  let jumpedTotal = (cov_m37usqyvk().s[39]++, false);\n  cov_m37usqyvk().s[40]++;\n\n  if (typeof jumping === 'undefined') {\n    cov_m37usqyvk().b[13][0]++;\n    cov_m37usqyvk().s[41]++;\n    G.board.forEach((piece, index) => {\n      cov_m37usqyvk().f[9]++;\n      cov_m37usqyvk().s[42]++;\n\n      if ((cov_m37usqyvk().b[15][0]++, piece !== null) && (cov_m37usqyvk().b[15][1]++, piece.playerID === playerID)) {\n        cov_m37usqyvk().b[14][0]++;\n        const coord = (cov_m37usqyvk().s[43]++, toCoord(index));\n        const {\n          moves,\n          jumped\n        } = (cov_m37usqyvk().s[44]++, checkPosition(G, playerID, piece, coord));\n        cov_m37usqyvk().s[45]++;\n        movesTotal.push(...moves);\n        cov_m37usqyvk().s[46]++;\n        jumpedTotal = (cov_m37usqyvk().b[16][0]++, jumpedTotal) || (cov_m37usqyvk().b[16][1]++, jumped);\n      } else {\n        cov_m37usqyvk().b[14][1]++;\n      }\n    });\n  } else {\n    cov_m37usqyvk().b[13][1]++;\n    const {\n      moves,\n      jumped\n    } = (cov_m37usqyvk().s[47]++, checkPosition(G, playerID, jumping.data, jumping.coord));\n    cov_m37usqyvk().s[48]++;\n    movesTotal = moves;\n    cov_m37usqyvk().s[49]++;\n    jumpedTotal = jumped;\n  }\n\n  cov_m37usqyvk().s[50]++;\n\n  if (jumpedTotal) {\n    cov_m37usqyvk().b[17][0]++;\n    cov_m37usqyvk().s[51]++;\n    return movesTotal.filter(move => {\n      cov_m37usqyvk().f[10]++;\n      cov_m37usqyvk().s[52]++;\n      return move.jumped;\n    });\n  } else {\n    cov_m37usqyvk().b[17][1]++;\n    cov_m37usqyvk().s[53]++;\n    return movesTotal;\n  }\n}\nexport function move(G, ctx, from, to) {\n  cov_m37usqyvk().f[11]++;\n  const indexFrom = (cov_m37usqyvk().s[54]++, toIndex(from));\n  const indexTo = (cov_m37usqyvk().s[55]++, toIndex(to));\n  const piece = (cov_m37usqyvk().s[56]++, G.board[indexFrom]);\n  const crownhead = (cov_m37usqyvk().s[57]++, ctx.playerID === '0' ? (cov_m37usqyvk().b[18][0]++, 0) : (cov_m37usqyvk().b[18][1]++, 7));\n  cov_m37usqyvk().s[58]++;\n\n  if ((cov_m37usqyvk().b[20][0]++, piece === null) || (cov_m37usqyvk().b[20][1]++, piece.playerID !== ctx.playerID) || (cov_m37usqyvk().b[20][2]++, G.board[indexTo] !== null)) {\n    cov_m37usqyvk().b[19][0]++;\n    cov_m37usqyvk().s[59]++;\n    return INVALID_MOVE;\n  } else {\n    cov_m37usqyvk().b[19][1]++;\n  }\n\n  const moves = (cov_m37usqyvk().s[60]++, G.jumping === null ? (cov_m37usqyvk().b[21][0]++, getValidMoves(G, ctx.playerID)) : (cov_m37usqyvk().b[21][1]++, getValidMoves(G, ctx.playerID, G.jumping)));\n  const move = (cov_m37usqyvk().s[61]++, moves.find(move => {\n    cov_m37usqyvk().f[12]++;\n    cov_m37usqyvk().s[62]++;\n    return (cov_m37usqyvk().b[22][0]++, areCoordsEqual(move.from, from)) && (cov_m37usqyvk().b[22][1]++, areCoordsEqual(move.to, to));\n  }));\n  cov_m37usqyvk().s[63]++;\n\n  if (typeof move === 'undefined') {\n    cov_m37usqyvk().b[23][0]++;\n    cov_m37usqyvk().s[64]++;\n    return INVALID_MOVE;\n  } else {\n    cov_m37usqyvk().b[23][1]++;\n  }\n\n  const jumped = (cov_m37usqyvk().s[65]++, move.jumped !== null ? (cov_m37usqyvk().b[24][0]++, toIndex(move.jumped)) : (cov_m37usqyvk().b[24][1]++, -1));\n  const isKing = (cov_m37usqyvk().s[66]++, (cov_m37usqyvk().b[25][0]++, piece.isKing) || (cov_m37usqyvk().b[25][1]++, to.y === crownhead));\n  const newG = (cov_m37usqyvk().s[67]++, _objectSpread({}, G, {\n    board: G.board.map((square, i) => {\n      cov_m37usqyvk().f[13]++;\n      cov_m37usqyvk().s[68]++;\n\n      switch (i) {\n        case indexFrom:\n          cov_m37usqyvk().b[26][0]++;\n          cov_m37usqyvk().s[69]++;\n          return null;\n\n        case indexTo:\n          cov_m37usqyvk().b[26][1]++;\n          cov_m37usqyvk().s[70]++;\n          return _objectSpread({}, piece, {\n            isKing\n          });\n\n        case jumped:\n          cov_m37usqyvk().b[26][2]++;\n          cov_m37usqyvk().s[71]++;\n          return null;\n\n        default:\n          cov_m37usqyvk().b[26][3]++;\n          cov_m37usqyvk().s[72]++;\n          return square;\n      }\n    }),\n    jumping: null\n  }));\n  cov_m37usqyvk().s[73]++;\n\n  if (move.jumped === null) {\n    cov_m37usqyvk().b[27][0]++;\n    cov_m37usqyvk().s[74]++;\n    return newG;\n  } else {\n    cov_m37usqyvk().b[27][1]++;\n  }\n\n  const jumping = (cov_m37usqyvk().s[75]++, {\n    data: _objectSpread({}, piece, {\n      isKing\n    }),\n    coord: to\n  });\n  const postMoves = (cov_m37usqyvk().s[76]++, getValidMoves(newG, ctx.playerID, jumping));\n  cov_m37usqyvk().s[77]++;\n\n  if ((cov_m37usqyvk().b[29][0]++, postMoves.length > 0) && (cov_m37usqyvk().b[29][1]++, postMoves[0].jumped !== null)) {\n    cov_m37usqyvk().b[28][0]++;\n    cov_m37usqyvk().s[78]++;\n    return _objectSpread({}, newG, {\n      jumping\n    });\n  } else {\n    cov_m37usqyvk().b[28][1]++;\n  }\n\n  cov_m37usqyvk().s[79]++;\n  return newG;\n}\nexport const CheckersGame = (cov_m37usqyvk().s[80]++, {\n  name: 'checkers',\n  setup: () => {\n    cov_m37usqyvk().f[14]++;\n    cov_m37usqyvk().s[81]++;\n    return {\n      board: INITIAL_BOARD,\n      jumping: null\n    };\n  },\n  moves: {\n    move\n  },\n  turn: {\n    moveLimit: 1,\n    order: {\n      first: () => {\n        cov_m37usqyvk().f[15]++;\n        cov_m37usqyvk().s[82]++;\n        return 0;\n      },\n      next: (G, ctx) => {\n        cov_m37usqyvk().f[16]++;\n        cov_m37usqyvk().s[83]++;\n        return G.jumping === null ? (cov_m37usqyvk().b[30][0]++, (ctx.playOrderPos + 1) % ctx.numPlayers) : (cov_m37usqyvk().b[30][1]++, ctx.playOrderPos);\n      }\n    }\n  },\n  endIf: (G, ctx) => {\n    cov_m37usqyvk().f[17]++;\n    cov_m37usqyvk().s[84]++;\n\n    if (getValidMoves(G, ctx.currentPlayer === '0' ? (cov_m37usqyvk().b[32][0]++, '1') : (cov_m37usqyvk().b[32][1]++, '0')).length === 0) {\n      cov_m37usqyvk().b[31][0]++;\n      cov_m37usqyvk().s[85]++;\n      return {\n        winner: ctx.currentPlayer\n      };\n    } else {\n      cov_m37usqyvk().b[31][1]++;\n    }\n  }\n});","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/checkers/game.ts"],"names":["INVALID_MOVE","piece","id","player","playerID","toString","isKing","INITIAL_BOARD","MAN_DIRS","x","y","KING_DIRS","sumCoords","a","b","multiplyCoord","coord","multiplier","inBounds","toCoord","position","Math","floor","toIndex","areCoordsEqual","checkPosition","G","dirs","moves","jumped","dir","opponentBefore","i","final","moveTo","board","push","from","to","getValidMoves","jumping","movesTotal","jumpedTotal","forEach","index","data","filter","move","ctx","indexFrom","indexTo","crownhead","find","newG","map","square","postMoves","length","CheckersGame","name","setup","turn","moveLimit","order","first","next","playOrderPos","numPlayers","endIf","currentPlayer","winner"],"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","sourcesContent":["import { IGameCtx, INVALID_MOVE, IGameArgs } from 'boardgame.io/core';\ninterface ICheckerPiece {\n  id: number;\n  playerID: string;\n  isKing: boolean;\n}\n\ninterface ICoord {\n  x: number;\n  y: number;\n}\n\ninterface ICheckerPieceWithCoord {\n  data: ICheckerPiece;\n  coord: ICoord;\n}\n\nexport interface IMove {\n  from: ICoord;\n  to: ICoord;\n  jumped: ICoord;\n}\n\ntype Piece = ICheckerPiece | null;\nexport interface IG {\n  board: Piece[];\n  jumping: ICheckerPieceWithCoord;\n}\n\nconst piece = (id: number, player: number): ICheckerPiece => ({ id, playerID: player.toString(), isKing: false });\n\nexport const INITIAL_BOARD: Piece[] = [\n  null,\n  piece(0, 1),\n  null,\n  piece(1, 1),\n  null,\n  piece(2, 1),\n  null,\n  piece(3, 1),\n  piece(4, 1),\n  null,\n  piece(5, 1),\n  null,\n  piece(6, 1),\n  null,\n  piece(7, 1),\n  null,\n  null,\n  piece(8, 1),\n  null,\n  piece(9, 1),\n  null,\n  piece(10, 1),\n  null,\n  piece(11, 1),\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  piece(12, 0),\n  null,\n  piece(13, 0),\n  null,\n  piece(14, 0),\n  null,\n  piece(15, 0),\n  null,\n  null,\n  piece(16, 0),\n  null,\n  piece(17, 0),\n  null,\n  piece(18, 0),\n  null,\n  piece(19, 0),\n  piece(20, 0),\n  null,\n  piece(21, 0),\n  null,\n  piece(22, 0),\n  null,\n  piece(23, 0),\n  null,\n];\n\nconst MAN_DIRS = [\n  [\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n  ],\n  [\n    { x: -1, y: 1 },\n    { x: 1, y: 1 },\n  ],\n];\n\nconst KING_DIRS = [\n  { x: -1, y: 1 },\n  { x: 1, y: 1 },\n  { x: -1, y: -1 },\n  { x: 1, y: -1 },\n];\n\nexport function sumCoords(a: ICoord, b: ICoord) {\n  return { x: a.x + b.x, y: a.y + b.y };\n}\n\nexport function multiplyCoord(coord: ICoord, multiplier: number) {\n  return { x: coord.x * multiplier, y: coord.y * multiplier };\n}\n\nexport function inBounds(coord: ICoord) {\n  return coord.x >= 0 && coord.x < 8 && coord.y >= 0 && coord.y < 8;\n}\n\nexport function toCoord(position: number): ICoord {\n  const x = position % 8;\n  const y = Math.floor(position / 8);\n  return { x, y };\n}\n\nexport function toIndex(coord: ICoord) {\n  return coord.x + coord.y * 8;\n}\n\nexport function areCoordsEqual(a: ICoord, b: ICoord) {\n  return a.x === b.x && a.y === b.y;\n}\n\nexport function checkPosition(\n  G: IG,\n  playerID: string,\n  piece: ICheckerPiece,\n  coord: ICoord,\n): { moves: IMove[]; jumped: boolean } {\n  const dirs = piece.isKing ? KING_DIRS : MAN_DIRS[playerID as any];\n  let moves: IMove[] = [];\n  let jumped = false;\n\n  for (const dir of dirs) {\n    // Look into all valid directions\n    let opponentBefore = null;\n    for (let i = 1; piece.isKing ? true : i < 3; i++) {\n      const final = sumCoords(coord, multiplyCoord(dir, i));\n\n      // Break if move is out of bounds\n      if (!inBounds(final)) {\n        break;\n      }\n\n      const moveTo = G.board[toIndex(final)];\n\n      // Break if we encounter our piece\n      if (moveTo !== null && moveTo.playerID === playerID) {\n        break;\n      }\n\n      if (moveTo !== null && moveTo.playerID !== playerID) {\n        // If we already encountered opponent the directions is blocked\n        if (opponentBefore) {\n          break;\n        }\n        opponentBefore = final;\n      }\n\n      if (moveTo === null) {\n        moves.push({ from: coord, to: final, jumped: opponentBefore });\n        if (opponentBefore) {\n          jumped = true;\n          break;\n        }\n\n        // If there is nothing and the piece isn't king there is no need to continue\n        if (!piece.isKing) {\n          break;\n        }\n      }\n    }\n  }\n\n  return { moves, jumped };\n}\n\nexport function getValidMoves(G: IG, playerID: string, jumping?: ICheckerPieceWithCoord) {\n  let movesTotal: IMove[] = [];\n  let jumpedTotal = false;\n\n  if (typeof jumping === 'undefined') {\n    G.board.forEach((piece, index) => {\n      if (piece !== null && piece.playerID === playerID) {\n        const coord = toCoord(index);\n        const { moves, jumped } = checkPosition(G, playerID, piece, coord);\n        movesTotal.push(...moves);\n        jumpedTotal = jumpedTotal || jumped;\n      }\n    });\n  } else {\n    const { moves, jumped } = checkPosition(G, playerID, jumping.data, jumping.coord);\n    movesTotal = moves;\n    jumpedTotal = jumped;\n  }\n\n  if (jumpedTotal) {\n    return movesTotal.filter((move) => move.jumped);\n  } else {\n    return movesTotal;\n  }\n}\n\nexport function move(G: IG, ctx: IGameCtx, from: ICoord, to: ICoord): IG | string {\n  const indexFrom = toIndex(from);\n  const indexTo = toIndex(to);\n  const piece = G.board[indexFrom];\n  const crownhead = ctx.playerID === '0' ? 0 : 7;\n\n  if (piece === null || piece.playerID !== ctx.playerID || G.board[indexTo] !== null) {\n    return INVALID_MOVE;\n  }\n\n  const moves = G.jumping === null ? getValidMoves(G, ctx.playerID) : getValidMoves(G, ctx.playerID, G.jumping);\n  const move = moves.find((move) => areCoordsEqual(move.from, from) && areCoordsEqual(move.to, to));\n\n  if (typeof move === 'undefined') {\n    return INVALID_MOVE;\n  }\n\n  const jumped = move.jumped !== null ? toIndex(move.jumped) : -1;\n  const isKing = piece.isKing || to.y === crownhead;\n\n  const newG: IG = {\n    ...G,\n    board: G.board.map((square, i) => {\n      switch (i) {\n        case indexFrom:\n          return null;\n        case indexTo:\n          return {\n            ...piece,\n            isKing,\n          };\n        case jumped:\n          return null;\n        default:\n          return square;\n      }\n    }),\n    jumping: null,\n  };\n\n  if (move.jumped === null) {\n    return newG;\n  }\n\n  const jumping = {\n    data: {\n      ...piece,\n      isKing,\n    },\n    coord: to,\n  };\n  const postMoves = getValidMoves(newG, ctx.playerID, jumping);\n\n  if (postMoves.length > 0 && postMoves[0].jumped !== null) {\n    return {\n      ...newG,\n      jumping,\n    };\n  }\n\n  return newG;\n}\n\nexport const CheckersGame: IGameArgs = {\n  name: 'checkers',\n  setup: (): IG => ({ board: INITIAL_BOARD, jumping: null }),\n  moves: {\n    move,\n  },\n  turn: {\n    moveLimit: 1,\n    order: {\n      first: () => 0,\n      next: (G: IG, ctx) => (G.jumping === null ? (ctx.playOrderPos + 1) % ctx.numPlayers : ctx.playOrderPos),\n    },\n  },\n  endIf: (G: IG, ctx) => {\n    if (getValidMoves(G, ctx.currentPlayer === '0' ? '1' : '0').length === 0) {\n      return { winner: ctx.currentPlayer };\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}