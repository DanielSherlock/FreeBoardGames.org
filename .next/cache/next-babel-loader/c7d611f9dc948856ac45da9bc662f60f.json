{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_az6vzkqpz() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/ui/grid.js\";\n  var hash = \"4af15771e371a1953ba612db33a884c5fe076d62\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/ui/grid.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 14,\n          column: 20\n        },\n        end: {\n          line: 16,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 15,\n          column: 2\n        },\n        end: {\n          line: 15,\n          column: 115\n        }\n      },\n      \"2\": {\n        start: {\n          line: 18,\n          column: 0\n        },\n        end: {\n          line: 21,\n          column: 2\n        }\n      },\n      \"3\": {\n        start: {\n          line: 23,\n          column: 22\n        },\n        end: {\n          line: 29,\n          column: 1\n        }\n      },\n      \"4\": {\n        start: {\n          line: 24,\n          column: 2\n        },\n        end: {\n          line: 28,\n          column: 4\n        }\n      },\n      \"5\": {\n        start: {\n          line: 31,\n          column: 0\n        },\n        end: {\n          line: 34,\n          column: 2\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 14,\n            column: 20\n          },\n          end: {\n            line: 14,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 14,\n            column: 31\n          },\n          end: {\n            line: 16,\n            column: 1\n          }\n        },\n        line: 14\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 23,\n            column: 22\n          },\n          end: {\n            line: 23,\n            column: 23\n          }\n        },\n        loc: {\n          start: {\n            line: 23,\n            column: 33\n          },\n          end: {\n            line: 29,\n            column: 1\n          }\n        },\n        line: 23\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 15,\n            column: 9\n          },\n          end: {\n            line: 15,\n            column: 114\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 15,\n            column: 23\n          },\n          end: {\n            line: 15,\n            column: 67\n          }\n        }, {\n          start: {\n            line: 15,\n            column: 70\n          },\n          end: {\n            line: 15,\n            column: 114\n          }\n        }],\n        line: 15\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 24,\n            column: 9\n          },\n          end: {\n            line: 28,\n            column: 3\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 25,\n            column: 4\n          },\n          end: {\n            line: 25,\n            column: 52\n          }\n        }, {\n          start: {\n            line: 27,\n            column: 4\n          },\n          end: {\n            line: 27,\n            column: 52\n          }\n        }],\n        line: 24\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"4af15771e371a1953ba612db33a884c5fe076d62\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_az6vzkqpz = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_az6vzkqpz();\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid as Grid2D, Square as Square2D } from './2d/grid';\nimport { Grid as Grid3D, Square as Square3D } from './3d/grid';\ncov_az6vzkqpz().s[0]++;\nexport const Grid = props => {\n  cov_az6vzkqpz().f[0]++;\n  cov_az6vzkqpz().s[1]++;\n  return props.three ? (cov_az6vzkqpz().b[0][0]++, __jsx(Grid3D, props, props.children)) : (cov_az6vzkqpz().b[0][1]++, __jsx(Grid2D, props, props.children));\n};\ncov_az6vzkqpz().s[2]++;\nGrid.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any\n};\ncov_az6vzkqpz().s[3]++;\nexport const Square = props => {\n  cov_az6vzkqpz().f[1]++;\n  cov_az6vzkqpz().s[4]++;\n  return props.three ? (cov_az6vzkqpz().b[1][0]++, __jsx(Square3D, props, props.children)) : (cov_az6vzkqpz().b[1][1]++, __jsx(Square2D, props, props.children));\n};\ncov_az6vzkqpz().s[5]++;\nSquare.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any\n};","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/ui/grid.js"],"names":["React","PropTypes","Grid","Grid2D","Square","Square2D","Grid3D","Square3D","props","three","children","propTypes","bool","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAQA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAI,IAAIC,MAAjB,EAAyBC,MAAM,IAAIC,QAAnC,QAAmD,WAAnD;AACA,SAASH,IAAI,IAAII,MAAjB,EAAyBF,MAAM,IAAIG,QAAnC,QAAmD,WAAnD;;AAEA,OAAO,MAAML,IAAI,GAAIM,KAAD,IAAW;AAAA;AAAA;AAC7B,SAAOA,KAAK,CAACC,KAAN,+BAAc,MAAC,MAAD,EAAYD,KAAZ,EAAoBA,KAAK,CAACE,QAA1B,CAAd,gCAA6D,MAAC,MAAD,EAAYF,KAAZ,EAAoBA,KAAK,CAACE,QAA1B,CAA7D,CAAP;AACD,CAFM;;AAIPR,IAAI,CAACS,SAAL,GAAiB;AACfF,EAAAA,KAAK,EAAER,SAAS,CAACW,IADF;AAEfF,EAAAA,QAAQ,EAAET,SAAS,CAACY;AAFL,CAAjB;;AAKA,OAAO,MAAMT,MAAM,GAAII,KAAD,IAAW;AAAA;AAAA;AAC/B,SAAOA,KAAK,CAACC,KAAN,+BACL,MAAC,QAAD,EAAcD,KAAd,EAAsBA,KAAK,CAACE,QAA5B,CADK,gCAGL,MAAC,QAAD,EAAcF,KAAd,EAAsBA,KAAK,CAACE,QAA5B,CAHK,CAAP;AAKD,CANM;;AAQPN,MAAM,CAACO,SAAP,GAAmB;AACjBF,EAAAA,KAAK,EAAER,SAAS,CAACW,IADA;AAEjBF,EAAAA,QAAQ,EAAET,SAAS,CAACY;AAFH,CAAnB","sourcesContent":["/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid as Grid2D, Square as Square2D } from './2d/grid';\nimport { Grid as Grid3D, Square as Square3D } from './3d/grid';\n\nexport const Grid = (props) => {\n  return props.three ? <Grid3D {...props}>{props.children}</Grid3D> : <Grid2D {...props}>{props.children}</Grid2D>;\n};\n\nGrid.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any,\n};\n\nexport const Square = (props) => {\n  return props.three ? (\n    <Square3D {...props}>{props.children}</Square3D>\n  ) : (\n    <Square2D {...props}>{props.children}</Square2D>\n  );\n};\n\nSquare.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}