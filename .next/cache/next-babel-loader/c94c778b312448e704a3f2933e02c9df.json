{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_1pkbevj0aw() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx\";\n  var hash = \"11347a8e9dea63baa5e137d275fb0848fbc013c6\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 13,\n          column: 16\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"1\": {\n        start: {\n          line: 13,\n          column: 31\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"2\": {\n        start: {\n          line: 13,\n          column: 37\n        },\n        end: {\n          line: 13,\n          column: 61\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 4\n        },\n        end: {\n          line: 33,\n          column: 6\n        }\n      },\n      \"4\": {\n        start: {\n          line: 29,\n          column: 12\n        },\n        end: {\n          line: 29,\n          column: 91\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 16\n          },\n          end: {\n            line: 13,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 31\n          },\n          end: {\n            line: 13,\n            column: 61\n          }\n        },\n        line: 13\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 31\n          },\n          end: {\n            line: 13,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 37\n          },\n          end: {\n            line: 13,\n            column: 61\n          }\n        },\n        line: 13\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 15,\n            column: 2\n          },\n          end: {\n            line: 15,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 15,\n            column: 11\n          },\n          end: {\n            line: 34,\n            column: 3\n          }\n        },\n        line: 15\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 28,\n            column: 70\n          },\n          end: {\n            line: 28,\n            column: 71\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 12\n          },\n          end: {\n            line: 29,\n            column: 91\n          }\n        },\n        line: 29\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"11347a8e9dea63baa5e137d275fb0848fbc013c6\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1pkbevj0aw = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1pkbevj0aw();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { CardComponent } from './CardComponent';\nimport Typography from '@material-ui/core/Typography';\nexport class PlayerHand extends (React.Component) {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_selectCard\", (cov_1pkbevj0aw().s[0]++, i => {\n      cov_1pkbevj0aw().f[0]++;\n      cov_1pkbevj0aw().s[1]++;\n      return () => {\n        cov_1pkbevj0aw().f[1]++;\n        cov_1pkbevj0aw().s[2]++;\n        return this.props.selectCard(i);\n      };\n    }));\n  }\n\n  render() {\n    cov_1pkbevj0aw().f[2]++;\n    cov_1pkbevj0aw().s[3]++;\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      style: {\n        clear: 'both',\n        marginTop: '8px'\n      }\n    }, __jsx(Typography, {\n      style: {\n        color: 'white'\n      },\n      variant: \"body2\"\n    }, \"Your hand\")), __jsx(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, this.props.G.players[this.props.playerID].cards.map((card, index) => {\n      cov_1pkbevj0aw().f[3]++;\n      cov_1pkbevj0aw().s[4]++;\n      return __jsx(CardComponent, {\n        key: card.number,\n        click: this._selectCard(index),\n        card: card\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/takesix/PlayerHand.tsx"],"names":["React","CardComponent","Typography","PlayerHand","Component","i","props","selectCard","render","clear","marginTop","color","width","G","players","playerID","cards","map","card","index","number","_selectCard"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAQA,OAAO,MAAMC,UAAN,UAAyBH,KAAK,CAACI,SAA/B,EAA+D;AAAA;AAAA;;AAAA,mEACrDC,CAAD,IAAe;AAAA;AAAA;AAAA,mBAAM;AAAA;AAAA;AAAA,oBAAKC,KAAL,CAAWC,UAAX,CAAsBF,CAAtB;AAAwB,OAA9B;AAA8B,KADS;AAAA;;AAGpEG,EAAAA,MAAM,GAAG;AAAA;AAAA;AACP,WACE,mBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B;AAAZ,OACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAuC,MAAA,OAAO,EAAC;AAA/C,mBADF,CADF,EAME;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF;AADT,OAKG,KAAKN,KAAL,CAAWO,CAAX,CAAaC,OAAb,CAAqB,KAAKR,KAAL,CAAWS,QAAhC,EAAiDC,KAAjD,CAAuDC,GAAvD,CAA2D,CAACC,IAAD,EAAOC,KAAP,KAC1D;AAAA;AAAA;AAAA,mBAAC,aAAD;AAAe,QAAA,GAAG,EAAED,IAAI,CAACE,MAAzB;AAAiC,QAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBF,KAAjB,CAAxC;AAAiE,QAAA,IAAI,EAAED;AAAvE;AAA+E,KADhF,CALH,CANF,CADF;AAkBD;;AAtBmE","sourcesContent":["import * as React from 'react';\nimport { IG } from './game';\nimport { CardComponent } from './CardComponent';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IPlayerHandProps {\n  G: IG;\n  playerID: string;\n  selectCard: (index: number) => void;\n}\n\nexport class PlayerHand extends React.Component<IPlayerHandProps, {}> {\n  _selectCard = (i: number) => () => this.props.selectCard(i);\n\n  render() {\n    return (\n      <div>\n        <div style={{ clear: 'both', marginTop: '8px' }}>\n          <Typography style={{ color: 'white' }} variant=\"body2\">\n            Your hand\n          </Typography>\n        </div>\n        <div\n          style={{\n            width: '100%',\n          }}\n        >\n          {this.props.G.players[this.props.playerID as any].cards.map((card, index: number) => (\n            <CardComponent key={card.number} click={this._selectCard(index)} card={card} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}