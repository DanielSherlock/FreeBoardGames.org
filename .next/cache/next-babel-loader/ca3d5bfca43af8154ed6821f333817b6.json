{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_ej5gxgb16() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameBoardWrapper.tsx\";\n  var hash = \"ac78f2757cec4aa1aaed8e0d176433529be408d1\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameBoardWrapper.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 23,\n          column: 25\n        },\n        end: {\n          line: 26,\n          column: 7\n        }\n      },\n      \"1\": {\n        start: {\n          line: 27,\n          column: 20\n        },\n        end: {\n          line: 27,\n          column: 58\n        }\n      },\n      \"2\": {\n        start: {\n          line: 29,\n          column: 6\n        },\n        end: {\n          line: 31,\n          column: 7\n        }\n      },\n      \"3\": {\n        start: {\n          line: 30,\n          column: 8\n        },\n        end: {\n          line: 30,\n          column: 42\n        }\n      },\n      \"4\": {\n        start: {\n          line: 32,\n          column: 6\n        },\n        end: {\n          line: 34,\n          column: 7\n        }\n      },\n      \"5\": {\n        start: {\n          line: 33,\n          column: 8\n        },\n        end: {\n          line: 33,\n          column: 21\n        }\n      },\n      \"6\": {\n        start: {\n          line: 35,\n          column: 6\n        },\n        end: {\n          line: 40,\n          column: 8\n        }\n      },\n      \"7\": {\n        start: {\n          line: 44,\n          column: 6\n        },\n        end: {\n          line: 49,\n          column: 8\n        }\n      },\n      \"8\": {\n        start: {\n          line: 52,\n          column: 2\n        },\n        end: {\n          line: 52,\n          column: 15\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"gameBoardWrapper\",\n        decl: {\n          start: {\n            line: 20,\n            column: 16\n          },\n          end: {\n            line: 20,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 58\n          },\n          end: {\n            line: 53,\n            column: 1\n          }\n        },\n        line: 20\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 22,\n            column: 4\n          },\n          end: {\n            line: 22,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 22,\n            column: 13\n          },\n          end: {\n            line: 41,\n            column: 5\n          }\n        },\n        line: 22\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 43,\n            column: 4\n          },\n          end: {\n            line: 43,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 43,\n            column: 25\n          },\n          end: {\n            line: 50,\n            column: 5\n          }\n        },\n        line: 43\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 31,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 31,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 29,\n            column: 6\n          },\n          end: {\n            line: 31,\n            column: 7\n          }\n        }],\n        line: 29\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 32,\n            column: 6\n          },\n          end: {\n            line: 34,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 32,\n            column: 6\n          },\n          end: {\n            line: 34,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 32,\n            column: 6\n          },\n          end: {\n            line: 34,\n            column: 7\n          }\n        }],\n        line: 32\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"ac78f2757cec4aa1aaed8e0d176433529be408d1\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_ej5gxgb16 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_ej5gxgb16();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport AlertLayer from './AlertLayer';\nimport Typography from '@material-ui/core/Typography';\nexport function gameBoardWrapper(args) {\n  cov_ej5gxgb16().f[0]++;\n\n  var Board = /*#__PURE__*/function (_React$Component) {\n    _inherits(Board, _React$Component);\n\n    var _super = _createSuper(Board);\n\n    function Board() {\n      _classCallCheck(this, Board);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Board, [{\n      key: \"render\",\n      value: function render() {\n        cov_ej5gxgb16().f[1]++;\n        var props = (cov_ej5gxgb16().s[0]++, _objectSpread({}, this.props, {\n          gameArgs: args.gameArgs\n        }));\n        var child = (cov_ej5gxgb16().s[1]++, React.createElement(args.board, props));\n        var alert;\n        cov_ej5gxgb16().s[2]++;\n\n        if (!this.props.isConnected) {\n          cov_ej5gxgb16().b[0][0]++;\n          cov_ej5gxgb16().s[3]++;\n          alert = this._getConnectionLost();\n        } else {\n          cov_ej5gxgb16().b[0][1]++;\n        }\n\n        cov_ej5gxgb16().s[4]++;\n\n        if (!alert) {\n          cov_ej5gxgb16().b[1][0]++;\n          cov_ej5gxgb16().s[5]++;\n          return child;\n        } else {\n          cov_ej5gxgb16().b[1][1]++;\n        }\n\n        cov_ej5gxgb16().s[6]++;\n        return __jsx(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, child, alert);\n      }\n    }, {\n      key: \"_getConnectionLost\",\n      value: function _getConnectionLost() {\n        cov_ej5gxgb16().f[2]++;\n        cov_ej5gxgb16().s[7]++;\n        return __jsx(AlertLayer, null, __jsx(Typography, {\n          variant: \"h4\"\n        }, \"Connection lost\"), __jsx(Typography, {\n          variant: \"body1\"\n        }, \"Trying to connect...\"));\n      }\n    }]);\n\n    return Board;\n  }((React.Component));\n\n  cov_ej5gxgb16().s[8]++;\n  return Board;\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameBoardWrapper.tsx"],"names":["React","AlertLayer","Typography","gameBoardWrapper","args","Board","props","gameArgs","child","createElement","board","alert","isConnected","_getConnectionLost","width","height","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAeA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAmD;AAAA;;AAAA,MAClDC,KADkD;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAE7C;AAAA;AACP,YAAMC,KAAU,8CACX,KAAKA,KADM;AAEdC,UAAAA,QAAQ,EAAEH,IAAI,CAACG;AAFD,WAAhB;AAIA,YAAMC,KAAK,4BAAGR,KAAK,CAACS,aAAN,CAAoBL,IAAI,CAACM,KAAzB,EAAgCJ,KAAhC,CAAH,CAAX;AACA,YAAIK,KAAJ;AANO;;AAOP,YAAI,CAAC,KAAKL,KAAL,CAAWM,WAAhB,EAA6B;AAAA;AAAA;AAC3BD,UAAAA,KAAK,GAAG,KAAKE,kBAAL,EAAR;AACD,SAFD;AAAA;AAAA;;AAPO;;AAUP,YAAI,CAACF,KAAL,EAAY;AAAA;AAAA;AACV,iBAAOH,KAAP;AACD,SAFD;AAAA;AAAA;;AAVO;AAaP,eACE;AAAK,UAAA,KAAK,EAAE;AAAEM,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE;AAAzB;AAAZ,WACGP,KADH,EAEGG,KAFH,CADF;AAMD;AArBqD;AAAA;AAAA,2CAuBjC;AAAA;AAAA;AACnB,eACE,MAAC,UAAD,QACE,MAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,6BADF,EAEE,MAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,kCAFF,CADF;AAMD;AA9BqD;;AAAA;AAAA,KACpCX,KAAK,CAACgB,SAD8B;;AAAA;AAgCxD,SAAOX,KAAP;AACD","sourcesContent":["import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport AlertLayer from './AlertLayer';\nimport { IPlayerInRoom } from '../Lobby/LobbyService';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface IGameArgs {\n  gameCode: string;\n  mode: GameMode;\n  matchCode?: string;\n  playerID?: string;\n  players?: IPlayerInRoom[];\n}\n\nexport interface IBoardWrapperArgs {\n  gameArgs: IGameArgs;\n  board: any;\n}\n\nexport function gameBoardWrapper(args: IBoardWrapperArgs) {\n  class Board extends React.Component<any, {}> {\n    render() {\n      const props: any = {\n        ...this.props,\n        gameArgs: args.gameArgs,\n      };\n      const child = React.createElement(args.board, props);\n      let alert;\n      if (!this.props.isConnected) {\n        alert = this._getConnectionLost();\n      }\n      if (!alert) {\n        return child;\n      }\n      return (\n        <div style={{ width: '100%', height: '100%' }}>\n          {child}\n          {alert}\n        </div>\n      );\n    }\n\n    _getConnectionLost() {\n      return (\n        <AlertLayer>\n          <Typography variant=\"h4\">Connection lost</Typography>\n          <Typography variant=\"body1\">Trying to connect...</Typography>\n        </AlertLayer>\n      );\n    }\n  }\n  return Board;\n}\n"]},"metadata":{},"sourceType":"module"}