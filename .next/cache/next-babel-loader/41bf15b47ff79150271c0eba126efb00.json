{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_2ju62awrz2() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameInstructionsVideo.tsx\";\n  var hash = \"f5bfe34d15e275fc418d8f16bf9c4d5c8b53d61b\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameInstructionsVideo.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 11,\n          column: 25\n        },\n        end: {\n          line: 11,\n          column: 56\n        }\n      },\n      \"1\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 14,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 13,\n          column: 6\n        },\n        end: {\n          line: 13,\n          column: 18\n        }\n      },\n      \"3\": {\n        start: {\n          line: 15,\n          column: 4\n        },\n        end: {\n          line: 39,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 2\n          },\n          end: {\n            line: 10,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 11\n          },\n          end: {\n            line: 40,\n            column: 3\n          }\n        },\n        line: 10\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 12,\n            column: 4\n          },\n          end: {\n            line: 14,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 4\n          },\n          end: {\n            line: 14,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 12,\n            column: 4\n          },\n          end: {\n            line: 14,\n            column: 5\n          }\n        }],\n        line: 12\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 12,\n            column: 8\n          },\n          end: {\n            line: 12,\n            column: 46\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 8\n          },\n          end: {\n            line: 12,\n            column: 21\n          }\n        }, {\n          start: {\n            line: 12,\n            column: 25\n          },\n          end: {\n            line: 12,\n            column: 46\n          }\n        }],\n        line: 12\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"f5bfe34d15e275fc418d8f16bf9c4d5c8b53d61b\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2ju62awrz2 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2ju62awrz2();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nexport var GameInstructionsVideo = /*#__PURE__*/function (_React$Component) {\n  _inherits(GameInstructionsVideo, _React$Component);\n\n  var _super = _createSuper(GameInstructionsVideo);\n\n  function GameInstructionsVideo() {\n    _classCallCheck(this, GameInstructionsVideo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GameInstructionsVideo, [{\n    key: \"render\",\n    value: function render() {\n      cov_2ju62awrz2().f[0]++;\n      var instructions = (cov_2ju62awrz2().s[0]++, this.props.gameDef.instructions);\n      cov_2ju62awrz2().s[1]++;\n\n      if ((cov_2ju62awrz2().b[1][0]++, !instructions) || (cov_2ju62awrz2().b[1][1]++, !instructions.videoId)) {\n        cov_2ju62awrz2().b[0][0]++;\n        cov_2ju62awrz2().s[2]++;\n        return null;\n      } else {\n        cov_2ju62awrz2().b[0][1]++;\n      }\n\n      cov_2ju62awrz2().s[3]++;\n      return __jsx(Card, {\n        style: {\n          marginBottom: 16,\n          maxWidth: '1200px'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          position: 'relative',\n          maxWidth: '1200px',\n          maxHeight: '360px',\n          paddingBottom: '56.25%',\n          paddingTop: 30,\n          height: 0,\n          overflow: 'hidden'\n        }\n      }, __jsx(\"iframe\", {\n        \"data-testid\": 'gameinstructionsvideo',\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          left: 0\n        },\n        width: \"500\",\n        height: \"360\",\n        src: \"https://www.youtube.com/embed/\".concat(instructions.videoId),\n        allowFullScreen: true,\n        frameBorder: \"0\"\n      })));\n    }\n  }]);\n\n  return GameInstructionsVideo;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameInstructionsVideo.tsx"],"names":["React","Card","GameInstructionsVideo","instructions","props","gameDef","videoId","marginBottom","maxWidth","position","maxHeight","paddingBottom","paddingTop","height","overflow","width","top","left","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAOA,WAAaC,qBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA;AACP,UAAMC,YAAY,6BAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,YAAtB,CAAlB;AADO;;AAEP,UAAI,8BAACA,YAAD,kCAAiB,CAACA,YAAY,CAACG,OAA/B,CAAJ,EAA4C;AAAA;AAAA;AAC1C,eAAO,IAAP;AACD,OAFD;AAAA;AAAA;;AAFO;AAKP,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE,EAAhB;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B;AAAb,SACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELD,UAAAA,QAAQ,EAAE,QAFL;AAGLE,UAAAA,SAAS,EAAE,OAHN;AAILC,UAAAA,aAAa,EAAE,QAJV;AAKLC,UAAAA,UAAU,EAAE,EALP;AAMLC,UAAAA,MAAM,EAAE,CANH;AAOLC,UAAAA,QAAQ,EAAE;AAPL;AADT,SAWE;AACE,uBAAa,uBADf;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBF,UAAAA,MAAM,EAAE,MAAzB;AAAiCJ,UAAAA,QAAQ,EAAE,UAA3C;AAAuDO,UAAAA,GAAG,EAAE,CAA5D;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAFT;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,MAAM,EAAC,KAJT;AAKE,QAAA,GAAG,0CAAmCd,YAAY,CAACG,OAAhD,CALL;AAME,QAAA,eAAe,MANjB;AAOE,QAAA,WAAW,EAAC;AAPd,QAXF,CADF,CADF;AAyBD;AA/BH;;AAAA;AAAA,GAA2CN,KAAK,CAACkB,SAAjD","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { IGameDef } from 'games';\n\ninterface IGameInstructionsProps {\n  gameDef: IGameDef;\n}\n\nexport class GameInstructionsVideo extends React.Component<IGameInstructionsProps, {}> {\n  render() {\n    const instructions = this.props.gameDef.instructions;\n    if (!instructions || !instructions.videoId) {\n      return null;\n    }\n    return (\n      <Card style={{ marginBottom: 16, maxWidth: '1200px' }}>\n        <div\n          style={{\n            position: 'relative',\n            maxWidth: '1200px',\n            maxHeight: '360px',\n            paddingBottom: '56.25%',\n            paddingTop: 30,\n            height: 0,\n            overflow: 'hidden',\n          }}\n        >\n          <iframe\n            data-testid={'gameinstructionsvideo'}\n            style={{ width: '100%', height: '100%', position: 'absolute', top: 0, left: 0 }}\n            width=\"500\"\n            height=\"360\"\n            src={`https://www.youtube.com/embed/${instructions.videoId}`}\n            allowFullScreen\n            frameBorder=\"0\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}