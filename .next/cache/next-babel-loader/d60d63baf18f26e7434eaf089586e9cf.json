{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction cov_2rmfy6gvhj() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/game.ts\";\n  var hash = \"106f2512b460b9a2154489996c028fb2dd27e1ae\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/seabattle/game.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 32,\n          column: 36\n        },\n        end: {\n          line: 32,\n          column: 48\n        }\n      },\n      \"1\": {\n        start: {\n          line: 33,\n          column: 54\n        },\n        end: {\n          line: 38,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 40,\n          column: 26\n        },\n        end: {\n          line: 47,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 41,\n          column: 17\n        },\n        end: {\n          line: 41,\n          column: 39\n        }\n      },\n      \"4\": {\n        start: {\n          line: 42,\n          column: 25\n        },\n        end: {\n          line: 42,\n          column: 86\n        }\n      },\n      \"5\": {\n        start: {\n          line: 42,\n          column: 50\n        },\n        end: {\n          line: 42,\n          column: 85\n        }\n      },\n      \"6\": {\n        start: {\n          line: 43,\n          column: 2\n        },\n        end: {\n          line: 46,\n          column: 4\n        }\n      },\n      \"7\": {\n        start: {\n          line: 50,\n          column: 17\n        },\n        end: {\n          line: 50,\n          column: 43\n        }\n      },\n      \"8\": {\n        start: {\n          line: 51,\n          column: 21\n        },\n        end: {\n          line: 51,\n          column: 49\n        }\n      },\n      \"9\": {\n        start: {\n          line: 52,\n          column: 2\n        },\n        end: {\n          line: 54,\n          column: 3\n        }\n      },\n      \"10\": {\n        start: {\n          line: 53,\n          column: 4\n        },\n        end: {\n          line: 53,\n          column: 38\n        }\n      },\n      \"11\": {\n        start: {\n          line: 56,\n          column: 2\n        },\n        end: {\n          line: 56,\n          column: 49\n        }\n      },\n      \"12\": {\n        start: {\n          line: 60,\n          column: 17\n        },\n        end: {\n          line: 60,\n          column: 43\n        }\n      },\n      \"13\": {\n        start: {\n          line: 61,\n          column: 20\n        },\n        end: {\n          line: 61,\n          column: 63\n        }\n      },\n      \"14\": {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 64,\n          column: 112\n        }\n      },\n      \"15\": {\n        start: {\n          line: 64,\n          column: 31\n        },\n        end: {\n          line: 64,\n          column: 98\n        }\n      },\n      \"16\": {\n        start: {\n          line: 65,\n          column: 2\n        },\n        end: {\n          line: 67,\n          column: 3\n        }\n      },\n      \"17\": {\n        start: {\n          line: 66,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 20\n        }\n      },\n      \"18\": {\n        start: {\n          line: 68,\n          column: 2\n        },\n        end: {\n          line: 71,\n          column: 3\n        }\n      },\n      \"19\": {\n        start: {\n          line: 70,\n          column: 4\n        },\n        end: {\n          line: 70,\n          column: 83\n        }\n      },\n      \"20\": {\n        start: {\n          line: 72,\n          column: 15\n        },\n        end: {\n          line: 72,\n          column: 33\n        }\n      },\n      \"21\": {\n        start: {\n          line: 74,\n          column: 19\n        },\n        end: {\n          line: 74,\n          column: 31\n        }\n      },\n      \"22\": {\n        start: {\n          line: 75,\n          column: 2\n        },\n        end: {\n          line: 77,\n          column: 3\n        }\n      },\n      \"23\": {\n        start: {\n          line: 76,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 65\n        }\n      },\n      \"24\": {\n        start: {\n          line: 78,\n          column: 2\n        },\n        end: {\n          line: 82,\n          column: 4\n        }\n      },\n      \"25\": {\n        start: {\n          line: 85,\n          column: 40\n        },\n        end: {\n          line: 125,\n          column: 1\n        }\n      },\n      \"26\": {\n        start: {\n          line: 88,\n          column: 33\n        },\n        end: {\n          line: 91,\n          column: 3\n        }\n      },\n      \"27\": {\n        start: {\n          line: 101,\n          column: 10\n        },\n        end: {\n          line: 103,\n          column: 11\n        }\n      },\n      \"28\": {\n        start: {\n          line: 102,\n          column: 12\n        },\n        end: {\n          line: 102,\n          column: 34\n        }\n      },\n      \"29\": {\n        start: {\n          line: 112,\n          column: 4\n        },\n        end: {\n          line: 119,\n          column: 5\n        }\n      },\n      \"30\": {\n        start: {\n          line: 113,\n          column: 6\n        },\n        end: {\n          line: 115,\n          column: 7\n        }\n      },\n      \"31\": {\n        start: {\n          line: 114,\n          column: 8\n        },\n        end: {\n          line: 114,\n          column: 31\n        }\n      },\n      \"32\": {\n        start: {\n          line: 116,\n          column: 6\n        },\n        end: {\n          line: 118,\n          column: 7\n        }\n      },\n      \"33\": {\n        start: {\n          line: 117,\n          column: 8\n        },\n        end: {\n          line: 117,\n          column: 31\n        }\n      },\n      \"34\": {\n        start: {\n          line: 131,\n          column: 2\n        },\n        end: {\n          line: 140,\n          column: 49\n        }\n      },\n      \"35\": {\n        start: {\n          line: 132,\n          column: 4\n        },\n        end: {\n          line: 132,\n          column: 16\n        }\n      },\n      \"36\": {\n        start: {\n          line: 133,\n          column: 4\n        },\n        end: {\n          line: 139,\n          column: 5\n        }\n      },\n      \"37\": {\n        start: {\n          line: 134,\n          column: 28\n        },\n        end: {\n          line: 134,\n          column: 55\n        }\n      },\n      \"38\": {\n        start: {\n          line: 135,\n          column: 6\n        },\n        end: {\n          line: 138,\n          column: 7\n        }\n      },\n      \"39\": {\n        start: {\n          line: 135,\n          column: 19\n        },\n        end: {\n          line: 135,\n          column: 20\n        }\n      },\n      \"40\": {\n        start: {\n          line: 136,\n          column: 8\n        },\n        end: {\n          line: 136,\n          column: 36\n        }\n      },\n      \"41\": {\n        start: {\n          line: 137,\n          column: 8\n        },\n        end: {\n          line: 137,\n          column: 63\n        }\n      },\n      \"42\": {\n        start: {\n          line: 141,\n          column: 2\n        },\n        end: {\n          line: 141,\n          column: 16\n        }\n      },\n      \"43\": {\n        start: {\n          line: 146,\n          column: 22\n        },\n        end: {\n          line: 152,\n          column: 3\n        }\n      },\n      \"44\": {\n        start: {\n          line: 153,\n          column: 2\n        },\n        end: {\n          line: 155,\n          column: 3\n        }\n      },\n      \"45\": {\n        start: {\n          line: 154,\n          column: 4\n        },\n        end: {\n          line: 154,\n          column: 60\n        }\n      },\n      \"46\": {\n        start: {\n          line: 156,\n          column: 2\n        },\n        end: {\n          line: 160,\n          column: 3\n        }\n      },\n      \"47\": {\n        start: {\n          line: 157,\n          column: 4\n        },\n        end: {\n          line: 159,\n          column: 5\n        }\n      },\n      \"48\": {\n        start: {\n          line: 158,\n          column: 6\n        },\n        end: {\n          line: 158,\n          column: 24\n        }\n      },\n      \"49\": {\n        start: {\n          line: 161,\n          column: 2\n        },\n        end: {\n          line: 161,\n          column: 25\n        }\n      },\n      \"50\": {\n        start: {\n          line: 166,\n          column: 2\n        },\n        end: {\n          line: 170,\n          column: 3\n        }\n      },\n      \"51\": {\n        start: {\n          line: 167,\n          column: 4\n        },\n        end: {\n          line: 169,\n          column: 5\n        }\n      },\n      \"52\": {\n        start: {\n          line: 168,\n          column: 6\n        },\n        end: {\n          line: 168,\n          column: 19\n        }\n      },\n      \"53\": {\n        start: {\n          line: 171,\n          column: 2\n        },\n        end: {\n          line: 171,\n          column: 14\n        }\n      },\n      \"54\": {\n        start: {\n          line: 175,\n          column: 22\n        },\n        end: {\n          line: 175,\n          column: 66\n        }\n      },\n      \"55\": {\n        start: {\n          line: 176,\n          column: 20\n        },\n        end: {\n          line: 176,\n          column: 53\n        }\n      },\n      \"56\": {\n        start: {\n          line: 177,\n          column: 22\n        },\n        end: {\n          line: 177,\n          column: 60\n        }\n      },\n      \"57\": {\n        start: {\n          line: 178,\n          column: 2\n        },\n        end: {\n          line: 186,\n          column: 3\n        }\n      },\n      \"58\": {\n        start: {\n          line: 178,\n          column: 15\n        },\n        end: {\n          line: 178,\n          column: 16\n        }\n      },\n      \"59\": {\n        start: {\n          line: 179,\n          column: 4\n        },\n        end: {\n          line: 185,\n          column: 5\n        }\n      },\n      \"60\": {\n        start: {\n          line: 181,\n          column: 6\n        },\n        end: {\n          line: 181,\n          column: 50\n        }\n      },\n      \"61\": {\n        start: {\n          line: 184,\n          column: 6\n        },\n        end: {\n          line: 184,\n          column: 50\n        }\n      },\n      \"62\": {\n        start: {\n          line: 187,\n          column: 2\n        },\n        end: {\n          line: 187,\n          column: 14\n        }\n      },\n      \"63\": {\n        start: {\n          line: 191,\n          column: 2\n        },\n        end: {\n          line: 191,\n          column: 43\n        }\n      },\n      \"64\": {\n        start: {\n          line: 195,\n          column: 2\n        },\n        end: {\n          line: 197,\n          column: 4\n        }\n      },\n      \"65\": {\n        start: {\n          line: 196,\n          column: 14\n        },\n        end: {\n          line: 196,\n          column: 108\n        }\n      },\n      \"66\": {\n        start: {\n          line: 196,\n          column: 42\n        },\n        end: {\n          line: 196,\n          column: 74\n        }\n      },\n      \"67\": {\n        start: {\n          line: 201,\n          column: 2\n        },\n        end: {\n          line: 201,\n          column: 59\n        }\n      },\n      \"68\": {\n        start: {\n          line: 201,\n          column: 30\n        },\n        end: {\n          line: 201,\n          column: 50\n        }\n      },\n      \"69\": {\n        start: {\n          line: 210,\n          column: 22\n        },\n        end: {\n          line: 210,\n          column: 67\n        }\n      },\n      \"70\": {\n        start: {\n          line: 210,\n          column: 49\n        },\n        end: {\n          line: 210,\n          column: 66\n        }\n      },\n      \"71\": {\n        start: {\n          line: 211,\n          column: 43\n        },\n        end: {\n          line: 211,\n          column: 67\n        }\n      },\n      \"72\": {\n        start: {\n          line: 212,\n          column: 2\n        },\n        end: {\n          line: 217,\n          column: 3\n        }\n      },\n      \"73\": {\n        start: {\n          line: 213,\n          column: 4\n        },\n        end: {\n          line: 215,\n          column: 5\n        }\n      },\n      \"74\": {\n        start: {\n          line: 214,\n          column: 6\n        },\n        end: {\n          line: 214,\n          column: 71\n        }\n      },\n      \"75\": {\n        start: {\n          line: 216,\n          column: 4\n        },\n        end: {\n          line: 216,\n          column: 20\n        }\n      },\n      \"76\": {\n        start: {\n          line: 218,\n          column: 2\n        },\n        end: {\n          line: 222,\n          column: 3\n        }\n      },\n      \"77\": {\n        start: {\n          line: 219,\n          column: 4\n        },\n        end: {\n          line: 221,\n          column: 5\n        }\n      },\n      \"78\": {\n        start: {\n          line: 220,\n          column: 6\n        },\n        end: {\n          line: 220,\n          column: 61\n        }\n      },\n      \"79\": {\n        start: {\n          line: 223,\n          column: 2\n        },\n        end: {\n          line: 223,\n          column: 25\n        }\n      },\n      \"80\": {\n        start: {\n          line: 227,\n          column: 17\n        },\n        end: {\n          line: 227,\n          column: 56\n        }\n      },\n      \"81\": {\n        start: {\n          line: 227,\n          column: 44\n        },\n        end: {\n          line: 227,\n          column: 55\n        }\n      },\n      \"82\": {\n        start: {\n          line: 228,\n          column: 2\n        },\n        end: {\n          line: 232,\n          column: 3\n        }\n      },\n      \"83\": {\n        start: {\n          line: 229,\n          column: 4\n        },\n        end: {\n          line: 231,\n          column: 5\n        }\n      },\n      \"84\": {\n        start: {\n          line: 230,\n          column: 6\n        },\n        end: {\n          line: 230,\n          column: 92\n        }\n      },\n      \"85\": {\n        start: {\n          line: 233,\n          column: 2\n        },\n        end: {\n          line: 233,\n          column: 25\n        }\n      },\n      \"86\": {\n        start: {\n          line: 237,\n          column: 2\n        },\n        end: {\n          line: 259,\n          column: 3\n        }\n      },\n      \"87\": {\n        start: {\n          line: 238,\n          column: 4\n        },\n        end: {\n          line: 240,\n          column: 5\n        }\n      },\n      \"88\": {\n        start: {\n          line: 239,\n          column: 6\n        },\n        end: {\n          line: 239,\n          column: 15\n        }\n      },\n      \"89\": {\n        start: {\n          line: 241,\n          column: 27\n        },\n        end: {\n          line: 241,\n          column: 40\n        }\n      },\n      \"90\": {\n        start: {\n          line: 242,\n          column: 26\n        },\n        end: {\n          line: 242,\n          column: 69\n        }\n      },\n      \"91\": {\n        start: {\n          line: 243,\n          column: 4\n        },\n        end: {\n          line: 250,\n          column: 5\n        }\n      },\n      \"92\": {\n        start: {\n          line: 249,\n          column: 6\n        },\n        end: {\n          line: 249,\n          column: 67\n        }\n      },\n      \"93\": {\n        start: {\n          line: 251,\n          column: 4\n        },\n        end: {\n          line: 258,\n          column: 5\n        }\n      },\n      \"94\": {\n        start: {\n          line: 251,\n          column: 17\n        },\n        end: {\n          line: 251,\n          column: 18\n        }\n      },\n      \"95\": {\n        start: {\n          line: 252,\n          column: 19\n        },\n        end: {\n          line: 252,\n          column: 32\n        }\n      },\n      \"96\": {\n        start: {\n          line: 253,\n          column: 24\n        },\n        end: {\n          line: 253,\n          column: 54\n        }\n      },\n      \"97\": {\n        start: {\n          line: 254,\n          column: 6\n        },\n        end: {\n          line: 256,\n          column: 7\n        }\n      },\n      \"98\": {\n        start: {\n          line: 255,\n          column: 8\n        },\n        end: {\n          line: 255,\n          column: 67\n        }\n      },\n      \"99\": {\n        start: {\n          line: 257,\n          column: 6\n        },\n        end: {\n          line: 257,\n          column: 23\n        }\n      },\n      \"100\": {\n        start: {\n          line: 260,\n          column: 2\n        },\n        end: {\n          line: 260,\n          column: 25\n        }\n      },\n      \"101\": {\n        start: {\n          line: 264,\n          column: 2\n        },\n        end: {\n          line: 264,\n          column: 40\n        }\n      },\n      \"102\": {\n        start: {\n          line: 268,\n          column: 45\n        },\n        end: {\n          line: 268,\n          column: 47\n        }\n      },\n      \"103\": {\n        start: {\n          line: 269,\n          column: 2\n        },\n        end: {\n          line: 274,\n          column: 3\n        }\n      },\n      \"104\": {\n        start: {\n          line: 270,\n          column: 4\n        },\n        end: {\n          line: 272,\n          column: 5\n        }\n      },\n      \"105\": {\n        start: {\n          line: 271,\n          column: 6\n        },\n        end: {\n          line: 271,\n          column: 66\n        }\n      },\n      \"106\": {\n        start: {\n          line: 273,\n          column: 4\n        },\n        end: {\n          line: 273,\n          column: 28\n        }\n      },\n      \"107\": {\n        start: {\n          line: 275,\n          column: 2\n        },\n        end: {\n          line: 275,\n          column: 25\n        }\n      },\n      \"108\": {\n        start: {\n          line: 279,\n          column: 2\n        },\n        end: {\n          line: 285,\n          column: 3\n        }\n      },\n      \"109\": {\n        start: {\n          line: 280,\n          column: 4\n        },\n        end: {\n          line: 284,\n          column: 5\n        }\n      },\n      \"110\": {\n        start: {\n          line: 281,\n          column: 6\n        },\n        end: {\n          line: 283,\n          column: 7\n        }\n      },\n      \"111\": {\n        start: {\n          line: 282,\n          column: 8\n        },\n        end: {\n          line: 282,\n          column: 63\n        }\n      },\n      \"112\": {\n        start: {\n          line: 286,\n          column: 2\n        },\n        end: {\n          line: 286,\n          column: 25\n        }\n      },\n      \"113\": {\n        start: {\n          line: 290,\n          column: 63\n        },\n        end: {\n          line: 290,\n          column: 65\n        }\n      },\n      \"114\": {\n        start: {\n          line: 291,\n          column: 2\n        },\n        end: {\n          line: 301,\n          column: 3\n        }\n      },\n      \"115\": {\n        start: {\n          line: 292,\n          column: 4\n        },\n        end: {\n          line: 300,\n          column: 5\n        }\n      },\n      \"116\": {\n        start: {\n          line: 293,\n          column: 6\n        },\n        end: {\n          line: 295,\n          column: 7\n        }\n      },\n      \"117\": {\n        start: {\n          line: 294,\n          column: 8\n        },\n        end: {\n          line: 294,\n          column: 31\n        }\n      },\n      \"118\": {\n        start: {\n          line: 296,\n          column: 6\n        },\n        end: {\n          line: 298,\n          column: 7\n        }\n      },\n      \"119\": {\n        start: {\n          line: 297,\n          column: 8\n        },\n        end: {\n          line: 297,\n          column: 61\n        }\n      },\n      \"120\": {\n        start: {\n          line: 299,\n          column: 6\n        },\n        end: {\n          line: 299,\n          column: 39\n        }\n      },\n      \"121\": {\n        start: {\n          line: 302,\n          column: 2\n        },\n        end: {\n          line: 302,\n          column: 25\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 40,\n            column: 26\n          },\n          end: {\n            line: 40,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 40,\n            column: 96\n          },\n          end: {\n            line: 47,\n            column: 1\n          }\n        },\n        line: 40\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 42,\n            column: 40\n          },\n          end: {\n            line: 42,\n            column: 41\n          }\n        },\n        loc: {\n          start: {\n            line: 42,\n            column: 50\n          },\n          end: {\n            line: 42,\n            column: 85\n          }\n        },\n        line: 42\n      },\n      \"2\": {\n        name: \"setShips\",\n        decl: {\n          start: {\n            line: 49,\n            column: 9\n          },\n          end: {\n            line: 49,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 49,\n            column: 69\n          },\n          end: {\n            line: 57,\n            column: 1\n          }\n        },\n        line: 49\n      },\n      \"3\": {\n        name: \"salvo\",\n        decl: {\n          start: {\n            line: 59,\n            column: 9\n          },\n          end: {\n            line: 59,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 59,\n            column: 68\n          },\n          end: {\n            line: 83,\n            column: 1\n          }\n        },\n        line: 59\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 20\n          },\n          end: {\n            line: 64,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 31\n          },\n          end: {\n            line: 64,\n            column: 98\n          }\n        },\n        line: 64\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 88,\n            column: 9\n          },\n          end: {\n            line: 88,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 88,\n            column: 33\n          },\n          end: {\n            line: 91,\n            column: 3\n          }\n        },\n        line: 88\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 100,\n            column: 16\n          },\n          end: {\n            line: 100,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 100,\n            column: 28\n          },\n          end: {\n            line: 104,\n            column: 9\n          }\n        },\n        line: 100\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 111,\n            column: 9\n          },\n          end: {\n            line: 111,\n            column: 10\n          }\n        },\n        loc: {\n          start: {\n            line: 111,\n            column: 21\n          },\n          end: {\n            line: 120,\n            column: 3\n          }\n        },\n        line: 111\n      },\n      \"8\": {\n        name: \"generateRandomShips\",\n        decl: {\n          start: {\n            line: 128,\n            column: 16\n          },\n          end: {\n            line: 128,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 128,\n            column: 61\n          },\n          end: {\n            line: 142,\n            column: 1\n          }\n        },\n        line: 128\n      },\n      \"9\": {\n        name: \"validateShips\",\n        decl: {\n          start: {\n            line: 145,\n            column: 16\n          },\n          end: {\n            line: 145,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 145,\n            column: 87\n          },\n          end: {\n            line: 162,\n            column: 1\n          }\n        },\n        line: 145\n      },\n      \"10\": {\n        name: \"checkAllShipsSunk\",\n        decl: {\n          start: {\n            line: 165,\n            column: 9\n          },\n          end: {\n            line: 165,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 165,\n            column: 68\n          },\n          end: {\n            line: 172,\n            column: 1\n          }\n        },\n        line: 165\n      },\n      \"11\": {\n        name: \"randomlyGetShip\",\n        decl: {\n          start: {\n            line: 174,\n            column: 9\n          },\n          end: {\n            line: 174,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 174,\n            column: 78\n          },\n          end: {\n            line: 188,\n            column: 1\n          }\n        },\n        line: 174\n      },\n      \"12\": {\n        name: \"getRandomInt\",\n        decl: {\n          start: {\n            line: 190,\n            column: 9\n          },\n          end: {\n            line: 190,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 190,\n            column: 43\n          },\n          end: {\n            line: 192,\n            column: 1\n          }\n        },\n        line: 190\n      },\n      \"13\": {\n        name: \"findShipWithCell\",\n        decl: {\n          start: {\n            line: 194,\n            column: 9\n          },\n          end: {\n            line: 194,\n            column: 25\n          }\n        },\n        loc: {\n          start: {\n            line: 194,\n            column: 79\n          },\n          end: {\n            line: 198,\n            column: 1\n          }\n        },\n        line: 194\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 196,\n            column: 4\n          },\n          end: {\n            line: 196,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 196,\n            column: 14\n          },\n          end: {\n            line: 196,\n            column: 108\n          }\n        },\n        line: 196\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 196,\n            column: 35\n          },\n          end: {\n            line: 196,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 196,\n            column: 42\n          },\n          end: {\n            line: 196,\n            column: 74\n          }\n        },\n        line: 196\n      },\n      \"16\": {\n        name: \"countShipHits\",\n        decl: {\n          start: {\n            line: 200,\n            column: 9\n          },\n          end: {\n            line: 200,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 200,\n            column: 65\n          },\n          end: {\n            line: 202,\n            column: 1\n          }\n        },\n        line: 200\n      },\n      \"17\": {\n        name: \"(anonymous_17)\",\n        decl: {\n          start: {\n            line: 201,\n            column: 23\n          },\n          end: {\n            line: 201,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 201,\n            column: 30\n          },\n          end: {\n            line: 201,\n            column: 50\n          }\n        },\n        line: 201\n      },\n      \"18\": {\n        name: \"validateShipsCount\",\n        decl: {\n          start: {\n            line: 209,\n            column: 9\n          },\n          end: {\n            line: 209,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 209,\n            column: 68\n          },\n          end: {\n            line: 224,\n            column: 1\n          }\n        },\n        line: 209\n      },\n      \"19\": {\n        name: \"(anonymous_19)\",\n        decl: {\n          start: {\n            line: 210,\n            column: 32\n          },\n          end: {\n            line: 210,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 210,\n            column: 49\n          },\n          end: {\n            line: 210,\n            column: 66\n          }\n        },\n        line: 210\n      },\n      \"20\": {\n        name: \"validateShipsOwnership\",\n        decl: {\n          start: {\n            line: 226,\n            column: 9\n          },\n          end: {\n            line: 226,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 226,\n            column: 88\n          },\n          end: {\n            line: 234,\n            column: 1\n          }\n        },\n        line: 226\n      },\n      \"21\": {\n        name: \"(anonymous_21)\",\n        decl: {\n          start: {\n            line: 227,\n            column: 27\n          },\n          end: {\n            line: 227,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 227,\n            column: 44\n          },\n          end: {\n            line: 227,\n            column: 55\n          }\n        },\n        line: 227\n      },\n      \"22\": {\n        name: \"validateShipsContinuity\",\n        decl: {\n          start: {\n            line: 236,\n            column: 9\n          },\n          end: {\n            line: 236,\n            column: 32\n          }\n        },\n        loc: {\n          start: {\n            line: 236,\n            column: 73\n          },\n          end: {\n            line: 261,\n            column: 1\n          }\n        },\n        line: 236\n      },\n      \"23\": {\n        name: \"getCellVector\",\n        decl: {\n          start: {\n            line: 263,\n            column: 16\n          },\n          end: {\n            line: 263,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 263,\n            column: 57\n          },\n          end: {\n            line: 265,\n            column: 1\n          }\n        },\n        line: 263\n      },\n      \"24\": {\n        name: \"validateShipsHaveUniqueIDs\",\n        decl: {\n          start: {\n            line: 267,\n            column: 9\n          },\n          end: {\n            line: 267,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 267,\n            column: 76\n          },\n          end: {\n            line: 276,\n            column: 1\n          }\n        },\n        line: 267\n      },\n      \"25\": {\n        name: \"validateShipsNotOutOfBounds\",\n        decl: {\n          start: {\n            line: 278,\n            column: 9\n          },\n          end: {\n            line: 278,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 278,\n            column: 77\n          },\n          end: {\n            line: 287,\n            column: 1\n          }\n        },\n        line: 278\n      },\n      \"26\": {\n        name: \"validateShipsNotOverlapping\",\n        decl: {\n          start: {\n            line: 289,\n            column: 9\n          },\n          end: {\n            line: 289,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 289,\n            column: 77\n          },\n          end: {\n            line: 303,\n            column: 1\n          }\n        },\n        line: 289\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 42,\n            column: 50\n          },\n          end: {\n            line: 42,\n            column: 85\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 42,\n            column: 50\n          },\n          end: {\n            line: 42,\n            column: 72\n          }\n        }, {\n          start: {\n            line: 42,\n            column: 76\n          },\n          end: {\n            line: 42,\n            column: 85\n          }\n        }],\n        line: 42\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 52,\n            column: 2\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        }],\n        line: 52\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 64,\n            column: 31\n          },\n          end: {\n            line: 64,\n            column: 98\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 64,\n            column: 31\n          },\n          end: {\n            line: 64,\n            column: 54\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 58\n          },\n          end: {\n            line: 64,\n            column: 76\n          }\n        }, {\n          start: {\n            line: 64,\n            column: 80\n          },\n          end: {\n            line: 64,\n            column: 98\n          }\n        }],\n        line: 64\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 65,\n            column: 2\n          },\n          end: {\n            line: 67,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 65,\n            column: 2\n          },\n          end: {\n            line: 67,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 65,\n            column: 2\n          },\n          end: {\n            line: 67,\n            column: 3\n          }\n        }],\n        line: 65\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 68,\n            column: 2\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 68,\n            column: 2\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 68,\n            column: 2\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        }],\n        line: 68\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 75,\n            column: 2\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 75,\n            column: 2\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 75,\n            column: 2\n          },\n          end: {\n            line: 77,\n            column: 3\n          }\n        }],\n        line: 75\n      },\n      \"6\": {\n        loc: {\n          start: {\n            line: 101,\n            column: 10\n          },\n          end: {\n            line: 103,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 101,\n            column: 10\n          },\n          end: {\n            line: 103,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 101,\n            column: 10\n          },\n          end: {\n            line: 103,\n            column: 11\n          }\n        }],\n        line: 101\n      },\n      \"7\": {\n        loc: {\n          start: {\n            line: 112,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 112,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 112,\n            column: 4\n          },\n          end: {\n            line: 119,\n            column: 5\n          }\n        }],\n        line: 112\n      },\n      \"8\": {\n        loc: {\n          start: {\n            line: 113,\n            column: 6\n          },\n          end: {\n            line: 115,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 113,\n            column: 6\n          },\n          end: {\n            line: 115,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 113,\n            column: 6\n          },\n          end: {\n            line: 115,\n            column: 7\n          }\n        }],\n        line: 113\n      },\n      \"9\": {\n        loc: {\n          start: {\n            line: 116,\n            column: 6\n          },\n          end: {\n            line: 118,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 116,\n            column: 6\n          },\n          end: {\n            line: 118,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 116,\n            column: 6\n          },\n          end: {\n            line: 118,\n            column: 7\n          }\n        }],\n        line: 116\n      },\n      \"10\": {\n        loc: {\n          start: {\n            line: 153,\n            column: 2\n          },\n          end: {\n            line: 155,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 153,\n            column: 2\n          },\n          end: {\n            line: 155,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 153,\n            column: 2\n          },\n          end: {\n            line: 155,\n            column: 3\n          }\n        }],\n        line: 153\n      },\n      \"11\": {\n        loc: {\n          start: {\n            line: 157,\n            column: 4\n          },\n          end: {\n            line: 159,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 157,\n            column: 4\n          },\n          end: {\n            line: 159,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 157,\n            column: 4\n          },\n          end: {\n            line: 159,\n            column: 5\n          }\n        }],\n        line: 157\n      },\n      \"12\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 4\n          },\n          end: {\n            line: 169,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 4\n          },\n          end: {\n            line: 169,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 4\n          },\n          end: {\n            line: 169,\n            column: 5\n          }\n        }],\n        line: 167\n      },\n      \"13\": {\n        loc: {\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 167,\n            column: 44\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 167,\n            column: 8\n          },\n          end: {\n            line: 167,\n            column: 30\n          }\n        }, {\n          start: {\n            line: 167,\n            column: 34\n          },\n          end: {\n            line: 167,\n            column: 44\n          }\n        }],\n        line: 167\n      },\n      \"14\": {\n        loc: {\n          start: {\n            line: 176,\n            column: 20\n          },\n          end: {\n            line: 176,\n            column: 53\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 176,\n            column: 44\n          },\n          end: {\n            line: 176,\n            column: 47\n          }\n        }, {\n          start: {\n            line: 176,\n            column: 50\n          },\n          end: {\n            line: 176,\n            column: 53\n          }\n        }],\n        line: 176\n      },\n      \"15\": {\n        loc: {\n          start: {\n            line: 179,\n            column: 4\n          },\n          end: {\n            line: 185,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 179,\n            column: 4\n          },\n          end: {\n            line: 185,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 179,\n            column: 4\n          },\n          end: {\n            line: 185,\n            column: 5\n          }\n        }],\n        line: 179\n      },\n      \"16\": {\n        loc: {\n          start: {\n            line: 196,\n            column: 14\n          },\n          end: {\n            line: 196,\n            column: 108\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 196,\n            column: 14\n          },\n          end: {\n            line: 196,\n            column: 82\n          }\n        }, {\n          start: {\n            line: 196,\n            column: 86\n          },\n          end: {\n            line: 196,\n            column: 108\n          }\n        }],\n        line: 196\n      },\n      \"17\": {\n        loc: {\n          start: {\n            line: 196,\n            column: 42\n          },\n          end: {\n            line: 196,\n            column: 74\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 196,\n            column: 42\n          },\n          end: {\n            line: 196,\n            column: 56\n          }\n        }, {\n          start: {\n            line: 196,\n            column: 60\n          },\n          end: {\n            line: 196,\n            column: 74\n          }\n        }],\n        line: 196\n      },\n      \"18\": {\n        loc: {\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 215,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 215,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 213,\n            column: 4\n          },\n          end: {\n            line: 215,\n            column: 5\n          }\n        }],\n        line: 213\n      },\n      \"19\": {\n        loc: {\n          start: {\n            line: 219,\n            column: 4\n          },\n          end: {\n            line: 221,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 219,\n            column: 4\n          },\n          end: {\n            line: 221,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 219,\n            column: 4\n          },\n          end: {\n            line: 221,\n            column: 5\n          }\n        }],\n        line: 219\n      },\n      \"20\": {\n        loc: {\n          start: {\n            line: 229,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 229,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 229,\n            column: 4\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        }],\n        line: 229\n      },\n      \"21\": {\n        loc: {\n          start: {\n            line: 238,\n            column: 4\n          },\n          end: {\n            line: 240,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 238,\n            column: 4\n          },\n          end: {\n            line: 240,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 238,\n            column: 4\n          },\n          end: {\n            line: 240,\n            column: 5\n          }\n        }],\n        line: 238\n      },\n      \"22\": {\n        loc: {\n          start: {\n            line: 243,\n            column: 4\n          },\n          end: {\n            line: 250,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 243,\n            column: 4\n          },\n          end: {\n            line: 250,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 243,\n            column: 4\n          },\n          end: {\n            line: 250,\n            column: 5\n          }\n        }],\n        line: 243\n      },\n      \"23\": {\n        loc: {\n          start: {\n            line: 245,\n            column: 8\n          },\n          end: {\n            line: 246,\n            column: 62\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 245,\n            column: 9\n          },\n          end: {\n            line: 245,\n            column: 33\n          }\n        }, {\n          start: {\n            line: 245,\n            column: 37\n          },\n          end: {\n            line: 245,\n            column: 61\n          }\n        }, {\n          start: {\n            line: 246,\n            column: 9\n          },\n          end: {\n            line: 246,\n            column: 33\n          }\n        }, {\n          start: {\n            line: 246,\n            column: 37\n          },\n          end: {\n            line: 246,\n            column: 61\n          }\n        }],\n        line: 245\n      },\n      \"24\": {\n        loc: {\n          start: {\n            line: 254,\n            column: 6\n          },\n          end: {\n            line: 256,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 254,\n            column: 6\n          },\n          end: {\n            line: 256,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 254,\n            column: 6\n          },\n          end: {\n            line: 256,\n            column: 7\n          }\n        }],\n        line: 254\n      },\n      \"25\": {\n        loc: {\n          start: {\n            line: 254,\n            column: 10\n          },\n          end: {\n            line: 254,\n            column: 62\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 254,\n            column: 10\n          },\n          end: {\n            line: 254,\n            column: 34\n          }\n        }, {\n          start: {\n            line: 254,\n            column: 38\n          },\n          end: {\n            line: 254,\n            column: 62\n          }\n        }],\n        line: 254\n      },\n      \"26\": {\n        loc: {\n          start: {\n            line: 270,\n            column: 4\n          },\n          end: {\n            line: 272,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 270,\n            column: 4\n          },\n          end: {\n            line: 272,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 270,\n            column: 4\n          },\n          end: {\n            line: 272,\n            column: 5\n          }\n        }],\n        line: 270\n      },\n      \"27\": {\n        loc: {\n          start: {\n            line: 281,\n            column: 6\n          },\n          end: {\n            line: 283,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 281,\n            column: 6\n          },\n          end: {\n            line: 283,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 281,\n            column: 6\n          },\n          end: {\n            line: 283,\n            column: 7\n          }\n        }],\n        line: 281\n      },\n      \"28\": {\n        loc: {\n          start: {\n            line: 281,\n            column: 10\n          },\n          end: {\n            line: 281,\n            column: 62\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 281,\n            column: 10\n          },\n          end: {\n            line: 281,\n            column: 20\n          }\n        }, {\n          start: {\n            line: 281,\n            column: 24\n          },\n          end: {\n            line: 281,\n            column: 34\n          }\n        }, {\n          start: {\n            line: 281,\n            column: 38\n          },\n          end: {\n            line: 281,\n            column: 48\n          }\n        }, {\n          start: {\n            line: 281,\n            column: 52\n          },\n          end: {\n            line: 281,\n            column: 62\n          }\n        }],\n        line: 281\n      },\n      \"29\": {\n        loc: {\n          start: {\n            line: 293,\n            column: 6\n          },\n          end: {\n            line: 295,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 293,\n            column: 6\n          },\n          end: {\n            line: 295,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 293,\n            column: 6\n          },\n          end: {\n            line: 295,\n            column: 7\n          }\n        }],\n        line: 293\n      },\n      \"30\": {\n        loc: {\n          start: {\n            line: 296,\n            column: 6\n          },\n          end: {\n            line: 298,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 296,\n            column: 6\n          },\n          end: {\n            line: 298,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 296,\n            column: 6\n          },\n          end: {\n            line: 298,\n            column: 7\n          }\n        }],\n        line: 296\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0,\n      \"57\": 0,\n      \"58\": 0,\n      \"59\": 0,\n      \"60\": 0,\n      \"61\": 0,\n      \"62\": 0,\n      \"63\": 0,\n      \"64\": 0,\n      \"65\": 0,\n      \"66\": 0,\n      \"67\": 0,\n      \"68\": 0,\n      \"69\": 0,\n      \"70\": 0,\n      \"71\": 0,\n      \"72\": 0,\n      \"73\": 0,\n      \"74\": 0,\n      \"75\": 0,\n      \"76\": 0,\n      \"77\": 0,\n      \"78\": 0,\n      \"79\": 0,\n      \"80\": 0,\n      \"81\": 0,\n      \"82\": 0,\n      \"83\": 0,\n      \"84\": 0,\n      \"85\": 0,\n      \"86\": 0,\n      \"87\": 0,\n      \"88\": 0,\n      \"89\": 0,\n      \"90\": 0,\n      \"91\": 0,\n      \"92\": 0,\n      \"93\": 0,\n      \"94\": 0,\n      \"95\": 0,\n      \"96\": 0,\n      \"97\": 0,\n      \"98\": 0,\n      \"99\": 0,\n      \"100\": 0,\n      \"101\": 0,\n      \"102\": 0,\n      \"103\": 0,\n      \"104\": 0,\n      \"105\": 0,\n      \"106\": 0,\n      \"107\": 0,\n      \"108\": 0,\n      \"109\": 0,\n      \"110\": 0,\n      \"111\": 0,\n      \"112\": 0,\n      \"113\": 0,\n      \"114\": 0,\n      \"115\": 0,\n      \"116\": 0,\n      \"117\": 0,\n      \"118\": 0,\n      \"119\": 0,\n      \"120\": 0,\n      \"121\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0],\n      \"6\": [0, 0],\n      \"7\": [0, 0],\n      \"8\": [0, 0],\n      \"9\": [0, 0],\n      \"10\": [0, 0],\n      \"11\": [0, 0],\n      \"12\": [0, 0],\n      \"13\": [0, 0],\n      \"14\": [0, 0],\n      \"15\": [0, 0],\n      \"16\": [0, 0],\n      \"17\": [0, 0],\n      \"18\": [0, 0],\n      \"19\": [0, 0],\n      \"20\": [0, 0],\n      \"21\": [0, 0],\n      \"22\": [0, 0],\n      \"23\": [0, 0, 0, 0],\n      \"24\": [0, 0],\n      \"25\": [0, 0],\n      \"26\": [0, 0],\n      \"27\": [0, 0],\n      \"28\": [0, 0, 0, 0],\n      \"29\": [0, 0],\n      \"30\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"106f2512b460b9a2154489996c028fb2dd27e1ae\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2rmfy6gvhj = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2rmfy6gvhj();\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ActivePlayers } from 'boardgame.io/core';\nimport shortid from 'shortid';\nvar VALID_SHIPS_SIZES = (cov_2rmfy6gvhj().s[0]++, [5, 4, 3, 2]);\nvar VALID_SHIPS_COUNT = (cov_2rmfy6gvhj().s[1]++, {\n  5: 1,\n  4: 1,\n  3: 2,\n  2: 1\n});\ncov_2rmfy6gvhj().s[2]++;\nexport var playerView = function playerView(G, ctx, playerID) {\n  cov_2rmfy6gvhj().f[0]++;\n  var player = (cov_2rmfy6gvhj().s[3]++, parseInt(playerID, 10));\n  var ships = (cov_2rmfy6gvhj().s[4]++, G.ships.filter(function (ship) {\n    cov_2rmfy6gvhj().f[1]++;\n    cov_2rmfy6gvhj().s[5]++;\n    return (cov_2rmfy6gvhj().b[0][0]++, ship.player === player) || (cov_2rmfy6gvhj().b[0][1]++, ship.sunk);\n  }));\n  cov_2rmfy6gvhj().s[6]++;\n  return _objectSpread({}, G, {\n    ships: ships\n  });\n};\n\nfunction setShips(G, ctx, ships) {\n  cov_2rmfy6gvhj().f[2]++;\n  var player = (cov_2rmfy6gvhj().s[7]++, parseInt(ctx.playerID, 10));\n  var validation = (cov_2rmfy6gvhj().s[8]++, validateShips(ships, player));\n  cov_2rmfy6gvhj().s[9]++;\n\n  if (!validation.valid) {\n    cov_2rmfy6gvhj().b[1][0]++;\n    cov_2rmfy6gvhj().s[10]++;\n    throw new Error(validation.error);\n  } else {\n    cov_2rmfy6gvhj().b[1][1]++;\n  }\n\n  cov_2rmfy6gvhj().s[11]++;\n  return _objectSpread({}, G, {\n    ships: [].concat(_toConsumableArray(G.ships), _toConsumableArray(ships))\n  });\n}\n\nfunction salvo(G, ctx, x, y) {\n  cov_2rmfy6gvhj().f[3]++;\n  var player = (cov_2rmfy6gvhj().s[12]++, parseInt(ctx.playerID, 10));\n  var shipIndex = (cov_2rmfy6gvhj().s[13]++, findShipWithCell(G.ships, {\n    x: x,\n    y: y\n  }, player)); // Do not allow the same cells to be shot twice\n\n  var uniqueMove = (cov_2rmfy6gvhj().s[14]++, G.salvos.filter(function (salvo) {\n    cov_2rmfy6gvhj().f[4]++;\n    cov_2rmfy6gvhj().s[15]++;\n    return (cov_2rmfy6gvhj().b[2][0]++, salvo.player === player) && (cov_2rmfy6gvhj().b[2][1]++, salvo.cell.x === x) && (cov_2rmfy6gvhj().b[2][2]++, salvo.cell.y === y);\n  }).length === 0);\n  cov_2rmfy6gvhj().s[16]++;\n\n  if (!uniqueMove) {\n    cov_2rmfy6gvhj().b[3][0]++;\n    cov_2rmfy6gvhj().s[17]++;\n    return _objectSpread({}, G);\n  } else {\n    cov_2rmfy6gvhj().b[3][1]++;\n  }\n\n  cov_2rmfy6gvhj().s[18]++;\n\n  if (shipIndex === -1) {\n    cov_2rmfy6gvhj().b[4][0]++;\n    cov_2rmfy6gvhj().s[19]++;\n    // Miss\n    return _objectSpread({}, G, {\n      salvos: [].concat(_toConsumableArray(G.salvos), [{\n        player: player,\n        hit: false,\n        cell: {\n          x: x,\n          y: y\n        }\n      }])\n    });\n  } else {\n    cov_2rmfy6gvhj().b[4][1]++;\n  }\n\n  var ship = (cov_2rmfy6gvhj().s[20]++, G.ships[shipIndex]); // Hit\n\n  var newShips = (cov_2rmfy6gvhj().s[21]++, _toConsumableArray(G.ships));\n  cov_2rmfy6gvhj().s[22]++;\n\n  if (countShipHits(G.salvos, ship.id) + 1 === ship.cells.length) {\n    cov_2rmfy6gvhj().b[5][0]++;\n    cov_2rmfy6gvhj().s[23]++;\n    newShips[shipIndex] = _objectSpread({}, newShips[shipIndex], {\n      sunk: true\n    });\n  } else {\n    cov_2rmfy6gvhj().b[5][1]++;\n  }\n\n  cov_2rmfy6gvhj().s[24]++;\n  return _objectSpread({}, G, {\n    ships: newShips,\n    salvos: [].concat(_toConsumableArray(G.salvos), [{\n      player: player,\n      hit: true,\n      cell: {\n        x: x,\n        y: y\n      },\n      hitShip: ship.id\n    }])\n  });\n}\n\nexport var SeabattleGame = (cov_2rmfy6gvhj().s[25]++, {\n  name: 'seabattle',\n  setup: function setup() {\n    cov_2rmfy6gvhj().f[5]++;\n    cov_2rmfy6gvhj().s[26]++;\n    return {\n      ships: [],\n      salvos: []\n    };\n  },\n  phases: {\n    setup: {\n      moves: {\n        setShips: setShips\n      },\n      next: 'play',\n      start: true,\n      turn: {\n        activePlayers: ActivePlayers.ALL_ONCE,\n        onMove: function onMove(_, ctx) {\n          cov_2rmfy6gvhj().f[6]++;\n          cov_2rmfy6gvhj().s[27]++;\n\n          if (ctx.activePlayers === null) {\n            cov_2rmfy6gvhj().b[6][0]++;\n            cov_2rmfy6gvhj().s[28]++;\n            ctx.events.endPhase();\n          } else {\n            cov_2rmfy6gvhj().b[6][1]++;\n          }\n        }\n      }\n    },\n    play: {\n      moves: {\n        salvo: salvo\n      }\n    }\n  },\n  endIf: function endIf(G, ctx) {\n    cov_2rmfy6gvhj().f[7]++;\n    cov_2rmfy6gvhj().s[29]++;\n\n    if (ctx.phase === 'play') {\n      cov_2rmfy6gvhj().b[7][0]++;\n      cov_2rmfy6gvhj().s[30]++;\n\n      if (checkAllShipsSunk(G.ships, 0)) {\n        cov_2rmfy6gvhj().b[8][0]++;\n        cov_2rmfy6gvhj().s[31]++;\n        return {\n          winner: '1'\n        };\n      } else {\n        cov_2rmfy6gvhj().b[8][1]++;\n      }\n\n      cov_2rmfy6gvhj().s[32]++;\n\n      if (checkAllShipsSunk(G.ships, 1)) {\n        cov_2rmfy6gvhj().b[9][0]++;\n        cov_2rmfy6gvhj().s[33]++;\n        return {\n          winner: '0'\n        };\n      } else {\n        cov_2rmfy6gvhj().b[9][1]++;\n      }\n    } else {\n      cov_2rmfy6gvhj().b[7][1]++;\n    }\n  },\n  turn: {\n    moveLimit: 1\n  },\n  playerView: playerView\n}); // Helper function for generating random ships positioning.\n\nexport function generateRandomShips(player) {\n  cov_2rmfy6gvhj().f[8]++;\n  var result;\n  var shipID;\n  cov_2rmfy6gvhj().s[34]++;\n\n  do {\n    cov_2rmfy6gvhj().s[35]++;\n    result = [];\n    cov_2rmfy6gvhj().s[36]++;\n\n    var _iterator = _createForOfIteratorHelper(VALID_SHIPS_SIZES),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var shipSize = _step.value;\n        var count = (cov_2rmfy6gvhj().s[37]++, VALID_SHIPS_COUNT[shipSize]);\n        cov_2rmfy6gvhj().s[38]++;\n\n        for (var i = (cov_2rmfy6gvhj().s[39]++, 0); i < count; i++) {\n          cov_2rmfy6gvhj().s[40]++;\n          shipID = shortid.generate();\n          cov_2rmfy6gvhj().s[41]++;\n          result.push(randomlyGetShip(player, shipSize, shipID));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } while (!validateShips(result, player).valid);\n\n  cov_2rmfy6gvhj().s[42]++;\n  return result;\n} // Wheather a setup is valid or not.\n\nexport function validateShips(ships, player) {\n  cov_2rmfy6gvhj().f[9]++;\n  var validations = (cov_2rmfy6gvhj().s[43]++, [validateShipsCount(ships), validateShipsContinuity(ships), validateShipsNotOutOfBounds(ships), validateShipsNotOverlapping(ships), validateShipsHaveUniqueIDs(ships)]);\n  cov_2rmfy6gvhj().s[44]++;\n\n  if (player !== undefined) {\n    cov_2rmfy6gvhj().b[10][0]++;\n    cov_2rmfy6gvhj().s[45]++;\n    validations.push(validateShipsOwnership(player, ships));\n  } else {\n    cov_2rmfy6gvhj().b[10][1]++;\n  }\n\n  cov_2rmfy6gvhj().s[46]++;\n\n  for (var _i = 0, _validations = validations; _i < _validations.length; _i++) {\n    var validation = _validations[_i];\n    cov_2rmfy6gvhj().s[47]++;\n\n    if (!validation.valid) {\n      cov_2rmfy6gvhj().b[11][0]++;\n      cov_2rmfy6gvhj().s[48]++;\n      return validation;\n    } else {\n      cov_2rmfy6gvhj().b[11][1]++;\n    }\n  }\n\n  cov_2rmfy6gvhj().s[49]++;\n  return {\n    valid: true\n  };\n} // PRIVATE FUNCTIONS\n\nfunction checkAllShipsSunk(ships, player) {\n  cov_2rmfy6gvhj().f[10]++;\n  cov_2rmfy6gvhj().s[50]++;\n\n  var _iterator2 = _createForOfIteratorHelper(ships),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var ship = _step2.value;\n      cov_2rmfy6gvhj().s[51]++;\n\n      if ((cov_2rmfy6gvhj().b[13][0]++, ship.player === player) && (cov_2rmfy6gvhj().b[13][1]++, !ship.sunk)) {\n        cov_2rmfy6gvhj().b[12][0]++;\n        cov_2rmfy6gvhj().s[52]++;\n        return false;\n      } else {\n        cov_2rmfy6gvhj().b[12][1]++;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  cov_2rmfy6gvhj().s[53]++;\n  return true;\n}\n\nfunction randomlyGetShip(player, shipSize, id) {\n  cov_2rmfy6gvhj().f[11]++;\n  var cell = (cov_2rmfy6gvhj().s[54]++, {\n    x: getRandomInt(10),\n    y: getRandomInt(10)\n  });\n  var direction = (cov_2rmfy6gvhj().s[55]++, getRandomInt(2) === 1 ? (cov_2rmfy6gvhj().b[14][0]++, 'H') : (cov_2rmfy6gvhj().b[14][1]++, 'V'));\n  var ship = (cov_2rmfy6gvhj().s[56]++, {\n    player: player,\n    cells: [],\n    sunk: false,\n    id: id\n  });\n  cov_2rmfy6gvhj().s[57]++;\n\n  for (var i = (cov_2rmfy6gvhj().s[58]++, 0); i < shipSize; i++) {\n    cov_2rmfy6gvhj().s[59]++;\n\n    if (direction === 'H') {\n      cov_2rmfy6gvhj().b[15][0]++;\n      cov_2rmfy6gvhj().s[60]++;\n      // Constant y\n      ship.cells.push(_objectSpread({}, cell, {\n        x: cell.x + i\n      }));\n    } else {\n      cov_2rmfy6gvhj().b[15][1]++;\n      cov_2rmfy6gvhj().s[61]++;\n      // Constant x\n      ship.cells.push(_objectSpread({}, cell, {\n        y: cell.y + i\n      }));\n    }\n  }\n\n  cov_2rmfy6gvhj().s[62]++;\n  return ship;\n}\n\nfunction getRandomInt(max) {\n  cov_2rmfy6gvhj().f[12]++;\n  cov_2rmfy6gvhj().s[63]++;\n  return Math.random() * max << 0 << 0; // https://github.com/babel/minify/issues/904\n}\n\nfunction findShipWithCell(ships, cell, player) {\n  cov_2rmfy6gvhj().f[13]++;\n  cov_2rmfy6gvhj().s[64]++;\n  return ships.findIndex(function (ship) {\n    cov_2rmfy6gvhj().f[14]++;\n    cov_2rmfy6gvhj().s[65]++;\n    return (cov_2rmfy6gvhj().b[16][0]++, ship.cells.findIndex(function (c) {\n      cov_2rmfy6gvhj().f[15]++;\n      cov_2rmfy6gvhj().s[66]++;\n      return (cov_2rmfy6gvhj().b[17][0]++, c.x === cell.x) && (cov_2rmfy6gvhj().b[17][1]++, c.y === cell.y);\n    }) !== -1) && (cov_2rmfy6gvhj().b[16][1]++, ship.player !== player);\n  });\n}\n\nfunction countShipHits(salvos, shipId) {\n  cov_2rmfy6gvhj().f[16]++;\n  cov_2rmfy6gvhj().s[67]++;\n  return salvos.filter(function (s) {\n    cov_2rmfy6gvhj().f[17]++;\n    cov_2rmfy6gvhj().s[68]++;\n    return s.hitShip === shipId;\n  }).length;\n}\n\nfunction validateShipsCount(ships) {\n  cov_2rmfy6gvhj().f[18]++;\n  var shipsLength = (cov_2rmfy6gvhj().s[69]++, ships.map(function (ship) {\n    cov_2rmfy6gvhj().f[19]++;\n    cov_2rmfy6gvhj().s[70]++;\n    return ship.cells.length;\n  }));\n  var count = (cov_2rmfy6gvhj().s[71]++, _objectSpread({}, VALID_SHIPS_COUNT));\n  cov_2rmfy6gvhj().s[72]++;\n\n  var _iterator3 = _createForOfIteratorHelper(shipsLength),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _length = _step3.value;\n      cov_2rmfy6gvhj().s[73]++;\n\n      if (!(_length in count)) {\n        cov_2rmfy6gvhj().b[18][0]++;\n        cov_2rmfy6gvhj().s[74]++;\n        return {\n          valid: false,\n          error: \"Invalid ship length: \".concat(_length)\n        };\n      } else {\n        cov_2rmfy6gvhj().b[18][1]++;\n      }\n\n      cov_2rmfy6gvhj().s[75]++;\n      count[_length]--;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  cov_2rmfy6gvhj().s[76]++;\n\n  for (var _i2 = 0, _Object$values = Object.values(count); _i2 < _Object$values.length; _i2++) {\n    var length = _Object$values[_i2];\n    cov_2rmfy6gvhj().s[77]++;\n\n    if (length !== 0) {\n      cov_2rmfy6gvhj().b[19][0]++;\n      cov_2rmfy6gvhj().s[78]++;\n      return {\n        valid: false,\n        error: 'Invalid ships sizes.'\n      };\n    } else {\n      cov_2rmfy6gvhj().b[19][1]++;\n    }\n  }\n\n  cov_2rmfy6gvhj().s[79]++;\n  return {\n    valid: true\n  };\n}\n\nfunction validateShipsOwnership(player, ships) {\n  cov_2rmfy6gvhj().f[20]++;\n  var owners = (cov_2rmfy6gvhj().s[80]++, ships.map(function (ship) {\n    cov_2rmfy6gvhj().f[21]++;\n    cov_2rmfy6gvhj().s[81]++;\n    return ship.player;\n  }));\n  cov_2rmfy6gvhj().s[82]++;\n\n  var _iterator4 = _createForOfIteratorHelper(owners),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var owner = _step4.value;\n      cov_2rmfy6gvhj().s[83]++;\n\n      if (owner !== player) {\n        cov_2rmfy6gvhj().b[20][0]++;\n        cov_2rmfy6gvhj().s[84]++;\n        return {\n          valid: false,\n          error: \"Invalid player owner: \".concat(owner, \" should be: \").concat(player)\n        };\n      } else {\n        cov_2rmfy6gvhj().b[20][1]++;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  cov_2rmfy6gvhj().s[85]++;\n  return {\n    valid: true\n  };\n}\n\nfunction validateShipsContinuity(ships) {\n  cov_2rmfy6gvhj().f[22]++;\n  cov_2rmfy6gvhj().s[86]++;\n\n  var _iterator5 = _createForOfIteratorHelper(ships),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var ship = _step5.value;\n      cov_2rmfy6gvhj().s[87]++;\n\n      if (ship.cells.length < 2) {\n        cov_2rmfy6gvhj().b[21][0]++;\n        cov_2rmfy6gvhj().s[88]++;\n        continue;\n      } else {\n        cov_2rmfy6gvhj().b[21][1]++;\n      }\n\n      var lastICell = (cov_2rmfy6gvhj().s[89]++, ship.cells[0]);\n      var vector = (cov_2rmfy6gvhj().s[90]++, getCellVector(ship.cells[1], ship.cells[0]));\n      cov_2rmfy6gvhj().s[91]++;\n\n      if (!((cov_2rmfy6gvhj().b[23][0]++, Math.abs(vector.x) === 1) && (cov_2rmfy6gvhj().b[23][1]++, Math.abs(vector.y) === 0) || (cov_2rmfy6gvhj().b[23][2]++, Math.abs(vector.x) === 0) && (cov_2rmfy6gvhj().b[23][3]++, Math.abs(vector.y) === 1))) {\n        cov_2rmfy6gvhj().b[22][0]++;\n        cov_2rmfy6gvhj().s[92]++;\n        return {\n          valid: false,\n          error: \"IShip is not spaced right!\"\n        };\n      } else {\n        cov_2rmfy6gvhj().b[22][1]++;\n      }\n\n      cov_2rmfy6gvhj().s[93]++;\n\n      for (var i = (cov_2rmfy6gvhj().s[94]++, 1); i < ship.cells.length; i++) {\n        var cell = (cov_2rmfy6gvhj().s[95]++, ship.cells[i]);\n        var newVector = (cov_2rmfy6gvhj().s[96]++, getCellVector(cell, lastICell));\n        cov_2rmfy6gvhj().s[97]++;\n\n        if ((cov_2rmfy6gvhj().b[25][0]++, newVector.x !== vector.x) || (cov_2rmfy6gvhj().b[25][1]++, newVector.y !== vector.y)) {\n          cov_2rmfy6gvhj().b[24][0]++;\n          cov_2rmfy6gvhj().s[98]++;\n          return {\n            valid: false,\n            error: \"IShip is not continuous!\"\n          };\n        } else {\n          cov_2rmfy6gvhj().b[24][1]++;\n        }\n\n        cov_2rmfy6gvhj().s[99]++;\n        lastICell = cell;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  cov_2rmfy6gvhj().s[100]++;\n  return {\n    valid: true\n  };\n}\n\nexport function getCellVector(a, b) {\n  cov_2rmfy6gvhj().f[23]++;\n  cov_2rmfy6gvhj().s[101]++;\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction validateShipsHaveUniqueIDs(ships) {\n  cov_2rmfy6gvhj().f[24]++;\n  var usedIDs = (cov_2rmfy6gvhj().s[102]++, {});\n  cov_2rmfy6gvhj().s[103]++;\n\n  var _iterator6 = _createForOfIteratorHelper(ships),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var ship = _step6.value;\n      cov_2rmfy6gvhj().s[104]++;\n\n      if (usedIDs[ship.id]) {\n        cov_2rmfy6gvhj().b[26][0]++;\n        cov_2rmfy6gvhj().s[105]++;\n        return {\n          valid: false,\n          error: \"IShip IDs are not unique!\"\n        };\n      } else {\n        cov_2rmfy6gvhj().b[26][1]++;\n      }\n\n      cov_2rmfy6gvhj().s[106]++;\n      usedIDs[ship.id] = true;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  cov_2rmfy6gvhj().s[107]++;\n  return {\n    valid: true\n  };\n}\n\nfunction validateShipsNotOutOfBounds(ships) {\n  cov_2rmfy6gvhj().f[25]++;\n  cov_2rmfy6gvhj().s[108]++;\n\n  var _iterator7 = _createForOfIteratorHelper(ships),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var ship = _step7.value;\n      cov_2rmfy6gvhj().s[109]++;\n\n      var _iterator8 = _createForOfIteratorHelper(ship.cells),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var cell = _step8.value;\n          cov_2rmfy6gvhj().s[110]++;\n\n          if ((cov_2rmfy6gvhj().b[28][0]++, cell.x < 0) || (cov_2rmfy6gvhj().b[28][1]++, cell.x > 9) || (cov_2rmfy6gvhj().b[28][2]++, cell.y < 0) || (cov_2rmfy6gvhj().b[28][3]++, cell.y > 9)) {\n            cov_2rmfy6gvhj().b[27][0]++;\n            cov_2rmfy6gvhj().s[111]++;\n            return {\n              valid: false,\n              error: \"IShip out of bounds!\"\n            };\n          } else {\n            cov_2rmfy6gvhj().b[27][1]++;\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  cov_2rmfy6gvhj().s[112]++;\n  return {\n    valid: true\n  };\n}\n\nfunction validateShipsNotOverlapping(ships) {\n  cov_2rmfy6gvhj().f[26]++;\n  var cellsUsed = (cov_2rmfy6gvhj().s[113]++, {});\n  cov_2rmfy6gvhj().s[114]++;\n\n  var _iterator9 = _createForOfIteratorHelper(ships),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var ship = _step9.value;\n      cov_2rmfy6gvhj().s[115]++;\n\n      var _iterator10 = _createForOfIteratorHelper(ship.cells),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var cell = _step10.value;\n          cov_2rmfy6gvhj().s[116]++;\n\n          if (!(cell.x in cellsUsed)) {\n            cov_2rmfy6gvhj().b[29][0]++;\n            cov_2rmfy6gvhj().s[117]++;\n            cellsUsed[cell.x] = {};\n          } else {\n            cov_2rmfy6gvhj().b[29][1]++;\n          }\n\n          cov_2rmfy6gvhj().s[118]++;\n\n          if (cellsUsed[cell.x][cell.y]) {\n            cov_2rmfy6gvhj().b[30][0]++;\n            cov_2rmfy6gvhj().s[119]++;\n            return {\n              valid: false,\n              error: \"Overlapping ships!\"\n            };\n          } else {\n            cov_2rmfy6gvhj().b[30][1]++;\n          }\n\n          cov_2rmfy6gvhj().s[120]++;\n          cellsUsed[cell.x][cell.y] = true;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  cov_2rmfy6gvhj().s[121]++;\n  return {\n    valid: true\n  };\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/seabattle/game.ts"],"names":["ActivePlayers","shortid","VALID_SHIPS_SIZES","VALID_SHIPS_COUNT","playerView","G","ctx","playerID","player","parseInt","ships","filter","ship","sunk","setShips","validation","validateShips","valid","Error","error","salvo","x","y","shipIndex","findShipWithCell","uniqueMove","salvos","cell","length","hit","newShips","countShipHits","id","cells","hitShip","SeabattleGame","name","setup","phases","moves","next","start","turn","activePlayers","ALL_ONCE","onMove","_","events","endPhase","play","endIf","phase","checkAllShipsSunk","winner","moveLimit","generateRandomShips","result","shipID","shipSize","count","i","generate","push","randomlyGetShip","validations","validateShipsCount","validateShipsContinuity","validateShipsNotOutOfBounds","validateShipsNotOverlapping","validateShipsHaveUniqueIDs","undefined","validateShipsOwnership","getRandomInt","direction","max","Math","random","findIndex","c","shipId","s","shipsLength","map","Object","values","owners","owner","lastICell","vector","getCellVector","abs","newVector","a","b","usedIDs","cellsUsed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAoBA,aAApB,QAAmD,mBAAnD;AACA,OAAOC,OAAP,MAAoB,SAApB;AA8BA,IAAMC,iBAA2B,6BAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAH,CAAjC;AACA,IAAMC,iBAA6C,6BAAG;AACpD,KAAG,CADiD;AAEpD,KAAG,CAFiD;AAGpD,KAAG,CAHiD;AAIpD,KAAG;AAJiD,CAAH,CAAnD;;AAOA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAqBC,GAArB,EAAgCC,QAAhC,EAAsE;AAAA;AAC9F,MAAMC,MAAM,6BAAGC,QAAQ,CAACF,QAAD,EAAW,EAAX,CAAX,CAAZ;AACA,MAAMG,KAAc,6BAAGL,CAAC,CAACK,KAAF,CAAQC,MAAR,CAAe,UAACC,IAAD,EAAU;AAAA;AAAA;AAAA,wCAAAA,IAAI,CAACJ,MAAL,KAAgBA,MAAhB,kCAA0BI,IAAI,CAACC,IAA/B;AAAmC,GAA5D,CAAH,CAApB;AAF8F;AAG9F,2BACKR,CADL;AAEEK,IAAAA,KAAK,EAALA;AAFF;AAID,CAPM;;AASP,SAASI,QAAT,CAAkBT,CAAlB,EAAsCC,GAAtC,EAAqDI,KAArD,EAAqE;AAAA;AACnE,MAAMF,MAAM,6BAAGC,QAAQ,CAACH,GAAG,CAACC,QAAL,EAAe,EAAf,CAAX,CAAZ;AACA,MAAMQ,UAAU,6BAAGC,aAAa,CAACN,KAAD,EAAQF,MAAR,CAAhB,CAAhB;AAFmE;;AAGnE,MAAI,CAACO,UAAU,CAACE,KAAhB,EAAuB;AAAA;AAAA;AACrB,UAAM,IAAIC,KAAJ,CAAUH,UAAU,CAACI,KAArB,CAAN;AACD,GAFD;AAAA;AAAA;;AAHmE;AAOnE,2BAAYd,CAAZ;AAAeK,IAAAA,KAAK,+BAAML,CAAC,CAACK,KAAR,sBAAkBA,KAAlB;AAApB;AACD;;AAED,SAASU,KAAT,CAAef,CAAf,EAAmCC,GAAnC,EAA8Ce,CAA9C,EAAyDC,CAAzD,EAAoE;AAAA;AAClE,MAAMd,MAAM,8BAAGC,QAAQ,CAACH,GAAG,CAACC,QAAL,EAAe,EAAf,CAAX,CAAZ;AACA,MAAMgB,SAAS,8BAAGC,gBAAgB,CAACnB,CAAC,CAACK,KAAH,EAAU;AAAEW,IAAAA,CAAC,EAADA,CAAF;AAAKC,IAAAA,CAAC,EAADA;AAAL,GAAV,EAAoBd,MAApB,CAAnB,CAAf,CAFkE,CAGlE;;AACA,MAAMiB,UAAU,8BACdpB,CAAC,CAACqB,MAAF,CAASf,MAAT,CAAgB,UAACS,KAAD,EAAW;AAAA;AAAA;AAAA,wCAAAA,KAAK,CAACZ,MAAN,KAAiBA,MAAjB,kCAA2BY,KAAK,CAACO,IAAN,CAAWN,CAAX,KAAiBA,CAA5C,kCAAiDD,KAAK,CAACO,IAAN,CAAWL,CAAX,KAAiBA,CAAlE;AAAmE,GAA9F,EAAgGM,MAAhG,KAA2G,CAD7F,CAAhB;AAJkE;;AAMlE,MAAI,CAACH,UAAL,EAAiB;AAAA;AAAA;AACf,6BAAYpB,CAAZ;AACD,GAFD;AAAA;AAAA;;AANkE;;AASlE,MAAIkB,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAAA;AAAA;AACpB;AACA,6BAAYlB,CAAZ;AAAeqB,MAAAA,MAAM,+BAAMrB,CAAC,CAACqB,MAAR,IAAgB;AAAElB,QAAAA,MAAM,EAANA,MAAF;AAAUqB,QAAAA,GAAG,EAAE,KAAf;AAAsBF,QAAAA,IAAI,EAAE;AAAEN,UAAAA,CAAC,EAADA,CAAF;AAAKC,UAAAA,CAAC,EAADA;AAAL;AAA5B,OAAhB;AAArB;AACD,GAHD;AAAA;AAAA;;AAIA,MAAMV,IAAI,8BAAGP,CAAC,CAACK,KAAF,CAAQa,SAAR,CAAH,CAAV,CAbkE,CAclE;;AACA,MAAMO,QAAQ,iDAAOzB,CAAC,CAACK,KAAT,EAAd;AAfkE;;AAgBlE,MAAIqB,aAAa,CAAC1B,CAAC,CAACqB,MAAH,EAAWd,IAAI,CAACoB,EAAhB,CAAb,GAAmC,CAAnC,KAAyCpB,IAAI,CAACqB,KAAL,CAAWL,MAAxD,EAAgE;AAAA;AAAA;AAC9DE,IAAAA,QAAQ,CAACP,SAAD,CAAR,qBAA2BO,QAAQ,CAACP,SAAD,CAAnC;AAAgDV,MAAAA,IAAI,EAAE;AAAtD;AACD,GAFD;AAAA;AAAA;;AAhBkE;AAmBlE,2BACKR,CADL;AAEEK,IAAAA,KAAK,EAAEoB,QAFT;AAGEJ,IAAAA,MAAM,+BAAMrB,CAAC,CAACqB,MAAR,IAAgB;AAAElB,MAAAA,MAAM,EAANA,MAAF;AAAUqB,MAAAA,GAAG,EAAE,IAAf;AAAqBF,MAAAA,IAAI,EAAE;AAAEN,QAAAA,CAAC,EAADA,CAAF;AAAKC,QAAAA,CAAC,EAADA;AAAL,OAA3B;AAAqCY,MAAAA,OAAO,EAAEtB,IAAI,CAACoB;AAAnD,KAAhB;AAHR;AAKD;;AAED,OAAO,IAAMG,aAAwB,8BAAG;AACtCC,EAAAA,IAAI,EAAE,WADgC;AAGtCC,EAAAA,KAAK,EAAE,iBAAwB;AAAA;AAAA;AAAA;AAC7B3B,MAAAA,KAAK,EAAE,EADsB;AAE7BgB,MAAAA,MAAM,EAAE;AAFqB;AAG9B,GANqC;AAQtCY,EAAAA,MAAM,EAAE;AACND,IAAAA,KAAK,EAAE;AACLE,MAAAA,KAAK,EAAE;AAAEzB,QAAAA,QAAQ,EAARA;AAAF,OADF;AAEL0B,MAAAA,IAAI,EAAE,MAFD;AAGLC,MAAAA,KAAK,EAAE,IAHF;AAILC,MAAAA,IAAI,EAAE;AACJC,QAAAA,aAAa,EAAE3C,aAAa,CAAC4C,QADzB;AAEJC,QAAAA,MAAM,EAAE,gBAACC,CAAD,EAAIxC,GAAJ,EAAY;AAAA;AAAA;;AAClB,cAAIA,GAAG,CAACqC,aAAJ,KAAsB,IAA1B,EAAgC;AAAA;AAAA;AAC9BrC,YAAAA,GAAG,CAACyC,MAAJ,CAAWC,QAAX;AACD,WAFD;AAAA;AAAA;AAGD;AANG;AAJD,KADD;AAcNC,IAAAA,IAAI,EAAE;AACJV,MAAAA,KAAK,EAAE;AAAEnB,QAAAA,KAAK,EAALA;AAAF;AADH;AAdA,GAR8B;AA0BtC8B,EAAAA,KAAK,EAAE,eAAC7C,CAAD,EAAIC,GAAJ,EAAY;AAAA;AAAA;;AACjB,QAAIA,GAAG,CAAC6C,KAAJ,KAAc,MAAlB,EAA0B;AAAA;AAAA;;AACxB,UAAIC,iBAAiB,CAAC/C,CAAC,CAACK,KAAH,EAAU,CAAV,CAArB,EAAmC;AAAA;AAAA;AACjC,eAAO;AAAE2C,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD,OAFD;AAAA;AAAA;;AADwB;;AAIxB,UAAID,iBAAiB,CAAC/C,CAAC,CAACK,KAAH,EAAU,CAAV,CAArB,EAAmC;AAAA;AAAA;AACjC,eAAO;AAAE2C,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD,OAFD;AAAA;AAAA;AAGD,KAPD;AAAA;AAAA;AAQD,GAnCqC;AAoCtCX,EAAAA,IAAI,EAAE;AACJY,IAAAA,SAAS,EAAE;AADP,GApCgC;AAuCtClD,EAAAA,UAAU,EAAVA;AAvCsC,CAAH,CAA9B,C,CA0CP;;AACA,OAAO,SAASmD,mBAAT,CAA6B/C,MAA7B,EAAsD;AAAA;AAC3D,MAAIgD,MAAJ;AACA,MAAIC,MAAJ;AAF2D;;AAG3D,KAAG;AAAA;AACDD,IAAAA,MAAM,GAAG,EAAT;AADC;;AAAA,+CAEsBtD,iBAFtB;AAAA;;AAAA;AAED,0DAA0C;AAAA,YAA/BwD,QAA+B;AACxC,YAAMC,KAAa,8BAAGxD,iBAAiB,CAACuD,QAAD,CAApB,CAAnB;AADwC;;AAExC,aAAK,IAAIE,CAAC,8BAAG,CAAH,CAAV,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAAA;AAC9BH,UAAAA,MAAM,GAAGxD,OAAO,CAAC4D,QAAR,EAAT;AAD8B;AAE9BL,UAAAA,MAAM,CAACM,IAAP,CAAYC,eAAe,CAACvD,MAAD,EAASkD,QAAT,EAAmBD,MAAnB,CAA3B;AACD;AACF;AARA;AAAA;AAAA;AAAA;AAAA;AASF,GATD,QASS,CAACzC,aAAa,CAACwC,MAAD,EAAShD,MAAT,CAAb,CAA8BS,KATxC;;AAH2D;AAa3D,SAAOuC,MAAP;AACD,C,CAED;;AACA,OAAO,SAASxC,aAAT,CAAuBN,KAAvB,EAAuCF,MAAvC,EAAgF;AAAA;AACrF,MAAMwD,WAAW,8BAAG,CAClBC,kBAAkB,CAACvD,KAAD,CADA,EAElBwD,uBAAuB,CAACxD,KAAD,CAFL,EAGlByD,2BAA2B,CAACzD,KAAD,CAHT,EAIlB0D,2BAA2B,CAAC1D,KAAD,CAJT,EAKlB2D,0BAA0B,CAAC3D,KAAD,CALR,CAAH,CAAjB;AADqF;;AAQrF,MAAIF,MAAM,KAAK8D,SAAf,EAA0B;AAAA;AAAA;AACxBN,IAAAA,WAAW,CAACF,IAAZ,CAAiBS,sBAAsB,CAAC/D,MAAD,EAASE,KAAT,CAAvC;AACD,GAFD;AAAA;AAAA;;AARqF;;AAWrF,kCAAyBsD,WAAzB,kCAAsC;AAAjC,QAAMjD,UAAU,mBAAhB;AAAiC;;AACpC,QAAI,CAACA,UAAU,CAACE,KAAhB,EAAuB;AAAA;AAAA;AACrB,aAAOF,UAAP;AACD,KAFD;AAAA;AAAA;AAGD;;AAfoF;AAgBrF,SAAO;AAAEE,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD,C,CAED;;AACA,SAASmC,iBAAT,CAA2B1C,KAA3B,EAA2CF,MAA3C,EAAoE;AAAA;AAAA;;AAAA,8CAC/CE,KAD+C;AAAA;;AAAA;AAClE,2DAA0B;AAAA,UAAfE,IAAe;AAAA;;AACxB,UAAI,8BAAAA,IAAI,CAACJ,MAAL,KAAgBA,MAAhB,mCAA0B,CAACI,IAAI,CAACC,IAAhC,CAAJ,EAA0C;AAAA;AAAA;AACxC,eAAO,KAAP;AACD,OAFD;AAAA;AAAA;AAGD;AALiE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMlE,SAAO,IAAP;AACD;;AAED,SAASkD,eAAT,CAAyBvD,MAAzB,EAAyCkD,QAAzC,EAA2D1B,EAA3D,EAA8E;AAAA;AAC5E,MAAML,IAAW,8BAAG;AAAEN,IAAAA,CAAC,EAAEmD,YAAY,CAAC,EAAD,CAAjB;AAAuBlD,IAAAA,CAAC,EAAEkD,YAAY,CAAC,EAAD;AAAtC,GAAH,CAAjB;AACA,MAAMC,SAAS,8BAAGD,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAApB,iCAAwB,GAAxB,kCAA8B,GAA9B,CAAH,CAAf;AACA,MAAM5D,IAAW,8BAAG;AAAEJ,IAAAA,MAAM,EAANA,MAAF;AAAUyB,IAAAA,KAAK,EAAE,EAAjB;AAAqBpB,IAAAA,IAAI,EAAE,KAA3B;AAAkCmB,IAAAA,EAAE,EAAFA;AAAlC,GAAH,CAAjB;AAH4E;;AAI5E,OAAK,IAAI4B,CAAC,8BAAG,CAAH,CAAV,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AAAA;;AACjC,QAAIa,SAAS,KAAK,GAAlB,EAAuB;AAAA;AAAA;AACrB;AACA7D,MAAAA,IAAI,CAACqB,KAAL,CAAW6B,IAAX,mBAAqBnC,IAArB;AAA2BN,QAAAA,CAAC,EAAEM,IAAI,CAACN,CAAL,GAASuC;AAAvC;AACD,KAHD,MAGO;AAAA;AAAA;AACL;AACAhD,MAAAA,IAAI,CAACqB,KAAL,CAAW6B,IAAX,mBAAqBnC,IAArB;AAA2BL,QAAAA,CAAC,EAAEK,IAAI,CAACL,CAAL,GAASsC;AAAvC;AACD;AACF;;AAZ2E;AAa5E,SAAOhD,IAAP;AACD;;AAED,SAAS4D,YAAT,CAAsBE,GAAtB,EAA2C;AAAA;AAAA;AACzC,SAASC,IAAI,CAACC,MAAL,KAAgBF,GAAjB,IAAyB,CAA1B,IAAgC,CAAvC,CADyC,CACC;AAC3C;;AAED,SAASlD,gBAAT,CAA0Bd,KAA1B,EAA0CiB,IAA1C,EAAuDnB,MAAvD,EAA+E;AAAA;AAAA;AAC7E,SAAOE,KAAK,CAACmE,SAAN,CACL,UAACjE,IAAD,EAAU;AAAA;AAAA;AAAA,yCAAAA,IAAI,CAACqB,KAAL,CAAW4C,SAAX,CAAqB,UAACC,CAAD,EAAO;AAAA;AAAA;AAAA,2CAAAA,CAAC,CAACzD,CAAF,KAAQM,IAAI,CAACN,CAAb,mCAAkByD,CAAC,CAACxD,CAAF,KAAQK,IAAI,CAACL,CAA/B;AAAgC,KAA5D,MAAkE,CAAC,CAAnE,mCAAwEV,IAAI,CAACJ,MAAL,KAAgBA,MAAxF;AAA8F,GADnG,CAAP;AAGD;;AAED,SAASuB,aAAT,CAAuBL,MAAvB,EAAyCqD,MAAzC,EAAiE;AAAA;AAAA;AAC/D,SAAOrD,MAAM,CAACf,MAAP,CAAc,UAACqE,CAAD,EAAO;AAAA;AAAA;AAAA,WAAAA,CAAC,CAAC9C,OAAF,KAAc6C,MAAd;AAAoB,GAAzC,EAA2CnD,MAAlD;AACD;;AAOD,SAASqC,kBAAT,CAA4BvD,KAA5B,EAAoE;AAAA;AAClE,MAAMuE,WAAW,8BAAGvE,KAAK,CAACwE,GAAN,CAAU,UAACtE,IAAD,EAAiB;AAAA;AAAA;AAAA,WAAAA,IAAI,CAACqB,KAAL,CAAWL,MAAX;AAAiB,GAA5C,CAAH,CAAjB;AACA,MAAM+B,KAAgC,gDAAQxD,iBAAR,EAAtC;AAFkE;;AAAA,8CAG7C8E,WAH6C;AAAA;;AAAA;AAGlE,2DAAkC;AAAA,UAAvBrD,OAAuB;AAAA;;AAChC,UAAI,EAAEA,OAAM,IAAI+B,KAAZ,CAAJ,EAAwB;AAAA;AAAA;AACtB,eAAO;AAAE1C,UAAAA,KAAK,EAAE,KAAT;AAAgBE,UAAAA,KAAK,iCAA0BS,OAA1B;AAArB,SAAP;AACD,OAFD;AAAA;AAAA;;AADgC;AAIhC+B,MAAAA,KAAK,CAAC/B,OAAD,CAAL;AACD;AARiE;AAAA;AAAA;AAAA;AAAA;;AAAA;;AASlE,qCAAqBuD,MAAM,CAACC,MAAP,CAAczB,KAAd,CAArB,sCAA2C;AAAtC,QAAM/B,MAAM,sBAAZ;AAAsC;;AACzC,QAAIA,MAAM,KAAK,CAAf,EAAkB;AAAA;AAAA;AAChB,aAAO;AAAEX,QAAAA,KAAK,EAAE,KAAT;AAAgBE,QAAAA,KAAK,EAAE;AAAvB,OAAP;AACD,KAFD;AAAA;AAAA;AAGD;;AAbiE;AAclE,SAAO;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,SAASsD,sBAAT,CAAgC/D,MAAhC,EAAgDE,KAAhD,EAAwF;AAAA;AACtF,MAAM2E,MAAM,8BAAG3E,KAAK,CAACwE,GAAN,CAAU,UAACtE,IAAD,EAAiB;AAAA;AAAA;AAAA,WAAAA,IAAI,CAACJ,MAAL;AAAW,GAAtC,CAAH,CAAZ;AADsF;;AAAA,8CAElE6E,MAFkE;AAAA;;AAAA;AAEtF,2DAA4B;AAAA,UAAjBC,KAAiB;AAAA;;AAC1B,UAAIA,KAAK,KAAK9E,MAAd,EAAsB;AAAA;AAAA;AACpB,eAAO;AAAES,UAAAA,KAAK,EAAE,KAAT;AAAgBE,UAAAA,KAAK,kCAA2BmE,KAA3B,yBAA+C9E,MAA/C;AAArB,SAAP;AACD,OAFD;AAAA;AAAA;AAGD;AANqF;AAAA;AAAA;AAAA;AAAA;;AAAA;AAOtF,SAAO;AAAES,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,SAASiD,uBAAT,CAAiCxD,KAAjC,EAAyE;AAAA;AAAA;;AAAA,8CACpDA,KADoD;AAAA;;AAAA;AACvE,2DAA0B;AAAA,UAAfE,IAAe;AAAA;;AACxB,UAAIA,IAAI,CAACqB,KAAL,CAAWL,MAAX,GAAoB,CAAxB,EAA2B;AAAA;AAAA;AACzB;AACD,OAFD;AAAA;AAAA;;AAGA,UAAI2D,SAAgB,8BAAG3E,IAAI,CAACqB,KAAL,CAAW,CAAX,CAAH,CAApB;AACA,UAAMuD,MAAa,8BAAGC,aAAa,CAAC7E,IAAI,CAACqB,KAAL,CAAW,CAAX,CAAD,EAAgBrB,IAAI,CAACqB,KAAL,CAAW,CAAX,CAAhB,CAAhB,CAAnB;AALwB;;AAMxB,UACE,EACG,8BAAA0C,IAAI,CAACe,GAAL,CAASF,MAAM,CAACnE,CAAhB,MAAuB,CAAvB,mCAA4BsD,IAAI,CAACe,GAAL,CAASF,MAAM,CAAClE,CAAhB,MAAuB,CAAnD,CAAD,IACC,8BAAAqD,IAAI,CAACe,GAAL,CAASF,MAAM,CAACnE,CAAhB,MAAuB,CAAvB,mCAA4BsD,IAAI,CAACe,GAAL,CAASF,MAAM,CAAClE,CAAhB,MAAuB,CAAnD,CAFH,CADF,EAKE;AAAA;AAAA;AACA,eAAO;AAAEL,UAAAA,KAAK,EAAE,KAAT;AAAgBE,UAAAA,KAAK;AAArB,SAAP;AACD,OAPD;AAAA;AAAA;;AANwB;;AAcxB,WAAK,IAAIyC,CAAC,8BAAG,CAAH,CAAV,EAAgBA,CAAC,GAAGhD,IAAI,CAACqB,KAAL,CAAWL,MAA/B,EAAuCgC,CAAC,EAAxC,EAA4C;AAC1C,YAAMjC,IAAI,8BAAGf,IAAI,CAACqB,KAAL,CAAW2B,CAAX,CAAH,CAAV;AACA,YAAM+B,SAAS,8BAAGF,aAAa,CAAC9D,IAAD,EAAO4D,SAAP,CAAhB,CAAf;AAF0C;;AAG1C,YAAI,8BAAAI,SAAS,CAACtE,CAAV,KAAgBmE,MAAM,CAACnE,CAAvB,mCAA4BsE,SAAS,CAACrE,CAAV,KAAgBkE,MAAM,CAAClE,CAAnD,CAAJ,EAA0D;AAAA;AAAA;AACxD,iBAAO;AAAEL,YAAAA,KAAK,EAAE,KAAT;AAAgBE,YAAAA,KAAK;AAArB,WAAP;AACD,SAFD;AAAA;AAAA;;AAH0C;AAM1CoE,QAAAA,SAAS,GAAG5D,IAAZ;AACD;AACF;AAvBsE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAwBvE,SAAO;AAAEV,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,OAAO,SAASwE,aAAT,CAAuBG,CAAvB,EAAiCC,CAAjC,EAAkD;AAAA;AAAA;AACvD,SAAO;AAAExE,IAAAA,CAAC,EAAEuE,CAAC,CAACvE,CAAF,GAAMwE,CAAC,CAACxE,CAAb;AAAgBC,IAAAA,CAAC,EAAEsE,CAAC,CAACtE,CAAF,GAAMuE,CAAC,CAACvE;AAA3B,GAAP;AACD;;AAED,SAAS+C,0BAAT,CAAoC3D,KAApC,EAA4E;AAAA;AAC1E,MAAMoF,OAAkC,+BAAG,EAAH,CAAxC;AAD0E;;AAAA,8CAEvDpF,KAFuD;AAAA;;AAAA;AAE1E,2DAA0B;AAAA,UAAfE,IAAe;AAAA;;AACxB,UAAIkF,OAAO,CAAClF,IAAI,CAACoB,EAAN,CAAX,EAAsB;AAAA;AAAA;AACpB,eAAO;AAAEf,UAAAA,KAAK,EAAE,KAAT;AAAgBE,UAAAA,KAAK;AAArB,SAAP;AACD,OAFD;AAAA;AAAA;;AADwB;AAIxB2E,MAAAA,OAAO,CAAClF,IAAI,CAACoB,EAAN,CAAP,GAAmB,IAAnB;AACD;AAPyE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAQ1E,SAAO;AAAEf,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,SAASkD,2BAAT,CAAqCzD,KAArC,EAA6E;AAAA;AAAA;;AAAA,8CACxDA,KADwD;AAAA;;AAAA;AAC3E,2DAA0B;AAAA,UAAfE,IAAe;AAAA;;AAAA,kDACLA,IAAI,CAACqB,KADA;AAAA;;AAAA;AACxB,+DAA+B;AAAA,cAApBN,IAAoB;AAAA;;AAC7B,cAAI,8BAAAA,IAAI,CAACN,CAAL,GAAS,CAAT,mCAAcM,IAAI,CAACN,CAAL,GAAS,CAAvB,mCAA4BM,IAAI,CAACL,CAAL,GAAS,CAArC,mCAA0CK,IAAI,CAACL,CAAL,GAAS,CAAnD,CAAJ,EAA0D;AAAA;AAAA;AACxD,mBAAO;AAAEL,cAAAA,KAAK,EAAE,KAAT;AAAgBE,cAAAA,KAAK;AAArB,aAAP;AACD,WAFD;AAAA;AAAA;AAGD;AALuB;AAAA;AAAA;AAAA;AAAA;AAMzB;AAP0E;AAAA;AAAA;AAAA;AAAA;;AAAA;AAQ3E,SAAO;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,SAASmD,2BAAT,CAAqC1D,KAArC,EAA6E;AAAA;AAC3E,MAAMqF,SAAoD,+BAAG,EAAH,CAA1D;AAD2E;;AAAA,8CAExDrF,KAFwD;AAAA;;AAAA;AAE3E,2DAA0B;AAAA,UAAfE,IAAe;AAAA;;AAAA,mDACLA,IAAI,CAACqB,KADA;AAAA;;AAAA;AACxB,kEAA+B;AAAA,cAApBN,IAAoB;AAAA;;AAC7B,cAAI,EAAEA,IAAI,CAACN,CAAL,IAAU0E,SAAZ,CAAJ,EAA4B;AAAA;AAAA;AAC1BA,YAAAA,SAAS,CAACpE,IAAI,CAACN,CAAN,CAAT,GAAoB,EAApB;AACD,WAFD;AAAA;AAAA;;AAD6B;;AAI7B,cAAI0E,SAAS,CAACpE,IAAI,CAACN,CAAN,CAAT,CAAkBM,IAAI,CAACL,CAAvB,CAAJ,EAA+B;AAAA;AAAA;AAC7B,mBAAO;AAAEL,cAAAA,KAAK,EAAE,KAAT;AAAgBE,cAAAA,KAAK;AAArB,aAAP;AACD,WAFD;AAAA;AAAA;;AAJ6B;AAO7B4E,UAAAA,SAAS,CAACpE,IAAI,CAACN,CAAN,CAAT,CAAkBM,IAAI,CAACL,CAAvB,IAA4B,IAA5B;AACD;AATuB;AAAA;AAAA;AAAA;AAAA;AAUzB;AAZ0E;AAAA;AAAA;AAAA;AAAA;;AAAA;AAa3E,SAAO;AAAEL,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD","sourcesContent":["import { IGameArgs, ActivePlayers, IGameCtx } from 'boardgame.io/core';\nimport shortid from 'shortid';\n\nexport interface IShip {\n  player: number;\n  cells: ICell[];\n  sunk: boolean;\n  id?: string;\n}\n\nexport interface ICell {\n  x: number;\n  y: number;\n}\n\nexport interface ISalvo {\n  player: number;\n  cell: ICell;\n  hit: boolean;\n  hitShip?: string;\n}\n\nexport interface ISeabattleState {\n  ships: IShip[];\n  salvos: ISalvo[];\n}\n\ninterface ICtx {\n  playerID?: string;\n}\n\nconst VALID_SHIPS_SIZES: number[] = [5, 4, 3, 2];\nconst VALID_SHIPS_COUNT: { [size: number]: number } = {\n  5: 1,\n  4: 1,\n  3: 2,\n  2: 1,\n};\n\nexport const playerView = (G: ISeabattleState, ctx: ICtx, playerID: string): ISeabattleState => {\n  const player = parseInt(playerID, 10);\n  const ships: IShip[] = G.ships.filter((ship) => ship.player === player || ship.sunk);\n  return {\n    ...G,\n    ships,\n  };\n};\n\nfunction setShips(G: ISeabattleState, ctx: IGameCtx, ships: IShip[]) {\n  const player = parseInt(ctx.playerID, 10);\n  const validation = validateShips(ships, player);\n  if (!validation.valid) {\n    throw new Error(validation.error);\n  }\n\n  return { ...G, ships: [...G.ships, ...ships] };\n}\n\nfunction salvo(G: ISeabattleState, ctx: ICtx, x: number, y: number) {\n  const player = parseInt(ctx.playerID, 10);\n  const shipIndex = findShipWithCell(G.ships, { x, y }, player);\n  // Do not allow the same cells to be shot twice\n  const uniqueMove =\n    G.salvos.filter((salvo) => salvo.player === player && salvo.cell.x === x && salvo.cell.y === y).length === 0;\n  if (!uniqueMove) {\n    return { ...G };\n  }\n  if (shipIndex === -1) {\n    // Miss\n    return { ...G, salvos: [...G.salvos, { player, hit: false, cell: { x, y } }] };\n  }\n  const ship = G.ships[shipIndex];\n  // Hit\n  const newShips = [...G.ships];\n  if (countShipHits(G.salvos, ship.id) + 1 === ship.cells.length) {\n    newShips[shipIndex] = { ...newShips[shipIndex], sunk: true };\n  }\n  return {\n    ...G,\n    ships: newShips,\n    salvos: [...G.salvos, { player, hit: true, cell: { x, y }, hitShip: ship.id }],\n  };\n}\n\nexport const SeabattleGame: IGameArgs = {\n  name: 'seabattle',\n\n  setup: (): ISeabattleState => ({\n    ships: [],\n    salvos: [],\n  }),\n\n  phases: {\n    setup: {\n      moves: { setShips },\n      next: 'play',\n      start: true,\n      turn: {\n        activePlayers: ActivePlayers.ALL_ONCE,\n        onMove: (_, ctx) => {\n          if (ctx.activePlayers === null) {\n            ctx.events.endPhase();\n          }\n        },\n      },\n    },\n    play: {\n      moves: { salvo },\n    },\n  },\n  endIf: (G, ctx) => {\n    if (ctx.phase === 'play') {\n      if (checkAllShipsSunk(G.ships, 0)) {\n        return { winner: '1' };\n      }\n      if (checkAllShipsSunk(G.ships, 1)) {\n        return { winner: '0' };\n      }\n    }\n  },\n  turn: {\n    moveLimit: 1,\n  },\n  playerView,\n};\n\n// Helper function for generating random ships positioning.\nexport function generateRandomShips(player: number): IShip[] {\n  let result: IShip[];\n  let shipID;\n  do {\n    result = [];\n    for (const shipSize of VALID_SHIPS_SIZES) {\n      const count: number = VALID_SHIPS_COUNT[shipSize];\n      for (let i = 0; i < count; i++) {\n        shipID = shortid.generate();\n        result.push(randomlyGetShip(player, shipSize, shipID));\n      }\n    }\n  } while (!validateShips(result, player).valid);\n  return result;\n}\n\n// Wheather a setup is valid or not.\nexport function validateShips(ships: IShip[], player?: number): IShipsValidationResult {\n  const validations = [\n    validateShipsCount(ships),\n    validateShipsContinuity(ships),\n    validateShipsNotOutOfBounds(ships),\n    validateShipsNotOverlapping(ships),\n    validateShipsHaveUniqueIDs(ships),\n  ];\n  if (player !== undefined) {\n    validations.push(validateShipsOwnership(player, ships));\n  }\n  for (const validation of validations) {\n    if (!validation.valid) {\n      return validation;\n    }\n  }\n  return { valid: true };\n}\n\n// PRIVATE FUNCTIONS\nfunction checkAllShipsSunk(ships: IShip[], player: number): boolean {\n  for (const ship of ships) {\n    if (ship.player === player && !ship.sunk) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction randomlyGetShip(player: number, shipSize: number, id: string): IShip {\n  const cell: ICell = { x: getRandomInt(10), y: getRandomInt(10) };\n  const direction = getRandomInt(2) === 1 ? 'H' : 'V';\n  const ship: IShip = { player, cells: [], sunk: false, id };\n  for (let i = 0; i < shipSize; i++) {\n    if (direction === 'H') {\n      // Constant y\n      ship.cells.push({ ...cell, x: cell.x + i });\n    } else {\n      // Constant x\n      ship.cells.push({ ...cell, y: cell.y + i });\n    }\n  }\n  return ship;\n}\n\nfunction getRandomInt(max: number): number {\n  return ((Math.random() * max) << 0) << 0; // https://github.com/babel/minify/issues/904\n}\n\nfunction findShipWithCell(ships: IShip[], cell: ICell, player: number): number {\n  return ships.findIndex(\n    (ship) => ship.cells.findIndex((c) => c.x === cell.x && c.y === cell.y) !== -1 && ship.player !== player,\n  );\n}\n\nfunction countShipHits(salvos: ISalvo[], shipId: string): number {\n  return salvos.filter((s) => s.hitShip === shipId).length;\n}\n\ninterface IShipsValidationResult {\n  valid: boolean;\n  error?: string;\n}\n\nfunction validateShipsCount(ships: IShip[]): IShipsValidationResult {\n  const shipsLength = ships.map((ship: IShip) => ship.cells.length);\n  const count: { [key: number]: number } = { ...VALID_SHIPS_COUNT };\n  for (const length of shipsLength) {\n    if (!(length in count)) {\n      return { valid: false, error: `Invalid ship length: ${length}` };\n    }\n    count[length]--;\n  }\n  for (const length of Object.values(count)) {\n    if (length !== 0) {\n      return { valid: false, error: 'Invalid ships sizes.' };\n    }\n  }\n  return { valid: true };\n}\n\nfunction validateShipsOwnership(player: number, ships: IShip[]): IShipsValidationResult {\n  const owners = ships.map((ship: IShip) => ship.player);\n  for (const owner of owners) {\n    if (owner !== player) {\n      return { valid: false, error: `Invalid player owner: ${owner} should be: ${player}` };\n    }\n  }\n  return { valid: true };\n}\n\nfunction validateShipsContinuity(ships: IShip[]): IShipsValidationResult {\n  for (const ship of ships) {\n    if (ship.cells.length < 2) {\n      continue;\n    }\n    let lastICell: ICell = ship.cells[0];\n    const vector: ICell = getCellVector(ship.cells[1], ship.cells[0]);\n    if (\n      !(\n        (Math.abs(vector.x) === 1 && Math.abs(vector.y) === 0) ||\n        (Math.abs(vector.x) === 0 && Math.abs(vector.y) === 1)\n      )\n    ) {\n      return { valid: false, error: `IShip is not spaced right!` };\n    }\n    for (let i = 1; i < ship.cells.length; i++) {\n      const cell = ship.cells[i];\n      const newVector = getCellVector(cell, lastICell);\n      if (newVector.x !== vector.x || newVector.y !== vector.y) {\n        return { valid: false, error: `IShip is not continuous!` };\n      }\n      lastICell = cell;\n    }\n  }\n  return { valid: true };\n}\n\nexport function getCellVector(a: ICell, b: ICell): ICell {\n  return { x: a.x - b.x, y: a.y - b.y };\n}\n\nfunction validateShipsHaveUniqueIDs(ships: IShip[]): IShipsValidationResult {\n  const usedIDs: { [id: string]: boolean } = {};\n  for (const ship of ships) {\n    if (usedIDs[ship.id]) {\n      return { valid: false, error: `IShip IDs are not unique!` };\n    }\n    usedIDs[ship.id] = true;\n  }\n  return { valid: true };\n}\n\nfunction validateShipsNotOutOfBounds(ships: IShip[]): IShipsValidationResult {\n  for (const ship of ships) {\n    for (const cell of ship.cells) {\n      if (cell.x < 0 || cell.x > 9 || cell.y < 0 || cell.y > 9) {\n        return { valid: false, error: `IShip out of bounds!` };\n      }\n    }\n  }\n  return { valid: true };\n}\n\nfunction validateShipsNotOverlapping(ships: IShip[]): IShipsValidationResult {\n  const cellsUsed: { [x: number]: { [y: number]: boolean } } = {};\n  for (const ship of ships) {\n    for (const cell of ship.cells) {\n      if (!(cell.x in cellsUsed)) {\n        cellsUsed[cell.x] = {};\n      }\n      if (cellsUsed[cell.x][cell.y]) {\n        return { valid: false, error: `Overlapping ships!` };\n      }\n      cellsUsed[cell.x][cell.y] = true;\n    }\n  }\n  return { valid: true };\n}\n"]},"metadata":{},"sourceType":"module"}