{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction cov_9y2z4ug2t() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameCard.tsx\";\n  var hash = \"2ffd1282d54655a5409d00c196866dbec52b0d84\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameCard.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 14,\n          column: 25\n        },\n        end: {\n          line: 14,\n          column: 29\n        }\n      },\n      \"1\": {\n        start: {\n          line: 15,\n          column: 18\n        },\n        end: {\n          line: 15,\n          column: 42\n        }\n      },\n      \"2\": {\n        start: {\n          line: 16,\n          column: 46\n        },\n        end: {\n          line: 24,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 25,\n          column: 48\n        },\n        end: {\n          line: 33,\n          column: 5\n        }\n      },\n      \"4\": {\n        start: {\n          line: 34,\n          column: 4\n        },\n        end: {\n          line: 52,\n          column: 5\n        }\n      },\n      \"5\": {\n        start: {\n          line: 35,\n          column: 6\n        },\n        end: {\n          line: 35,\n          column: 88\n        }\n      },\n      \"6\": {\n        start: {\n          line: 36,\n          column: 6\n        },\n        end: {\n          line: 36,\n          column: 40\n        }\n      },\n      \"7\": {\n        start: {\n          line: 37,\n          column: 6\n        },\n        end: {\n          line: 51,\n          column: 8\n        }\n      },\n      \"8\": {\n        start: {\n          line: 53,\n          column: 28\n        },\n        end: {\n          line: 61,\n          column: 5\n        }\n      },\n      \"9\": {\n        start: {\n          line: 62,\n          column: 4\n        },\n        end: {\n          line: 88,\n          column: 6\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 2\n          },\n          end: {\n            line: 13,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 11\n          },\n          end: {\n            line: 89,\n            column: 3\n          }\n        },\n        line: 13\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 52,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 52,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 34,\n            column: 4\n          },\n          end: {\n            line: 52,\n            column: 5\n          }\n        }],\n        line: 34\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 53,\n            column: 28\n          },\n          end: {\n            line: 61,\n            column: 5\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 54,\n            column: 6\n          },\n          end: {\n            line: 56,\n            column: 19\n          }\n        }, {\n          start: {\n            line: 58,\n            column: 6\n          },\n          end: {\n            line: 60,\n            column: 19\n          }\n        }],\n        line: 53\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"2ffd1282d54655a5409d00c196866dbec52b0d84\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_9y2z4ug2t = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_9y2z4ug2t();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Typography from '@material-ui/core/Typography';\nexport class GameCard extends (React.Component) {\n  render() {\n    cov_9y2z4ug2t().f[0]++;\n    let navigateButton = (cov_9y2z4ug2t().s[0]++, null);\n    const image = (cov_9y2z4ug2t().s[1]++, this.props.game.imageURL);\n    const mainDivStyle = (cov_9y2z4ug2t().s[2]++, {\n      position: 'relative',\n      height: '250px',\n      width: '100%',\n      backgroundPosition: 'left center',\n      backgroundColor: image[0],\n      backgroundImage: `url(${image.src})`,\n      backgroundSize: 'cover'\n    });\n    const baseBadgeStyle = (cov_9y2z4ug2t().s[3]++, {\n      position: 'absolute',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n      padding: '0px 8px',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      color: 'black',\n      textDecoration: 'none'\n    });\n    cov_9y2z4ug2t().s[4]++;\n\n    if (this.props.isLink) {\n      cov_9y2z4ug2t().b[0][0]++;\n      cov_9y2z4ug2t().s[5]++;\n      mainDivStyle.boxShadow = '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)';\n      cov_9y2z4ug2t().s[6]++;\n      mainDivStyle.borderRadius = '8px';\n      cov_9y2z4ug2t().s[7]++;\n      navigateButton = __jsx(\"div\", {\n        style: _objectSpread({}, baseBadgeStyle, {\n          bottom: '12px',\n          right: '8px',\n          borderRadius: '32px',\n          padding: '0'\n        })\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Next\"\n      }, __jsx(NavigateNextIcon, null)));\n    } else {\n      cov_9y2z4ug2t().b[0][1]++;\n    }\n\n    const gameNameHeading = (cov_9y2z4ug2t().s[8]++, this.props.isLink ? (cov_9y2z4ug2t().b[1][0]++, __jsx(Typography, {\n      gutterBottom: false,\n      variant: \"h4\",\n      component: \"h2\",\n      style: {\n        fontWeight: 300\n      }\n    }, \"Play \", this.props.game.name)) : (cov_9y2z4ug2t().b[1][1]++, __jsx(Typography, {\n      gutterBottom: false,\n      variant: \"h4\",\n      component: \"h1\",\n      style: {\n        fontWeight: 300\n      }\n    }, this.props.game.name)));\n    cov_9y2z4ug2t().s[9]++;\n    return __jsx(\"div\", {\n      style: mainDivStyle,\n      \"data-test-id\": `gamecard-${this.props.game.code}`\n    }, __jsx(\"div\", {\n      style: _objectSpread({}, baseBadgeStyle, {\n        top: '12px',\n        left: '8px',\n        paddingTop: '4px',\n        maxWidth: '500px'\n      })\n    }, gameNameHeading), __jsx(\"div\", {\n      style: _objectSpread({}, baseBadgeStyle, {\n        bottom: '12px',\n        left: '8px'\n      })\n    }, __jsx(Typography, {\n      gutterBottom: false,\n      variant: \"overline\",\n      component: \"h5\"\n    }, this.props.game.description)), navigateButton);\n  }\n\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameCard.tsx"],"names":["React","IconButton","NavigateNextIcon","Typography","GameCard","Component","render","navigateButton","image","props","game","imageURL","mainDivStyle","position","height","width","backgroundPosition","backgroundColor","backgroundImage","src","backgroundSize","baseBadgeStyle","boxShadow","padding","borderRadius","color","textDecoration","isLink","bottom","right","gameNameHeading","fontWeight","name","code","top","left","paddingTop","maxWidth","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IGameDef } from 'games';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IGameCardProps {\n  game: IGameDef;\n  isLink?: boolean;\n}\n\nexport class GameCard extends React.Component<IGameCardProps, {}> {\n  render() {\n    let navigateButton = null;\n    const image = this.props.game.imageURL;\n    const mainDivStyle: React.CSSProperties = {\n      position: 'relative',\n      height: '250px',\n      width: '100%',\n      backgroundPosition: 'left center',\n      backgroundColor: image[0],\n      backgroundImage: `url(${image.src})`,\n      backgroundSize: 'cover',\n    };\n    const baseBadgeStyle: React.CSSProperties = {\n      position: 'absolute',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n      padding: '0px 8px',\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      color: 'black',\n      textDecoration: 'none',\n    };\n    if (this.props.isLink) {\n      mainDivStyle.boxShadow = '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)';\n      mainDivStyle.borderRadius = '8px';\n      navigateButton = (\n        <div\n          style={{\n            ...baseBadgeStyle,\n            bottom: '12px',\n            right: '8px',\n            borderRadius: '32px',\n            padding: '0',\n          }}\n        >\n          <IconButton aria-label=\"Next\">\n            <NavigateNextIcon />\n          </IconButton>\n        </div>\n      );\n    }\n    const gameNameHeading = this.props.isLink ? (\n      <Typography gutterBottom={false} variant=\"h4\" component=\"h2\" style={{ fontWeight: 300 }}>\n        Play {this.props.game.name}\n      </Typography>\n    ) : (\n      <Typography gutterBottom={false} variant=\"h4\" component=\"h1\" style={{ fontWeight: 300 }}>\n        {this.props.game.name}\n      </Typography>\n    );\n    return (\n      <div style={mainDivStyle} data-test-id={`gamecard-${this.props.game.code}`}>\n        <div\n          style={{\n            ...baseBadgeStyle,\n            top: '12px',\n            left: '8px',\n            paddingTop: '4px',\n            maxWidth: '500px',\n          }}\n        >\n          {gameNameHeading}\n        </div>\n        <div\n          style={{\n            ...baseBadgeStyle,\n            bottom: '12px',\n            left: '8px',\n          }}\n        >\n          <Typography gutterBottom={false} variant=\"overline\" component=\"h5\">\n            {this.props.game.description}\n          </Typography>\n        </div>\n        {navigateButton}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}