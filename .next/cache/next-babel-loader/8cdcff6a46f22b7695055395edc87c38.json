{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction cov_1v48fgq7z7() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/chess/ai.ts\";\n  var hash = \"4187e1c7329916b16f95c9b28b41d2e80cbdaf6d\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/chess/ai.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 9,\n          column: 22\n        },\n        end: {\n          line: 9,\n          column: 64\n        }\n      },\n      \"1\": {\n        start: {\n          line: 10,\n          column: 19\n        },\n        end: {\n          line: 10,\n          column: 45\n        }\n      },\n      \"2\": {\n        start: {\n          line: 12,\n          column: 15\n        },\n        end: {\n          line: 12,\n          column: 16\n        }\n      },\n      \"3\": {\n        start: {\n          line: 18,\n          column: 4\n        },\n        end: {\n          line: 18,\n          column: 40\n        }\n      },\n      \"4\": {\n        start: {\n          line: 22,\n          column: 4\n        },\n        end: {\n          line: 22,\n          column: 25\n        }\n      },\n      \"5\": {\n        start: {\n          line: 26,\n          column: 4\n        },\n        end: {\n          line: 26,\n          column: 37\n        }\n      },\n      \"6\": {\n        start: {\n          line: 30,\n          column: 4\n        },\n        end: {\n          line: 47,\n          column: 7\n        }\n      },\n      \"7\": {\n        start: {\n          line: 31,\n          column: 6\n        },\n        end: {\n          line: 36,\n          column: 8\n        }\n      },\n      \"8\": {\n        start: {\n          line: 32,\n          column: 20\n        },\n        end: {\n          line: 32,\n          column: 30\n        }\n      },\n      \"9\": {\n        start: {\n          line: 33,\n          column: 8\n        },\n        end: {\n          line: 35,\n          column: 9\n        }\n      },\n      \"10\": {\n        start: {\n          line: 34,\n          column: 10\n        },\n        end: {\n          line: 34,\n          column: 37\n        }\n      },\n      \"11\": {\n        start: {\n          line: 37,\n          column: 18\n        },\n        end: {\n          line: 37,\n          column: 57\n        }\n      },\n      \"12\": {\n        start: {\n          line: 38,\n          column: 6\n        },\n        end: {\n          line: 38,\n          column: 59\n        }\n      },\n      \"13\": {\n        start: {\n          line: 39,\n          column: 6\n        },\n        end: {\n          line: 43,\n          column: 7\n        }\n      },\n      \"14\": {\n        start: {\n          line: 40,\n          column: 8\n        },\n        end: {\n          line: 40,\n          column: 41\n        }\n      },\n      \"15\": {\n        start: {\n          line: 42,\n          column: 8\n        },\n        end: {\n          line: 42,\n          column: 39\n        }\n      },\n      \"16\": {\n        start: {\n          line: 44,\n          column: 20\n        },\n        end: {\n          line: 44,\n          column: 44\n        }\n      },\n      \"17\": {\n        start: {\n          line: 45,\n          column: 23\n        },\n        end: {\n          line: 45,\n          column: 50\n        }\n      },\n      \"18\": {\n        start: {\n          line: 46,\n          column: 6\n        },\n        end: {\n          line: 46,\n          column: 58\n        }\n      },\n      \"19\": {\n        start: {\n          line: 52,\n          column: 14\n        },\n        end: {\n          line: 52,\n          column: 29\n        }\n      },\n      \"20\": {\n        start: {\n          line: 55,\n          column: 4\n        },\n        end: {\n          line: 57,\n          column: 5\n        }\n      },\n      \"21\": {\n        start: {\n          line: 56,\n          column: 6\n        },\n        end: {\n          line: 56,\n          column: 29\n        }\n      },\n      \"22\": {\n        start: {\n          line: 61,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 5\n        }\n      },\n      \"23\": {\n        start: {\n          line: 62,\n          column: 19\n        },\n        end: {\n          line: 62,\n          column: 60\n        }\n      },\n      \"24\": {\n        start: {\n          line: 63,\n          column: 6\n        },\n        end: {\n          line: 63,\n          column: 58\n        }\n      },\n      \"25\": {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 16\n        }\n      },\n      \"26\": {\n        start: {\n          line: 70,\n          column: 4\n        },\n        end: {\n          line: 70,\n          column: 96\n        }\n      },\n      \"27\": {\n        start: {\n          line: 74,\n          column: 26\n        },\n        end: {\n          line: 79,\n          column: 1\n        }\n      },\n      \"28\": {\n        start: {\n          line: 76,\n          column: 4\n        },\n        end: {\n          line: 76,\n          column: 29\n        }\n      },\n      \"29\": {\n        start: {\n          line: 77,\n          column: 4\n        },\n        end: {\n          line: 77,\n          column: 24\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 17,\n            column: 2\n          },\n          end: {\n            line: 17,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 17,\n            column: 16\n          },\n          end: {\n            line: 19,\n            column: 3\n          }\n        },\n        line: 17\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 21,\n            column: 2\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 10\n          },\n          end: {\n            line: 23,\n            column: 3\n          }\n        },\n        line: 21\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 2\n          },\n          end: {\n            line: 25,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 25,\n            column: 24\n          },\n          end: {\n            line: 27,\n            column: 3\n          }\n        },\n        line: 25\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 2\n          },\n          end: {\n            line: 29,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 46\n          },\n          end: {\n            line: 48,\n            column: 3\n          }\n        },\n        line: 29\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 29\n          },\n          end: {\n            line: 30,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 42\n          },\n          end: {\n            line: 47,\n            column: 5\n          }\n        },\n        line: 30\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 31,\n            column: 30\n          },\n          end: {\n            line: 31,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 31,\n            column: 46\n          },\n          end: {\n            line: 36,\n            column: 7\n          }\n        },\n        line: 31\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 54,\n            column: 2\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 54,\n            column: 30\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        line: 54\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 60,\n            column: 2\n          },\n          end: {\n            line: 60,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 32\n          },\n          end: {\n            line: 67,\n            column: 3\n          }\n        },\n        line: 60\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 69,\n            column: 2\n          },\n          end: {\n            line: 69,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 69,\n            column: 43\n          },\n          end: {\n            line: 71,\n            column: 3\n          }\n        },\n        line: 69\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 75,\n            column: 10\n          },\n          end: {\n            line: 75,\n            column: 11\n          }\n        },\n        loc: {\n          start: {\n            line: 75,\n            column: 29\n          },\n          end: {\n            line: 78,\n            column: 3\n          }\n        },\n        line: 75\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 8\n          },\n          end: {\n            line: 35,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 8\n          },\n          end: {\n            line: 35,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 8\n          },\n          end: {\n            line: 35,\n            column: 9\n          }\n        }],\n        line: 33\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 12\n          },\n          end: {\n            line: 33,\n            column: 43\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 12\n          },\n          end: {\n            line: 33,\n            column: 15\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 19\n          },\n          end: {\n            line: 33,\n            column: 43\n          }\n        }],\n        line: 33\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 39,\n            column: 6\n          },\n          end: {\n            line: 43,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 39,\n            column: 6\n          },\n          end: {\n            line: 43,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 39,\n            column: 6\n          },\n          end: {\n            line: 43,\n            column: 7\n          }\n        }],\n        line: 39\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 54,\n            column: 14\n          },\n          end: {\n            line: 54,\n            column: 28\n          }\n        },\n        type: \"default-arg\",\n        locations: [{\n          start: {\n            line: 54,\n            column: 23\n          },\n          end: {\n            line: 54,\n            column: 28\n          }\n        }],\n        line: 54\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 57,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 57,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 55,\n            column: 4\n          },\n          end: {\n            line: 57,\n            column: 5\n          }\n        }],\n        line: 55\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 61,\n            column: 4\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        }],\n        line: 61\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0],\n      \"4\": [0, 0],\n      \"5\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"4187e1c7329916b16f95c9b28b41d2e80cbdaf6d\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_1v48fgq7z7 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_1v48fgq7z7();\nimport StockfishWorker from './stockfish8.worker';\nvar LVL_MOVETIMES = (cov_1v48fgq7z7().s[0]++, [100, 200, 300, 400, 600, 800, 1000, 2000]);\nvar LVL_DEPTHS = (cov_1v48fgq7z7().s[1]++, [1, 1, 2, 3, 5, 8, 13, 22]);\nvar botLevel = (cov_1v48fgq7z7().s[2]++, 1);\n\nvar Stockfish = /*#__PURE__*/function () {\n  function Stockfish() {\n    _classCallCheck(this, Stockfish);\n\n    _defineProperty(this, \"worker\", void 0);\n\n    cov_1v48fgq7z7().f[0]++;\n    cov_1v48fgq7z7().s[3]++;\n    this.worker = new StockfishWorker();\n  }\n\n  _createClass(Stockfish, [{\n    key: \"start\",\n    value: function start() {\n      cov_1v48fgq7z7().f[1]++;\n      cov_1v48fgq7z7().s[4]++;\n      this.send('isready');\n    }\n  }, {\n    key: \"send\",\n    value: function send(message) {\n      cov_1v48fgq7z7().f[2]++;\n      cov_1v48fgq7z7().s[5]++;\n      this.worker.postMessage(message);\n    }\n  }, {\n    key: \"getMove\",\n    value: function getMove(fen) {\n      var _this = this;\n\n      return _regeneratorRuntime.async(function getMove$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cov_1v48fgq7z7().f[3]++;\n              cov_1v48fgq7z7().s[6]++;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                cov_1v48fgq7z7().f[4]++;\n                cov_1v48fgq7z7().s[7]++;\n\n                _this.worker.onmessage = function (event) {\n                  cov_1v48fgq7z7().f[5]++;\n                  var msg = (cov_1v48fgq7z7().s[8]++, event.data);\n                  cov_1v48fgq7z7().s[9]++;\n\n                  if ((cov_1v48fgq7z7().b[1][0]++, msg) && (cov_1v48fgq7z7().b[1][1]++, msg.includes('bestmove'))) {\n                    cov_1v48fgq7z7().b[0][0]++;\n                    cov_1v48fgq7z7().s[10]++;\n                    resolve(msg.split(' ')[1]);\n                  } else {\n                    cov_1v48fgq7z7().b[0][1]++;\n                  }\n                };\n\n                var lvl = (cov_1v48fgq7z7().s[11]++, Math.round((botLevel - 1) * 20.0 / 7));\n                cov_1v48fgq7z7().s[12]++;\n\n                _this.send(\"setoption name Skill Level value \".concat(lvl));\n\n                cov_1v48fgq7z7().s[13]++;\n\n                if (fen !== '') {\n                  cov_1v48fgq7z7().b[2][0]++;\n                  cov_1v48fgq7z7().s[14]++;\n\n                  _this.send(\"position fen \".concat(fen));\n                } else {\n                  cov_1v48fgq7z7().b[2][1]++;\n                  cov_1v48fgq7z7().s[15]++;\n\n                  _this.send('position startpos');\n                }\n\n                var depth = (cov_1v48fgq7z7().s[16]++, LVL_DEPTHS[botLevel - 1]);\n                var movetime = (cov_1v48fgq7z7().s[17]++, LVL_MOVETIMES[botLevel - 1]);\n                cov_1v48fgq7z7().s[18]++;\n\n                _this.send(\"go depth \".concat(depth, \" movetime \").concat(movetime));\n              }));\n\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Stockfish;\n}();\n\nexport var StockfishBot = /*#__PURE__*/function () {\n  function StockfishBot() {\n    var isTest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1v48fgq7z7().b[3][0]++, false);\n\n    _classCallCheck(this, StockfishBot);\n\n    _defineProperty(this, \"stockfish\", (cov_1v48fgq7z7().s[19]++, new Stockfish()));\n\n    cov_1v48fgq7z7().f[6]++;\n    cov_1v48fgq7z7().s[20]++;\n\n    if (!isTest) {\n      cov_1v48fgq7z7().b[4][0]++;\n      cov_1v48fgq7z7().s[21]++;\n      this.stockfish.start();\n    } else {\n      cov_1v48fgq7z7().b[4][1]++;\n    }\n  }\n\n  _createClass(StockfishBot, [{\n    key: \"play\",\n    value: function play(state) {\n      var move;\n      return _regeneratorRuntime.async(function play$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              cov_1v48fgq7z7().f[7]++;\n              cov_1v48fgq7z7().s[22]++;\n\n              if (state.ctx.gameover) {\n                _context2.next = 12;\n                break;\n              }\n\n              cov_1v48fgq7z7().b[5][0]++;\n              cov_1v48fgq7z7().s[23]++;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(this.stockfish.getMove(state.G.fen));\n\n            case 7:\n              move = _context2.sent;\n              cov_1v48fgq7z7().s[24]++;\n              return _context2.abrupt(\"return\", this.makeMove(move, state.ctx.currentPlayer));\n\n            case 12:\n              cov_1v48fgq7z7().b[5][1]++;\n              cov_1v48fgq7z7().s[25]++;\n              return _context2.abrupt(\"return\", {});\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"makeMove\",\n    value: function makeMove(move, playerID) {\n      cov_1v48fgq7z7().f[8]++;\n      cov_1v48fgq7z7().s[26]++;\n      return {\n        action: {\n          type: 'MAKE_MOVE',\n          payload: {\n            type: 'move',\n            args: [move],\n            playerID: playerID\n          }\n        }\n      };\n    }\n  }]);\n\n  return StockfishBot;\n}();\nvar config = (cov_1v48fgq7z7().s[27]++, {\n  bgioAI: function bgioAI(level) {\n    cov_1v48fgq7z7().f[9]++;\n    cov_1v48fgq7z7().s[28]++;\n    botLevel = Number(level);\n    cov_1v48fgq7z7().s[29]++;\n    return StockfishBot;\n  }\n});\nexport default config;","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/chess/ai.ts"],"names":["StockfishWorker","LVL_MOVETIMES","LVL_DEPTHS","botLevel","Stockfish","worker","send","message","postMessage","fen","Promise","resolve","onmessage","event","msg","data","includes","split","lvl","Math","round","depth","movetime","StockfishBot","isTest","stockfish","start","state","ctx","gameover","getMove","G","move","makeMove","currentPlayer","playerID","action","type","payload","args","config","bgioAI","level","Number"],"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","sourcesContent":["import { IAIConfig } from '../index';\nimport StockfishWorker from './stockfish8.worker';\n\ninterface IPlayState {\n  G: any;\n  ctx: any;\n}\n\nconst LVL_MOVETIMES = [100, 200, 300, 400, 600, 800, 1000, 2000];\nconst LVL_DEPTHS = [1, 1, 2, 3, 5, 8, 13, 22];\n\nlet botLevel = 1;\n\nclass Stockfish {\n  worker: any;\n\n  constructor() {\n    this.worker = new StockfishWorker();\n  }\n\n  start() {\n    this.send('isready');\n  }\n\n  send(message: string) {\n    this.worker.postMessage(message);\n  }\n\n  async getMove(fen: string): Promise<string> {\n    return await new Promise((resolve) => {\n      this.worker.onmessage = (event: any) => {\n        const msg = event.data;\n        if (msg && msg.includes('bestmove')) {\n          resolve(msg.split(' ')[1]);\n        }\n      };\n      const lvl = Math.round(((botLevel - 1) * 20.0) / 7);\n      this.send(`setoption name Skill Level value ${lvl}`);\n      if (fen !== '') {\n        this.send(`position fen ${fen}`);\n      } else {\n        this.send('position startpos');\n      }\n      const depth = LVL_DEPTHS[botLevel - 1];\n      const movetime = LVL_MOVETIMES[botLevel - 1];\n      this.send(`go depth ${depth} movetime ${movetime}`);\n    });\n  }\n}\n\nexport class StockfishBot {\n  stockfish = new Stockfish();\n\n  constructor(isTest = false) {\n    if (!isTest) {\n      this.stockfish.start();\n    }\n  }\n\n  async play(state: IPlayState) {\n    if (!state.ctx.gameover) {\n      const move = await this.stockfish.getMove(state.G.fen);\n      return this.makeMove(move, state.ctx.currentPlayer);\n    } else {\n      return {};\n    }\n  }\n\n  makeMove(move: string, playerID: string) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'move', args: [move], playerID } } };\n  }\n}\n\nconst config: IAIConfig = {\n  bgioAI: (level: string) => {\n    botLevel = Number(level);\n    return StockfishBot;\n  },\n};\nexport default config;\n"]},"metadata":{},"sourceType":"module"}