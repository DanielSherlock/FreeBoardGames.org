{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction cov_v5d7rk7x2() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bhand.tsx\";\n  var hash = \"119aed3c167f7f4d28fe86572df7a9a904d63b92\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bhand.tsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 22,\n          column: 19\n        },\n        end: {\n          line: 22,\n          column: 34\n        }\n      },\n      \"1\": {\n        start: {\n          line: 23,\n          column: 8\n        },\n        end: {\n          line: 76,\n          column: 9\n        }\n      },\n      \"2\": {\n        start: {\n          line: 28,\n          column: 38\n        },\n        end: {\n          line: 28,\n          column: 71\n        }\n      },\n      \"3\": {\n        start: {\n          line: 31,\n          column: 45\n        },\n        end: {\n          line: 31,\n          column: 49\n        }\n      },\n      \"4\": {\n        start: {\n          line: 33,\n          column: 24\n        },\n        end: {\n          line: 45,\n          column: 25\n        }\n      },\n      \"5\": {\n        start: {\n          line: 34,\n          column: 28\n        },\n        end: {\n          line: 36,\n          column: 105\n        }\n      },\n      \"6\": {\n        start: {\n          line: 39,\n          column: 28\n        },\n        end: {\n          line: 44,\n          column: 29\n        }\n      },\n      \"7\": {\n        start: {\n          line: 40,\n          column: 32\n        },\n        end: {\n          line: 40,\n          column: 46\n        }\n      },\n      \"8\": {\n        start: {\n          line: 41,\n          column: 32\n        },\n        end: {\n          line: 41,\n          column: 42\n        }\n      },\n      \"9\": {\n        start: {\n          line: 43,\n          column: 32\n        },\n        end: {\n          line: 43,\n          column: 95\n        }\n      },\n      \"10\": {\n        start: {\n          line: 47,\n          column: 24\n        },\n        end: {\n          line: 72,\n          column: 25\n        }\n      },\n      \"11\": {\n        start: {\n          line: 63,\n          column: 58\n        },\n        end: {\n          line: 63,\n          column: 87\n        }\n      },\n      \"12\": {\n        start: {\n          line: 64,\n          column: 59\n        },\n        end: {\n          line: 64,\n          column: 89\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 21,\n            column: 4\n          },\n          end: {\n            line: 21,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 21,\n            column: 13\n          },\n          end: {\n            line: 77,\n            column: 5\n          }\n        },\n        line: 21\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 25,\n            column: 33\n          },\n          end: {\n            line: 25,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 26,\n            column: 20\n          },\n          end: {\n            line: 73,\n            column: 21\n          }\n        },\n        line: 26\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 63,\n            column: 51\n          },\n          end: {\n            line: 63,\n            column: 52\n          }\n        },\n        loc: {\n          start: {\n            line: 63,\n            column: 57\n          },\n          end: {\n            line: 63,\n            column: 88\n          }\n        },\n        line: 63\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 64,\n            column: 52\n          },\n          end: {\n            line: 64,\n            column: 53\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 58\n          },\n          end: {\n            line: 64,\n            column: 90\n          }\n        },\n        line: 64\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 33,\n            column: 24\n          },\n          end: {\n            line: 45,\n            column: 25\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 33,\n            column: 24\n          },\n          end: {\n            line: 45,\n            column: 25\n          }\n        }, {\n          start: {\n            line: 33,\n            column: 24\n          },\n          end: {\n            line: 45,\n            column: 25\n          }\n        }],\n        line: 33\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 35,\n            column: 47\n          },\n          end: {\n            line: 35,\n            column: 106\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 35,\n            column: 78\n          },\n          end: {\n            line: 35,\n            column: 99\n          }\n        }, {\n          start: {\n            line: 35,\n            column: 102\n          },\n          end: {\n            line: 35,\n            column: 106\n          }\n        }],\n        line: 35\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 36,\n            column: 47\n          },\n          end: {\n            line: 36,\n            column: 104\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 36,\n            column: 78\n          },\n          end: {\n            line: 36,\n            column: 99\n          }\n        }, {\n          start: {\n            line: 36,\n            column: 102\n          },\n          end: {\n            line: 36,\n            column: 104\n          }\n        }],\n        line: 36\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 39,\n            column: 28\n          },\n          end: {\n            line: 44,\n            column: 29\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 39,\n            column: 28\n          },\n          end: {\n            line: 44,\n            column: 29\n          }\n        }, {\n          start: {\n            line: 39,\n            column: 28\n          },\n          end: {\n            line: 44,\n            column: 29\n          }\n        }],\n        line: 39\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 61,\n            column: 34\n          },\n          end: {\n            line: 69,\n            column: 40\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 63,\n            column: 36\n          },\n          end: {\n            line: 67,\n            column: 51\n          }\n        }, {\n          start: {\n            line: 69,\n            column: 36\n          },\n          end: {\n            line: 69,\n            column: 40\n          }\n        }],\n        line: 61\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"119aed3c167f7f4d28fe86572df7a9a904d63b92\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_v5d7rk7x2 = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_v5d7rk7x2();\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { BCard } from './bcard';\nimport { BHint } from './bhint';\nimport { BPlay } from './bplay';\nimport style from './bhand.css';\nexport var BHand = /*#__PURE__*/function (_React$Component) {\n  _inherits(BHand, _React$Component);\n\n  var _super = _createSuper(BHand);\n\n  function BHand() {\n    _classCallCheck(this, BHand);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BHand, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      cov_v5d7rk7x2().f[0]++;\n      var hand = (cov_v5d7rk7x2().s[0]++, this.props.hand);\n      cov_v5d7rk7x2().s[1]++;\n      return __jsx(\"div\", {\n        className: style.hand\n      }, hand.cards.map(function (card, card_index) {\n        cov_v5d7rk7x2().f[1]++;\n        // If player, then 'overwrite' the card with the info from the hint\n        var hint = (cov_v5d7rk7x2().s[2]++, _this.props.hand.hints[card_index]);\n        var newCard;\n        var empty = (cov_v5d7rk7x2().s[3]++, null);\n        cov_v5d7rk7x2().s[4]++;\n\n        if (_this.props.me) {\n          cov_v5d7rk7x2().b[0][0]++;\n          cov_v5d7rk7x2().s[5]++;\n          newCard = {\n            id: -1,\n            value: hint.value.indexOf(1) !== -1 ? (cov_v5d7rk7x2().b[1][0]++, hint.value.indexOf(1)) : (cov_v5d7rk7x2().b[1][1]++, null),\n            color: hint.color.indexOf(1) !== -1 ? (cov_v5d7rk7x2().b[2][0]++, hint.color.indexOf(1)) : (cov_v5d7rk7x2().b[2][1]++, -1)\n          };\n        } else {\n          cov_v5d7rk7x2().b[0][1]++;\n          cov_v5d7rk7x2().s[6]++;\n\n          // TODO: Error here if pick up empty!\n          if (card === null) {\n            cov_v5d7rk7x2().b[3][0]++;\n            cov_v5d7rk7x2().s[7]++;\n            // This can happen if you pick up the last card.\n            newCard = null;\n            cov_v5d7rk7x2().s[8]++;\n            empty = -1;\n          } else {\n            cov_v5d7rk7x2().b[3][1]++;\n            cov_v5d7rk7x2().s[9]++;\n            newCard = {\n              id: card.id,\n              value: card.value,\n              color: card.color\n            };\n          }\n        }\n\n        cov_v5d7rk7x2().s[10]++;\n        return __jsx(\"div\", {\n          className: style.card_column,\n          key: _this.props.keyPropagation + \"BHand\" + card_index.toString()\n        }, __jsx(BHint, {\n          hint: hint,\n          keyPropagation: _this.props.keyPropagation + \"BHand\" + card_index.toString()\n        }), __jsx(BCard, {\n          card: newCard,\n          empty: empty\n        }), _this.props.me ? (cov_v5d7rk7x2().b[4][0]++, __jsx(BPlay, {\n          onPlay: function onPlay() {\n            cov_v5d7rk7x2().f[2]++;\n            cov_v5d7rk7x2().s[11]++;\n\n            _this.props.onPlay(card_index);\n          },\n          onTrash: function onTrash() {\n            cov_v5d7rk7x2().f[3]++;\n            cov_v5d7rk7x2().s[12]++;\n\n            _this.props.onTrash(card_index);\n          },\n          myTurn: _this.props.myTurn\n        })) : (cov_v5d7rk7x2().b[4][1]++, null));\n      }));\n    }\n  }]);\n\n  return BHand;\n}((React.Component));","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/zooparade/components/bhand.tsx"],"names":["React","BCard","BHint","BPlay","style","BHand","hand","props","cards","map","card","card_index","hint","hints","newCard","empty","me","id","value","indexOf","color","card_column","keyPropagation","toString","onPlay","onTrash","myTurn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IHand, ICard } from '../interfaces';\nimport { BCard } from './bcard';\nimport { BHint } from './bhint';\nimport { BPlay } from './bplay';\n\nimport style from './bhand.css';\n\ninterface InnerWrapper {\n    hand: IHand ;\n    me: boolean ;\n\n    onPlay(id: number): any;\n    onTrash(id: number): any;\n    myTurn: boolean;\n\n    keyPropagation: string;\n}\n\nexport class BHand extends React.Component< InnerWrapper, {}> {\n    render() {\n        var hand = this.props.hand\n        return (\n            <div className={style.hand}>\n                { hand.cards.map((card, card_index) => \n                    {\n                        // If player, then 'overwrite' the card with the info from the hint\n                        const hint =  this.props.hand.hints[card_index]\n\n                        var newCard : ICard\n                        var empty : number = null\n\n                        if (this.props.me) {\n                            newCard = { id: -1, \n                                        value: hint.value.indexOf(1) !== -1 ? hint.value.indexOf(1) : null,\n                                        color: hint.color.indexOf(1) !== -1 ? hint.color.indexOf(1) : -1}\n                        } else {\n                            // TODO: Error here if pick up empty!\n                            if (card === null) { // This can happen if you pick up the last card.\n                                newCard = null\n                                empty = -1\n                            } else {\n                                newCard = { id: card.id, value: card.value, color: card.color }\n                            }\n                        }\n\n                        return (\n                            <div  className={style.card_column}\n                                  key={this.props.keyPropagation + \"BHand\" + card_index.toString()}\n                              >\n                                <BHint\n                                    hint={ hint } \n                                    keyPropagation={this.props.keyPropagation + \"BHand\" + card_index.toString()}\n                                    >\n                                </BHint>\n                                <BCard \n                                    card={ newCard }\n                                    empty = { empty } \n                                    >\n                                </BCard>\n                                { this.props.me \n                                    ? \n                                    <BPlay onPlay={() => {this.props.onPlay(card_index)}} \n                                           onTrash={() => {this.props.onTrash(card_index)}} \n                                           myTurn={this.props.myTurn}\n                                           > \n                                           </BPlay> \n                                    : \n                                    null\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}