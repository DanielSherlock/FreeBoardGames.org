{"ast":null,"code":"function cov_2msw7xr2jk() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/common/gameMode.ts\";\n  var hash = \"e1e58a91b90a0a839b501f1e740063c5286345a2\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/common/gameMode.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 2\n        },\n        end: {\n          line: 5,\n          column: 60\n        }\n      },\n      \"1\": {\n        start: {\n          line: 9,\n          column: 2\n        },\n        end: {\n          line: 9,\n          column: 61\n        }\n      },\n      \"2\": {\n        start: {\n          line: 13,\n          column: 2\n        },\n        end: {\n          line: 13,\n          column: 51\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"isLocalGame\",\n        decl: {\n          start: {\n            line: 4,\n            column: 16\n          },\n          end: {\n            line: 4,\n            column: 27\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 49\n          },\n          end: {\n            line: 6,\n            column: 1\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"isOnlineGame\",\n        decl: {\n          start: {\n            line: 8,\n            column: 16\n          },\n          end: {\n            line: 8,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 8,\n            column: 50\n          },\n          end: {\n            line: 10,\n            column: 1\n          }\n        },\n        line: 8\n      },\n      \"2\": {\n        name: \"isAIGame\",\n        decl: {\n          start: {\n            line: 12,\n            column: 16\n          },\n          end: {\n            line: 12,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 12,\n            column: 46\n          },\n          end: {\n            line: 14,\n            column: 1\n          }\n        },\n        line: 12\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 5,\n            column: 9\n          },\n          end: {\n            line: 5,\n            column: 59\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 5,\n            column: 9\n          },\n          end: {\n            line: 5,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 5,\n            column: 21\n          },\n          end: {\n            line: 5,\n            column: 59\n          }\n        }],\n        line: 5\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 9\n          },\n          end: {\n            line: 9,\n            column: 60\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 9\n          },\n          end: {\n            line: 9,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 21\n          },\n          end: {\n            line: 9,\n            column: 60\n          }\n        }],\n        line: 9\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 13,\n            column: 9\n          },\n          end: {\n            line: 13,\n            column: 50\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 13,\n            column: 9\n          },\n          end: {\n            line: 13,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 13,\n            column: 21\n          },\n          end: {\n            line: 13,\n            column: 50\n          }\n        }],\n        line: 13\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"e1e58a91b90a0a839b501f1e740063c5286345a2\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_2msw7xr2jk = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_2msw7xr2jk();\nimport { GameMode } from 'components/App/Game/GameModePicker';\nexport function isLocalGame(gameArgs) {\n  cov_2msw7xr2jk().f[0]++;\n  cov_2msw7xr2jk().s[0]++;\n  return (cov_2msw7xr2jk().b[0][0]++, gameArgs) && (cov_2msw7xr2jk().b[0][1]++, gameArgs.mode === GameMode.LocalFriend);\n}\nexport function isOnlineGame(gameArgs) {\n  cov_2msw7xr2jk().f[1]++;\n  cov_2msw7xr2jk().s[1]++;\n  return (cov_2msw7xr2jk().b[1][0]++, gameArgs) && (cov_2msw7xr2jk().b[1][1]++, gameArgs.mode === GameMode.OnlineFriend);\n}\nexport function isAIGame(gameArgs) {\n  cov_2msw7xr2jk().f[2]++;\n  cov_2msw7xr2jk().s[2]++;\n  return (cov_2msw7xr2jk().b[2][0]++, gameArgs) && (cov_2msw7xr2jk().b[2][1]++, gameArgs.mode === GameMode.AI);\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/common/gameMode.ts"],"names":["GameMode","isLocalGame","gameArgs","mode","LocalFriend","isOnlineGame","OnlineFriend","isAIGame","AI"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,QAAT,QAAyB,oCAAzB;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA0C;AAAA;AAAA;AAC/C,SAAO,6BAAAA,QAAQ,kCAAIA,QAAQ,CAACC,IAAT,KAAkBH,QAAQ,CAACI,WAA/B,CAAf;AACD;AAED,OAAO,SAASC,YAAT,CAAsBH,QAAtB,EAA2C;AAAA;AAAA;AAChD,SAAO,6BAAAA,QAAQ,kCAAIA,QAAQ,CAACC,IAAT,KAAkBH,QAAQ,CAACM,YAA/B,CAAf;AACD;AAED,OAAO,SAASC,QAAT,CAAkBL,QAAlB,EAAuC;AAAA;AAAA;AAC5C,SAAO,6BAAAA,QAAQ,kCAAIA,QAAQ,CAACC,IAAT,KAAkBH,QAAQ,CAACQ,EAA/B,CAAf;AACD","sourcesContent":["import { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameMode } from 'components/App/Game/GameModePicker';\n\nexport function isLocalGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.LocalFriend;\n}\n\nexport function isOnlineGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.OnlineFriend;\n}\n\nexport function isAIGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.AI;\n}\n"]},"metadata":{},"sourceType":"module"}