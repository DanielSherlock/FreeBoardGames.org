{"ast":null,"code":"function cov_11ydtz03f() {\n  var path = \"/home/j/Documents/FreeBoardGames.org/src/games/common/GameUtil.ts\";\n  var hash = \"aeb55b182bda7279d80c5c6cddfa97708ef497ca\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/j/Documents/FreeBoardGames.org/src/games/common/GameUtil.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 19\n        },\n        end: {\n          line: 5,\n          column: 76\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 26\n        },\n        end: {\n          line: 6,\n          column: 84\n        }\n      },\n      \"2\": {\n        start: {\n          line: 7,\n          column: 2\n        },\n        end: {\n          line: 7,\n          column: 37\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"isPlayersTurn\",\n        decl: {\n          start: {\n            line: 4,\n            column: 16\n          },\n          end: {\n            line: 4,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 70\n          },\n          end: {\n            line: 8,\n            column: 1\n          }\n        },\n        line: 4\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 5,\n            column: 19\n          },\n          end: {\n            line: 5,\n            column: 76\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 5,\n            column: 19\n          },\n          end: {\n            line: 5,\n            column: 45\n          }\n        }, {\n          start: {\n            line: 5,\n            column: 49\n          },\n          end: {\n            line: 5,\n            column: 76\n          }\n        }],\n        line: 5\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 26\n          },\n          end: {\n            line: 6,\n            column: 84\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 26\n          },\n          end: {\n            line: 6,\n            column: 52\n          }\n        }, {\n          start: {\n            line: 6,\n            column: 56\n          },\n          end: {\n            line: 6,\n            column: 84\n          }\n        }],\n        line: 6\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 7,\n            column: 9\n          },\n          end: {\n            line: 7,\n            column: 36\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 7,\n            column: 9\n          },\n          end: {\n            line: 7,\n            column: 17\n          }\n        }, {\n          start: {\n            line: 7,\n            column: 21\n          },\n          end: {\n            line: 7,\n            column: 36\n          }\n        }],\n        line: 7\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"aeb55b182bda7279d80c5c6cddfa97708ef497ca\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n\n  cov_11ydtz03f = function () {\n    return actualCoverage;\n  };\n\n  return actualCoverage;\n}\n\ncov_11ydtz03f();\n\n/** Whether given player should play now or not. */\nexport function isPlayersTurn(player, ctx) {\n  cov_11ydtz03f().f[0]++;\n  const isActive = (cov_11ydtz03f().s[0]++, (cov_11ydtz03f().b[0][0]++, ctx.activePlayers !== null) && (cov_11ydtz03f().b[0][1]++, player in ctx.activePlayers));\n  const isCurrentPlayer = (cov_11ydtz03f().s[1]++, (cov_11ydtz03f().b[1][0]++, ctx.activePlayers === null) && (cov_11ydtz03f().b[1][1]++, ctx.currentPlayer === player));\n  cov_11ydtz03f().s[2]++;\n  return (cov_11ydtz03f().b[2][0]++, isActive) || (cov_11ydtz03f().b[2][1]++, isCurrentPlayer);\n}","map":{"version":3,"sources":["/home/j/Documents/FreeBoardGames.org/src/games/common/GameUtil.ts"],"names":["isPlayersTurn","player","ctx","isActive","activePlayers","isCurrentPlayer","currentPlayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAAuCC,GAAvC,EAA+D;AAAA;AACpE,QAAMC,QAAQ,4BAAG,4BAAAD,GAAG,CAACE,aAAJ,KAAsB,IAAtB,iCAA8BH,MAAM,IAAIC,GAAG,CAACE,aAA5C,CAAH,CAAd;AACA,QAAMC,eAAe,4BAAG,4BAAAH,GAAG,CAACE,aAAJ,KAAsB,IAAtB,iCAA8BF,GAAG,CAACI,aAAJ,KAAsBL,MAApD,CAAH,CAArB;AAFoE;AAGpE,SAAO,4BAAAE,QAAQ,iCAAIE,eAAJ,CAAf;AACD","sourcesContent":["import { IGameCtx } from 'boardgame.io/core';\n\n/** Whether given player should play now or not. */\nexport function isPlayersTurn(player: string, ctx: IGameCtx): boolean {\n  const isActive = ctx.activePlayers !== null && player in ctx.activePlayers;\n  const isCurrentPlayer = ctx.activePlayers === null && ctx.currentPlayer === player;\n  return isActive || isCurrentPlayer;\n}\n"]},"metadata":{},"sourceType":"module"}