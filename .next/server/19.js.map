{"version":3,"file":"19.js","sources":["webpack:///./src/games/tictactoeplus/ai.ts"],"sourcesContent":["import { IAIConfig } from '../index';\nimport { MCTSBot } from 'boardgame.io/ai';\n\ninterface IPlayState {\n  G: any;\n  ctx: any;\n}\n\nclass TictactoeRandomBot {\n  async play(state: IPlayState, playerID: string) {\n    const cell = this.generateRandomMove(state);\n    return this.makeMove(playerID, cell);\n  }\n  generateRandomMove(state: IPlayState) {\n    const freeCellsIndexes = [];\n    const cells = state.G.cells;\n    for (let i = 0; i < cells.length; i++) {\n      if (cells[i] === null) {\n        freeCellsIndexes.push(i);\n      }\n    }\n    const randIndex = this.randomNumber(0, freeCellsIndexes.length - 1);\n    const cell = freeCellsIndexes[randIndex];\n    return cell;\n  }\n  makeMove(playerID: string, cell: number) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'clickCell', args: [cell], playerID } } };\n  }\n  randomNumber(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\nconst config: IAIConfig = {\n  bgioAI: (level: string) => {\n    if (level === '2') {\n      // Hard\n      return {\n        type: MCTSBot,\n        ai: {\n          enumerate: (G: any) => {\n            const moves = [];\n            for (let i = 0; i < 16; i++) {\n              if (G.cells[i] === null) {\n                moves.push({ move: 'clickCell', args: [i] });\n              }\n            }\n            return moves;\n          },\n        },\n      };\n    } else if (level === '1') {\n      // Easy\n      return {\n        bot: TictactoeRandomBot,\n      };\n    }\n  },\n};\nexport default config;\n"],"mappingsvBA;AACA;AAuBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAPA;AAOA;AACA;AATA;AAFA;AAcA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAKA;AACA;AAxBA;AA0BA;;;;A","sourceRoot":""}