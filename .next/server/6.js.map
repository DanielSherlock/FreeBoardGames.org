{"version":3,"file":"6.js","sources":["webpack:///./src/components/App/Game/GameDarkSublayout.tsx","webpack:///./src/components/App/Game/GameLayout.tsx","webpack:///./src/components/App/Game/GameOver.tsx","webpack:///./src/components/App/GamesList.tsx","webpack:///./src/components/App/MessagePage.tsx","webpack:///./src/components/App/MessagePageClass.tsx","webpack:///./src/components/App/media/SvgError.tsx","webpack:///./src/components/DesktopMobileView.tsx","webpack:///./src/games/checkers/board.tsx","webpack:///./src/games/checkers/config.ts","webpack:///./src/games/checkers/game.ts","webpack:///./src/games/common/Checkerboard.tsx","webpack:///./src/games/common/gameMode.ts","webpack:///./src/hooks/useWindowDimensions.ts","webpack:///./src/ui/2d/grid.js","webpack:///./src/ui/2d/token.js","webpack:///./src/ui/3d/grid.js","webpack:///./src/ui/3d/token.js","webpack:///./src/ui/grid.js","webpack:///./src/ui/index.ts","webpack:///./src/ui/token.js","webpack:///./src/ui/ui-context.js"],"sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport FbgLogo from '../media/fbg_logo_white_48.png';\nimport Button from '@material-ui/core/Button';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GAMES_MAP } from 'games';\nimport { DesktopView } from 'components/DesktopMobileView';\n\ninterface IGameDarkSublayoutProps {\n  children: React.ReactNode;\n  optionsMenuItems?: () => IOptionsItems[];\n  allowWiderScreen?: boolean;\n  gameArgs: IGameArgs;\n}\n\ninterface IGameDarkSublayoutState {\n  feedback: boolean;\n  menuAnchorEl: any;\n  prevBgColor: string;\n}\n\nexport interface IOptionsItems {\n  text: string;\n  onClick: () => void;\n}\n\nexport class GameDarkSublayout extends React.Component<IGameDarkSublayoutProps, IGameDarkSublayoutState> {\n  constructor(props: IGameDarkSublayoutProps) {\n    super(props);\n    this.state = { feedback: null, menuAnchorEl: null, prevBgColor: document.body.style.backgroundColor };\n    document.body.style.backgroundColor = 'black';\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = this.state.prevBgColor;\n  }\n\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    const gameName = GAMES_MAP[this.props.gameArgs.gameCode].name;\n    let fbgTopLeftText;\n    if (isProdChannel) {\n      if (gameName) {\n        fbgTopLeftText = (\n          <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'left', paddingTop: '9px', color: 'white' }}>\n            {gameName}\n          </Typography>\n        );\n      }\n    } else {\n      fbgTopLeftText = (\n        <Typography\n          variant=\"h6\"\n          gutterBottom={true}\n          style={{ float: 'left', marginTop: '10px', backgroundColor: 'red', color: 'white' }}\n        >\n          &nbsp;{gameName}&nbsp;\n        </Typography>\n      );\n    }\n\n    let feedbackButtonOrText;\n    if (this.state.feedback) {\n      feedbackButtonOrText = (\n        <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'right', paddingTop: '10px', color: 'white' }}>\n          Desktop View is Experimental.\n        </Typography>\n      );\n    } else {\n      feedbackButtonOrText = (\n        <DesktopView thresholdWidth={680}>\n          <Button\n            onClick={this._toggleFeedback}\n            aria-label=\"Desktop View is Experimental.\"\n            variant=\"outlined\"\n            style={{ float: 'right', paddingTop: '14px' }}\n          >\n            <FeedbackIcon style={{ color: 'white' }} />\n          </Button>\n        </DesktopView>\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            position: 'fixed',\n            top: '0',\n            width: '100%',\n            zIndex: 1,\n          }}\n        >\n          <div\n            style={{\n              maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          >\n            <Link href=\"/\">\n              <a style={{ float: 'left', textDecoration: 'none' }}>\n                <img src={FbgLogo} alt=\"FreeBoardGames.org\" style={{ float: 'left', paddingRight: '16px' }} />\n                {fbgTopLeftText}\n              </a>\n            </Link>\n            {this._getOptionsMenuButton()}\n            {this._getOptionsMenuItems()}\n            {feedbackButtonOrText}\n          </div>\n        </div>\n        <div\n          style={{\n            position: 'fixed',\n            width: '100%',\n            maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n            color: 'white',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n  _getOptionsMenuButton() {\n    if (this.props.optionsMenuItems) {\n      return (\n        <Button\n          onClick={this._openOptionsMenu}\n          aria-label=\"Open options\"\n          variant=\"outlined\"\n          style={{ margin: '8px', float: 'right' }}\n        >\n          <MoreVert style={{ color: 'white' }} />\n        </Button>\n      );\n    }\n  }\n\n  _toggleFeedback = () => {\n    setTimeout(() => {\n      this.setState({ feedback: false });\n    }, 5000);\n    this.setState({ feedback: !this.state.feedback });\n  };\n\n  _openOptionsMenu = (event: any) => {\n    this.setState({ menuAnchorEl: event.currentTarget });\n  };\n\n  _closeOptionsMenu = () => {\n    this.setState({ menuAnchorEl: null });\n  };\n\n  _wrapOnClick = (onClickFunc: () => void) => () => {\n    // close menu, call onClickFunc\n    this._closeOptionsMenu();\n    onClickFunc();\n  };\n\n  _getOptionsMenuItems = () => {\n    if (!this.props.optionsMenuItems) {\n      return;\n    }\n    const { menuAnchorEl } = this.state;\n    const menuItems = this.props.optionsMenuItems().map((option: IOptionsItems, index) => {\n      return (\n        <MenuItem key={`option-${index}`} onClick={this._wrapOnClick(option.onClick)}>\n          {option.text}\n        </MenuItem>\n      );\n    });\n    return (\n      <Menu id=\"simple-menu\" anchorEl={menuAnchorEl} open={Boolean(menuAnchorEl)} onClose={this._closeOptionsMenu}>\n        {menuItems}\n      </Menu>\n    );\n  };\n}\n","import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\n\nexport interface IGameOverProps {\n  result: string;\n  gameArgs?: IGameArgs;\n  extraCardContent?: React.ReactNode;\n}\n\nexport interface IGameOverState {\n  loading: boolean;\n}\n\nexport class GameOver extends React.Component<IGameOverProps, {}> {\n  state = { loading: false };\n  render() {\n    if (this.state.loading) {\n      const Page = getMessagePage('loading', 'Loading...');\n      return <Page />;\n    }\n    let playAgain;\n    const extraCardContent = this._getExtraCardContent();\n    if (this.props.gameArgs) {\n      playAgain = (\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            onClick={this._playAgainHandle}\n            variant=\"outlined\"\n            style={{ marginRight: 'auto', marginLeft: 'auto', marginBottom: '24px' }}\n          >\n            <ReplayIcon style={{ marginRight: '8px' }} />\n            Play Again\n          </Button>\n        </div>\n      );\n    }\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over',\n    });\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <Typography variant=\"h6\" gutterBottom={true} align=\"center\" style={{ marginTop: '16px' }}>\n          Game Over, {this.props.result}!\n        </Typography>\n        {playAgain}\n        {extraCardContent}\n        <GamesList />\n      </FreeBoardGamesBar>\n    );\n  }\n  _getExtraCardContent = () => {\n    if (!this.props.extraCardContent) {\n      return null;\n    }\n    const otherPlayerCard = (\n      <div style={{ paddingBottom: '12px', maxWidth: '500px', margin: 'auto' }}>{this.props.extraCardContent}</div>\n    );\n    return otherPlayerCard;\n  };\n\n  _playAgainHandle = async () => {\n    const args = this.props.gameArgs;\n    ReactGA.event({\n      category: 'GameOver',\n      action: 'Clicked play again',\n      label: args.gameCode,\n    });\n\n    if (args.mode === GameMode.AI || args.mode === GameMode.LocalFriend) {\n      Router.push(window.location.pathname);\n    } else {\n      this.setState({ loading: true });\n      const nextRoomId = await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length);\n      Router.push(`/room/${args.gameCode}/${nextRoomId}` as any);\n    }\n  };\n}\n","import React from 'react';\nimport { GAMES_LIST } from 'games';\nimport { GameCard } from './Game/GameCard';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\nexport class GamesList extends React.Component<{}, {}> {\n  public render() {\n    const gamesList = GAMES_LIST.map((game) => (\n      <Link href={`/play/[gameCode]`} as={`/play/${game.code}`} key={game.code}>\n        <a style={{ textDecoration: 'none', flex: 1, minWidth: '300px', maxWidth: '380px', margin: '8px' }}>\n          <GameCard game={game} isLink={true} />\n        </a>\n      </Link>\n    ));\n    return (\n      <div style={{ marginBottom: '16px' }}>\n        <Typography component=\"h2\" variant=\"h6\" style={{ marginBottom: '16px', marginLeft: '6px' }}>\n          Games\n        </Typography>\n        <div style={{ margin: '0 4px', display: 'flex', flexWrap: 'wrap' }}>{gamesList}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport MessagePageClass from './MessagePageClass';\n\nconst getMessagePage = (type: 'error' | 'loading', message: string) => {\n  return () => {\n    return <MessagePageClass type={type} message={message} />;\n  };\n};\n\nexport default getMessagePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FreeBoardGamesBar from './FreeBoardGamesBar';\nimport SvgError from './media/SvgError';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\ninterface IMessageState {\n  linkHidden: boolean;\n  startTime: number;\n}\n\ninterface IMessageProps {\n  type: string;\n  message: string;\n  actionComponent?: JSX.Element;\n}\n\nexport class MessagePage extends React.Component<IMessageProps, IMessageState> {\n  requestID: number = null;\n  constructor(props: IMessageProps) {\n    super(props);\n    this.state = {\n      linkHidden: props.type !== 'error',\n      startTime: Date.now(),\n    };\n    if (typeof window !== 'undefined' && props.type !== 'error') {\n      this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n    }\n  }\n\n  _animate = (now: number) => () => {\n    if (this.requestID) {\n      const elapsed = now - this.state.startTime;\n      const linkHidden = elapsed < 5000;\n      this.setState({\n        ...this.state,\n        linkHidden,\n      });\n      if (linkHidden) {\n        this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.requestID) {\n      window.cancelAnimationFrame(this.requestID);\n      this.requestID = null;\n    }\n  }\n\n  render() {\n    let icon;\n    let linkHome;\n    if (this.props.type === 'error') {\n      icon = <SvgError style={{ height: '128px' }} />;\n    } else {\n      icon = <CircularProgress />;\n    }\n    if (!this.state.linkHidden) {\n      const goHomeText = 'Go Home';\n      linkHome = (\n        <Link href=\"/\">\n          <a style={{ textDecoration: 'none' }}>\n            <Button variant=\"outlined\" style={{ margin: '8px' }}>\n              <HomeIcon style={{ marginRight: '8px' }} />\n              {goHomeText}\n            </Button>\n          </a>\n        </Link>\n      );\n    }\n    return (\n      <FreeBoardGamesBar>\n        <div style={{ paddingTop: '16px', textAlign: 'center' }}>\n          {icon}\n          <Typography variant=\"h6\" gutterBottom={true} style={{ paddingTop: '16px' }}>\n            {this.props.message}\n            <br />\n            <br />\n            {linkHome}\n            {this.props.actionComponent}\n          </Typography>\n        </div>\n      </FreeBoardGamesBar>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nconst SvgError = (props: any) => (\n  <svg viewBox=\"0 0 1 1\" style={props.style}>\n    <g>\n      <line x1=\"0.2\" y1=\"0.2\" x2=\"0.8\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n      <line x1=\"0.8\" y1=\"0.2\" x2=\"0.2\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n    </g>\n  </svg>\n);\n\nexport default SvgError;\n","import React from 'react';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport MobileDetect from 'mobile-detect';\n\ninterface DesktopMobileViewProps {\n  children: React.ReactNode;\n  thresholdWidth?: number;\n  userAgent?: any;\n}\n\nconst DEFAULT_THRESHOLD_WIDTH = 550;\n\nfunction isMobile(props: DesktopMobileViewProps) {\n  const hasJssSSRStyles = typeof document !== 'undefined' && !!document?.querySelector('#jss-server-side');\n  let width = useWindowDimensions().width;\n  const isBrowser = typeof window !== 'undefined';\n  let isMobileResult: boolean;\n  if ((!isBrowser || hasJssSSRStyles) && props.userAgent) {\n    // keep the isDesktop() return uniform if JSS styles exist\n    const md = new MobileDetect(props.userAgent);\n    isMobileResult = !!md.mobile() && !md.tablet();\n  } else {\n    const thresholdWidth = props.thresholdWidth || DEFAULT_THRESHOLD_WIDTH;\n    isMobileResult = width <= thresholdWidth;\n  }\n  return isMobileResult;\n}\n\nexport const DesktopView = (props: DesktopMobileViewProps) => {\n  if (!isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nexport const MobileView = (props: DesktopMobileViewProps) => {\n  if (isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n","import * as React from 'react';\nimport { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameLayout } from 'components/App/Game/GameLayout';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG, toCoord, IMove, getValidMoves, areCoordsEqual } from './game';\nimport {\n  Checkerboard,\n  IAlgebraicCoords,\n  ICartesianCoords,\n  IOnDragData,\n  applyInvertion,\n  algebraicToCartesian,\n  IColorMap,\n  cartesianToAlgebraic,\n} from '../common/Checkerboard';\nimport { Token } from 'ui';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport { isOnlineGame, isLocalGame, isAIGame } from '../common/gameMode';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  step?: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n}\n\ninterface IBoardState {\n  selected: ICartesianCoords;\n  validMoves: IMove[];\n}\n\nfunction roundCoords(coords: ICartesianCoords) {\n  return { x: Math.round(coords.x), y: Math.round(coords.y) };\n}\n\nexport class Board extends React.Component<IBoardProps, IBoardState> {\n  state: IBoardState = {\n    selected: null,\n    validMoves: getValidMoves(this.props.G, this.props.ctx.currentPlayer),\n  };\n\n  isInverted() {\n    return isOnlineGame(this.props.gameArgs) && this.props.playerID === '1';\n  }\n\n  _isSelectable = (coords: ICartesianCoords) => {\n    if (isOnlineGame(this.props.gameArgs) && this.props.playerID !== this.props.ctx.currentPlayer) {\n      return false;\n    }\n\n    return this.state.validMoves.some((move) => areCoordsEqual(move.from, coords));\n  };\n\n  _onClick = (coords: IAlgebraicCoords) => {\n    const position = algebraicToCartesian(coords.square);\n    if (this.state.selected === null && this._isSelectable(position)) {\n      this.setState({\n        ...this.state,\n        selected: position,\n      });\n    } else {\n      this._move(position);\n    }\n  };\n\n  _shouldDrag = (coords: ICartesianCoords) => {\n    return this._isSelectable(applyInvertion(coords, this.isInverted()));\n  };\n\n  _onDrag = (coords: IOnDragData) => {\n    const x = coords.x;\n    const y = coords.y;\n    const originalX = coords.originalX;\n    const originalY = coords.originalY;\n    if (Math.sqrt((x - originalX) ** 2 + (y - originalY) ** 2) > 0.2) {\n      this.setState({\n        ...this.state,\n        selected: applyInvertion({ x: originalX, y: originalY }, this.isInverted()),\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        selected: null,\n      });\n    }\n  };\n\n  _onDrop = async (coords: ICartesianCoords) => {\n    if (this.state.selected) {\n      this._move(applyInvertion(roundCoords(coords), this.isInverted()));\n    }\n  };\n\n  _move = async (coords: ICartesianCoords) => {\n    if (this.state.selected === null || coords === null) {\n      return;\n    }\n\n    await this.props.moves.move(this.state.selected, coords);\n    this.setState({\n      ...this.state,\n      selected: null,\n    });\n  };\n\n  _getHighlightedSquares() {\n    const result = {} as IColorMap;\n\n    if (this.state.selected !== null) {\n      result[cartesianToAlgebraic(this.state.selected.x, this.state.selected.y, false)] = blue[700];\n      this.state.validMoves\n        .filter((move) => areCoordsEqual(this.state.selected, move.from))\n        .forEach((move) => {\n          result[cartesianToAlgebraic(move.to.x, move.to.y, false)] = blue[500];\n        });\n    }\n\n    return result;\n  }\n\n  getPieces = () => {\n    return this.props.G.board\n      .map((piece, index) => ({ data: piece, index }))\n      .filter((piece) => piece.data !== null)\n      .map((piece) => {\n        const { x, y } = toCoord(piece.index);\n        return (\n          <Token\n            x={x}\n            y={y}\n            draggable={true}\n            shouldDrag={this._shouldDrag}\n            onDrop={this._onDrop}\n            onDrag={this._onDrag}\n            animate={true}\n            key={piece.data.id}\n          >\n            <g>\n              <circle r=\"0.4\" fill={piece.data.playerID === '0' ? grey[50] : grey[900]} cx=\"0.5\" cy=\"0.5\" />\n              {piece.data.isKing ? (\n                <circle r=\"0.2\" cx=\"0.5\" cy=\"0.5\" fill={piece.data.playerID === '1' ? grey[800] : grey[400]} />\n              ) : null}\n            </g>\n          </Token>\n        );\n      });\n  };\n\n  _getStatus() {\n    if (isOnlineGame(this.props.gameArgs) || isAIGame(this.props.gameArgs)) {\n      if (this.props.ctx.currentPlayer === this.props.playerID) {\n        return 'Move piece';\n      } else {\n        return 'Waiting for opponent...';\n      }\n    } else {\n      switch (this.props.ctx.currentPlayer) {\n        case '0':\n          return \"White's turn\";\n        case '1':\n          return \"Black's turn\";\n      }\n    }\n  }\n\n  _getGameOver() {\n    const winner = this.props.ctx.gameover.winner;\n    if (winner) {\n      if (isLocalGame(this.props.gameArgs)) {\n        if (winner === '0') {\n          return 'white won';\n        } else {\n          return 'black won';\n        }\n      } else {\n        if (winner === this.props.playerID) {\n          return 'you won';\n        } else {\n          return 'you lost';\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: IBoardProps) {\n    if (prevProps.ctx.turn !== this.props.ctx.turn) {\n      this.setState({\n        ...this.state,\n        validMoves:\n          this.props.G.jumping === null\n            ? getValidMoves(this.props.G, this.props.ctx.currentPlayer)\n            : getValidMoves(this.props.G, this.props.ctx.currentPlayer, this.props.G.jumping),\n      });\n    }\n  }\n\n  render() {\n    if (this.props.ctx.gameover) {\n      return <GameLayout gameOver={this._getGameOver()} gameArgs={this.props.gameArgs} />;\n    }\n\n    return (\n      <GameLayout gameArgs={this.props.gameArgs}>\n        <Typography variant=\"h5\" style={{ textAlign: 'center', color: 'white', marginBottom: '16px' }}>\n          {this._getStatus()}\n        </Typography>\n        <Checkerboard\n          onClick={this._onClick}\n          invert={this.isInverted()}\n          highlightedSquares={this._getHighlightedSquares()}\n        >\n          {this.getPieces()}\n        </Checkerboard>\n      </GameLayout>\n    );\n  }\n}\n","import { IGameConfig } from '../index';\nimport { CheckersGame } from './game';\nimport { Board } from './board';\n\nconst config: IGameConfig = {\n  bgioGame: CheckersGame,\n  bgioBoard: Board,\n};\n\nexport default config;\n","import { IGameCtx, INVALID_MOVE, IGameArgs } from 'boardgame.io/core';\ninterface ICheckerPiece {\n  id: number;\n  playerID: string;\n  isKing: boolean;\n}\n\ninterface ICoord {\n  x: number;\n  y: number;\n}\n\ninterface ICheckerPieceWithCoord {\n  data: ICheckerPiece;\n  coord: ICoord;\n}\n\nexport interface IMove {\n  from: ICoord;\n  to: ICoord;\n  jumped: ICoord;\n}\n\ntype Piece = ICheckerPiece | null;\nexport interface IG {\n  board: Piece[];\n  jumping: ICheckerPieceWithCoord;\n}\n\nconst piece = (id: number, player: number): ICheckerPiece => ({ id, playerID: player.toString(), isKing: false });\n\nexport const INITIAL_BOARD: Piece[] = [\n  null,\n  piece(0, 1),\n  null,\n  piece(1, 1),\n  null,\n  piece(2, 1),\n  null,\n  piece(3, 1),\n  piece(4, 1),\n  null,\n  piece(5, 1),\n  null,\n  piece(6, 1),\n  null,\n  piece(7, 1),\n  null,\n  null,\n  piece(8, 1),\n  null,\n  piece(9, 1),\n  null,\n  piece(10, 1),\n  null,\n  piece(11, 1),\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  piece(12, 0),\n  null,\n  piece(13, 0),\n  null,\n  piece(14, 0),\n  null,\n  piece(15, 0),\n  null,\n  null,\n  piece(16, 0),\n  null,\n  piece(17, 0),\n  null,\n  piece(18, 0),\n  null,\n  piece(19, 0),\n  piece(20, 0),\n  null,\n  piece(21, 0),\n  null,\n  piece(22, 0),\n  null,\n  piece(23, 0),\n  null,\n];\n\nconst MAN_DIRS = [\n  [\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n  ],\n  [\n    { x: -1, y: 1 },\n    { x: 1, y: 1 },\n  ],\n];\n\nconst KING_DIRS = [\n  { x: -1, y: 1 },\n  { x: 1, y: 1 },\n  { x: -1, y: -1 },\n  { x: 1, y: -1 },\n];\n\nexport function sumCoords(a: ICoord, b: ICoord) {\n  return { x: a.x + b.x, y: a.y + b.y };\n}\n\nexport function multiplyCoord(coord: ICoord, multiplier: number) {\n  return { x: coord.x * multiplier, y: coord.y * multiplier };\n}\n\nexport function inBounds(coord: ICoord) {\n  return coord.x >= 0 && coord.x < 8 && coord.y >= 0 && coord.y < 8;\n}\n\nexport function toCoord(position: number): ICoord {\n  const x = position % 8;\n  const y = Math.floor(position / 8);\n  return { x, y };\n}\n\nexport function toIndex(coord: ICoord) {\n  return coord.x + coord.y * 8;\n}\n\nexport function areCoordsEqual(a: ICoord, b: ICoord) {\n  return a.x === b.x && a.y === b.y;\n}\n\nexport function checkPosition(\n  G: IG,\n  playerID: string,\n  piece: ICheckerPiece,\n  coord: ICoord,\n): { moves: IMove[]; jumped: boolean } {\n  const dirs = piece.isKing ? KING_DIRS : MAN_DIRS[playerID as any];\n  let moves: IMove[] = [];\n  let jumped = false;\n\n  for (const dir of dirs) {\n    // Look into all valid directions\n    let opponentBefore = null;\n    for (let i = 1; piece.isKing ? true : i < 3; i++) {\n      const final = sumCoords(coord, multiplyCoord(dir, i));\n\n      // Break if move is out of bounds\n      if (!inBounds(final)) {\n        break;\n      }\n\n      const moveTo = G.board[toIndex(final)];\n\n      // Break if we encounter our piece\n      if (moveTo !== null && moveTo.playerID === playerID) {\n        break;\n      }\n\n      if (moveTo !== null && moveTo.playerID !== playerID) {\n        // If we already encountered opponent the directions is blocked\n        if (opponentBefore) {\n          break;\n        }\n        opponentBefore = final;\n      }\n\n      if (moveTo === null) {\n        moves.push({ from: coord, to: final, jumped: opponentBefore });\n        if (opponentBefore) {\n          jumped = true;\n          break;\n        }\n\n        // If there is nothing and the piece isn't king there is no need to continue\n        if (!piece.isKing) {\n          break;\n        }\n      }\n    }\n  }\n\n  return { moves, jumped };\n}\n\nexport function getValidMoves(G: IG, playerID: string, jumping?: ICheckerPieceWithCoord) {\n  let movesTotal: IMove[] = [];\n  let jumpedTotal = false;\n\n  if (typeof jumping === 'undefined') {\n    G.board.forEach((piece, index) => {\n      if (piece !== null && piece.playerID === playerID) {\n        const coord = toCoord(index);\n        const { moves, jumped } = checkPosition(G, playerID, piece, coord);\n        movesTotal.push(...moves);\n        jumpedTotal = jumpedTotal || jumped;\n      }\n    });\n  } else {\n    const { moves, jumped } = checkPosition(G, playerID, jumping.data, jumping.coord);\n    movesTotal = moves;\n    jumpedTotal = jumped;\n  }\n\n  if (jumpedTotal) {\n    return movesTotal.filter((move) => move.jumped);\n  } else {\n    return movesTotal;\n  }\n}\n\nexport function move(G: IG, ctx: IGameCtx, from: ICoord, to: ICoord): IG | string {\n  const indexFrom = toIndex(from);\n  const indexTo = toIndex(to);\n  const piece = G.board[indexFrom];\n  const crownhead = ctx.playerID === '0' ? 0 : 7;\n\n  if (piece === null || piece.playerID !== ctx.playerID || G.board[indexTo] !== null) {\n    return INVALID_MOVE;\n  }\n\n  const moves = G.jumping === null ? getValidMoves(G, ctx.playerID) : getValidMoves(G, ctx.playerID, G.jumping);\n  const move = moves.find((move) => areCoordsEqual(move.from, from) && areCoordsEqual(move.to, to));\n\n  if (typeof move === 'undefined') {\n    return INVALID_MOVE;\n  }\n\n  const jumped = move.jumped !== null ? toIndex(move.jumped) : -1;\n  const isKing = piece.isKing || to.y === crownhead;\n\n  const newG: IG = {\n    ...G,\n    board: G.board.map((square, i) => {\n      switch (i) {\n        case indexFrom:\n          return null;\n        case indexTo:\n          return {\n            ...piece,\n            isKing,\n          };\n        case jumped:\n          return null;\n        default:\n          return square;\n      }\n    }),\n    jumping: null,\n  };\n\n  if (move.jumped === null) {\n    return newG;\n  }\n\n  const jumping = {\n    data: {\n      ...piece,\n      isKing,\n    },\n    coord: to,\n  };\n  const postMoves = getValidMoves(newG, ctx.playerID, jumping);\n\n  if (postMoves.length > 0 && postMoves[0].jumped !== null) {\n    return {\n      ...newG,\n      jumping,\n    };\n  }\n\n  return newG;\n}\n\nexport const CheckersGame: IGameArgs = {\n  name: 'checkers',\n  setup: (): IG => ({ board: INITIAL_BOARD, jumping: null }),\n  moves: {\n    move,\n  },\n  turn: {\n    moveLimit: 1,\n    order: {\n      first: () => 0,\n      next: (G: IG, ctx) => (G.jumping === null ? (ctx.playOrderPos + 1) % ctx.numPlayers : ctx.playOrderPos),\n    },\n  },\n  endIf: (G: IG, ctx) => {\n    if (getValidMoves(G, ctx.currentPlayer === '0' ? '1' : '0').length === 0) {\n      return { winner: ctx.currentPlayer };\n    }\n  },\n};\n","/*\n * Copyright 2018 The @freeboardgame.org/boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport { Grid } from 'ui';\n\n/**\n * Checkerboard\n *\n * Component that will show a configurable checker board for games like\n * chess, checkers and others. The vertical columns of squares are labeled\n * with letters from a to z, while the rows are labeled with numbers, starting\n * with 1.\n *\n * Props:\n *   onClick - On Click Callback, (row, col) of the square passed as argument.\n *   primaryColor - Primary color, #d18b47 by default.\n *   secondaryColor - Secondary color, #ffce9e by default.\n *   colorMap - Object of object having cell names as key and colors as values.\n *   Ex: { 'c5': 'red' } colors cells c5 with red.\n *\n * Usage:\n *\n * <Checkerboard>\n *   <Token square={'c5'}>\n *     <Knight color='dark' />\n *   </Token>\n * </Checkerboard>\n */\nconst NUM_COLS = 8;\nconst NUM_ROWS = 8;\nexport interface IAlgebraicCoords {\n  square: string;\n}\nexport interface ICartesianCoords {\n  x: number;\n  y: number;\n}\nexport interface IOnDragData {\n  x: number;\n  y: number;\n  originalX: number;\n  originalY: number;\n}\nexport interface IColorMap {\n  [key: string]: string;\n}\ninterface ICheckerboardProps {\n  onClick: (coords: ICartesianCoords) => void;\n  invert: boolean;\n  primaryColor: string;\n  secondaryColor: string;\n  highlightedSquares: IColorMap;\n  style: React.CSSProperties;\n  children?: any;\n}\nexport class Checkerboard extends React.Component<any, any> {\n  static defaultProps = {\n    invert: false,\n    primaryColor: '#ffce9e',\n    secondaryColor: '#d18b47',\n    highlightedSquares: {},\n    style: {},\n  };\n  _onClick = this.onClick.bind(this);\n\n  onClick(coords: ICartesianCoords) {\n    const { x, y } = coords;\n    this.props.onClick({ square: cartesianToAlgebraic(x, y, this.props.invert) });\n  }\n\n  render() {\n    // Convert the square=\"\" prop to x and y.\n    const tokens = React.Children.map(this.props.children, (child: any) => {\n      if (child.props.square) {\n        const square = child.props.square;\n        const { x, y } = algebraicToCartesian(square, this.props.invert);\n        return React.cloneElement(child, { x, y });\n      } else {\n        return React.cloneElement(child, applyInvertion({ x: child.props.x, y: child.props.y }, this.props.invert));\n      }\n    });\n\n    // Build colorMap with checkerboard pattern.\n    const colorMap = {} as IColorMap;\n    for (let x = 0; x < NUM_COLS; x++) {\n      for (let y = 0; y < NUM_ROWS; y++) {\n        const key = `${x},${y}`;\n        let color = this.props.secondaryColor;\n        if ((x + y) % 2 === 0) {\n          color = this.props.primaryColor;\n        }\n        colorMap[key] = color;\n      }\n    }\n\n    // Add highlighted squares.\n    for (const square of Object.keys(this.props.highlightedSquares)) {\n      const { x, y } = algebraicToCartesian(square, this.props.invert);\n      const key = `${x},${y}`;\n      colorMap[key] = this.props.highlightedSquares[square];\n    }\n\n    return (\n      <Grid rows={NUM_ROWS} cols={NUM_COLS} style={this.props.style} onClick={this._onClick} colorMap={colorMap}>\n        {tokens}\n      </Grid>\n    );\n  }\n}\n\n/**\n * Given an algebraic notation, returns x and y values.\n * Example: A1 returns { x: 0, y: 0 }\n */\nexport function algebraicToCartesian(square: string, invert?: boolean) {\n  const regexp = /([A-Za-z])([0-9]+)/g;\n  const match = regexp.exec(square);\n  if (match == null) {\n    throw Error('Invalid square provided: ' + square);\n  }\n  const colSymbol = match[1].toLowerCase();\n  const col = colSymbol.charCodeAt(0) - 'a'.charCodeAt(0);\n  const row = parseInt(match[2], 10);\n  if (invert) {\n    return { x: NUM_COLS - col - 1, y: row - 1 };\n  } else {\n    return { x: col, y: NUM_ROWS - row };\n  }\n}\n\n/**\n * Given an x and y values, returns algebraic notation.\n * Example: 0, 0 returns A1\n */\nexport function cartesianToAlgebraic(x: number, y: number, invert?: boolean) {\n  if (invert) {\n    const colSymbol = String.fromCharCode(NUM_COLS - x - 1 + 'a'.charCodeAt(0));\n    return colSymbol + (y + 1);\n  } else {\n    const colSymbol = String.fromCharCode(x + 'a'.charCodeAt(0));\n    return colSymbol + (NUM_ROWS - y);\n  }\n}\n\nexport function applyInvertion(coord: ICartesianCoords, invert: boolean) {\n  if (invert) {\n    return { x: NUM_COLS - coord.x - 1, y: NUM_ROWS - coord.y - 1 };\n  }\n  return coord;\n}\n","import { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameMode } from 'components/App/Game/GameModePicker';\n\nexport function isLocalGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.LocalFriend;\n}\n\nexport function isOnlineGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.OnlineFriend;\n}\n\nexport function isAIGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.AI;\n}\n","// https://stackoverflow.com/a/59185109\n\nimport { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Grid\n *\n * Component that will show children on a cartesian regular grid.\n *\n * Props:\n *   rows       - Number of rows (height) of the grid.\n *   cols       - Number of columns (width) of the grid.\n *   style      - CSS style of the Grid HTML element.\n *   colorMap   - A map from 'x,y' => color.\n *   onClick    - (x, y) => {}\n *                Called when a square is clicked.\n *   onMouseOver    - (x, y) => {}\n *                Called when a square is mouse over.\n *   onMouseOut    - (x, y) => {}\n *                Called when a square is mouse out.\n *\n * Usage:\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2}/>\n * </Grid>\n */\nexport class Grid extends React.Component {\n  static propTypes = {\n    rows: PropTypes.number.isRequired,\n    cols: PropTypes.number.isRequired,\n    outline: PropTypes.bool,\n    style: PropTypes.object,\n    colorMap: PropTypes.object,\n    cellSize: PropTypes.number,\n    onClick: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]),\n  };\n\n  static defaultProps = {\n    colorMap: {},\n    outline: true,\n    cellSize: 1,\n  };\n\n  _svgRef = React.createRef();\n\n  _getCellColor(x, y) {\n    const key = `${x},${y}`;\n    let color = 'white';\n    if (key in this.props.colorMap) {\n      color = this.props.colorMap[key];\n    }\n    return color;\n  }\n\n  _getGrid() {\n    if (!this.props.outline) {\n      return null;\n    }\n\n    let squares = [];\n    for (let x = 0; x < this.props.cols; x++) {\n      for (let y = 0; y < this.props.rows; y++) {\n        squares.push(\n          <Square\n            key={this.props.cols * y + x}\n            style={{ fill: this._getCellColor(x, y) }}\n            x={x}\n            y={y}\n            size={this.props.cellSize}\n            onClick={this.onClick}\n            onMouseOver={this.onMouseOver}\n            onMouseOut={this.onMouseOut}\n          />,\n        );\n      }\n    }\n    return squares;\n  }\n\n  onClick = (args) => {\n    if (this.props.onClick) {\n      this.props.onClick(args);\n    }\n  };\n\n  onMouseOver = (args) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(args);\n    }\n  };\n\n  onMouseOut = (args) => {\n    if (this.props.onMouseOut) {\n      this.props.onMouseOut(args);\n    }\n  };\n\n  render() {\n    const tokens = React.Children.map(this.props.children, (child) => {\n      return React.cloneElement(child, {\n        template: Square,\n        // Overwrites Token's onClick, onMouseOver, onMouseOut\n        onClick: this.onClick,\n        onMouseOver: this.onMouseOver,\n        onMouseOut: this.onMouseOut,\n        svgRef: this._svgRef,\n      });\n    });\n\n    return (\n      <svg ref={this._svgRef} viewBox={'0 0 ' + this.props.cols + ' ' + this.props.rows} style={this.props.style}>\n        <g>{this._getGrid()}</g>\n        {tokens}\n      </svg>\n    );\n  }\n}\n\n/**\n * Square\n *\n * Component that renders a square inside a Grid.\n *\n * Props:\n *   x       - X coordinate on grid coordinates.\n *   y       - Y coordinate on grid coordinates.\n *   size    - Square size.\n *   style   - Custom styling.\n *   onClick - Invoked when a Square is clicked.\n *   onMouseOver - Invoked when a Square is mouse over.\n *   onMouseOut - Invoked when a Square is mouse out.\n *   eventListeners - Array of objects with name and callback\n *   for DOM events.\n *\n * Not meant to be used by the end user directly (use Token).\n * Also not exposed in the NPM.\n */\nexport class Square extends React.Component {\n  static propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    style: PropTypes.any,\n    onClick: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    eventListeners: PropTypes.array,\n    children: PropTypes.element,\n  };\n\n  static defaultProps = {\n    size: 1,\n    x: 0,\n    y: 0,\n    style: { fill: '#fff' },\n    eventListeners: [],\n  };\n\n  _gRef = React.createRef();\n\n  onClick = (e) => {\n    this.props.onClick(this.getCoords(), e);\n  };\n\n  onMouseOver = (e) => {\n    this.props.onMouseOver(this.getCoords(), e);\n  };\n\n  onMouseOut = (e) => {\n    this.props.onMouseOut(this.getCoords(), e);\n  };\n\n  getCoords() {\n    return {\n      x: this.props.x,\n      y: this.props.y,\n    };\n  }\n\n  componentDidMount() {\n    const element = this._gRef.current;\n    for (let listener of this.props.eventListeners) {\n      element.addEventListener(listener.name, listener.callback);\n    }\n  }\n\n  componentWillUnmount() {\n    const element = this._gRef.current;\n    for (let listener of this.props.eventListeners) {\n      element.removeEventListener(listener.name, listener.callback);\n    }\n  }\n\n  render() {\n    const tx = this.props.x * this.props.size;\n    const ty = this.props.y * this.props.size;\n\n    // If no child, render a square.\n    let children = <rect style={this.props.style} width={this.props.size} height={this.props.size} x={0} y={0} />;\n    // If a child is passed, render child.\n    if (this.props.children) {\n      children = this.props.children;\n    }\n\n    return (\n      <g\n        ref={this._gRef}\n        onClick={this.onClick}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n        transform={`translate(${tx}, ${ty})`}\n      >\n        {children}\n      </g>\n    );\n  }\n}\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-syle\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Square } from './grid';\n\n/**\n * Token\n *\n * Component that represents a board game piece (or token).\n * Can be used by itself or with one of the grid systems\n * provided (Grid or HexGrid).\n *\n * A token renders as a square inside a Grid and a\n * hexagon inside a HexGrid. Additionally, you can pass\n * it a child if you want any other custom rendering.\n *\n * Props:\n *   x       - X coordinate on grid / hex grid.\n *   y       - Y coordinate on grid / hex grid.\n *   z       - Z coordinate on hex grid.\n *   animate - Changes in position are animated if true.\n *   animationDuration - Length of animation.\n *   onClick - Called when the token is clicked.\n *   onMouseOver - Called when the token is mouse over.\n *   onMouseOut - Called when the token is mouse out.\n *   draggable - Whether a Token is draggable or not.\n *   shouldDrag - Whether a draggable token should start drag.\n *   onDrag - Called when a token was dragged (moved).\n *            Parameter contain { x, y, originalX, originalY }.\n *   onDrop - Called when the token was dropped after dragging.\n *            Parameter contain { x, y, originalX, originalY }.\n *\n * Usage:\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2}/>\n * </Grid>\n *\n * <HexGrid>\n *   <Token x={1} y={2} z={-3}/>\n * </HexGrid>\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2}>\n *     <Knight color=\"white\"/>\n *   </Token>\n * </Grid>\n */\nexport class Token extends React.Component {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    z: PropTypes.number,\n    template: PropTypes.any,\n    style: PropTypes.any,\n    animate: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    children: PropTypes.element,\n    animationDuration: PropTypes.number,\n    draggable: PropTypes.bool,\n    shouldDrag: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDrop: PropTypes.func,\n    svgRef: PropTypes.object,\n  };\n\n  static defaultProps = {\n    animationDuration: 750,\n    template: Square,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.getCoords(),\n      dragged: null,\n      usingTouch: false,\n    };\n  }\n\n  _startDrag = (e) => {\n    if (this.props.draggable && this.props.shouldDrag(this.getCoords())) {\n      e.preventDefault(); // Required for Safari/iOs.\n      e = e.touches ? e.touches[0] : e;\n      this.setState({\n        ...this.state,\n        dragged: { x: e.pageX, y: e.pageY },\n      });\n      this._addOrRemoveDragEventListeners(true);\n    }\n  };\n\n  _drag = (e) => {\n    if (this.state.dragged) {\n      e.preventDefault(); // Required for Safari/iOs.\n      e = e.touches ? e.touches[0] : e;\n      const ctm = this.props.svgRef.current.getScreenCTM().inverse();\n      const deltaPageX = e.pageX - this.state.dragged.x;\n      const deltaPageY = e.pageY - this.state.dragged.y;\n      const deltaSvgX = ctm.a * deltaPageX + ctm.b * deltaPageY;\n      const deltaSvgY = ctm.c * deltaPageX + ctm.d * deltaPageY;\n      const x = this.state.x + deltaSvgX;\n      const y = this.state.y + deltaSvgY;\n      if (this.props.onDrag) {\n        this.props.onDrag({\n          x,\n          y,\n          originalX: this.props.x,\n          originalY: this.props.y,\n        });\n      }\n\n      this.setState({\n        ...this.state,\n        x,\n        y,\n        dragged: { x: e.pageX, y: e.pageY },\n      });\n    }\n  };\n\n  _endDrag = (e) => {\n    if (this.state.dragged) {\n      e.preventDefault();\n      // Whether this is a drop or a click depends if the mouse moved after drag.\n      // Android will issue very small drag events, so we need a distance.\n      const dist = Math.sqrt((this.state.x - this.props.x) ** 2 + (this.state.y - this.props.y) ** 2);\n      if (dist > 0.2) {\n        this.props.onDrop({\n          x: this.state.x,\n          y: this.state.y,\n          originalX: this.props.x,\n          originalY: this.props.y,\n        });\n      } else {\n        this.props.onClick({ x: this.state.x, y: this.state.y });\n      }\n      this.setState({\n        ...this.state,\n        x: this.props.x,\n        y: this.props.y,\n        dragged: null,\n      });\n      this._addOrRemoveDragEventListeners(false);\n    }\n  };\n\n  _onClick = (param) => {\n    // Ignore onClick if the element is draggable, because desktops will\n    // send both onClick and touch events, leading to duplication.\n    // Whether this will be a click or a drop will be defined in _endDrag.\n    if (!(this.props.draggable && this.props.shouldDrag(this.getCoords()))) {\n      this.props.onClick(param);\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.state.dragged) {\n      this._addOrRemoveDragEventListeners(false);\n    }\n  }\n\n  /**\n   * If there is a change in props, saves old x/y,\n   * and current time. Starts animation.\n   * @param {Object} nextProps Next props.\n   */\n  // eslint-disable-next-line react/no-deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let oldCoord = this.getCoords();\n    let newCoord = this.getCoords(nextProps);\n\n    // Debounce.\n    if (oldCoord.x == newCoord.x && oldCoord.y == newCoord.y) {\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      originTime: Date.now(),\n      originX: this.state.x,\n      originY: this.state.y,\n      originZ: this.state.z,\n    });\n\n    requestAnimationFrame(this._animate(Date.now()));\n  }\n\n  /**\n   * Add or remove event listeners.\n   * @param {boolean} shouldAdd If it should add (or remove) listeners.\n   */\n  _addOrRemoveDragEventListeners(shouldAdd) {\n    const svgEl = this.props.svgRef.current;\n    if (!svgEl) return;\n    let addOrRemoveEventListener = svgEl.addEventListener;\n    if (!shouldAdd) {\n      addOrRemoveEventListener = svgEl.removeEventListener;\n    }\n    addOrRemoveEventListener('touchmove', this._drag, { passive: false });\n    addOrRemoveEventListener('mousemove', this._drag, { passive: false });\n    addOrRemoveEventListener('mouseup', this._endDrag, { passive: false });\n    addOrRemoveEventListener('mouseleave', this._endDrag, { passive: false });\n    addOrRemoveEventListener('touchcancel', this._endDrag, { passive: false });\n    addOrRemoveEventListener('touchleave', this._endDrag, { passive: false });\n    addOrRemoveEventListener('touchend', this._endDrag, { passive: false });\n  }\n\n  /**\n   * Recursively animates x and y.\n   * @param {number} now Unix timestamp when this was called.\n   */\n  _animate(now) {\n    return (() => {\n      let elapsed = now - this.state.originTime;\n      let svgCoord = this.getCoords();\n      if (elapsed < this.props.animationDuration && this.props.animate) {\n        const percentage = this._easeInOutCubic(elapsed, 0, 1, this.props.animationDuration);\n\n        this.setState({\n          ...this.state,\n          x: (svgCoord.x - this.state.originX) * percentage + this.state.originX,\n          y: (svgCoord.y - this.state.originY) * percentage + this.state.originY,\n          z: (svgCoord.z - this.state.originZ) * percentage + this.state.originZ,\n        });\n\n        requestAnimationFrame(this._animate(Date.now()));\n      } else {\n        this.setState({\n          ...this.state,\n          x: svgCoord.x,\n          y: svgCoord.y,\n          z: svgCoord.z,\n        });\n      }\n    }).bind(this);\n  }\n\n  /**\n   * Gets SVG x/y/z coordinates.\n   * @param {Object} props Props object to get coordinates from.\n   * @return {Object} Object with x, y and z parameters.\n   */\n  getCoords(props = this.props) {\n    return { x: props.x, y: props.y, z: props.z };\n  }\n\n  /**\n   * Returns animation easing value. See http://easings.net/#easeInOutCubic.\n   * @param {number} t Current time.\n   * @param {number} b Beginning value.\n   * @param {number} c Final value.\n   * @param {number} d Duration.\n   */\n  _easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) return (c / 2) * t * t * t + b;\n    t -= 2;\n    return (c / 2) * (t * t * t + 2) + b;\n  }\n\n  /**\n   * Gets event listeners needed for drag and drop.\n   */\n  _eventListeners() {\n    return [\n      { name: 'mousedown', callback: this._startDrag },\n      { name: 'touchstart', callback: this._startDrag },\n    ];\n  }\n\n  render() {\n    const Component = this.props.template;\n\n    return (\n      <Component\n        x={this.state.x}\n        y={this.state.y}\n        z={this.state.z}\n        style={this.props.style}\n        onClick={this._onClick}\n        onMouseOver={this.props.onMouseOver}\n        onMouseOut={this.props.onMouseOut}\n        eventListeners={this._eventListeners()}\n      >\n        {this.props.children}\n      </Component>\n    );\n  }\n}\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UIContext from '../ui-context';\nimport * as THREE from 'three';\n\n/**\n * Grid\n *\n * Component that will show children on a cartesian regular grid.\n *\n * Props:\n *   rows       - Number of rows (height) of the grid.\n *   cols       - Number of columns (width) of the grid.\n *   cellSize   - Size of a square.\n *   thichness  - Thichness of a square.\n *   padding    - Padding between squares.\n *   colorMap   - A map from 'x,y' => color.\n *   onClick    - (x, y) => {}\n *                Called when a square is clicked.\n *   onMouseOver    - (x, y) => {}\n *                Called when a square is mouse over.\n *   onMouseOut    - (x, y) => {}\n *                Called when a square is mouse out.\n *\n * Usage:\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2}/>\n * </Grid>\n */\nexport const Grid = (props) => (\n  <UIContext.Consumer>{(context) => <GridImpl {...props} context={context} />}</UIContext.Consumer>\n);\n\nclass GridImpl extends React.Component {\n  static propTypes = {\n    rows: PropTypes.number.isRequired,\n    cols: PropTypes.number.isRequired,\n    cellSize: PropTypes.number,\n    thickness: PropTypes.number,\n    padding: PropTypes.number,\n    colorMap: PropTypes.object,\n    onClick: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    context: PropTypes.any,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]),\n  };\n  static defaultProps = {\n    colorMap: {},\n    cellSize: 1,\n    padding: 0.1,\n    thickness: 0.1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.boardGroup = new THREE.Group();\n    this.tokenGroup = new THREE.Group();\n    this.boardGroup.add(this.tokenGroup);\n    // translate the board to center on (0,0,0)\n    this.boardGroup.translateX((-(this.props.padding + this.props.cellSize) * (this.props.cols - 1)) / 2);\n    this.boardGroup.translateZ((-(this.props.padding + this.props.cellSize) * (this.props.rows - 1)) / 2);\n  }\n\n  _getCellColor(x, y) {\n    const key = `${x},${y}`;\n    let color = '#777777';\n    if (key in this.props.colorMap) {\n      color = this.props.colorMap[key];\n    }\n    return color;\n  }\n\n  componentWillUnmount() {\n    this.context.remove(this.boardGroup);\n  }\n\n  render() {\n    this.context = this.props.context;\n    this.context.add(this.boardGroup);\n\n    // when rerendering, render a new squareGroup\n    this.boardGroup.remove(this.squareGroup);\n    this.squareGroup = new THREE.Group();\n    this.boardGroup.add(this.squareGroup);\n\n    // add square base\n    for (let x = 0; x < this.props.cols; x++) {\n      for (let y = 0; y < this.props.rows; y++) {\n        const squareProps = {\n          x: x,\n          y: y,\n          size: this.props.cellSize,\n          color: this._getCellColor(x, y),\n          padding: this.props.padding,\n          thickness: this.props.thickness,\n        };\n\n        const square = new Square(squareProps);\n        this.squareGroup.add(square);\n\n        const onEvent = (e) => {\n          if (e.type == 'click') {\n            if (this.props.onClick) this.props.onClick({ x: x, y: y });\n          } else if (e.type == 'mouseOver') {\n            if (this.props.onMouseOver) this.props.onMouseOver({ x: x, y: y });\n          } else if (e.type == 'mouseOut') {\n            if (this.props.onMouseOut) this.props.onMouseOut({ x: x, y: y });\n          }\n        };\n\n        this.context.regCall(square, onEvent);\n      }\n    }\n\n    // set tokens\n    const tokens = React.Children.map(this.props.children, (child) => {\n      return React.cloneElement(child, {\n        three: true,\n        boardSize: this.props.cellSize,\n        parent: this.tokenGroup,\n        padding: this.props.padding,\n        lift: this.props.thickness,\n      });\n    });\n\n    if (tokens) {\n      return tokens;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Square\n *\n * Component that renders a square inside a Grid.\n *\n * Props\n *   x          - X coordinate on grid coordinates.\n *   y          - Y coordinate on grid coordinates.\n *   size       - Square size.\n *   color      - Color of the square\n *   thichness  - Thichness of a square.\n *   padding    - Padding between squares.\n *\n * Not meant to be used by the end user directly (use Token).\n * Also not exposed in the NPM.\n */\nexport class Square extends THREE.Mesh {\n  constructor(props) {\n    super();\n    this.userData = {\n      responsive: true,\n      draggable: false,\n      ...props,\n    };\n    props = this.userData;\n    this.geometry = new THREE.BoxBufferGeometry(props.size, props.thickness, props.size);\n    this.material = new THREE.MeshLambertMaterial({ color: props.color });\n\n    this.receiveShadow = true;\n    this.translateX(this.userData.x * (props.size + props.padding));\n    this.translateZ(this.userData.y * (props.size + props.padding));\n    this.translateY(this.userData.thickness / 2);\n  }\n}\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-syle\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UIContext from '../ui-context';\nimport * as THREE from 'three';\n\n/**\n * Token\n *\n * Component that represents a board game piece (or token).\n * Can be used by itself or with one of the grid systems\n * provided (Grid or HexGrid).\n *\n * A token renders as a 3D Mesh. IF no mesh prop is passed.\n * It will render a white box on the grid.\n *\n * Props:\n *   x       - X coordinate on grid / hex grid.\n *   y       - Y coordinate on grid / hex grid.\n *   z       - Z coordinate on hex grid.\n *   onClick - Called when the token is clicked.\n *   onMouseOver - Called when the token is mouse over.\n *   onMouseOut - Called when the token is mouse out.\n *\n * Usage:\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2}/>\n * </Grid>\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2} size={0.5}/>\n * </Grid>\n *\n * <HexGrid>\n *   <Token x={1} y={2} z={-3}/>\n * </HexGrid>\n *\n * <Grid rows={8} cols={8}>\n *   <Token x={1} y={2} mesh={THREE.js 3D-Object}/>\n * </Grid>\n *\n */\nexport const Token = (props) => (\n  <UIContext.Consumer>{(context) => <TokenImpl {...props} context={context} />}</UIContext.Consumer>\n);\n\nclass TokenImpl extends React.Component {\n  static propTypes = {\n    x: PropTypes.number,\n    y: PropTypes.number,\n    z: PropTypes.number,\n    mesh: PropTypes.any,\n    padding: PropTypes.number,\n    size: PropTypes.number,\n    lift: PropTypes.number,\n    boardSize: PropTypes.number,\n    parent: PropTypes.instanceOf(THREE.Object3D),\n    context: PropTypes.object,\n    animate: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    children: PropTypes.element,\n    animationDuration: PropTypes.number,\n  };\n\n  static defaultProps = {\n    animationDuration: 750,\n    size: 1,\n    padding: 0.1,\n    lift: 0.1,\n  };\n\n  constructor(props) {\n    super();\n\n    if (!props.size) {\n      this.size = props.boardSize;\n    } else {\n      this.size = props.size;\n    }\n\n    if (props.parent) {\n      this.parent = props.parent;\n    } else {\n      this.parent = props.context;\n    }\n  }\n\n  _attachMesh = (mesh) => {\n    const size = this.size;\n    let meshSize = new THREE.Vector3();\n    let meshCenter = new THREE.Vector3();\n    const bbox = new THREE.Box3().setFromObject(mesh);\n    bbox.getSize(meshSize);\n    bbox.getCenter(meshCenter);\n    // determine the scale factor\n    let scale = meshSize.z < meshSize.x ? meshSize.x : meshSize.z;\n    scale = size / scale;\n    mesh.scale.set(scale, scale, scale);\n    // set the mesh to the ground\n    if (this.props.boardSize && this.props.lift && this.props.padding) {\n      mesh.position.x = this.props.x * (this.props.boardSize + this.props.padding);\n      mesh.position.z = this.props.y * (this.props.boardSize + this.props.padding);\n      mesh.position.y = -bbox.min.y + this.props.lift;\n    } else {\n      mesh.position.x = this.props.x;\n      mesh.position.z = this.props.y;\n      mesh.position.y = -bbox.min.y;\n    }\n    this.parent.add(mesh);\n    // register the event\n    const onEvent = (e) => {\n      if (e.type == 'click') {\n        this.props.onClick({ x: this.props.x, y: this.props.y });\n      } else if (e.type == 'mouseOver') {\n        this.props.onMouseOver({ x: this.props.x, y: this.props.y });\n      } else if (e.type == 'mouseOut') {\n        this.props.onMouseOut({ x: this.props.x, y: this.props.y });\n      }\n    };\n    this.props.context.regCall(mesh, onEvent);\n  };\n\n  componentWillUnmount() {\n    this.parent.remove(this.prevMesh);\n  }\n\n  render() {\n    let mesh = this.props.mesh;\n\n    if (this.prevMesh && this.prevMesh === mesh) return null;\n\n    if (!mesh) {\n      mesh = new THREE.Mesh(\n        new THREE.BoxBufferGeometry(1, 1 * 0.3, 1),\n        new THREE.MeshLambertMaterial({ color: '#eeeeee' }),\n      );\n      this._attachMesh(mesh);\n    } else if (mesh.isObject3D) {\n      this._attachMesh(mesh);\n    } else {\n      console.error('Your input to tokens should be an three js 3d object');\n    }\n    this.parent.remove(this.prevMesh);\n    this.prevMesh = mesh;\n\n    return null;\n  }\n}\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid as Grid2D, Square as Square2D } from './2d/grid';\nimport { Grid as Grid3D, Square as Square3D } from './3d/grid';\n\nexport const Grid = (props) => {\n  return props.three ? <Grid3D {...props}>{props.children}</Grid3D> : <Grid2D {...props}>{props.children}</Grid2D>;\n};\n\nGrid.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any,\n};\n\nexport const Square = (props) => {\n  return props.three ? (\n    <Square3D {...props}>{props.children}</Square3D>\n  ) : (\n    <Square2D {...props}>{props.children}</Square2D>\n  );\n};\n\nSquare.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any,\n};\n","export { Grid } from './grid.js';\nexport { Token } from './token.js';\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Token as Token2D } from './2d/token';\nimport { Token as Token3D } from './3d/token';\n\nexport const Token = (props) => {\n  return props.three ? <Token3D {...props}>{props.children}</Token3D> : <Token2D {...props}>{props.children}</Token2D>;\n};\n\nToken.propTypes = {\n  three: PropTypes.bool,\n  children: PropTypes.any,\n};\n","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\n\nconst UIContext = React.createContext();\n\nexport default UIContext;\n"],"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CA;AAJA;AAIA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAOA;AAtBA;AAwuBA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAwDA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AA7DA;AA8DA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AAnEA;AAoEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AAxEA;AACA;AAqBA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AALA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAtBA;AAsBA;AACA;AACA;AAmBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAVA;AAYA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AA7FA;AA+FA;;;;;;;;;;;;;;;;;;;;AA/FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAFA;AAeA;AACA;AACA;AAHA;AACA;AAmGA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAuBA;AAAA;AACA;AACA;AACA;AA1BA;AA2BA;AAAA;AACA;AACA;AACA;AA9BA;AA+BA;AAAA;AACA;AACA;AAjCA;AACA;AAkCA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAMA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","sourceRoot":""}