{"version":3,"file":"10.js","sources":["webpack:///./src/components/App/Game/GameDarkSublayout.tsx","webpack:///./src/components/App/Game/GameLayout.tsx","webpack:///./src/components/App/Game/GameOver.tsx","webpack:///./src/components/App/GamesList.tsx","webpack:///./src/components/App/MessagePage.tsx","webpack:///./src/components/App/MessagePageClass.tsx","webpack:///./src/components/App/media/SvgError.tsx","webpack:///./src/components/DesktopMobileView.tsx","webpack:///./src/games/common/gameMode.ts","webpack:///./src/games/fourinarow/Shapes.tsx","webpack:///./src/games/fourinarow/board.tsx","webpack:///./src/games/fourinarow/config.ts","webpack:///./src/games/fourinarow/constants.ts","webpack:///./src/games/fourinarow/game.ts","webpack:///./src/hooks/useWindowDimensions.ts"],"sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport FbgLogo from '../media/fbg_logo_white_48.png';\nimport Button from '@material-ui/core/Button';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GAMES_MAP } from 'games';\nimport { DesktopView } from 'components/DesktopMobileView';\n\ninterface IGameDarkSublayoutProps {\n  children: React.ReactNode;\n  optionsMenuItems?: () => IOptionsItems[];\n  allowWiderScreen?: boolean;\n  gameArgs: IGameArgs;\n}\n\ninterface IGameDarkSublayoutState {\n  feedback: boolean;\n  menuAnchorEl: any;\n  prevBgColor: string;\n}\n\nexport interface IOptionsItems {\n  text: string;\n  onClick: () => void;\n}\n\nexport class GameDarkSublayout extends React.Component<IGameDarkSublayoutProps, IGameDarkSublayoutState> {\n  constructor(props: IGameDarkSublayoutProps) {\n    super(props);\n    this.state = { feedback: null, menuAnchorEl: null, prevBgColor: document.body.style.backgroundColor };\n    document.body.style.backgroundColor = 'black';\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = this.state.prevBgColor;\n  }\n\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    const gameName = GAMES_MAP[this.props.gameArgs.gameCode].name;\n    let fbgTopLeftText;\n    if (isProdChannel) {\n      if (gameName) {\n        fbgTopLeftText = (\n          <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'left', paddingTop: '9px', color: 'white' }}>\n            {gameName}\n          </Typography>\n        );\n      }\n    } else {\n      fbgTopLeftText = (\n        <Typography\n          variant=\"h6\"\n          gutterBottom={true}\n          style={{ float: 'left', marginTop: '10px', backgroundColor: 'red', color: 'white' }}\n        >\n          &nbsp;{gameName}&nbsp;\n        </Typography>\n      );\n    }\n\n    let feedbackButtonOrText;\n    if (this.state.feedback) {\n      feedbackButtonOrText = (\n        <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'right', paddingTop: '10px', color: 'white' }}>\n          Desktop View is Experimental.\n        </Typography>\n      );\n    } else {\n      feedbackButtonOrText = (\n        <DesktopView thresholdWidth={680}>\n          <Button\n            onClick={this._toggleFeedback}\n            aria-label=\"Desktop View is Experimental.\"\n            variant=\"outlined\"\n            style={{ float: 'right', paddingTop: '14px' }}\n          >\n            <FeedbackIcon style={{ color: 'white' }} />\n          </Button>\n        </DesktopView>\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            position: 'fixed',\n            top: '0',\n            width: '100%',\n            zIndex: 1,\n          }}\n        >\n          <div\n            style={{\n              maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          >\n            <Link href=\"/\">\n              <a style={{ float: 'left', textDecoration: 'none' }}>\n                <img src={FbgLogo} alt=\"FreeBoardGames.org\" style={{ float: 'left', paddingRight: '16px' }} />\n                {fbgTopLeftText}\n              </a>\n            </Link>\n            {this._getOptionsMenuButton()}\n            {this._getOptionsMenuItems()}\n            {feedbackButtonOrText}\n          </div>\n        </div>\n        <div\n          style={{\n            position: 'fixed',\n            width: '100%',\n            maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n            color: 'white',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n  _getOptionsMenuButton() {\n    if (this.props.optionsMenuItems) {\n      return (\n        <Button\n          onClick={this._openOptionsMenu}\n          aria-label=\"Open options\"\n          variant=\"outlined\"\n          style={{ margin: '8px', float: 'right' }}\n        >\n          <MoreVert style={{ color: 'white' }} />\n        </Button>\n      );\n    }\n  }\n\n  _toggleFeedback = () => {\n    setTimeout(() => {\n      this.setState({ feedback: false });\n    }, 5000);\n    this.setState({ feedback: !this.state.feedback });\n  };\n\n  _openOptionsMenu = (event: any) => {\n    this.setState({ menuAnchorEl: event.currentTarget });\n  };\n\n  _closeOptionsMenu = () => {\n    this.setState({ menuAnchorEl: null });\n  };\n\n  _wrapOnClick = (onClickFunc: () => void) => () => {\n    // close menu, call onClickFunc\n    this._closeOptionsMenu();\n    onClickFunc();\n  };\n\n  _getOptionsMenuItems = () => {\n    if (!this.props.optionsMenuItems) {\n      return;\n    }\n    const { menuAnchorEl } = this.state;\n    const menuItems = this.props.optionsMenuItems().map((option: IOptionsItems, index) => {\n      return (\n        <MenuItem key={`option-${index}`} onClick={this._wrapOnClick(option.onClick)}>\n          {option.text}\n        </MenuItem>\n      );\n    });\n    return (\n      <Menu id=\"simple-menu\" anchorEl={menuAnchorEl} open={Boolean(menuAnchorEl)} onClose={this._closeOptionsMenu}>\n        {menuItems}\n      </Menu>\n    );\n  };\n}\n","import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\n\nexport interface IGameOverProps {\n  result: string;\n  gameArgs?: IGameArgs;\n  extraCardContent?: React.ReactNode;\n}\n\nexport interface IGameOverState {\n  loading: boolean;\n}\n\nexport class GameOver extends React.Component<IGameOverProps, {}> {\n  state = { loading: false };\n  render() {\n    if (this.state.loading) {\n      const Page = getMessagePage('loading', 'Loading...');\n      return <Page />;\n    }\n    let playAgain;\n    const extraCardContent = this._getExtraCardContent();\n    if (this.props.gameArgs) {\n      playAgain = (\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            onClick={this._playAgainHandle}\n            variant=\"outlined\"\n            style={{ marginRight: 'auto', marginLeft: 'auto', marginBottom: '24px' }}\n          >\n            <ReplayIcon style={{ marginRight: '8px' }} />\n            Play Again\n          </Button>\n        </div>\n      );\n    }\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over',\n    });\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <Typography variant=\"h6\" gutterBottom={true} align=\"center\" style={{ marginTop: '16px' }}>\n          Game Over, {this.props.result}!\n        </Typography>\n        {playAgain}\n        {extraCardContent}\n        <GamesList />\n      </FreeBoardGamesBar>\n    );\n  }\n  _getExtraCardContent = () => {\n    if (!this.props.extraCardContent) {\n      return null;\n    }\n    const otherPlayerCard = (\n      <div style={{ paddingBottom: '12px', maxWidth: '500px', margin: 'auto' }}>{this.props.extraCardContent}</div>\n    );\n    return otherPlayerCard;\n  };\n\n  _playAgainHandle = async () => {\n    const args = this.props.gameArgs;\n    ReactGA.event({\n      category: 'GameOver',\n      action: 'Clicked play again',\n      label: args.gameCode,\n    });\n\n    if (args.mode === GameMode.AI || args.mode === GameMode.LocalFriend) {\n      Router.push(window.location.pathname);\n    } else {\n      this.setState({ loading: true });\n      const nextRoomId = await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length);\n      Router.push(`/room/${args.gameCode}/${nextRoomId}` as any);\n    }\n  };\n}\n","import React from 'react';\nimport { GAMES_LIST } from 'games';\nimport { GameCard } from './Game/GameCard';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\nexport class GamesList extends React.Component<{}, {}> {\n  public render() {\n    const gamesList = GAMES_LIST.map((game) => (\n      <Link href={`/play/[gameCode]`} as={`/play/${game.code}`} key={game.code}>\n        <a style={{ textDecoration: 'none', flex: 1, minWidth: '300px', maxWidth: '380px', margin: '8px' }}>\n          <GameCard game={game} isLink={true} />\n        </a>\n      </Link>\n    ));\n    return (\n      <div style={{ marginBottom: '16px' }}>\n        <Typography component=\"h2\" variant=\"h6\" style={{ marginBottom: '16px', marginLeft: '6px' }}>\n          Games\n        </Typography>\n        <div style={{ margin: '0 4px', display: 'flex', flexWrap: 'wrap' }}>{gamesList}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport MessagePageClass from './MessagePageClass';\n\nconst getMessagePage = (type: 'error' | 'loading', message: string) => {\n  return () => {\n    return <MessagePageClass type={type} message={message} />;\n  };\n};\n\nexport default getMessagePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FreeBoardGamesBar from './FreeBoardGamesBar';\nimport SvgError from './media/SvgError';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\ninterface IMessageState {\n  linkHidden: boolean;\n  startTime: number;\n}\n\ninterface IMessageProps {\n  type: string;\n  message: string;\n  actionComponent?: JSX.Element;\n}\n\nexport class MessagePage extends React.Component<IMessageProps, IMessageState> {\n  requestID: number = null;\n  constructor(props: IMessageProps) {\n    super(props);\n    this.state = {\n      linkHidden: props.type !== 'error',\n      startTime: Date.now(),\n    };\n    if (typeof window !== 'undefined' && props.type !== 'error') {\n      this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n    }\n  }\n\n  _animate = (now: number) => () => {\n    if (this.requestID) {\n      const elapsed = now - this.state.startTime;\n      const linkHidden = elapsed < 5000;\n      this.setState({\n        ...this.state,\n        linkHidden,\n      });\n      if (linkHidden) {\n        this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.requestID) {\n      window.cancelAnimationFrame(this.requestID);\n      this.requestID = null;\n    }\n  }\n\n  render() {\n    let icon;\n    let linkHome;\n    if (this.props.type === 'error') {\n      icon = <SvgError style={{ height: '128px' }} />;\n    } else {\n      icon = <CircularProgress />;\n    }\n    if (!this.state.linkHidden) {\n      const goHomeText = 'Go Home';\n      linkHome = (\n        <Link href=\"/\">\n          <a style={{ textDecoration: 'none' }}>\n            <Button variant=\"outlined\" style={{ margin: '8px' }}>\n              <HomeIcon style={{ marginRight: '8px' }} />\n              {goHomeText}\n            </Button>\n          </a>\n        </Link>\n      );\n    }\n    return (\n      <FreeBoardGamesBar>\n        <div style={{ paddingTop: '16px', textAlign: 'center' }}>\n          {icon}\n          <Typography variant=\"h6\" gutterBottom={true} style={{ paddingTop: '16px' }}>\n            {this.props.message}\n            <br />\n            <br />\n            {linkHome}\n            {this.props.actionComponent}\n          </Typography>\n        </div>\n      </FreeBoardGamesBar>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nconst SvgError = (props: any) => (\n  <svg viewBox=\"0 0 1 1\" style={props.style}>\n    <g>\n      <line x1=\"0.2\" y1=\"0.2\" x2=\"0.8\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n      <line x1=\"0.8\" y1=\"0.2\" x2=\"0.2\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n    </g>\n  </svg>\n);\n\nexport default SvgError;\n","import React from 'react';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport MobileDetect from 'mobile-detect';\n\ninterface DesktopMobileViewProps {\n  children: React.ReactNode;\n  thresholdWidth?: number;\n  userAgent?: any;\n}\n\nconst DEFAULT_THRESHOLD_WIDTH = 550;\n\nfunction isMobile(props: DesktopMobileViewProps) {\n  const hasJssSSRStyles = typeof document !== 'undefined' && !!document?.querySelector('#jss-server-side');\n  let width = useWindowDimensions().width;\n  const isBrowser = typeof window !== 'undefined';\n  let isMobileResult: boolean;\n  if ((!isBrowser || hasJssSSRStyles) && props.userAgent) {\n    // keep the isDesktop() return uniform if JSS styles exist\n    const md = new MobileDetect(props.userAgent);\n    isMobileResult = !!md.mobile() && !md.tablet();\n  } else {\n    const thresholdWidth = props.thresholdWidth || DEFAULT_THRESHOLD_WIDTH;\n    isMobileResult = width <= thresholdWidth;\n  }\n  return isMobileResult;\n}\n\nexport const DesktopView = (props: DesktopMobileViewProps) => {\n  if (!isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nexport const MobileView = (props: DesktopMobileViewProps) => {\n  if (isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n","import { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameMode } from 'components/App/Game/GameModePicker';\n\nexport function isLocalGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.LocalFriend;\n}\n\nexport function isOnlineGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.OnlineFriend;\n}\n\nexport function isAIGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.AI;\n}\n","import * as React from 'react';\nimport { grey, red, blue } from '@material-ui/core/colors';\n\ninterface IShapeProps {\n  x: number;\n  y: number;\n}\n\nconst diskRadius = 0.375;\nconst strokeWidth = 0.05;\n\nexport const EmptyDisk = (props: any) => {\n  return (\n    <circle\n      key={`empty_circle${props.x},${props.y}`}\n      cx={props.x + 0.5}\n      cy={props.y + 0.5}\n      r={diskRadius}\n      strokeWidth={strokeWidth}\n      stroke={grey[50]}\n      onClick={props.onClick}\n    />\n  );\n};\n\nexport const CircleRed = (props: IShapeProps) => {\n  return (\n    <circle\n      key={`green_circle${props.x},${props.y}`}\n      cx={props.x + 0.5}\n      cy={props.y + 0.5}\n      r={diskRadius}\n      fill={red[500]}\n      strokeWidth={strokeWidth}\n      stroke={grey[50]}\n    />\n  );\n};\n\nexport const CircleBlue = (props: IShapeProps) => {\n  return (\n    <circle\n      key={`blue_circle${props.x},${props.y}`}\n      cx={props.x + 0.5}\n      cy={props.y + 0.5}\n      r={diskRadius}\n      fill={blue[500]}\n      strokeWidth={strokeWidth}\n      stroke={grey[50]}\n    />\n  );\n};\n","import * as React from 'react';\nimport { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameLayout } from 'components/App/Game/GameLayout';\nimport { EmptyDisk, CircleBlue, CircleRed } from './Shapes';\nimport Typography from '@material-ui/core/Typography';\nimport { isOnlineGame, isAIGame } from '../common/gameMode';\nimport { numOfColumns, numOfRows, localPlayerNames } from './constants';\n\ninterface IBoardProps {\n  G: any;\n  ctx: any;\n  moves: any;\n  playerID: string;\n  isActive: boolean;\n  gameArgs?: IGameArgs;\n  step?: any;\n}\n\nexport class Board extends React.Component<IBoardProps, {}> {\n  onClick = (id: number) => () => {\n    if (this.isActive(id)) {\n      this.props.moves.selectColumn(id);\n    }\n  };\n\n  isActive(id: number) {\n    const rowId = id % 10;\n    const colId = Math.floor(id / 10);\n    return this.props.isActive && this.props.G.grid[colId][rowId] === null;\n  }\n\n  _getStatus() {\n    if (isOnlineGame(this.props.gameArgs)) {\n      if (this.props.ctx.currentPlayer === this.props.playerID) {\n        return 'YOUR TURN';\n      } else {\n        return 'Waiting for opponent...';\n      }\n    } else {\n      // Local or AI game\n      return localPlayerNames[this.props.ctx.currentPlayer] + \"'s turn\";\n    }\n  }\n\n  _getGameOver() {\n    if (isOnlineGame(this.props.gameArgs)) {\n      // Online game\n      if (this.props.ctx.gameover.winner !== undefined) {\n        if (this.props.ctx.gameover.winner === this.props.playerID) {\n          return 'you won';\n        } else {\n          return 'you lost';\n        }\n      } else {\n        return 'draw';\n      }\n    } else if (isAIGame(this.props.gameArgs)) {\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return 'you won';\n        case '1':\n          return 'you lost';\n        case undefined:\n          return 'draw';\n      }\n    } else {\n      // Local game\n      switch (this.props.ctx.gameover.winner) {\n        case '0':\n          return localPlayerNames['0'] + ' won';\n        case '1':\n          return localPlayerNames['1'] + ' won';\n        case undefined:\n          return 'draw';\n      }\n    }\n  }\n\n  render() {\n    if (this.props.ctx.gameover) {\n      return (\n        <GameLayout\n          gameOver={this._getGameOver()}\n          extraCardContent={this._getGameOverBoard()}\n          gameArgs={this.props.gameArgs}\n        />\n      );\n    }\n    return <GameLayout gameArgs={this.props.gameArgs}>{this._getBoard()}</GameLayout>;\n  }\n\n  _getCells() {\n    const cells = [];\n    for (let i = 0; i < numOfColumns; i++) {\n      for (let j = 0; j < numOfRows; j++) {\n        const id = 10 * i + j;\n        cells.push(\n          <rect\n            key={`cell_${id}`}\n            x={i}\n            y={j}\n            width=\"1\"\n            height=\"1\"\n            //fill=\"#dac292\"\n            //stroke=\"#dac292\"\n            strokeWidth=\"0.05\"\n          />,\n        );\n        cells.push(<EmptyDisk x={i} y={j} key={`empty_chip_${id}`} onClick={this.onClick(id)} />);\n\n        let overlay;\n        if (this.props.G.grid[i][j] === '0') {\n          overlay = <CircleBlue x={i} y={j} key={`chip_${id}`} />;\n        } else if (this.props.G.grid[i][j] === '1') {\n          overlay = <CircleRed x={i} y={j} key={`chip_${id}`} />;\n        }\n        if (overlay) {\n          cells.push(overlay);\n        }\n      }\n    }\n    return cells;\n  }\n  _getBoard() {\n    return (\n      <div>\n        <Typography variant=\"h5\" style={{ textAlign: 'center', color: 'white', marginBottom: '16px' }}>\n          {this._getStatus()}\n        </Typography>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 7 6\">\n          {this._getCells()}\n        </svg>\n      </div>\n    );\n  }\n\n  _getGameOverBoard() {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <svg width=\"50%\" height=\"50%\" viewBox=\"0 0 7 6\">\n          {this._getCells()}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import { IGameConfig } from 'games';\nimport { ConnectFourGame } from './game';\nimport { Board } from './board';\n\nconst config: IGameConfig = {\n  bgioGame: ConnectFourGame,\n  bgioBoard: Board,\n};\n\nexport default config;\n","const numOfRows = 6;\nconst numOfColumns = 7;\nconst neededToWin = 4;\nconst localPlayerNames: any = {\n  '0': 'Blue',\n  '1': 'Red',\n};\n\nexport { numOfRows, numOfColumns, neededToWin, localPlayerNames };\n","import { numOfColumns, numOfRows, neededToWin } from './constants';\nimport { IGameArgs } from 'boardgame.io/core';\n\nfunction checkCellForVictory(grid: number[][], colId: any, rowId: any, player: any) {\n  let fourCells = new Array(neededToWin);\n\n  // check horizontally\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check vertically\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check diagonally-downwards\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId + i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n\n  // check diagonally-upwards\n  for (var i = 0; i < neededToWin; i++) {\n    try {\n      fourCells[i] = grid[colId - i][rowId + i];\n    } catch (e) {\n      fourCells[i] = null;\n    }\n  }\n  if (\n    fourCells.every(function (val) {\n      return val === player;\n    })\n  ) {\n    return true;\n  }\n}\n\nexport function isVictory(grid: number[][], player: any) {\n  for (var colId = 0; colId < numOfColumns; colId++) {\n    for (var rowId = 0; rowId < numOfRows; rowId++) {\n      if (checkCellForVictory(grid, colId, rowId, player)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function isDraw(grid: number[][]) {\n  for (var colIdx = numOfColumns - 1; colIdx >= 0; colIdx--) {\n    for (var rowIdx = numOfRows - 1; rowIdx >= 0; rowIdx--) {\n      if (grid[colIdx][rowIdx] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function generateGrid() {\n  const grid: any = {};\n  for (var rowIdx = 0; rowIdx < numOfColumns; rowIdx++) {\n    grid[rowIdx] = Array(numOfRows).fill(null);\n  }\n  return grid;\n}\n\nexport const ConnectFourGame: IGameArgs = {\n  name: 'fourinarow',\n\n  setup: () => {\n    return { grid: generateGrid() };\n  },\n\n  moves: {\n    selectColumn(G, ctx, id) {\n      const colId = Math.floor(id / 10);\n      for (var rowID = numOfRows - 1; rowID >= 0; rowID--) {\n        if (G.grid[colId][rowID] === null) {\n          G.grid[colId][rowID] = ctx.currentPlayer;\n          return;\n        }\n      }\n      // return { ...G, grid };\n    },\n  },\n  turn: {\n    moveLimit: 1,\n  },\n  endIf: (G, ctx) => {\n    if (isVictory(G.grid, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer };\n    }\n    if (isDraw(G.grid)) {\n      return { draw: true };\n    }\n  },\n};\n","// https://stackoverflow.com/a/59185109\n\nimport { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"],"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A;AACA;AAqBA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AA9BA;AA8BA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AA/HA;AAiIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClbA;AACA;AAmBA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA0BA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AANA;AAAA;AACA;AACA;AA7BA;AACA;AAmCA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3CA;AACA;AA0CA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AANA;AAAA;AACA;AACA;AA7CA;AACA;AAmDA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3DA;AACA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AANA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AARA;AAQA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AARA;AAQA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAKA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAIA;AACA;AACA;AACA;AAXA;AAYA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAIA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAOA;AAtBA;AAwBA;AACA;;;;A","sourceRoot":""}