{"version":3,"file":"15.js","sources":["webpack:///./src/games/reversi/ai.ts","webpack:///./src/games/reversi/game.ts"],"sourcesContent":["import { IAIConfig } from '../index';\nimport { IG, getValidMoves } from './game';\nimport { IGameCtx } from 'boardgame.io/core';\n\ninterface IPlayState {\n  G: IG;\n  ctx: IGameCtx;\n}\n\nexport class ReversiRandomBot {\n  async play(state: IPlayState, playerID: string) {\n    const moves = Array.from(getValidMoves(state.G, playerID));\n    // const move = moves[Math.floor(Math.random() * moves.length)];  // https://github.com/babel/minify/issues/904\n    const move = moves[(Math.random() * moves.length) << 0]; // https://github.com/babel/minify/issues/904\n    const x = move % 8;\n    const y = Math.floor(move / 8);\n    return this.makeMove(playerID, x, y);\n  }\n\n  makeMove(playerID: string, x: number, y: number) {\n    return { action: { type: 'MAKE_MOVE', payload: { type: 'placePiece', args: [x, y], playerID } } };\n  }\n}\nexport const config: IAIConfig = {\n  bgioAI: () => {\n    return {\n      bot: ReversiRandomBot,\n    };\n  },\n};\nexport default config;\n","import { IGameArgs, IGameCtx, INVALID_MOVE } from 'boardgame.io/core';\n\nexport interface IG {\n  points: string[];\n}\n\nfunction toPosition(x: number, y: number) {\n  return y * 8 + x;\n}\n\nfunction inBounds(x: number, y: number) {\n  return x >= 0 && x < 8 && y >= 0 && y < 8;\n}\n\nexport function getValidMoves(G: IG, playerID: string) {\n  let validMoves: Set<number> = new Set();\n  G.points\n    .map((player, position) => ({ player, position }))\n    .filter((point) => point.player === playerID)\n    .forEach((point) => {\n      for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n          if (i === 0 && j === 0) {\n            continue;\n          }\n          const x = point.position % 8;\n          // const y = Math.floor(point.position / 8);  // https://github.com/babel/minify/issues/904\n          const y = (point.position / 8) << 0;\n\n          let currX = x + i;\n          let currY = y + j;\n          let k = 1;\n          let end: number = null;\n\n          while (inBounds(currX, currY) && G.points[toPosition(currX, currY)] !== playerID) {\n            const position = toPosition(currX, currY);\n            if (G.points[position] === null) {\n              end = position;\n              break;\n            }\n\n            k++;\n            currX = x + i * k;\n            currY = y + j * k;\n          }\n\n          if (end !== null && k > 1) {\n            validMoves.add(end);\n          }\n        }\n      }\n    });\n\n  if (validMoves.size > 0) {\n    return validMoves;\n  }\n\n  G.points\n    .map((player, position) => ({ player, position }))\n    .filter((point) => point.player === null)\n    .forEach((point) => {\n      for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n          if (i === 0 && j === 0) {\n            continue;\n          }\n\n          const x = point.position % 8;\n          const y = (point.position / 8) << 0; // https://github.com/babel/minify/issues/904\n          if (inBounds(x + i, y + j) && G.points[toPosition(x + i, y + j)] !== null) {\n            validMoves.add(point.position);\n          }\n        }\n      }\n    });\n\n  return validMoves;\n}\n\nexport function placePiece(G: IG, ctx: IGameCtx, x: number, y: number) {\n  if (G.points[toPosition(x, y)] !== null) {\n    return INVALID_MOVE;\n  }\n\n  let changed: number[] = [toPosition(x, y)]; // Changed positions\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      if (i === 0 && j === 0) {\n        continue;\n      }\n\n      let valid = false;\n      let update = [];\n      let currX = x + i;\n      let currY = y + j;\n      for (let k = 2; inBounds(currX, currY) && G.points[toPosition(currX, currY)] !== null; k++) {\n        if (G.points[toPosition(currX, currY)] === ctx.currentPlayer) {\n          valid = true;\n          break;\n        }\n        update.push(toPosition(currX, currY));\n\n        currX = x + i * k;\n        currY = y + j * k;\n      }\n\n      if (valid) {\n        changed.push(...update);\n      }\n    }\n  }\n\n  if (changed.length === 1) {\n    if (getValidMoves(G, ctx.playerID).has(toPosition(x, y))) {\n      return {\n        ...G,\n        points: Object.values({\n          ...G.points,\n          [toPosition(x, y)]: ctx.playerID,\n        }),\n      };\n    }\n\n    return INVALID_MOVE;\n  } else {\n    changed.sort((a, b) => b - a);\n    return {\n      ...G,\n      points: G.points.map((point, i) => {\n        if (changed.length > 0 && i === changed[changed.length - 1]) {\n          changed.pop();\n          return ctx.playerID;\n        } else {\n          return point;\n        }\n      }),\n    };\n  }\n}\n\nexport function getScoreBoard(G: IG, ctx: IGameCtx) {\n  let scoreBoard = new Array(ctx.numPlayers).fill(0);\n  G.points\n    .filter((point) => point !== null && parseInt(point) < ctx.numPlayers)\n    .forEach((point) => scoreBoard[point as any]++);\n  return scoreBoard.map((score, i) => ({ playerID: i.toString(), score })).sort((a, b) => b.score - a.score);\n}\n\nconst GameConfig: IGameArgs = {\n  name: 'reversi',\n  turn: {\n    moveLimit: 1,\n  },\n  endIf: (G: IG, ctx) => {\n    if (!G.points.includes(null)) {\n      return { scoreboard: getScoreBoard(G, ctx) };\n    }\n  },\n  moves: {\n    placePiece,\n  },\n  setup: (ctx): IG => {\n    let points = Array(64).fill(null);\n    if (ctx.numPlayers === 2) {\n      points[toPosition(4, 4)] = '1';\n      points[toPosition(4, 3)] = '2';\n    } else {\n      points[toPosition(4, 3)] = '1';\n      points[toPosition(4, 4)] = '2';\n    }\n    points[toPosition(3, 3)] = '0';\n    points[toPosition(3, 4)] = '3';\n    return {\n      points,\n    };\n  },\n};\n\nexport const ReversiGame = GameConfig;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AAcxBA;AACA;AAwBA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AArCA;AACA;AAsCA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAxCA;AA2CA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AAPA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AA5DA;AA8DA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AANA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AACA;AARA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AACA;AAFA;AAKA;AALA;AAOA;AAPA;AAQA;AACA;AACA;AAnBA;AACA;AAmBA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AAhCA;AACA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AAOA;AARA;AAAA;AACA;AAFA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AACA;AADA;AAGA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AATA;AASA;AATA;AAUA;AAVA;AAWA;AACA;AADA;AAGA;AA3BA;AA8BA;;;;A","sourceRoot":""}