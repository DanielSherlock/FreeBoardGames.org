{"version":3,"file":"7.js","sources":["webpack:///./src/components/App/Game/GameDarkSublayout.tsx","webpack:///./src/components/App/Game/GameLayout.tsx","webpack:///./src/components/App/Game/GameOver.tsx","webpack:///./src/components/App/GamesList.tsx","webpack:///./src/components/App/MessagePage.tsx","webpack:///./src/components/App/MessagePageClass.tsx","webpack:///./src/components/App/media/SvgError.tsx","webpack:///./src/components/DesktopMobileView.tsx","webpack:///./src/games/common/GameUtil.ts","webpack:///./src/games/common/ScoreBadges.css","webpack:///./src/games/common/ScoreBadges.tsx","webpack:///./src/games/common/Scoreboard.tsx","webpack:///./src/games/takesix/CardComponent.css","webpack:///./src/games/takesix/CardComponent.tsx","webpack:///./src/games/takesix/Decks.tsx","webpack:///./src/games/takesix/PlayerHand.tsx","webpack:///./src/games/takesix/board.tsx","webpack:///./src/games/takesix/config.ts","webpack:///./src/games/takesix/game.ts","webpack:///./src/hooks/useWindowDimensions.ts"],"sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport FbgLogo from '../media/fbg_logo_white_48.png';\nimport Button from '@material-ui/core/Button';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GAMES_MAP } from 'games';\nimport { DesktopView } from 'components/DesktopMobileView';\n\ninterface IGameDarkSublayoutProps {\n  children: React.ReactNode;\n  optionsMenuItems?: () => IOptionsItems[];\n  allowWiderScreen?: boolean;\n  gameArgs: IGameArgs;\n}\n\ninterface IGameDarkSublayoutState {\n  feedback: boolean;\n  menuAnchorEl: any;\n  prevBgColor: string;\n}\n\nexport interface IOptionsItems {\n  text: string;\n  onClick: () => void;\n}\n\nexport class GameDarkSublayout extends React.Component<IGameDarkSublayoutProps, IGameDarkSublayoutState> {\n  constructor(props: IGameDarkSublayoutProps) {\n    super(props);\n    this.state = { feedback: null, menuAnchorEl: null, prevBgColor: document.body.style.backgroundColor };\n    document.body.style.backgroundColor = 'black';\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = this.state.prevBgColor;\n  }\n\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    const gameName = GAMES_MAP[this.props.gameArgs.gameCode].name;\n    let fbgTopLeftText;\n    if (isProdChannel) {\n      if (gameName) {\n        fbgTopLeftText = (\n          <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'left', paddingTop: '9px', color: 'white' }}>\n            {gameName}\n          </Typography>\n        );\n      }\n    } else {\n      fbgTopLeftText = (\n        <Typography\n          variant=\"h6\"\n          gutterBottom={true}\n          style={{ float: 'left', marginTop: '10px', backgroundColor: 'red', color: 'white' }}\n        >\n          &nbsp;{gameName}&nbsp;\n        </Typography>\n      );\n    }\n\n    let feedbackButtonOrText;\n    if (this.state.feedback) {\n      feedbackButtonOrText = (\n        <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'right', paddingTop: '10px', color: 'white' }}>\n          Desktop View is Experimental.\n        </Typography>\n      );\n    } else {\n      feedbackButtonOrText = (\n        <DesktopView thresholdWidth={680}>\n          <Button\n            onClick={this._toggleFeedback}\n            aria-label=\"Desktop View is Experimental.\"\n            variant=\"outlined\"\n            style={{ float: 'right', paddingTop: '14px' }}\n          >\n            <FeedbackIcon style={{ color: 'white' }} />\n          </Button>\n        </DesktopView>\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            position: 'fixed',\n            top: '0',\n            width: '100%',\n            zIndex: 1,\n          }}\n        >\n          <div\n            style={{\n              maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          >\n            <Link href=\"/\">\n              <a style={{ float: 'left', textDecoration: 'none' }}>\n                <img src={FbgLogo} alt=\"FreeBoardGames.org\" style={{ float: 'left', paddingRight: '16px' }} />\n                {fbgTopLeftText}\n              </a>\n            </Link>\n            {this._getOptionsMenuButton()}\n            {this._getOptionsMenuItems()}\n            {feedbackButtonOrText}\n          </div>\n        </div>\n        <div\n          style={{\n            position: 'fixed',\n            width: '100%',\n            maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n            color: 'white',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n  _getOptionsMenuButton() {\n    if (this.props.optionsMenuItems) {\n      return (\n        <Button\n          onClick={this._openOptionsMenu}\n          aria-label=\"Open options\"\n          variant=\"outlined\"\n          style={{ margin: '8px', float: 'right' }}\n        >\n          <MoreVert style={{ color: 'white' }} />\n        </Button>\n      );\n    }\n  }\n\n  _toggleFeedback = () => {\n    setTimeout(() => {\n      this.setState({ feedback: false });\n    }, 5000);\n    this.setState({ feedback: !this.state.feedback });\n  };\n\n  _openOptionsMenu = (event: any) => {\n    this.setState({ menuAnchorEl: event.currentTarget });\n  };\n\n  _closeOptionsMenu = () => {\n    this.setState({ menuAnchorEl: null });\n  };\n\n  _wrapOnClick = (onClickFunc: () => void) => () => {\n    // close menu, call onClickFunc\n    this._closeOptionsMenu();\n    onClickFunc();\n  };\n\n  _getOptionsMenuItems = () => {\n    if (!this.props.optionsMenuItems) {\n      return;\n    }\n    const { menuAnchorEl } = this.state;\n    const menuItems = this.props.optionsMenuItems().map((option: IOptionsItems, index) => {\n      return (\n        <MenuItem key={`option-${index}`} onClick={this._wrapOnClick(option.onClick)}>\n          {option.text}\n        </MenuItem>\n      );\n    });\n    return (\n      <Menu id=\"simple-menu\" anchorEl={menuAnchorEl} open={Boolean(menuAnchorEl)} onClose={this._closeOptionsMenu}>\n        {menuItems}\n      </Menu>\n    );\n  };\n}\n","import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\n\nexport interface IGameOverProps {\n  result: string;\n  gameArgs?: IGameArgs;\n  extraCardContent?: React.ReactNode;\n}\n\nexport interface IGameOverState {\n  loading: boolean;\n}\n\nexport class GameOver extends React.Component<IGameOverProps, {}> {\n  state = { loading: false };\n  render() {\n    if (this.state.loading) {\n      const Page = getMessagePage('loading', 'Loading...');\n      return <Page />;\n    }\n    let playAgain;\n    const extraCardContent = this._getExtraCardContent();\n    if (this.props.gameArgs) {\n      playAgain = (\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            onClick={this._playAgainHandle}\n            variant=\"outlined\"\n            style={{ marginRight: 'auto', marginLeft: 'auto', marginBottom: '24px' }}\n          >\n            <ReplayIcon style={{ marginRight: '8px' }} />\n            Play Again\n          </Button>\n        </div>\n      );\n    }\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over',\n    });\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <Typography variant=\"h6\" gutterBottom={true} align=\"center\" style={{ marginTop: '16px' }}>\n          Game Over, {this.props.result}!\n        </Typography>\n        {playAgain}\n        {extraCardContent}\n        <GamesList />\n      </FreeBoardGamesBar>\n    );\n  }\n  _getExtraCardContent = () => {\n    if (!this.props.extraCardContent) {\n      return null;\n    }\n    const otherPlayerCard = (\n      <div style={{ paddingBottom: '12px', maxWidth: '500px', margin: 'auto' }}>{this.props.extraCardContent}</div>\n    );\n    return otherPlayerCard;\n  };\n\n  _playAgainHandle = async () => {\n    const args = this.props.gameArgs;\n    ReactGA.event({\n      category: 'GameOver',\n      action: 'Clicked play again',\n      label: args.gameCode,\n    });\n\n    if (args.mode === GameMode.AI || args.mode === GameMode.LocalFriend) {\n      Router.push(window.location.pathname);\n    } else {\n      this.setState({ loading: true });\n      const nextRoomId = await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length);\n      Router.push(`/room/${args.gameCode}/${nextRoomId}` as any);\n    }\n  };\n}\n","import React from 'react';\nimport { GAMES_LIST } from 'games';\nimport { GameCard } from './Game/GameCard';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\nexport class GamesList extends React.Component<{}, {}> {\n  public render() {\n    const gamesList = GAMES_LIST.map((game) => (\n      <Link href={`/play/[gameCode]`} as={`/play/${game.code}`} key={game.code}>\n        <a style={{ textDecoration: 'none', flex: 1, minWidth: '300px', maxWidth: '380px', margin: '8px' }}>\n          <GameCard game={game} isLink={true} />\n        </a>\n      </Link>\n    ));\n    return (\n      <div style={{ marginBottom: '16px' }}>\n        <Typography component=\"h2\" variant=\"h6\" style={{ marginBottom: '16px', marginLeft: '6px' }}>\n          Games\n        </Typography>\n        <div style={{ margin: '0 4px', display: 'flex', flexWrap: 'wrap' }}>{gamesList}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport MessagePageClass from './MessagePageClass';\n\nconst getMessagePage = (type: 'error' | 'loading', message: string) => {\n  return () => {\n    return <MessagePageClass type={type} message={message} />;\n  };\n};\n\nexport default getMessagePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FreeBoardGamesBar from './FreeBoardGamesBar';\nimport SvgError from './media/SvgError';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\ninterface IMessageState {\n  linkHidden: boolean;\n  startTime: number;\n}\n\ninterface IMessageProps {\n  type: string;\n  message: string;\n  actionComponent?: JSX.Element;\n}\n\nexport class MessagePage extends React.Component<IMessageProps, IMessageState> {\n  requestID: number = null;\n  constructor(props: IMessageProps) {\n    super(props);\n    this.state = {\n      linkHidden: props.type !== 'error',\n      startTime: Date.now(),\n    };\n    if (typeof window !== 'undefined' && props.type !== 'error') {\n      this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n    }\n  }\n\n  _animate = (now: number) => () => {\n    if (this.requestID) {\n      const elapsed = now - this.state.startTime;\n      const linkHidden = elapsed < 5000;\n      this.setState({\n        ...this.state,\n        linkHidden,\n      });\n      if (linkHidden) {\n        this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.requestID) {\n      window.cancelAnimationFrame(this.requestID);\n      this.requestID = null;\n    }\n  }\n\n  render() {\n    let icon;\n    let linkHome;\n    if (this.props.type === 'error') {\n      icon = <SvgError style={{ height: '128px' }} />;\n    } else {\n      icon = <CircularProgress />;\n    }\n    if (!this.state.linkHidden) {\n      const goHomeText = 'Go Home';\n      linkHome = (\n        <Link href=\"/\">\n          <a style={{ textDecoration: 'none' }}>\n            <Button variant=\"outlined\" style={{ margin: '8px' }}>\n              <HomeIcon style={{ marginRight: '8px' }} />\n              {goHomeText}\n            </Button>\n          </a>\n        </Link>\n      );\n    }\n    return (\n      <FreeBoardGamesBar>\n        <div style={{ paddingTop: '16px', textAlign: 'center' }}>\n          {icon}\n          <Typography variant=\"h6\" gutterBottom={true} style={{ paddingTop: '16px' }}>\n            {this.props.message}\n            <br />\n            <br />\n            {linkHome}\n            {this.props.actionComponent}\n          </Typography>\n        </div>\n      </FreeBoardGamesBar>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nconst SvgError = (props: any) => (\n  <svg viewBox=\"0 0 1 1\" style={props.style}>\n    <g>\n      <line x1=\"0.2\" y1=\"0.2\" x2=\"0.8\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n      <line x1=\"0.8\" y1=\"0.2\" x2=\"0.2\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n    </g>\n  </svg>\n);\n\nexport default SvgError;\n","import React from 'react';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport MobileDetect from 'mobile-detect';\n\ninterface DesktopMobileViewProps {\n  children: React.ReactNode;\n  thresholdWidth?: number;\n  userAgent?: any;\n}\n\nconst DEFAULT_THRESHOLD_WIDTH = 550;\n\nfunction isMobile(props: DesktopMobileViewProps) {\n  const hasJssSSRStyles = typeof document !== 'undefined' && !!document?.querySelector('#jss-server-side');\n  let width = useWindowDimensions().width;\n  const isBrowser = typeof window !== 'undefined';\n  let isMobileResult: boolean;\n  if ((!isBrowser || hasJssSSRStyles) && props.userAgent) {\n    // keep the isDesktop() return uniform if JSS styles exist\n    const md = new MobileDetect(props.userAgent);\n    isMobileResult = !!md.mobile() && !md.tablet();\n  } else {\n    const thresholdWidth = props.thresholdWidth || DEFAULT_THRESHOLD_WIDTH;\n    isMobileResult = width <= thresholdWidth;\n  }\n  return isMobileResult;\n}\n\nexport const DesktopView = (props: DesktopMobileViewProps) => {\n  if (!isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nexport const MobileView = (props: DesktopMobileViewProps) => {\n  if (isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n","import { IGameCtx } from 'boardgame.io/core';\n\n/** Whether given player should play now or not. */\nexport function isPlayersTurn(player: string, ctx: IGameCtx): boolean {\n  const isActive = ctx.activePlayers !== null && player in ctx.activePlayers;\n  const isCurrentPlayer = ctx.activePlayers === null && ctx.currentPlayer === player;\n  return isActive || isCurrentPlayer;\n}\n","module.exports = {\n\t\"ScoreBadge\": \"_2JNj01BsSxf5w8852TU0Cm\",\n\t\"Nickname\": \"xOaxupaRCXBCBlZfQk2xW\",\n\t\"Self\": \"_2Z339MaE1_Efbc4g-TicgL\"\n};","import * as React from 'react';\nimport { IScore } from './Scoreboard';\nimport { IPlayerInRoom } from 'components/App/Lobby/LobbyService';\nimport css from './ScoreBadges.css';\nimport Typography from '@material-ui/core/Typography';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { isPlayersTurn } from './GameUtil';\n\ninterface IScoreBadgesProps {\n  scoreboard: IScore[];\n  players: IPlayerInRoom[];\n  playerID: string;\n  colors?: string[];\n  ctx: IGameCtx;\n}\n\nexport class ScoreBadges extends React.Component<IScoreBadgesProps, {}> {\n  render() {\n    const badges = this.props.scoreboard.map((score) => {\n      const nickname = this.props.players.find((player) => player.playerID.toString() === score.playerID).name;\n      const isSelf = score.playerID.toString() === this.props.playerID;\n      return (\n        <div\n          className={css.ScoreBadge}\n          key={score.playerID}\n          style={{ borderColor: this.props.colors ? this.props.colors[score.playerID as any] : 'white' }}\n          data-testid={`scorebadge-${score.playerID}`}\n        >\n          <span className={css.Nickname}>\n            <Typography\n              data-testid={`nickname-${score.playerID}`}\n              style={{ color: 'white' }}\n              className={isSelf ? css.Self : undefined}\n              variant=\"body2\"\n            >\n              {isPlayersTurn(score.playerID, this.props.ctx) ? '🕒 ' : ''}\n              {nickname}\n            </Typography>\n          </span>\n          <span>\n            <Typography\n              data-testid={`score-${score.playerID}`}\n              style={{ color: 'white' }}\n              className={isSelf ? css.Self : undefined}\n              variant=\"body2\"\n            >\n              {score.score}\n            </Typography>\n          </span>\n        </div>\n      );\n    });\n    return <div style={{ clear: 'left', paddingTop: '8px' }}>{badges}</div>;\n  }\n}\n","import * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport grey from '@material-ui/core/colors/grey';\nimport { IPlayerInRoom } from 'components/App/Lobby/LobbyService';\n\nexport interface IScore {\n  playerID: string;\n  score: number;\n}\n\ninterface IScoreboardProps {\n  scoreboard: IScore[];\n  players: IPlayerInRoom[];\n  playerID: string;\n  scoreName?: string;\n}\n\nexport class Scoreboard extends React.Component<IScoreboardProps, {}> {\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Rank</TableCell>\n              <TableCell>Player</TableCell>\n              <TableCell>{this.props.scoreName || 'Score'}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.scoreboard.map((score, i) => {\n              let style = {};\n              if (score.playerID.toString() === this.props.playerID) {\n                style = {\n                  background: grey[200],\n                };\n              }\n              const name = this.props.players.find((player) => player.playerID.toString() === score.playerID).name;\n              return (\n                <TableRow key={score.playerID} style={style}>\n                  <TableCell>#{i + 1}</TableCell>\n                  <TableCell>{name}</TableCell>\n                  <TableCell>{score.score}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n","module.exports = {\n\t\"Card\": \"hPKAN6neFNaXIYl6Cobl4\",\n\t\"bounceIn\": \"_1xLN_sVMkGhcluLDKmhjij\"\n};","import * as React from 'react';\nimport Card from './card';\nimport css from './CardComponent.css';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface ICardProps {\n  card: Card;\n  click?: () => void;\n}\n\nexport class CardComponent extends React.Component<ICardProps, {}> {\n  render() {\n    const values: any = {\n      1: '#ffffff',\n      2: '#3498db',\n      3: '#f1c40f',\n      5: '#e74c3c',\n      7: '#8e44ad',\n    };\n\n    return (\n      <div\n        onClick={this.props.click}\n        className={css.Card}\n        style={{\n          background: values[this.props.card.value],\n        }}\n      >\n        <Typography\n          className=\"CardValue\"\n          style={{\n            textAlign: 'center',\n            lineHeight: '20px',\n          }}\n          variant=\"body2\"\n        >\n          {this.props.card.value}\n        </Typography>\n        <Typography\n          className=\"CardNumber\"\n          style={{\n            textAlign: 'center',\n            lineHeight: '45px',\n            verticalAlign: 'middle',\n          }}\n          variant=\"h4\"\n        >\n          {this.props.card.number}\n        </Typography>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG, isAllowedDeck } from './game';\nimport { CardComponent } from './CardComponent';\n\ninterface IDecksProps {\n  G: IG;\n  ctx: IGameCtx;\n  playerID: string;\n  selectDeck: (index: number) => void;\n}\n\nexport class Decks extends React.Component<IDecksProps, {}> {\n  _selectDeck = (i: number) => () => this.props.selectDeck(i);\n\n  render() {\n    return (\n      <div>\n        {this.props.G.decks.map((deck, i) => (\n          <div\n            className=\"DeckRow\"\n            key={i}\n            onClick={this._selectDeck(i)}\n            style={{\n              marginBottom: '4px',\n              opacity: this.getOpacity(i),\n            }}\n          >\n            {deck.map((card) => (\n              <div key={card.number}>\n                <CardComponent card={card} />\n              </div>\n            ))}\n            <div style={{ clear: 'both' }} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  getOpacity(id: number): number {\n    if (this.props.ctx.phase === 'CARD_SELECT' || this.props.ctx.currentPlayer !== this.props.playerID) {\n      return 1;\n    }\n\n    if (isAllowedDeck(this.props.G, id, this.props.playerID)) {\n      return 1;\n    } else {\n      return 0.2;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IG } from './game';\nimport { CardComponent } from './CardComponent';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IPlayerHandProps {\n  G: IG;\n  playerID: string;\n  selectCard: (index: number) => void;\n}\n\nexport class PlayerHand extends React.Component<IPlayerHandProps, {}> {\n  _selectCard = (i: number) => () => this.props.selectCard(i);\n\n  render() {\n    return (\n      <div>\n        <div style={{ clear: 'both', marginTop: '8px' }}>\n          <Typography style={{ color: 'white' }} variant=\"body2\">\n            Your hand\n          </Typography>\n        </div>\n        <div\n          style={{\n            width: '100%',\n          }}\n        >\n          {this.props.G.players[this.props.playerID as any].cards.map((card, index: number) => (\n            <CardComponent key={card.number} click={this._selectCard(index)} card={card} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameLayout } from 'components/App/Game/GameLayout';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IG, getScoreBoard, isAllowedDeck } from './game';\nimport { Decks } from './Decks';\nimport { PlayerHand } from './PlayerHand';\nimport { Scoreboard } from '../common/Scoreboard';\nimport { ScoreBadges } from '../common/ScoreBadges';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  step?: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n}\n\ninterface IBoardState {\n  aiSecondDeck: boolean;\n}\n\nexport class Board extends React.Component<IBoardProps, IBoardState> {\n  _selectCard = async (id: number) => {\n    if (!this._canPlay() || this.props.ctx.phase !== 'CARD_SELECT') {\n      return;\n    }\n    this.props.moves.selectCard(id);\n  };\n\n  _selectDeck = (id: number) => {\n    if (\n      !this._canPlay() ||\n      this.props.ctx.phase !== 'DECK_SELECT' ||\n      !isAllowedDeck(this.props.G, id, this.props.playerID)\n    ) {\n      return;\n    }\n    this.props.moves.selectDeck(id);\n  };\n\n  _getStatus() {\n    if (!this.props.gameArgs) {\n      return;\n    }\n    if (!this._canPlay()) {\n      return 'Waiting for opponent...';\n    }\n    if (this.props.ctx.phase === 'CARD_SELECT') {\n      return 'SELECT CARD';\n    } else {\n      return 'SELECT BOARD';\n    }\n  }\n\n  _canPlay() {\n    if (this.props.ctx.phase === 'CARD_SELECT') {\n      return (\n        this.props.ctx.activePlayers !== null &&\n        Object.keys(this.props.ctx.activePlayers)?.includes(this.props.playerID)\n      );\n    } else {\n      return this.props.playerID === this.props.ctx.currentPlayer;\n    }\n  }\n\n  _getGameOver() {\n    if (this.props.ctx.gameover.winner !== undefined) {\n      if (this.props.ctx.gameover.winner === this.props.playerID) {\n        return 'you won';\n      } else {\n        return 'you lost';\n      }\n    } else {\n      return 'draw';\n    }\n  }\n\n  _getScoreBoard() {\n    return (\n      <Scoreboard\n        scoreboard={getScoreBoard(this.props.G)}\n        playerID={this.props.playerID}\n        players={this.props.gameArgs.players}\n        scoreName=\"Penalty points\"\n      />\n    );\n  }\n\n  render() {\n    if (this.props.ctx.gameover) {\n      return (\n        <GameLayout\n          gameOver={this._getGameOver()}\n          extraCardContent={this._getScoreBoard()}\n          gameArgs={this.props.gameArgs}\n        />\n      );\n    }\n\n    return (\n      <GameLayout gameArgs={this.props.gameArgs}>\n        <Typography variant=\"h5\" style={{ textAlign: 'center', color: 'white', marginBottom: '16px' }}>\n          {this._getStatus()}\n        </Typography>\n        <Decks G={this.props.G} ctx={this.props.ctx} playerID={this.props.playerID} selectDeck={this._selectDeck} />\n        <PlayerHand G={this.props.G} playerID={this.props.playerID} selectCard={this._selectCard} />\n        <ScoreBadges\n          scoreboard={getScoreBoard(this.props.G)}\n          playerID={this.props.playerID}\n          players={this.props.gameArgs.players}\n          ctx={this.props.ctx}\n        />\n      </GameLayout>\n    );\n  }\n}\n\nexport default Board;\n","import { IGameConfig } from '../index';\nimport { TakeSixGame } from './game';\nimport { Board } from './board';\n\nconst config: IGameConfig = {\n  bgioGame: TakeSixGame,\n  bgioBoard: Board,\n};\n\nexport default config;\n","import { IGameArgs, IGameCtx, INVALID_MOVE, ActivePlayers } from 'boardgame.io/core';\nimport { IScore } from '../common/Scoreboard';\nimport Card from './card';\nimport Player from './player';\n\nexport interface IG {\n  players: Player[];\n  decks: Card[][];\n  cardOrder: string[];\n  end: boolean;\n}\n\nexport interface IGetCards {\n  card: Card;\n  lastCards: Card[];\n}\n\nfunction sortCards(a: Card, b: Card) {\n  return a.number - b.number;\n}\n\nexport function isAllowedDeck(G: IG, deckId: number, playerID: string): boolean {\n  const { card, lastCards } = getCards(G, playerID);\n  if (card.number < lastCards[0].number) {\n    return true;\n  }\n  const diffs: number[] = G.decks.map((deck) => card.number - deck[deck.length - 1].number);\n  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = 0;\n  diffs.forEach((diff, index) => {\n    if (diff > 0 && diff < min) {\n      min = diff;\n      minIndex = index;\n    }\n  });\n  return minIndex === deckId;\n}\n\nexport function getCards(G: IG, playerID: string): IGetCards {\n  const lastCards = G.decks.map((deck) => deck[deck.length - 1]).sort(sortCards);\n  const card = G.players[playerID as any].selectedCard;\n  return { card, lastCards: lastCards };\n}\n\nfunction moveToHand(G: IG, ctx: IGameCtx, card: Card, deckId: number): any {\n  return {\n    ...G,\n    players: Object.values({\n      ...G.players,\n      [ctx.playerID]: {\n        ...G.players[ctx.playerID as any],\n        penaltyCards: [...G.players[ctx.playerID as any].penaltyCards, ...G.decks[deckId]],\n      },\n    }),\n    decks: Object.values({\n      ...G.decks,\n      [deckId]: [card],\n    }),\n  };\n}\n\nexport function selectCard(G: IG, ctx: IGameCtx, id: number): any {\n  if (id < 0 || id >= G.players[ctx.playerID as any].cards.length) {\n    return INVALID_MOVE;\n  }\n  return {\n    ...G,\n    players: Object.values({\n      ...G.players,\n      [ctx.playerID]: {\n        ...G.players[ctx.playerID as any],\n        selectedCard: G.players[ctx.playerID as any].cards[id], // Set card as selected\n        cards: G.players[ctx.playerID as any].cards.filter((_, index) => index !== id), // Remove card from player's deck\n      },\n    }),\n  };\n}\n\nexport function getScoreBoard(G: IG): IScore[] {\n  return G.players\n    .map((player, i) => ({\n      playerID: i.toString(),\n      score: player.penaltyCards.reduce((acc, card) => acc + card.value, 0),\n    }))\n    .sort((a, b) => a.score - b.score);\n}\n\nexport function selectDeck(G: IG, ctx: IGameCtx, id: number): any {\n  if (!isAllowedDeck(G, id, ctx.playerID)) {\n    return INVALID_MOVE;\n  }\n  const { card, lastCards } = getCards(G, ctx.playerID);\n\n  // Card is lower than every in deck OR\n  // card is #6 move all cards from deck to player's hand\n  if (card.number < lastCards[0].number || G.decks[id].length === 5) {\n    return moveToHand(G, ctx, card, id);\n  }\n\n  // Append card\n  return {\n    ...G,\n    decks: Object.values({\n      ...G.decks,\n      [id]: [...G.decks[id], card],\n    }),\n  };\n}\n\nconst GameConfig: IGameArgs = {\n  name: 'takesix',\n  phases: {\n    // Everyone needs to select card\n    CARD_SELECT: {\n      moves: { selectCard },\n      next: 'DECK_SELECT',\n      // Determine player order\n      onEnd: (G: IG) => {\n        const selectedCards = G.players.map((player) => player.selectedCard);\n        selectedCards.sort(sortCards);\n        return {\n          ...G,\n          cardOrder: selectedCards.map((card) => card.owner).map((owner) => owner.toString()),\n        };\n      },\n      start: true,\n      turn: {\n        activePlayers: ActivePlayers.ALL_ONCE,\n        onMove: (_, ctx) => {\n          if (ctx.activePlayers === null) {\n            ctx.events.endPhase();\n          }\n        },\n      },\n    },\n    // Select deck\n    DECK_SELECT: {\n      moves: { selectDeck },\n      next: 'CARD_SELECT',\n      onEnd: (G: IG) => {\n        if (G.players[0].cards.length === 0) {\n          G.end = true;\n        }\n      },\n      turn: {\n        moveLimit: 1,\n        order: {\n          playOrder: (G: IG) => G.cardOrder,\n          first: () => 0,\n          next: (_, ctx) => {\n            if (ctx.playOrderPos < ctx.playOrder.length - 1) {\n              return ctx.playOrderPos + 1;\n            }\n          },\n        },\n      },\n    },\n  },\n  endIf: (G: IG) => {\n    if (G.end === true) {\n      const scoreboard = getScoreBoard(G);\n      if (scoreboard[0].score === scoreboard[1].score) {\n        return { draw: true };\n      } else {\n        return { winner: scoreboard[0].playerID.toString() };\n      }\n    }\n  },\n  events: {\n    endTurn: false,\n    endGame: false,\n    endPhase: false,\n  },\n  // playerView: PlayerView.STRIP_SECRETS,\n  setup: (ctx): IG => {\n    // Generate deck\n    const deck = ctx.random.Shuffle(\n      new Array(104).fill(0).map((_, i) => {\n        let value = 1;\n        if ((i + 1) % 55 === 0) {\n          value = 7;\n        } else if ((i + 1) % 11 === 0) {\n          value = 5;\n        } else if ((i + 1) % 10 === 0) {\n          value = 3;\n        } else if ((i + 1) % 5 === 0) {\n          value = 2;\n        }\n        return { number: i + 1, value, owner: null };\n      }),\n    );\n\n    // Set initial state\n    return {\n      decks: new Array(4)\n        .fill(0)\n        .map(() => deck.pop())\n        .sort(sortCards)\n        .map((card) => [card]),\n      players: new Array(ctx.numPlayers).fill(0).map((_, i) => ({\n        cards: new Array(10)\n          .fill(0)\n          .map(() => {\n            const card = deck.pop();\n            card.owner = i;\n            return card;\n          })\n          .sort(sortCards),\n        penaltyCards: [],\n      })),\n      cardOrder: [],\n      end: false,\n    };\n  },\n};\n\nexport const TakeSixGame = GameConfig;\nexport const TakeSixGameForTest = (override: any) => ({\n  ...GameConfig,\n  ...override,\n});\n","// https://stackoverflow.com/a/59185109\n\nimport { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"],"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","sourceRoot":""}