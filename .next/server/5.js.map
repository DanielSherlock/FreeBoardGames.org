{"version":3,"file":"5.js","sources":["webpack:///./src/components/App/Game/GameDarkSublayout.tsx","webpack:///./src/components/App/Game/GameLayout.tsx","webpack:///./src/components/App/Game/GameOver.tsx","webpack:///./src/components/App/GamesList.tsx","webpack:///./src/components/App/MessagePage.tsx","webpack:///./src/components/App/MessagePageClass.tsx","webpack:///./src/components/App/media/SvgError.tsx","webpack:///./src/components/DesktopMobileView.tsx","webpack:///./src/games/common/gameMode.ts","webpack:///./src/games/secretcodes/Lobby.css","webpack:///./src/games/secretcodes/Lobby.tsx","webpack:///./src/games/secretcodes/LobbyPlayer.tsx","webpack:///./src/games/secretcodes/LobbyTeam.tsx","webpack:///./src/games/secretcodes/PlayBoard.tsx","webpack:///./src/games/secretcodes/board.css","webpack:///./src/games/secretcodes/board.tsx","webpack:///./src/games/secretcodes/config.ts","webpack:///./src/games/secretcodes/constants.ts","webpack:///./src/games/secretcodes/definitions.ts","webpack:///./src/games/secretcodes/game.ts","webpack:///./src/games/secretcodes/util.ts","webpack:///./src/hooks/useWindowDimensions.ts"],"sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport FbgLogo from '../media/fbg_logo_white_48.png';\nimport Button from '@material-ui/core/Button';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GAMES_MAP } from 'games';\nimport { DesktopView } from 'components/DesktopMobileView';\n\ninterface IGameDarkSublayoutProps {\n  children: React.ReactNode;\n  optionsMenuItems?: () => IOptionsItems[];\n  allowWiderScreen?: boolean;\n  gameArgs: IGameArgs;\n}\n\ninterface IGameDarkSublayoutState {\n  feedback: boolean;\n  menuAnchorEl: any;\n  prevBgColor: string;\n}\n\nexport interface IOptionsItems {\n  text: string;\n  onClick: () => void;\n}\n\nexport class GameDarkSublayout extends React.Component<IGameDarkSublayoutProps, IGameDarkSublayoutState> {\n  constructor(props: IGameDarkSublayoutProps) {\n    super(props);\n    this.state = { feedback: null, menuAnchorEl: null, prevBgColor: document.body.style.backgroundColor };\n    document.body.style.backgroundColor = 'black';\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = this.state.prevBgColor;\n  }\n\n  render() {\n    const isProdChannel = process.env.NODE_ENV === 'production';\n    const gameName = GAMES_MAP[this.props.gameArgs.gameCode].name;\n    let fbgTopLeftText;\n    if (isProdChannel) {\n      if (gameName) {\n        fbgTopLeftText = (\n          <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'left', paddingTop: '9px', color: 'white' }}>\n            {gameName}\n          </Typography>\n        );\n      }\n    } else {\n      fbgTopLeftText = (\n        <Typography\n          variant=\"h6\"\n          gutterBottom={true}\n          style={{ float: 'left', marginTop: '10px', backgroundColor: 'red', color: 'white' }}\n        >\n          &nbsp;{gameName}&nbsp;\n        </Typography>\n      );\n    }\n\n    let feedbackButtonOrText;\n    if (this.state.feedback) {\n      feedbackButtonOrText = (\n        <Typography variant=\"h6\" gutterBottom={true} style={{ float: 'right', paddingTop: '10px', color: 'white' }}>\n          Desktop View is Experimental.\n        </Typography>\n      );\n    } else {\n      feedbackButtonOrText = (\n        <DesktopView thresholdWidth={680}>\n          <Button\n            onClick={this._toggleFeedback}\n            aria-label=\"Desktop View is Experimental.\"\n            variant=\"outlined\"\n            style={{ float: 'right', paddingTop: '14px' }}\n          >\n            <FeedbackIcon style={{ color: 'white' }} />\n          </Button>\n        </DesktopView>\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            position: 'fixed',\n            top: '0',\n            width: '100%',\n            zIndex: 1,\n          }}\n        >\n          <div\n            style={{\n              maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          >\n            <Link href=\"/\">\n              <a style={{ float: 'left', textDecoration: 'none' }}>\n                <img src={FbgLogo} alt=\"FreeBoardGames.org\" style={{ float: 'left', paddingRight: '16px' }} />\n                {fbgTopLeftText}\n              </a>\n            </Link>\n            {this._getOptionsMenuButton()}\n            {this._getOptionsMenuItems()}\n            {feedbackButtonOrText}\n          </div>\n        </div>\n        <div\n          style={{\n            position: 'fixed',\n            width: '100%',\n            maxWidth: this.props.allowWiderScreen ? '1000px' : '500px',\n            color: 'white',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n  _getOptionsMenuButton() {\n    if (this.props.optionsMenuItems) {\n      return (\n        <Button\n          onClick={this._openOptionsMenu}\n          aria-label=\"Open options\"\n          variant=\"outlined\"\n          style={{ margin: '8px', float: 'right' }}\n        >\n          <MoreVert style={{ color: 'white' }} />\n        </Button>\n      );\n    }\n  }\n\n  _toggleFeedback = () => {\n    setTimeout(() => {\n      this.setState({ feedback: false });\n    }, 5000);\n    this.setState({ feedback: !this.state.feedback });\n  };\n\n  _openOptionsMenu = (event: any) => {\n    this.setState({ menuAnchorEl: event.currentTarget });\n  };\n\n  _closeOptionsMenu = () => {\n    this.setState({ menuAnchorEl: null });\n  };\n\n  _wrapOnClick = (onClickFunc: () => void) => () => {\n    // close menu, call onClickFunc\n    this._closeOptionsMenu();\n    onClickFunc();\n  };\n\n  _getOptionsMenuItems = () => {\n    if (!this.props.optionsMenuItems) {\n      return;\n    }\n    const { menuAnchorEl } = this.state;\n    const menuItems = this.props.optionsMenuItems().map((option: IOptionsItems, index) => {\n      return (\n        <MenuItem key={`option-${index}`} onClick={this._wrapOnClick(option.onClick)}>\n          {option.text}\n        </MenuItem>\n      );\n    });\n    return (\n      <Menu id=\"simple-menu\" anchorEl={menuAnchorEl} open={Boolean(menuAnchorEl)} onClose={this._closeOptionsMenu}>\n        {menuItems}\n      </Menu>\n    );\n  };\n}\n","import React from 'react';\nimport { GameOver } from './GameOver';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GameDarkSublayout } from './GameDarkSublayout';\nimport { IOptionsItems } from './GameDarkSublayout';\n\ninterface IGameLayoutProps {\n  gameArgs: IGameArgs;\n  children?: React.ReactNode;\n  gameOver?: string;\n  allowWiderScreen?: boolean;\n  optionsMenuItems?: () => IOptionsItems[];\n  extraCardContent?: React.ReactNode;\n}\n\nexport class GameLayout extends React.Component<IGameLayoutProps, {}> {\n  render() {\n    if (this.props.gameOver) {\n      return (\n        <GameOver\n          result={this.props.gameOver}\n          gameArgs={this.props.gameArgs}\n          extraCardContent={this.props.extraCardContent}\n        />\n      );\n    } else {\n      return (\n        <GameDarkSublayout\n          optionsMenuItems={this.props.optionsMenuItems}\n          allowWiderScreen={this.props.allowWiderScreen}\n          gameArgs={this.props.gameArgs}\n        >\n          {this.props.children}\n        </GameDarkSublayout>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { GameMode } from './GameModePicker';\nimport { IGameArgs } from './GameBoardWrapper';\nimport { GamesList } from '../GamesList';\nimport FreeBoardGamesBar from '../FreeBoardGamesBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ReactGA from 'react-ga';\nimport getMessagePage from '../MessagePage';\nimport { LobbyService } from '../Lobby/LobbyService';\nimport Router from 'next/router';\n\nexport interface IGameOverProps {\n  result: string;\n  gameArgs?: IGameArgs;\n  extraCardContent?: React.ReactNode;\n}\n\nexport interface IGameOverState {\n  loading: boolean;\n}\n\nexport class GameOver extends React.Component<IGameOverProps, {}> {\n  state = { loading: false };\n  render() {\n    if (this.state.loading) {\n      const Page = getMessagePage('loading', 'Loading...');\n      return <Page />;\n    }\n    let playAgain;\n    const extraCardContent = this._getExtraCardContent();\n    if (this.props.gameArgs) {\n      playAgain = (\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            onClick={this._playAgainHandle}\n            variant=\"outlined\"\n            style={{ marginRight: 'auto', marginLeft: 'auto', marginBottom: '24px' }}\n          >\n            <ReplayIcon style={{ marginRight: '8px' }} />\n            Play Again\n          </Button>\n        </div>\n      );\n    }\n    ReactGA.event({\n      category: 'Game',\n      label: this.props.gameArgs.gameCode,\n      action: 'Game over',\n    });\n    return (\n      <FreeBoardGamesBar FEATURE_FLAG_readyForDesktopView>\n        <Typography variant=\"h6\" gutterBottom={true} align=\"center\" style={{ marginTop: '16px' }}>\n          Game Over, {this.props.result}!\n        </Typography>\n        {playAgain}\n        {extraCardContent}\n        <GamesList />\n      </FreeBoardGamesBar>\n    );\n  }\n  _getExtraCardContent = () => {\n    if (!this.props.extraCardContent) {\n      return null;\n    }\n    const otherPlayerCard = (\n      <div style={{ paddingBottom: '12px', maxWidth: '500px', margin: 'auto' }}>{this.props.extraCardContent}</div>\n    );\n    return otherPlayerCard;\n  };\n\n  _playAgainHandle = async () => {\n    const args = this.props.gameArgs;\n    ReactGA.event({\n      category: 'GameOver',\n      action: 'Clicked play again',\n      label: args.gameCode,\n    });\n\n    if (args.mode === GameMode.AI || args.mode === GameMode.LocalFriend) {\n      Router.push(window.location.pathname);\n    } else {\n      this.setState({ loading: true });\n      const nextRoomId = await LobbyService.getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length);\n      Router.push(`/room/${args.gameCode}/${nextRoomId}` as any);\n    }\n  };\n}\n","import React from 'react';\nimport { GAMES_LIST } from 'games';\nimport { GameCard } from './Game/GameCard';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\nexport class GamesList extends React.Component<{}, {}> {\n  public render() {\n    const gamesList = GAMES_LIST.map((game) => (\n      <Link href={`/play/[gameCode]`} as={`/play/${game.code}`} key={game.code}>\n        <a style={{ textDecoration: 'none', flex: 1, minWidth: '300px', maxWidth: '380px', margin: '8px' }}>\n          <GameCard game={game} isLink={true} />\n        </a>\n      </Link>\n    ));\n    return (\n      <div style={{ marginBottom: '16px' }}>\n        <Typography component=\"h2\" variant=\"h6\" style={{ marginBottom: '16px', marginLeft: '6px' }}>\n          Games\n        </Typography>\n        <div style={{ margin: '0 4px', display: 'flex', flexWrap: 'wrap' }}>{gamesList}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport MessagePageClass from './MessagePageClass';\n\nconst getMessagePage = (type: 'error' | 'loading', message: string) => {\n  return () => {\n    return <MessagePageClass type={type} message={message} />;\n  };\n};\n\nexport default getMessagePage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FreeBoardGamesBar from './FreeBoardGamesBar';\nimport SvgError from './media/SvgError';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\n\ninterface IMessageState {\n  linkHidden: boolean;\n  startTime: number;\n}\n\ninterface IMessageProps {\n  type: string;\n  message: string;\n  actionComponent?: JSX.Element;\n}\n\nexport class MessagePage extends React.Component<IMessageProps, IMessageState> {\n  requestID: number = null;\n  constructor(props: IMessageProps) {\n    super(props);\n    this.state = {\n      linkHidden: props.type !== 'error',\n      startTime: Date.now(),\n    };\n    if (typeof window !== 'undefined' && props.type !== 'error') {\n      this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n    }\n  }\n\n  _animate = (now: number) => () => {\n    if (this.requestID) {\n      const elapsed = now - this.state.startTime;\n      const linkHidden = elapsed < 5000;\n      this.setState({\n        ...this.state,\n        linkHidden,\n      });\n      if (linkHidden) {\n        this.requestID = window.requestAnimationFrame(this._animate(Date.now()));\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.requestID) {\n      window.cancelAnimationFrame(this.requestID);\n      this.requestID = null;\n    }\n  }\n\n  render() {\n    let icon;\n    let linkHome;\n    if (this.props.type === 'error') {\n      icon = <SvgError style={{ height: '128px' }} />;\n    } else {\n      icon = <CircularProgress />;\n    }\n    if (!this.state.linkHidden) {\n      const goHomeText = 'Go Home';\n      linkHome = (\n        <Link href=\"/\">\n          <a style={{ textDecoration: 'none' }}>\n            <Button variant=\"outlined\" style={{ margin: '8px' }}>\n              <HomeIcon style={{ marginRight: '8px' }} />\n              {goHomeText}\n            </Button>\n          </a>\n        </Link>\n      );\n    }\n    return (\n      <FreeBoardGamesBar>\n        <div style={{ paddingTop: '16px', textAlign: 'center' }}>\n          {icon}\n          <Typography variant=\"h6\" gutterBottom={true} style={{ paddingTop: '16px' }}>\n            {this.props.message}\n            <br />\n            <br />\n            {linkHome}\n            {this.props.actionComponent}\n          </Typography>\n        </div>\n      </FreeBoardGamesBar>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nconst SvgError = (props: any) => (\n  <svg viewBox=\"0 0 1 1\" style={props.style}>\n    <g>\n      <line x1=\"0.2\" y1=\"0.2\" x2=\"0.8\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n      <line x1=\"0.8\" y1=\"0.2\" x2=\"0.2\" y2=\"0.8\" stroke=\"black\" strokeWidth=\"0.05\" />\n    </g>\n  </svg>\n);\n\nexport default SvgError;\n","import React from 'react';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport MobileDetect from 'mobile-detect';\n\ninterface DesktopMobileViewProps {\n  children: React.ReactNode;\n  thresholdWidth?: number;\n  userAgent?: any;\n}\n\nconst DEFAULT_THRESHOLD_WIDTH = 550;\n\nfunction isMobile(props: DesktopMobileViewProps) {\n  const hasJssSSRStyles = typeof document !== 'undefined' && !!document?.querySelector('#jss-server-side');\n  let width = useWindowDimensions().width;\n  const isBrowser = typeof window !== 'undefined';\n  let isMobileResult: boolean;\n  if ((!isBrowser || hasJssSSRStyles) && props.userAgent) {\n    // keep the isDesktop() return uniform if JSS styles exist\n    const md = new MobileDetect(props.userAgent);\n    isMobileResult = !!md.mobile() && !md.tablet();\n  } else {\n    const thresholdWidth = props.thresholdWidth || DEFAULT_THRESHOLD_WIDTH;\n    isMobileResult = width <= thresholdWidth;\n  }\n  return isMobileResult;\n}\n\nexport const DesktopView = (props: DesktopMobileViewProps) => {\n  if (!isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nexport const MobileView = (props: DesktopMobileViewProps) => {\n  if (isMobile(props)) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n","import { IGameArgs } from 'components/App/Game/GameBoardWrapper';\nimport { GameMode } from 'components/App/Game/GameModePicker';\n\nexport function isLocalGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.LocalFriend;\n}\n\nexport function isOnlineGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.OnlineFriend;\n}\n\nexport function isAIGame(gameArgs: IGameArgs) {\n  return gameArgs && gameArgs.mode === GameMode.AI;\n}\n","module.exports = {\n\t\"title\": \"_3_cQir5X9sQYGqnshzOruw\",\n\t\"text\": \"wdyJopky0wsbrxpKTq30A\",\n\t\"wrapper\": \"_3OJNDSc1FTrq6ynx9wHUji\",\n\t\"teamsContainer\": \"_4wgePiUSiQfYfXZUZeL8b\",\n\t\"team\": \"pFXJk2JN5mGpa_b2xwE4d\",\n\t\"teamBlue\": \"_3KZFzGBNEL4CXKJ-0VUCCW\",\n\t\"teamRed\": \"_3aWq0aQEM87d8WpCi7wkE0\",\n\t\"selectTeamBtn\": \"_2kNu_GVlB2ixmfZQQPOZpe\",\n\t\"unassigned\": \"_36ZlpcdCRNAarGthLt8SCD\"\n};","import * as React from 'react';\nimport { IG } from './definitions';\nimport css from './Lobby.css';\nimport { LobbyTeam } from './LobbyTeam';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport { LobbyPlayer } from './LobbyPlayer';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { isLocalGame } from '../common/gameMode';\nimport Button from '@material-ui/core/Button';\n\ninterface ILobbyProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  events: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n  isHost: boolean;\n}\n\ninterface ILobbyState {}\n\nexport class Lobby extends React.Component<ILobbyProps, ILobbyState> {\n  componentDidMount() {\n    if (isLocalGame(this.props.gameArgs) && this.gameCanStart()) {\n      this.props.events.endPhase();\n    }\n  }\n\n  gameCanStart = (): boolean => {\n    const { numPlayers } = this.props.ctx;\n    if (this.props.G.teams[0].spymaster === null || this.props.G.teams[1].spymaster === null) return false;\n    return this.props.G.teams.reduce((sum, t) => sum + t.players.length, 0) === numPlayers;\n  };\n\n  _startGame = () => {\n    this.props.events.endPhase();\n  };\n\n  render() {\n    const teams = {\n      0: [],\n      1: [],\n      unassigned: [],\n    };\n    const { players } = this.props.gameArgs;\n\n    for (const playerIndex in this.props.G.players) {\n      const player = this.props.G.players[playerIndex];\n      const item = (\n        <LobbyPlayer\n          key={playerIndex}\n          playerIndex={playerIndex}\n          moves={this.props.moves}\n          player={player}\n          players={players}\n          isHost={this.props.isHost}\n        />\n      );\n\n      teams[player.teamID?.toString() || 'unassigned'].push(item);\n    }\n\n    return (\n      <div className={css.wrapper}>\n        <h1 className={css.title}>Select teams</h1>\n\n        <div className={css.teamsContainer}>\n          <LobbyTeam\n            moves={this.props.moves}\n            G={this.props.G}\n            playerID={this.props.playerID}\n            classes={[css.team, css.teamBlue].join(' ')}\n            teamName={'Blue Team'}\n            teamPlayers={teams[0]}\n            teamID={0}\n          />\n          <LobbyTeam\n            moves={this.props.moves}\n            G={this.props.G}\n            playerID={this.props.playerID}\n            classes={[css.team, css.teamRed].join(' ')}\n            teamName={'Red Team'}\n            teamPlayers={teams[1]}\n            teamID={1}\n          />\n          <div className={[css.team, css.unassigned].join(' ')}>\n            <h3>Unassigned</h3>\n            <ul>{teams.unassigned}</ul>\n          </div>\n        </div>\n\n        {!this.gameCanStart() ? (\n          <p className={css.text}>\n            In order to start the game all players need to join a team and each team must have a spymaster.\n          </p>\n        ) : null}\n\n        {this.props.isHost ? (\n          <Button\n            style={{ float: 'right' }}\n            variant=\"contained\"\n            onClick={this._startGame}\n            color=\"primary\"\n            disabled={!this.gameCanStart()}\n          >\n            Done, play!\n          </Button>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Player } from './definitions';\nimport css from './Lobby.css';\n\ninterface ILobbyPlayerProps {\n  moves: any;\n  playerIndex: string;\n  player: Player;\n  players: any;\n  isHost: boolean;\n}\n\ninterface ILobbyPlayerState {}\n\nexport class LobbyPlayer extends React.Component<ILobbyPlayerProps, ILobbyPlayerState> {\n  _makeSpymaster = (player: Player) => {\n    this.props.moves.makeSpymaster(player);\n  };\n\n  render() {\n    return (\n      <li>\n        {this.props.player.isSpymaster ? <span>[S] </span> : ''}\n        {this.props.players[this.props.playerIndex].name}\n        {!this.props.player.isSpymaster && this.props.isHost && this.props.player.teamID !== null ? (\n          <button\n            className={[css.btn, css.btnSpymaster].join(' ')}\n            onClick={() => this._makeSpymaster(this.props.player)}\n          >\n            Make Spymaster\n          </button>\n        ) : (\n          ''\n        )}\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IG } from './definitions';\nimport css from './Lobby.css';\nimport Button from '@material-ui/core/Button';\n\ninterface ILobbyTeamProps {\n  G: IG;\n  playerID: string;\n  moves: any;\n  classes: string;\n  teamPlayers: any;\n  teamName: string;\n  teamID: number;\n}\n\ninterface ILobbyTeamState {}\n\nexport class LobbyTeam extends React.Component<ILobbyTeamProps, ILobbyTeamState> {\n  _switchTeam = (teamID: number) => {\n    if (this.props.playerID === null) return;\n    if (!this.canSwitchToTeam(teamID)) return;\n\n    this.props.moves.switchTeam(teamID);\n  };\n\n  canSwitchToTeam = (teamID: number) => {\n    if (this.props.playerID === null) return false;\n\n    return this.props.G.players[this.props.playerID].teamID !== teamID;\n  };\n\n  render() {\n    return (\n      <div className={this.props.classes}>\n        <h3>{this.props.teamName}</h3>\n        <ul>{this.props.teamPlayers}</ul>\n        <Button\n          className={css.selectTeamBtn}\n          variant=\"contained\"\n          onClick={() => this._switchTeam(this.props.teamID)}\n          color=\"secondary\"\n          disabled={!this.canSwitchToTeam(this.props.teamID)}\n        >\n          Select\n        </Button>\n      </div>\n    );\n  }\n}\n","import { IG, Stages, CardColor, Team, TeamID, Player } from './definitions';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport * as React from 'react';\nimport css from './board.css';\nimport { isLocalGame, isOnlineGame } from '../common/gameMode';\nimport Button from '@material-ui/core/Button';\nimport { IPlayerInRoom } from 'components/App/Lobby/LobbyService';\n\ninterface IPlayBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  events: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n  isActive: boolean;\n  isHost: boolean;\n}\n\ninterface IPlayBoardState {\n  spymasterView: boolean;\n}\n\nexport class PlayBoard extends React.Component<IPlayBoardProps, IPlayBoardState> {\n  state = {\n    spymasterView: false,\n  };\n\n  _isActive() {\n    return isLocalGame(this.props.gameArgs) || this.props.isActive;\n  }\n\n  _currentPlayerInRoom(): IPlayerInRoom {\n    return this.props.gameArgs.players[this._currentPlayerID()];\n  }\n\n  _currentPlayerTeam(): Team {\n    return this.props.G.teams[this._currentPlayerID()];\n  }\n\n  _currentPlayerID(): number {\n    return parseInt(this.props.ctx.currentPlayer);\n  }\n\n  _currentPlayerStage(): Stages {\n    return this.props.ctx.activePlayers[this.props.ctx.currentPlayer] as Stages;\n  }\n\n  _playerID(): number {\n    if (isLocalGame(this.props.gameArgs)) {\n      return this._currentPlayerID();\n    } else {\n      return parseInt(this.props.playerID);\n    }\n  }\n\n  _player(): Player {\n    return this.props.G.players[this._playerID()];\n  }\n\n  _playerTeam(): Team {\n    return this.props.G.teams[this._playerID()];\n  }\n\n  _showSpymasterView = (): boolean => this._player().isSpymaster && this.state.spymasterView;\n\n  _toggleSpymasterView = (): void => this.setState({ spymasterView: !this.state.spymasterView });\n\n  _clueGiven = () => {\n    if (!this._isActive()) return;\n\n    this.props.moves.clueGiven();\n  };\n\n  _chooseCard = (cardIndex: number) => {\n    if (!this._isActive()) return;\n    if (this._currentPlayerStage() != Stages.guess) return;\n    if (isOnlineGame(this.props.gameArgs) && this._player().isSpymaster) return;\n    if (this.props.G.cards[cardIndex].revealed) return;\n\n    this.props.moves.chooseCard(cardIndex);\n  };\n\n  _endTurn = () => {\n    if (!this._isActive()) return;\n\n    this.props.events.endTurn();\n  };\n\n  _renderHeader = () => {\n    let instruction;\n\n    if (this._currentPlayerStage() === Stages.giveClue) {\n      const button = this._isActive() ? (\n        <Button className={css.playActionBtn} variant=\"contained\" onClick={this._clueGiven} color=\"primary\">\n          Done\n        </Button>\n      ) : null;\n      instruction = (\n        <p>\n          <strong>{this._currentPlayerInRoom().name}</strong> give your teammates a clue!\n          {button}\n        </p>\n      );\n    } else {\n      const button = this._isActive() ? (\n        <Button className={css.playActionBtn} variant=\"contained\" onClick={this._endTurn}>\n          Pass\n        </Button>\n      ) : null;\n      instruction = (\n        <p>\n          <strong>{this._currentPlayerTeam().teamID === TeamID.red ? 'Red' : 'Blue'} Team</strong> make your guess!\n          {button}\n        </p>\n      );\n    }\n\n    return (\n      <div className={css.header}>\n        <h3 className={this._currentPlayerTeam().teamID === TeamID.red ? css.redTitle : css.blueTitle}>\n          {this._currentPlayerTeam().teamID === TeamID.red ? 'Red' : 'Blue'} Team\n        </h3>\n        {instruction}\n      </div>\n    );\n  };\n\n  _renderCardGrid = () => {\n    let board = [];\n\n    for (let i = 0; i < 25; i += 1) {\n      const card = this.props.G.cards[i];\n\n      const classes = [css.card];\n      if (card.revealed || this._showSpymasterView()) {\n        if (card.color === CardColor.blue) classes.push(css.cardBlue);\n        else if (card.color === CardColor.red) classes.push(css.cardRed);\n        else if (card.color === CardColor.civilian) classes.push(css.cardCivilian);\n        else if (card.color === CardColor.assassin) classes.push(css.cardAssassin);\n\n        classes.push(css.cardRevealed);\n      }\n\n      board.push(\n        <div className={classes.join(' ')} key={i} onClick={() => this._chooseCard(i)}>\n          {card.word}\n        </div>,\n      );\n    }\n\n    return <div className={css.board}>{board}</div>;\n  };\n\n  _renderActionButtons = () => {\n    if (this._player().isSpymaster) {\n      return (\n        <Button className={css.selectTeamBtn} variant=\"contained\" onClick={this._toggleSpymasterView}>\n          Toggle View: {this.state.spymasterView ? 'Spymaster' : 'Normal'}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this._renderHeader()}\n\n        {this._renderCardGrid()}\n\n        <div className={css.buttons}>{this._renderActionButtons()}</div>\n      </div>\n    );\n  }\n}\n","module.exports = {\n\t\"header\": \"_3p9_kZhOqidg0vySUNzpZK\",\n\t\"board\": \"_24944LJHsD5c_BAfrvM7k\",\n\t\"playActionBtn\": \"_3ZS8uVm82EjfFqblem8cua\",\n\t\"card\": \"_2HzDXPWINzrCy7BdCmQ8Jm\",\n\t\"cardRevealed\": \"_25hBFLBE9yaepXVBlCZo-m\",\n\t\"redTitle\": \"AOixNA6XrMhL7FLKpxdsV\",\n\t\"blueTitle\": \"_1bqMQQznCyU-iPUoSweZf6\",\n\t\"cardBlue\": \"_3bPuWHuq7NetDE3TcdeRxP\",\n\t\"cardRed\": \"_2R-ZUUvXPAT2jRFFMDu48W\",\n\t\"cardCivilian\": \"_3XlXG31aqsElL-0xuhPc0M\",\n\t\"cardAssassin\": \"_1xyRsSVXRBqBWuuWW9M265\",\n\t\"buttons\": \"_1ZbBZgyvj-nNegq9habW_X\",\n\t\"winners\": \"_3HDr4MMqN7ekcIpX1cvOUO\"\n};","import * as React from 'react';\nimport { IG, Phases } from './definitions';\nimport { IGameCtx } from 'boardgame.io/core';\nimport { IGameArgs } from '../../components/App/Game/GameBoardWrapper';\nimport css from './board.css';\nimport { GameLayout } from '../../components/App/Game/GameLayout';\nimport { Lobby } from './Lobby';\nimport { PlayBoard } from './PlayBoard';\n\ninterface IBoardProps {\n  G: IG;\n  ctx: IGameCtx;\n  moves: any;\n  step?: any;\n  events: any;\n  playerID: string;\n  gameArgs?: IGameArgs;\n  isActive: boolean;\n  isMultiplayer: boolean;\n}\n\ninterface IBoardState {}\n\nexport class Board extends React.Component<IBoardProps, IBoardState> {\n  isHost = () => this.props.playerID === '0';\n\n  _renderLobby = () => {\n    return (\n      <Lobby\n        G={this.props.G}\n        ctx={this.props.ctx}\n        moves={this.props.moves}\n        events={this.props.events}\n        playerID={this.props.playerID}\n        gameArgs={this.props.gameArgs}\n        isHost={this.isHost()}\n      />\n    );\n  };\n\n  _renderPlayBoard = () => {\n    return (\n      <PlayBoard\n        G={this.props.G}\n        ctx={this.props.ctx}\n        moves={this.props.moves}\n        events={this.props.events}\n        playerID={this.props.playerID}\n        gameArgs={this.props.gameArgs}\n        isActive={this.props.isActive}\n        isHost={this.isHost()}\n      />\n    );\n  };\n\n  _getScoreBoard = () => {\n    return (\n      <div className={[css.winners].join(' ')}>\n        <h3>Winners</h3>\n\n        {this.props.ctx.gameover.winner.players.map((p) => {\n          return <p key={p.playerID}>{this.props.gameArgs.players[p.playerID].name}</p>;\n        })}\n      </div>\n    );\n  };\n\n  render() {\n    if (this.props.ctx.gameover)\n      return (\n        <GameLayout\n          gameOver={this.props.ctx.gameover.winner.teamId ? 'Red Team wins' : 'Blue Team wins'}\n          extraCardContent={this._getScoreBoard()}\n          gameArgs={this.props.gameArgs}\n        />\n      );\n\n    let content;\n    if (this.props.ctx.phase === Phases.lobby) {\n      content = this._renderLobby();\n    } else {\n      content = this._renderPlayBoard();\n    }\n    return (\n      <GameLayout gameArgs={this.props.gameArgs} allowWiderScreen={true}>\n        {content}\n      </GameLayout>\n    );\n  }\n}\n\nexport default Board;\n","import { IGameConfig } from '../index';\nimport { SecretcodesGame } from './game';\nimport { Board } from './board';\n\nconst config: IGameConfig = {\n  bgioGame: SecretcodesGame,\n  bgioBoard: Board,\n};\n\nexport default config;\n","export const words = [\n  'hollywood',\n  'well',\n  'foot',\n  'new york',\n  'spring',\n  'court',\n  'tube',\n  'point',\n  'tablet',\n  'slip',\n  'date',\n  'drill',\n  'lemon',\n  'bell',\n  'screen',\n  'fair',\n  'torch',\n  'state',\n  'match',\n  'iron',\n  'block',\n  'france',\n  'australia',\n  'limousine',\n  'stream',\n  'glove',\n  'nurse',\n  'leprechaun',\n  'play',\n  'tooth',\n  'arm',\n  'bermuda',\n  'diamond',\n  'whale',\n  'comic',\n  'mammoth',\n  'green',\n  'pass',\n  'missile',\n  'paste',\n  'drop',\n  'phoenix',\n  'marble',\n  'staff',\n  'figure',\n  'park',\n  'centaur',\n  'shadow',\n  'fish',\n  'cotton',\n  'egypt',\n  'theater',\n  'scale',\n  'fall',\n  'track',\n  'force',\n  'dinosaur',\n  'bill',\n  'mine',\n  'turkey',\n  'march',\n  'contract',\n  'bridge',\n  'robin',\n  'line',\n  'plate',\n  'band',\n  'fire',\n  'bank',\n  'boom',\n  'cat',\n  'shot',\n  'suit',\n  'chocolate',\n  'roulette',\n  'mercury',\n  'moon',\n  'net',\n  'lawyer',\n  'satellite',\n  'angel',\n  'spider',\n  'germany',\n  'fork',\n  'pitch',\n  'king',\n  'crane',\n  'trip',\n  'dog',\n  'conductor',\n  'part',\n  'bugle',\n  'witch',\n  'ketchup',\n  'press',\n  'spine',\n  'worm',\n  'alps',\n  'bond',\n  'pan',\n  'beijing',\n  'racket',\n  'cross',\n  'seal',\n  'aztec',\n  'maple',\n  'parachute',\n  'hotel',\n  'berry',\n  'soldier',\n  'ray',\n  'post',\n  'greece',\n  'square',\n  'mass',\n  'bat',\n  'wave',\n  'car',\n  'smuggler',\n  'england',\n  'crash',\n  'tail',\n  'card',\n  'horn',\n  'capital',\n  'fence',\n  'deck',\n  'buffalo',\n  'microscope',\n  'jet',\n  'duck',\n  'ring',\n  'train',\n  'field',\n  'gold',\n  'tick',\n  'check',\n  'queen',\n  'strike',\n  'kangaroo',\n  'spike',\n  'scientist',\n  'engine',\n  'shakespeare',\n  'wind',\n  'kid',\n  'embassy',\n  'robot',\n  'note',\n  'ground',\n  'draft',\n  'ham',\n  'war',\n  'mouse',\n  'center',\n  'chick',\n  'china',\n  'bolt',\n  'spot',\n  'piano',\n  'pupil',\n  'plot',\n  'lion',\n  'police',\n  'head',\n  'litter',\n  'concert',\n  'mug',\n  'vacuum',\n  'atlantis',\n  'straw',\n  'switch',\n  'skyscraper',\n  'laser',\n  'scuba diver',\n  'africa',\n  'plastic',\n  'dwarf',\n  'lap',\n  'life',\n  'honey',\n  'horseshoe',\n  'unicorn',\n  'spy',\n  'pants',\n  'wall',\n  'paper',\n  'sound',\n  'ice',\n  'tag',\n  'web',\n  'fan',\n  'orange',\n  'temple',\n  'canada',\n  'scorpion',\n  'undertaker',\n  'mail',\n  'europe',\n  'soul',\n  'apple',\n  'pole',\n  'tap',\n  'mouth',\n  'ambulance',\n  'dress',\n  'ice cream',\n  'rabbit',\n  'buck',\n  'agent',\n  'sock',\n  'nut',\n  'boot',\n  'ghost',\n  'oil',\n  'superhero',\n  'code',\n  'kiwi',\n  'hospital',\n  'saturn',\n  'film',\n  'button',\n  'snowman',\n  'helicopter',\n  'loch ness',\n  'log',\n  'princess',\n  'time',\n  'cook',\n  'revolution',\n  'shoe',\n  'mole',\n  'spell',\n  'grass',\n  'washer',\n  'game',\n  'beat',\n  'hole',\n  'horse',\n  'pirate',\n  'link',\n  'dance',\n  'fly',\n  'pit',\n  'server',\n  'school',\n  'lock',\n  'brush',\n  'pool',\n  'star',\n  'jam',\n  'organ',\n  'berlin',\n  'face',\n  'luck',\n  'amazon',\n  'cast',\n  'gas',\n  'club',\n  'sink',\n  'water',\n  'chair',\n  'shark',\n  'jupiter',\n  'copper',\n  'jack',\n  'platypus',\n  'stick',\n  'olive',\n  'grace',\n  'bear',\n  'glass',\n  'row',\n  'pistol',\n  'london',\n  'rock',\n  'van',\n  'vet',\n  'beach',\n  'charge',\n  'port',\n  'disease',\n  'palm',\n  'moscow',\n  'pin',\n  'washington',\n  'pyramid',\n  'opera',\n  'casino',\n  'pilot',\n  'string',\n  'night',\n  'chest',\n  'yard',\n  'teacher',\n  'pumpkin',\n  'thief',\n  'bark',\n  'bug',\n  'mint',\n  'cycle',\n  'telescope',\n  'calf',\n  'air',\n  'box',\n  'mount',\n  'thumb',\n  'antarctica',\n  'trunk',\n  'snow',\n  'penguin',\n  'root',\n  'bar',\n  'file',\n  'hawk',\n  'battery',\n  'compound',\n  'slug',\n  'octopus',\n  'whip',\n  'america',\n  'ivory',\n  'pound',\n  'sub',\n  'cliff',\n  'lab',\n  'eagle',\n  'genius',\n  'ship',\n  'dice',\n  'hood',\n  'heart',\n  'novel',\n  'pipe',\n  'himalayas',\n  'crown',\n  'round',\n  'india',\n  'needle',\n  'shop',\n  'watch',\n  'lead',\n  'tie',\n  'table',\n  'cell',\n  'cover',\n  'czech',\n  'back',\n  'bomb',\n  'ruler',\n  'forest',\n  'bottle',\n  'space',\n  'hook',\n  'doctor',\n  'ball',\n  'bow',\n  'degree',\n  'rome',\n  'plane',\n  'giant',\n  'nail',\n  'dragon',\n  'stadium',\n  'flute',\n  'carrot',\n  'wake',\n  'fighter',\n  'model',\n  'tokyo',\n  'eye',\n  'mexico',\n  'hand',\n  'swing',\n  'key',\n  'alien',\n  'tower',\n  'poison',\n  'cricket',\n  'cold',\n  'knife',\n  'church',\n  'board',\n  'cloak',\n  'ninja',\n  'olympus',\n  'belt',\n  'light',\n  'death',\n  'stock',\n  'millionaire',\n  'day',\n  'knight',\n  'pie',\n  'bed',\n  'circle',\n  'rose',\n  'change',\n  'cap',\n  'triangle',\n];\n\nexport const wordsAlt = [\n  'africa',\n  'agent',\n  'air',\n  'alien',\n  'alps',\n  'amazon',\n  'ambulance',\n  'america',\n  'angel',\n  'antarctica',\n  'apple',\n  'arm',\n  'atlantis',\n  'australia',\n  'aztec',\n  'back',\n  'ball',\n  'band',\n  'bank',\n  'bar',\n  'bark',\n  'bat',\n  'battery',\n  'beach',\n  'bear',\n  'beat',\n  'bed',\n  'beijing',\n  'bell',\n  'belt',\n  'berlin',\n  'bermuda',\n  'berry',\n  'bill',\n  'block',\n  'board',\n  'bolt',\n  'bomb',\n  'bond',\n  'boom',\n  'boot',\n  'bottle',\n  'bow',\n  'box',\n  'bridge',\n  'brush',\n  'buck',\n  'buffalo',\n  'bug',\n  'bugle',\n  'button',\n  'calf',\n  'canada',\n  'cap',\n  'capital',\n  'car',\n  'card',\n  'carrot',\n  'casino',\n  'cast',\n  'cat',\n  'cell',\n  'centaur',\n  'center',\n  'chair',\n  'change',\n  'charge',\n  'check',\n  'chest',\n  'chick',\n  'china',\n  'chocolate',\n  'church',\n  'circle',\n  'cliff',\n  'cloak',\n  'club',\n  'code',\n  'cold',\n  'comic',\n  'compound',\n  'concert',\n  'conductor',\n  'contract',\n  'cook',\n  'copper',\n  'cotton',\n  'court',\n  'cover',\n  'crane',\n  'crash',\n  'cricket',\n  'cross',\n  'crown',\n  'cycle',\n  'czech',\n  'dance',\n  'date',\n  'day',\n  'death',\n  'deck',\n  'degree',\n  'diamond',\n  'dice',\n  'dinosaur',\n  'disease',\n  'doctor',\n  'dog',\n  'draft',\n  'dragon',\n  'dress',\n  'drill',\n  'drop',\n  'duck',\n  'dwarf',\n  'eagle',\n  'egypt',\n  'embassy',\n  'engine',\n  'england',\n  'europe',\n  'eye',\n  'face',\n  'fair',\n  'fall',\n  'fan',\n  'fence',\n  'field',\n  'fighter',\n  'figure',\n  'file',\n  'film',\n  'fire',\n  'fish',\n  'flute',\n  'fly',\n  'foot',\n  'force',\n  'forest',\n  'fork',\n  'france',\n  'game',\n  'gas',\n  'genius',\n  'germany',\n  'ghost',\n  'giant',\n  'glass',\n  'glove',\n  'gold',\n  'grace',\n  'grass',\n  'greece',\n  'green',\n  'ground',\n  'ham',\n  'hand',\n  'hawk',\n  'head',\n  'heart',\n  'helicopter',\n  'himalayas',\n  'hole',\n  'hollywood',\n  'honey',\n  'hood',\n  'hook',\n  'horn',\n  'horse',\n  'horseshoe',\n  'hospital',\n  'hotel',\n  'ice',\n  'ice',\n  'cream',\n  'india',\n  'iron',\n  'ivory',\n  'jack',\n  'jam',\n  'jet',\n  'jupiter',\n  'kangaroo',\n  'ketchup',\n  'key',\n  'kid',\n  'king',\n  'kiwi',\n  'knife',\n  'knight',\n  'lab',\n  'lap',\n  'laser',\n  'lawyer',\n  'lead',\n  'lemon',\n  'leprechaun',\n  'life',\n  'light',\n  'limousine',\n  'line',\n  'link',\n  'lion',\n  'litter',\n  'loch',\n  'ness',\n  'lock',\n  'log',\n  'london',\n  'luck',\n  'mail',\n  'mammoth',\n  'maple',\n  'marble',\n  'march',\n  'mass',\n  'match',\n  'mercury',\n  'mexico',\n  'microscope',\n  'millionaire',\n  'mine',\n  'mint',\n  'missile',\n  'model',\n  'mole',\n  'moon',\n  'moscow',\n  'mount',\n  'mouse',\n  'mouth',\n  'mug',\n  'nail',\n  'needle',\n  'net',\n  'new',\n  'york',\n  'night',\n  'ninja',\n  'note',\n  'novel',\n  'nurse',\n  'nut',\n  'octopus',\n  'oil',\n  'olive',\n  'olympus',\n  'opera',\n  'orange',\n  'organ',\n  'palm',\n  'pan',\n  'pants',\n  'paper',\n  'parachute',\n  'park',\n  'part',\n  'pass',\n  'paste',\n  'penguin',\n  'phoenix',\n  'piano',\n  'pie',\n  'pilot',\n  'pin',\n  'pipe',\n  'pirate',\n  'pistol',\n  'pit',\n  'pitch',\n  'plane',\n  'plastic',\n  'plate',\n  'platypus',\n  'play',\n  'plot',\n  'point',\n  'poison',\n  'pole',\n  'police',\n  'pool',\n  'port',\n  'post',\n  'pound',\n  'press',\n  'princess',\n  'pumpkin',\n  'pupil',\n  'pyramid',\n  'queen',\n  'rabbit',\n  'racket',\n  'ray',\n  'revolution',\n  'ring',\n  'robin',\n  'robot',\n  'rock',\n  'rome',\n  'root',\n  'rose',\n  'roulette',\n  'round',\n  'row',\n  'ruler',\n  'satellite',\n  'saturn',\n  'scale',\n  'school',\n  'scientist',\n  'scorpion',\n  'screen',\n  'scuba',\n  'diver',\n  'seal',\n  'server',\n  'shadow',\n  'shakespeare',\n  'shark',\n  'ship',\n  'shoe',\n  'shop',\n  'shot',\n  'sink',\n  'skyscraper',\n  'slip',\n  'slug',\n  'smuggler',\n  'snow',\n  'snowman',\n  'sock',\n  'soldier',\n  'soul',\n  'sound',\n  'space',\n  'spell',\n  'spider',\n  'spike',\n  'spine',\n  'spot',\n  'spring',\n  'spy',\n  'square',\n  'stadium',\n  'staff',\n  'star',\n  'state',\n  'stick',\n  'stock',\n  'straw',\n  'stream',\n  'strike',\n  'string',\n  'sub',\n  'suit',\n  'superhero',\n  'swing',\n  'switch',\n  'table',\n  'tablet',\n  'tag',\n  'tail',\n  'tap',\n  'teacher',\n  'telescope',\n  'temple',\n  'theater',\n  'thief',\n  'thumb',\n  'tick',\n  'tie',\n  'time',\n  'tokyo',\n  'tooth',\n  'torch',\n  'tower',\n  'track',\n  'train',\n  'triangle',\n  'trip',\n  'trunk',\n  'tube',\n  'turkey',\n  'undertaker',\n  'unicorn',\n  'vacuum',\n  'van',\n  'vet',\n  'wake',\n  'wall',\n  'war',\n  'washer',\n  'washington',\n  'watch',\n  'water',\n  'wave',\n  'web',\n  'well',\n  'whale',\n  'whip',\n  'wind',\n  'witch',\n  'worm',\n  'yard',\n];\n\nexport const wordsNL = [\n  'post',\n  'roulette',\n  'draak',\n  'oorlog',\n  'honing',\n  'bom',\n  'casino',\n  'wolkenkrabber',\n  'saturnus',\n  'astronaut',\n  'zweep',\n  'antarctica',\n  'sneeuwpop',\n  'concert',\n  'chocolade',\n  'vliegtuig',\n  'miljonair',\n  'dinosaurus',\n  'kameleon',\n  'trompet',\n  'pinguïn',\n  'spin',\n  'raket',\n  'ambassade',\n  'pistool',\n  'ziekte',\n  'spion',\n  'prinses',\n  'genie',\n  'dief',\n  'opera',\n  'ridder',\n  'stadion',\n  'limousine',\n  'spook',\n  'bus',\n  'lolly',\n  'laser',\n  'dood',\n  'ziekenhuis',\n  'ambulance',\n  'inktvis',\n  'helikopter',\n  'kangoeroe',\n  'microscoop',\n  'pretpark',\n  'superheld',\n  'telescoop',\n  'parachute',\n  'vampier',\n  'rotonde',\n  'satelliet',\n  'engel',\n  'robot',\n  'eenhoorn',\n  'heks',\n  'kolonist',\n  'duiker',\n  'gif',\n  'brug',\n  'vuur',\n  'cobra',\n  'walvis',\n  'maan',\n  'vis',\n  'dokter',\n  'kerk',\n  'pleister',\n  'zuster',\n  'wind',\n  'leeuw',\n  'oog',\n  'lucht',\n  'konijn',\n  'bank',\n  'gras',\n  'jurk',\n  'dwerg',\n  'bos',\n  'auto',\n  'handschoen',\n  'appel',\n  'olie',\n  'kok',\n  'beer',\n  'poes',\n  'leven',\n  'geluk',\n  'reus',\n  'spiegel',\n  'strand',\n  'hotel',\n  'water',\n  'papier',\n  'worm',\n  'advocaat',\n  'wetenschapper',\n  'dans',\n  'wortel',\n  'ketchup',\n  'nacht',\n  'katoen',\n  'voet',\n  'muis',\n  'mes',\n  'theater',\n  'agent',\n  'schip',\n  'piloot',\n  'duim',\n  'leraar',\n  'fles',\n  'dag',\n  'koning',\n  'glas',\n  'kabel',\n  'tand',\n  'hond',\n  'paard',\n  'schoen',\n  'stoel',\n  'kroon',\n  'ijs',\n  'goud',\n  'vork',\n  'tijd',\n  'fluit',\n  'vlam',\n  'sneeuw',\n  'ivoor',\n  'soldaat',\n  'piramide',\n  'kubus',\n  'ster',\n  'ring',\n  'hoorn',\n  'hart',\n  'blok',\n  'buis',\n  'naald',\n  'lijn',\n  'krijt',\n  'bord',\n  'box',\n  'scherm',\n  'stuk',\n  'spot',\n  'knop',\n  'mond',\n  'etiket',\n  'hand',\n  'bed',\n  'muur',\n  'toren',\n  'kaart',\n  'bad',\n  'diamant',\n  'kruis',\n  'net',\n  'punt',\n  'noot',\n  'plaat',\n  'hol',\n  'wijzer',\n  'kracht',\n  'sleutel',\n  'machine',\n  'overgang',\n  'stroom',\n  'hoofd',\n  'paal',\n  'centrum',\n  'ongeluk',\n  'schat',\n  'slot',\n  'code',\n  'cirkel',\n  'link',\n  'pijp',\n  'amsterdam',\n  'nederland',\n  'limburg',\n  'brussel',\n  'egypte',\n  'londen',\n  'carnaval',\n  'rotterdam',\n  'belgië',\n  'hunebed',\n  'hollywood',\n  'griekenland',\n  'rome',\n  'ardennen',\n  'ninja',\n  'pool',\n  'shoarma',\n  'duitsland',\n  'provincie',\n  'amerika',\n  'atlantis',\n  'engeland',\n  'loempia',\n  'afrika',\n  'tablet',\n  'frankrijk',\n  'klomp',\n  'polder',\n  'euro',\n  'voetbal',\n  'zeeland',\n  'berlijn',\n  'pizza',\n  'dolfijn',\n  'hawaÏ',\n  'motor',\n  'laars',\n  'caravan',\n  'friet',\n  'alpen',\n  'seizoen',\n  'kamer',\n  'blik',\n  'vorst',\n  'ijzer',\n  'zegel',\n  'licht',\n  'mars',\n  'groen',\n  'jam',\n  'europa',\n  'leiding',\n  'wissel',\n  'aarde',\n  'straal',\n  'deksel',\n  'citroen',\n  'roos',\n  'tafel',\n  'staart',\n  'meter',\n  'dijk',\n  'batterij',\n  'arena',\n  'beeld',\n  'kostuum',\n  'slang',\n  'spoor',\n  'garen',\n  'aandeel',\n  'vet',\n  'blond',\n  'slip',\n  'gemeente',\n  'slag',\n  'proef',\n  'club',\n  'schaduw',\n  'bende',\n  'strip',\n  'tweeling',\n  'band',\n  'chip',\n  'tocht',\n  'duikboot',\n  'mijn',\n  'vink',\n  'vlieg',\n  'koud',\n  'knikker',\n  'spel',\n  'haak',\n  'knuppel',\n  'ketting',\n  'scheiding',\n  'stapel',\n  'bar',\n  'bubbel',\n  'pond',\n  'rond',\n  'veld',\n  'hemel',\n  'bok',\n  'veer',\n  'zink',\n  'fiets',\n  'schrift',\n  'mat',\n  'slee',\n  'patroon',\n  'grond',\n  'rug',\n  'stam',\n  'munt',\n  'graad',\n  'kegel',\n  'uitzending',\n  'eikel',\n  'mol',\n  'geslacht',\n  'tempel',\n  'pompoen',\n  'ijsbeer',\n  'smokkelaar',\n  'ham',\n  'vlucht',\n  'kruik',\n  'val',\n  'spreuk',\n  'boek',\n  'raad',\n  'bal',\n  'pil',\n  'elf',\n  'bureau',\n  'arm',\n  'schaal',\n  'flits',\n  'cel',\n  'vulkaan',\n  'contract',\n  'chinees',\n  'baan',\n  'dierenarts',\n  'haven',\n  'golf',\n  'nicht',\n  'steek',\n  'masker',\n  'riet',\n  'geluid',\n  'prijs',\n  'schroef',\n  'havik',\n  'pers',\n  'formule',\n  'as',\n  'kuip',\n  'viool',\n  'regel',\n  'dicht',\n  'massa',\n  'web',\n  'zak',\n  'palm',\n  'kraan',\n  'pasta',\n  'taart',\n  'gerecht',\n  'spijker',\n  'model',\n  'weegschaal',\n  'revolutie',\n  'parijs',\n  'gas',\n  'single',\n  'piano',\n  'bestand',\n  'bron',\n  'podium',\n  'aanval',\n  'asiel',\n  'netwerk',\n  'wedstrijd',\n  'film',\n  'schijf',\n  'amazone',\n  'ruimte',\n  'beurs',\n  'staf',\n  'shuttle',\n  'piraat',\n  'kop',\n  'stem',\n  'gat',\n  'kussen',\n  'kamp',\n  'ton',\n  'spa',\n  'pad',\n  'figuur',\n  'gezicht',\n  'doos',\n  'nagel',\n  'pinda',\n  'monster',\n  'was',\n  'recept',\n  'toets',\n  'tap',\n  'school',\n  'trommel',\n  'kever',\n  'kater',\n  'tank',\n  'koper',\n  'schot',\n  'hagel',\n  'riem',\n  'pupil',\n  'oranje',\n  'doel',\n  'foxtrot',\n  'racket',\n  'draai',\n  'race',\n  'maat',\n  'horde',\n  'samba',\n  'diploma',\n  'salsa',\n  'record',\n  'vloer',\n  'team',\n  'ritme',\n  'basket',\n  'disco',\n  'atletiek',\n  'ballet',\n  'trainer',\n  'choreograaf',\n  'amber',\n  'zout',\n  'lavendel',\n  'heet',\n  'zwart',\n  'worst',\n  'blank',\n  'koffie',\n  'jasmijn',\n  'tong',\n  'marine',\n  'spek',\n  'grijs',\n  'beleg',\n  'zilver',\n  'chili',\n  'zalm',\n  'schuim',\n];\n","export interface Player {\n  playerID: number;\n  teamID: null | number;\n  isSpymaster: boolean;\n}\n\nexport enum TeamID {\n  blue = 0,\n  red = 1,\n}\n\nexport interface Team {\n  teamID: TeamID;\n  players: Player[];\n  spymaster: null | Player;\n  start: boolean;\n}\n\nexport enum CardColor {\n  civilian = 'civilian',\n  blue = 'blue',\n  red = 'red',\n  assassin = 'assassin',\n}\n\nexport interface Card {\n  word: string;\n  color: CardColor;\n  revealed: boolean;\n}\n\nexport interface IG {\n  players: Player[];\n  teams: Team[];\n  cards: Card[];\n}\n\nexport enum Phases {\n  lobby = 'lobby',\n  play = 'play',\n}\n\nexport enum Stages {\n  chooseTeam = 'chooseTeam',\n  giveClue = 'giveClue',\n  guess = 'guess',\n}\n","import { IGameArgs, IGameCtx } from 'boardgame.io/core';\nimport { words } from './constants';\nimport { IG, Phases, Stages, CardColor, Team, Card } from './definitions';\nimport {\n  switchTeam,\n  clueGiven,\n  makeSpymaster,\n  getCurrentTeam,\n  chooseCard,\n  makeCard,\n  makePlayer,\n  makeTeam,\n} from './util';\n\nconst onBegin = {\n  phases: {\n    [Phases.lobby]: (G: IG, ctx: IGameCtx) => {\n      if (G.players.length == 2) {\n        for (let i = 0; i < 2; i += 1) {\n          const team = G.teams[i];\n          const player = G.players[i];\n\n          team.players.push(player);\n          player.teamID = i;\n          makeSpymaster(G, ctx, player);\n        }\n      }\n    },\n    [Phases.play]: (G: IG, ctx: IGameCtx) => {\n      const cards = ctx.random\n        .Shuffle(words)\n        .slice(0, 25)\n        .map((word) => makeCard(word));\n      const startingTeamIndex = ctx.random.Die(2, 1) % 2;\n      const startingTeam = G.teams[startingTeamIndex];\n\n      startingTeam.start = true;\n\n      const key = ctx.random.Shuffle(cards).slice(0, 18) as Card[];\n      key.map((card, index) => {\n        if (index === 0) card.color = CardColor.assassin;\n        else if (index <= 8) card.color = CardColor.blue;\n        else if (index <= 16) card.color = CardColor.red;\n        else card.color = startingTeam ? CardColor.red : CardColor.blue;\n      });\n\n      G.cards = cards;\n\n      ctx.events.endTurn({\n        next: (function () {\n          return startingTeam.spymaster.playerID.toString();\n        })(),\n      });\n    },\n  },\n  turns: {\n    [Phases.play]: (G: IG, ctx: IGameCtx) => {\n      ctx.events.setStage(Stages.giveClue);\n    },\n  },\n};\n\nconst GameConfig: IGameArgs = {\n  name: 'secretcodes',\n\n  setup: (ctx: IGameCtx): IG => {\n    return {\n      players: new Array(ctx.numPlayers).fill(0).map((_, i) => makePlayer(i)),\n      teams: new Array(2).fill(0).map((_, i) => makeTeam(i)),\n      cards: [],\n    };\n  },\n\n  playerView: (G: IG, ctx: IGameCtx, playerID: string): any => {\n    if (playerID === null) return G;\n    if (ctx.phase !== Phases.play) return G;\n    if (ctx.playOrder.includes(playerID)) return G;\n\n    const { cards } = G;\n    return {\n      ...G,\n      cards: cards.map((card: Card) => {\n        let c = {\n          word: card.word,\n          revealed: card.revealed,\n        };\n        // @ts-ignore\n        if (c.revealed) c.color = card.color;\n        return c;\n      }),\n    };\n  },\n\n  phases: {\n    [Phases.lobby]: {\n      start: true,\n\n      onBegin: onBegin.phases[Phases.lobby],\n\n      next: Phases.play,\n\n      turn: {\n        activePlayers: {\n          all: Stages.chooseTeam,\n        },\n\n        stages: {\n          [Stages.chooseTeam]: {\n            moves: {\n              switchTeam,\n              makeSpymaster,\n            },\n          },\n        },\n      },\n    },\n\n    [Phases.play]: {\n      onBegin: onBegin.phases[Phases.play],\n\n      turn: {\n        order: {\n          first: (G: IG): number => G.teams.find((team) => team.start).teamID,\n          next: (_, ctx: IGameCtx) => (ctx.playOrderPos + 1) % 2,\n          playOrder: (G: IG): string[] => G.teams.map((team: Team) => team.spymaster.playerID.toString()),\n        },\n        onBegin: onBegin.turns[Phases.play],\n\n        stages: {\n          [Stages.giveClue]: {\n            moves: {\n              clueGiven,\n            },\n\n            next: Stages.guess,\n          },\n\n          [Stages.guess]: {\n            moves: {\n              chooseCard: {\n                // @ts-ignore\n                move: chooseCard,\n                client: false,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n\n  endIf: (G: IG, ctx: IGameCtx) => {\n    if (ctx.turn >= 2) {\n      const assassin = G.cards.find((card) => card.color === CardColor.assassin);\n      const blue = G.cards.filter((card) => card.color === CardColor.blue && !card.revealed);\n      const red = G.cards.filter((card) => card.color === CardColor.red && !card.revealed);\n\n      if (assassin.revealed) {\n        return {\n          winner: G.teams[(getCurrentTeam(G, ctx).teamID + 1) % 2],\n        };\n      }\n      if (blue.length === 0)\n        return {\n          winner: G.teams[0],\n        };\n      if (red.length === 0)\n        return {\n          winner: G.teams[1],\n        };\n    }\n  },\n};\n\nexport const SecretcodesGame = GameConfig;\n","import { IG, Stages, Player, Team, CardColor, Card } from './definitions';\nimport { Stage, IGameCtx } from 'boardgame.io/core';\n\nexport function switchTeam(G: IG, ctx: IGameCtx, teamID: number) {\n  const player = getPlayer(G, ctx);\n  if (player.teamID === teamID) return;\n\n  const newTeam = G.teams[teamID];\n  const oldTeam = G.teams[(teamID + 1) % 2];\n\n  if (player.isSpymaster) {\n    player.isSpymaster = false;\n    oldTeam.spymaster = null;\n  }\n\n  oldTeam.players = oldTeam.players.filter((p) => p.playerID !== player.playerID);\n\n  newTeam.players.push(player);\n  player.teamID = teamID;\n}\n\nexport function clueGiven(G: IG, ctx: IGameCtx) {\n  ctx.events.endStage();\n  ctx.events.setActivePlayers(\n    (function (G: IG, ctx: IGameCtx) {\n      if (G.players.length === 2 || getCurrentTeam(G, ctx).players.length === 1)\n        return {\n          currentPlayer: Stages.guess,\n        };\n\n      return {\n        currentPlayer: Stage.NULL,\n        value: getCurrentTeam(G, ctx).players.reduce((acc, player) => {\n          if (player.isSpymaster) return acc;\n\n          acc[player.playerID.toString()] = Stages.guess;\n          return acc;\n        }, {}),\n      };\n    })(G, ctx),\n  );\n}\n\nexport function makeSpymaster(G: IG, ctx: IGameCtx, p: Player) {\n  const player = G.players[p.playerID];\n  const { teamID, playerID } = player;\n\n  const spymaster = G.teams[teamID].spymaster;\n  if (spymaster !== null) {\n    if (spymaster.playerID === playerID) return;\n\n    spymaster.isSpymaster = false;\n  }\n\n  G.teams[teamID].spymaster = player;\n  G.players[playerID].isSpymaster = true;\n}\n\nexport function getPlayer(G: IG, ctx: IGameCtx): Player {\n  return G.players[parseInt(ctx.playerID)];\n}\n\nexport function getCurrentPlayer(G: IG, ctx: IGameCtx): Player {\n  return G.players[parseInt(ctx.currentPlayer)];\n}\n\nexport function getCurrentTeam(G: IG, ctx: IGameCtx): Team {\n  return G.teams[parseInt(ctx.currentPlayer)];\n}\n\nexport function makeCard(word: string): Card {\n  return { word, color: CardColor.civilian, revealed: false };\n}\n\nexport function makeTeam(teamID: number): Team {\n  return { teamID, players: [], spymaster: null, start: false };\n}\n\nexport function makePlayer(playerID: number): Player {\n  return { playerID, teamID: null, isSpymaster: false };\n}\n\nexport function chooseCard(G: IG, ctx: IGameCtx, cardIndex: number) {\n  G.cards[cardIndex].revealed = true;\n\n  const color = getCurrentPlayer(G, ctx).teamID ? CardColor.red : CardColor.blue;\n\n  if (G.cards[cardIndex].color !== color) {\n    ctx.events.endTurn();\n  }\n}\n","// https://stackoverflow.com/a/59185109\n\nimport { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"],"mappingsoBA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAmHA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAAA;AACA;AACA;AAzHA;AA0HA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA7HA;AA8HA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAjIA;AAkIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAGA;AACA;AAAA;AACA;AAvIA;AAwIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;AAXA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AA1JA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AANA;AAAA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAxBA;AACA;AAwBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AAIA;AACA;AA7CA;AA8CA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAeA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AAGA;AAXA;AAAA;AAYA;AACA;AAnHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAEA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAtfA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AAhDA;AAiDA;AACA;AADA;AAEA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;AACA;AAhEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AACA;AAGA;AACA;AANA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAKA;AAbA;AAAA;AACA;AARA;AAqBA;AACA;AACA;AACA;AAHA;AArBA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAlaA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAEA;AAFA;AAHA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AAVA;AAAA;AAWA;AAAA;AACA;AAxBA;AAEA;AACA;AACA;AAFA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;AACA;AAOA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAZA;AAAA;AACA;AATA;AAqBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAtEA;AAwEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAQA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAbA;AAaA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;ACbcA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AAAA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AAaA;AAAA;AACA;AACA;AAfA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AAWA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AANA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAaA;AACA;AACA;AAvBA;AAwBA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAOA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AA1FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AAYA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AACA;AAvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AAcA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AACA;AAPA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;AAZA;AACA;AAajBA;AAGA;AACA;AACA;AACA;AAkBA;AAAA;AAAA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAyCA;AAAA;AAAA;AAAA;AACA;AA1CA;AA2CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5CA;AA6CA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;AACA;AAlDA;AAmDA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAMA;AACA;AACA;AA3DA;AA4DA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;AACA;AAjEA;AAkEA;AACA;AADA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AAMA;AACA;AA5BA;AA6BA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AAxGA;AAyGA;AACA;AADA;AACA;AAEA;AACA;AAEA;AAHA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAMA;AACA;AAPA;AAAA;AACA;AALA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAtBA;AAuBA;AAAA;AAAA;AACA;AACA;AAlIA;AAmIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AANA;AAAA;AAOA;AA3IA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAqGA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AACA;AAxJA;;;;;;;;;;;ACxdA;AACA;AAGA;AACA;AACA;AACA;AAgBA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAhBA;AAiBA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AA/BA;AAgCA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AA1CA;AACA;AA2CA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAPA;AAAA;AACA;AAQA;AAVA;AACA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAgBA;AACA;AAAA;AAAA;AAIA;AACA;AAlEA;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AAEA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAmZA;AAuZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpyBA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkzCA;AACA;AACA;AAWA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAKA;AALA;AAMA;AACA;AACA;AATA;AAAA;AAUA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAEA;AAVA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhBA;AAkBA;AAlBA;AAoBA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAtCA;AAwCA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAzCA;AAgDA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AALA;AAMA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAOA;AACA;AAVA;AAYA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AALA;AAPA;AAuBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AADA;AAIA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AADA;AATA;AARA;AAHA;AAxBA;AA0DA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAAA;AACA;AANA;AACA;AASA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAHA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAHA;AAAA;AAIA;AAlBA;AAAA;AAmBA;AA7GA;AAgcA;AAdA;AAeA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAHA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AAHA;AAIA;AACA;AAPA;AASA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAJA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AACA;AAJA;AAAA;AACA;AANA;AAWA;AAXA;AAYA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAIA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAOA;AAtBA;AAwBA;AACA;;;;A","sourceRoot":""}