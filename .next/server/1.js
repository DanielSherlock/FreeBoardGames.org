exports.ids = [1];
exports.modules = {

/***/ "./src/components/App/Blink.tsx":
/*!**************************************!*\
  !*** ./src/components/App/Blink.tsx ***!
  \**************************************/
/*! exports provided: Blink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Blink", function() { return Blink; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function cov_2oymtlalxp() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/Blink.tsx";
  var hash = "8bf65b181cdf9c2d62d93835b135768f12c9907c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/Blink.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "1": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "2": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 17
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "4": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "6": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 50
        }
      },
      "7": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 28
        }
      },
      "8": {
        start: {
          line: 33,
          column: 13
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "9": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "10": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "11": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 57
        }
      },
      "12": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 81
        }
      },
      "13": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 38,
          column: 45
        }
      },
      "14": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "15": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "16": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 72
        }
      },
      "17": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 33,
            column: 14
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 31
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 11
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 19
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 31
          }
        }, {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 35
          }
        }, {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 57
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bf65b181cdf9c2d62d93835b135768f12c9907c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2oymtlalxp = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2oymtlalxp();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class Blink extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_2oymtlalxp().f[0]++;
    cov_2oymtlalxp().s[2]++;
    super(props);

    _defineProperty(this, "requestID", (cov_2oymtlalxp().s[0]++, null));

    _defineProperty(this, "_animate", (cov_2oymtlalxp().s[8]++, now => {
      cov_2oymtlalxp().f[2]++;
      cov_2oymtlalxp().s[9]++;
      return () => {
        cov_2oymtlalxp().f[3]++;
        const elapsed = (cov_2oymtlalxp().s[10]++, now - this.state.startTime);
        const done = (cov_2oymtlalxp().s[11]++, elapsed > this.props.totalDurationMillis); // const blinkHidden = Math.floor((elapsed / this.props.blinkDurationMillis) % 2) === 1;  // https://github.com/babel/minify/issues/904

        const blinkHidden = (cov_2oymtlalxp().s[12]++, elapsed / this.props.blinkDurationMillis % 2 << 0 === 1);
        const hidden = (cov_2oymtlalxp().s[13]++, done ? (cov_2oymtlalxp().b[1][0]++, false) : (cov_2oymtlalxp().b[1][1]++, blinkHidden));
        cov_2oymtlalxp().s[14]++;
        this.setState(_objectSpread({}, this.state, {
          hidden
        }));
        cov_2oymtlalxp().s[15]++;

        if (!done) {
          cov_2oymtlalxp().b[2][0]++;
          cov_2oymtlalxp().s[16]++;
          this.requestID = requestAnimationFrame(this._animate(Date.now()));
        } else {
          cov_2oymtlalxp().b[2][1]++;
        }
      };
    }));

    cov_2oymtlalxp().s[3]++;
    this.state = {
      hidden: false,
      startTime: Date.now()
    };
    cov_2oymtlalxp().s[4]++;
    this.requestID = requestAnimationFrame(this._animate(Date.now()));
  }

  componentWillUnmount() {
    cov_2oymtlalxp().f[1]++;
    cov_2oymtlalxp().s[5]++;

    if (this.requestID) {
      cov_2oymtlalxp().b[0][0]++;
      cov_2oymtlalxp().s[6]++;
      window.cancelAnimationFrame(this.requestID);
      cov_2oymtlalxp().s[7]++;
      this.requestID = null;
    } else {
      cov_2oymtlalxp().b[0][1]++;
    }
  }

  render() {
    cov_2oymtlalxp().f[4]++;
    cov_2oymtlalxp().s[17]++;
    return this.state.hidden ? (cov_2oymtlalxp().b[3][0]++, null) : (cov_2oymtlalxp().b[3][1]++, this.props.children);
  }

}

_defineProperty(Blink, "defaultProps", (cov_2oymtlalxp().s[1]++, {
  totalDurationMillis: 2000,
  blinkDurationMillis: 300
}));

/***/ }),

/***/ "./src/components/App/Game/GameDarkSublayout.tsx":
/*!*******************************************************!*\
  !*** ./src/components/App/Game/GameDarkSublayout.tsx ***!
  \*******************************************************/
/*! exports provided: GameDarkSublayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameDarkSublayout", function() { return GameDarkSublayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _media_fbg_logo_white_48_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../media/fbg_logo_white_48.png */ "./src/components/App/media/fbg_logo_white_48.png");
/* harmony import */ var _media_fbg_logo_white_48_png__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_media_fbg_logo_white_48_png__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core/Button */ "@material-ui/core/Button");
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/icons/MoreVert */ "@material-ui/icons/MoreVert");
/* harmony import */ var _material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/core/Menu */ "@material-ui/core/Menu");
/* harmony import */ var _material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material-ui/core/MenuItem */ "@material-ui/core/MenuItem");
/* harmony import */ var _material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _material_ui_icons_Feedback__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material-ui/icons/Feedback */ "@material-ui/icons/Feedback");
/* harmony import */ var _material_ui_icons_Feedback__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Feedback__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var games__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! games */ "./src/games/index.ts");
/* harmony import */ var components_DesktopMobileView__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! components/DesktopMobileView */ "./src/components/DesktopMobileView.tsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_r7p0jshdj() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameDarkSublayout.tsx";
  var hash = "dc0537ab6fd883677a44d9a264477658c0cf8a3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameDarkSublayout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "1": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 106
        }
      },
      "2": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 50
        }
      },
      "3": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "4": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 63
        }
      },
      "5": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 65
        }
      },
      "6": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "7": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "8": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "9": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "10": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "11": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 73,
          column: 8
        }
      },
      "12": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 86,
          column: 8
        }
      },
      "13": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 131,
          column: 6
        }
      },
      "14": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "15": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 144,
          column: 8
        }
      },
      "16": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "17": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "18": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 41
        }
      },
      "19": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 54
        }
      },
      "20": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 157,
          column: 3
        }
      },
      "21": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 57
        }
      },
      "22": {
        start: {
          line: 159,
          column: 22
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "23": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 42
        }
      },
      "24": {
        start: {
          line: 163,
          column: 17
        },
        end: {
          line: 167,
          column: 3
        }
      },
      "25": {
        start: {
          line: 163,
          column: 46
        },
        end: {
          line: 167,
          column: 3
        }
      },
      "26": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 29
        }
      },
      "27": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 18
        }
      },
      "28": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 186,
          column: 3
        }
      },
      "29": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "30": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "31": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 173,
          column: 39
        }
      },
      "32": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 180,
          column: 6
        }
      },
      "33": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 179,
          column: 8
        }
      },
      "34": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 185,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 132,
            column: 3
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 133,
            column: 3
          }
        },
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 133
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 148,
            column: 21
          }
        },
        loc: {
          start: {
            line: 148,
            column: 26
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 148
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 16
          }
        },
        loc: {
          start: {
            line: 149,
            column: 21
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 155,
            column: 22
          }
        },
        loc: {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 155
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 23
          }
        },
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 159
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 163,
            column: 17
          },
          end: {
            line: 163,
            column: 18
          }
        },
        loc: {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 167,
            column: 3
          }
        },
        line: 163
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 47
          }
        },
        loc: {
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 167,
            column: 3
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 169,
            column: 25
          },
          end: {
            line: 169,
            column: 26
          }
        },
        loc: {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 169
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 174,
            column: 56
          },
          end: {
            line: 174,
            column: 57
          }
        },
        loc: {
          start: {
            line: 174,
            column: 90
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 174
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 62
          }
        }, {
          start: {
            line: 101,
            column: 65
          },
          end: {
            line: 101,
            column: 72
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 52
          },
          end: {
            line: 121,
            column: 60
          }
        }, {
          start: {
            line: 121,
            column: 63
          },
          end: {
            line: 121,
            column: 70
          }
        }],
        line: 121
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }],
        line: 134
      },
      "6": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }, {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc0537ab6fd883677a44d9a264477658c0cf8a3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_r7p0jshdj = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_r7p0jshdj();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }












class GameDarkSublayout extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_r7p0jshdj().f[0]++;
    cov_r7p0jshdj().s[0]++;
    super(props);

    _defineProperty(this, "_toggleFeedback", (cov_r7p0jshdj().s[16]++, () => {
      cov_r7p0jshdj().f[4]++;
      cov_r7p0jshdj().s[17]++;
      setTimeout(() => {
        cov_r7p0jshdj().f[5]++;
        cov_r7p0jshdj().s[18]++;
        this.setState({
          feedback: false
        });
      }, 5000);
      cov_r7p0jshdj().s[19]++;
      this.setState({
        feedback: !this.state.feedback
      });
    }));

    _defineProperty(this, "_openOptionsMenu", (cov_r7p0jshdj().s[20]++, event => {
      cov_r7p0jshdj().f[6]++;
      cov_r7p0jshdj().s[21]++;
      this.setState({
        menuAnchorEl: event.currentTarget
      });
    }));

    _defineProperty(this, "_closeOptionsMenu", (cov_r7p0jshdj().s[22]++, () => {
      cov_r7p0jshdj().f[7]++;
      cov_r7p0jshdj().s[23]++;
      this.setState({
        menuAnchorEl: null
      });
    }));

    _defineProperty(this, "_wrapOnClick", (cov_r7p0jshdj().s[24]++, onClickFunc => {
      cov_r7p0jshdj().f[8]++;
      cov_r7p0jshdj().s[25]++;
      return () => {
        cov_r7p0jshdj().f[9]++;
        cov_r7p0jshdj().s[26]++;

        // close menu, call onClickFunc
        this._closeOptionsMenu();

        cov_r7p0jshdj().s[27]++;
        onClickFunc();
      };
    }));

    _defineProperty(this, "_getOptionsMenuItems", (cov_r7p0jshdj().s[28]++, () => {
      cov_r7p0jshdj().f[10]++;
      cov_r7p0jshdj().s[29]++;

      if (!this.props.optionsMenuItems) {
        cov_r7p0jshdj().b[6][0]++;
        cov_r7p0jshdj().s[30]++;
        return;
      } else {
        cov_r7p0jshdj().b[6][1]++;
      }

      const {
        menuAnchorEl
      } = (cov_r7p0jshdj().s[31]++, this.state);
      const menuItems = (cov_r7p0jshdj().s[32]++, this.props.optionsMenuItems().map((option, index) => {
        cov_r7p0jshdj().f[11]++;
        cov_r7p0jshdj().s[33]++;
        return __jsx(_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_7___default.a, {
          key: `option-${index}`,
          onClick: this._wrapOnClick(option.onClick)
        }, option.text);
      }));
      cov_r7p0jshdj().s[34]++;
      return __jsx(_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_6___default.a, {
        id: "simple-menu",
        anchorEl: menuAnchorEl,
        open: Boolean(menuAnchorEl),
        onClose: this._closeOptionsMenu
      }, menuItems);
    }));

    cov_r7p0jshdj().s[1]++;
    this.state = {
      feedback: null,
      menuAnchorEl: null,
      prevBgColor: document.body.style.backgroundColor
    };
    cov_r7p0jshdj().s[2]++;
    document.body.style.backgroundColor = 'black';
  }

  componentWillUnmount() {
    cov_r7p0jshdj().f[1]++;
    cov_r7p0jshdj().s[3]++;
    document.body.style.backgroundColor = this.state.prevBgColor;
  }

  render() {
    cov_r7p0jshdj().f[2]++;
    const isProdChannel = (cov_r7p0jshdj().s[4]++, false);
    const gameName = (cov_r7p0jshdj().s[5]++, games__WEBPACK_IMPORTED_MODULE_9__["GAMES_MAP"][this.props.gameArgs.gameCode].name);
    let fbgTopLeftText;
    cov_r7p0jshdj().s[6]++;

    if (isProdChannel) {
      cov_r7p0jshdj().b[0][0]++;
      cov_r7p0jshdj().s[7]++;

      if (gameName) {
        cov_r7p0jshdj().b[1][0]++;
        cov_r7p0jshdj().s[8]++;
        fbgTopLeftText = __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1___default.a, {
          variant: "h6",
          gutterBottom: true,
          style: {
            float: 'left',
            paddingTop: '9px',
            color: 'white'
          }
        }, gameName);
      } else {
        cov_r7p0jshdj().b[1][1]++;
      }
    } else {
      cov_r7p0jshdj().b[0][1]++;
      cov_r7p0jshdj().s[9]++;
      fbgTopLeftText = __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1___default.a, {
        variant: "h6",
        gutterBottom: true,
        style: {
          float: 'left',
          marginTop: '10px',
          backgroundColor: 'red',
          color: 'white'
        }
      }, "\xA0", gameName, "\xA0");
    }

    let feedbackButtonOrText;
    cov_r7p0jshdj().s[10]++;

    if (this.state.feedback) {
      cov_r7p0jshdj().b[2][0]++;
      cov_r7p0jshdj().s[11]++;
      feedbackButtonOrText = __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1___default.a, {
        variant: "h6",
        gutterBottom: true,
        style: {
          float: 'right',
          paddingTop: '10px',
          color: 'white'
        }
      }, "Desktop View is Experimental.");
    } else {
      cov_r7p0jshdj().b[2][1]++;
      cov_r7p0jshdj().s[12]++;
      feedbackButtonOrText = __jsx(components_DesktopMobileView__WEBPACK_IMPORTED_MODULE_10__["DesktopView"], {
        thresholdWidth: 680
      }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4___default.a, {
        onClick: this._toggleFeedback,
        "aria-label": "Desktop View is Experimental.",
        variant: "outlined",
        style: {
          float: 'right',
          paddingTop: '14px'
        }
      }, __jsx(_material_ui_icons_Feedback__WEBPACK_IMPORTED_MODULE_8___default.a, {
        style: {
          color: 'white'
        }
      })));
    }

    cov_r7p0jshdj().s[13]++;
    return __jsx("div", null, __jsx("div", {
      style: {
        position: 'fixed',
        top: '0',
        width: '100%',
        zIndex: 1
      }
    }, __jsx("div", {
      style: {
        maxWidth: this.props.allowWiderScreen ? (cov_r7p0jshdj().b[3][0]++, '1000px') : (cov_r7p0jshdj().b[3][1]++, '500px'),
        marginLeft: 'auto',
        marginRight: 'auto'
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
      href: "/"
    }, __jsx("a", {
      style: {
        float: 'left',
        textDecoration: 'none'
      }
    }, __jsx("img", {
      src: _media_fbg_logo_white_48_png__WEBPACK_IMPORTED_MODULE_3___default.a,
      alt: "FreeBoardGames.org",
      style: {
        float: 'left',
        paddingRight: '16px'
      }
    }), fbgTopLeftText)), this._getOptionsMenuButton(), this._getOptionsMenuItems(), feedbackButtonOrText)), __jsx("div", {
      style: {
        position: 'fixed',
        width: '100%',
        maxWidth: this.props.allowWiderScreen ? (cov_r7p0jshdj().b[4][0]++, '1000px') : (cov_r7p0jshdj().b[4][1]++, '500px'),
        color: 'white',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)'
      }
    }, this.props.children));
  }

  _getOptionsMenuButton() {
    cov_r7p0jshdj().f[3]++;
    cov_r7p0jshdj().s[14]++;

    if (this.props.optionsMenuItems) {
      cov_r7p0jshdj().b[5][0]++;
      cov_r7p0jshdj().s[15]++;
      return __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4___default.a, {
        onClick: this._openOptionsMenu,
        "aria-label": "Open options",
        variant: "outlined",
        style: {
          margin: '8px',
          float: 'right'
        }
      }, __jsx(_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_5___default.a, {
        style: {
          color: 'white'
        }
      }));
    } else {
      cov_r7p0jshdj().b[5][1]++;
    }
  }

}

/***/ }),

/***/ "./src/components/App/Game/GameLayout.tsx":
/*!************************************************!*\
  !*** ./src/components/App/Game/GameLayout.tsx ***!
  \************************************************/
/*! exports provided: GameLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameLayout", function() { return GameLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GameOver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameOver */ "./src/components/App/Game/GameOver.tsx");
/* harmony import */ var _GameDarkSublayout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GameDarkSublayout */ "./src/components/App/Game/GameDarkSublayout.tsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_s9mdjdutx() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx";
  var hash = "065c0c3ca450449a1b4b2075817619bcc2f35a6c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameLayout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "1": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 25,
          column: 8
        }
      },
      "2": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 35,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "065c0c3ca450449a1b4b2075817619bcc2f35a6c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_s9mdjdutx = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_s9mdjdutx();



class GameLayout extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  render() {
    cov_s9mdjdutx().f[0]++;
    cov_s9mdjdutx().s[0]++;

    if (this.props.gameOver) {
      cov_s9mdjdutx().b[0][0]++;
      cov_s9mdjdutx().s[1]++;
      return __jsx(_GameOver__WEBPACK_IMPORTED_MODULE_1__["GameOver"], {
        result: this.props.gameOver,
        gameArgs: this.props.gameArgs,
        extraCardContent: this.props.extraCardContent
      });
    } else {
      cov_s9mdjdutx().b[0][1]++;
      cov_s9mdjdutx().s[2]++;
      return __jsx(_GameDarkSublayout__WEBPACK_IMPORTED_MODULE_2__["GameDarkSublayout"], {
        optionsMenuItems: this.props.optionsMenuItems,
        allowWiderScreen: this.props.allowWiderScreen,
        gameArgs: this.props.gameArgs
      }, this.props.children);
    }
  }

}

/***/ }),

/***/ "./src/components/App/Game/GameOver.tsx":
/*!**********************************************!*\
  !*** ./src/components/App/Game/GameOver.tsx ***!
  \**********************************************/
/*! exports provided: GameOver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GameOver", function() { return GameOver; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GameModePicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameModePicker */ "./src/components/App/Game/GameModePicker.tsx");
/* harmony import */ var _GamesList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GamesList */ "./src/components/App/GamesList.tsx");
/* harmony import */ var _FreeBoardGamesBar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../FreeBoardGamesBar */ "./src/components/App/FreeBoardGamesBar.tsx");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/core/Button */ "@material-ui/core/Button");
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _material_ui_icons_Replay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/icons/Replay */ "@material-ui/icons/Replay");
/* harmony import */ var _material_ui_icons_Replay__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Replay__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_ga__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-ga */ "react-ga");
/* harmony import */ var react_ga__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_ga__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _MessagePage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../MessagePage */ "./src/components/App/MessagePage.tsx");
/* harmony import */ var _Lobby_LobbyService__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Lobby/LobbyService */ "./src/components/App/Lobby/LobbyService.ts");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_10__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_17lf02dutf() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameOver.tsx";
  var hash = "557fa5317d84991a365db8ca70b9fd8efabba6e4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/Game/GameOver.tsx",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 10
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "1": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "2": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "3": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "4": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "5": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "6": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 45,
          column: 8
        }
      },
      "7": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "8": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "9": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "10": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "11": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "12": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 115
        }
      },
      "13": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 27
        }
      },
      "14": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "15": {
        start: {
          line: 74,
          column: 17
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "16": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "17": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "18": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 44
        }
      },
      "19": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "20": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 116
        }
      },
      "21": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 26
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 63
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 22
          }
        },
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 88,
            column: 3
          }
        },
        line: 73
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 33
          }
        }, {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 71
          }
        }],
        line: 81
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "557fa5317d84991a365db8ca70b9fd8efabba6e4"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_17lf02dutf = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_17lf02dutf();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }












class GameOver extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(..._args) {
    super(..._args);

    _defineProperty(this, "state", (cov_17lf02dutf().s[0]++, {
      loading: false
    }));

    _defineProperty(this, "_getExtraCardContent", (cov_17lf02dutf().s[9]++, () => {
      cov_17lf02dutf().f[1]++;
      cov_17lf02dutf().s[10]++;

      if (!this.props.extraCardContent) {
        cov_17lf02dutf().b[2][0]++;
        cov_17lf02dutf().s[11]++;
        return null;
      } else {
        cov_17lf02dutf().b[2][1]++;
      }

      const otherPlayerCard = (cov_17lf02dutf().s[12]++, __jsx("div", {
        style: {
          paddingBottom: '12px',
          maxWidth: '500px',
          margin: 'auto'
        }
      }, this.props.extraCardContent));
      cov_17lf02dutf().s[13]++;
      return otherPlayerCard;
    }));

    _defineProperty(this, "_playAgainHandle", (cov_17lf02dutf().s[14]++, async () => {
      cov_17lf02dutf().f[2]++;
      const args = (cov_17lf02dutf().s[15]++, this.props.gameArgs);
      cov_17lf02dutf().s[16]++;
      react_ga__WEBPACK_IMPORTED_MODULE_7___default.a.event({
        category: 'GameOver',
        action: 'Clicked play again',
        label: args.gameCode
      });
      cov_17lf02dutf().s[17]++;

      if ((cov_17lf02dutf().b[4][0]++, args.mode === _GameModePicker__WEBPACK_IMPORTED_MODULE_1__["GameMode"].AI) || (cov_17lf02dutf().b[4][1]++, args.mode === _GameModePicker__WEBPACK_IMPORTED_MODULE_1__["GameMode"].LocalFriend)) {
        cov_17lf02dutf().b[3][0]++;
        cov_17lf02dutf().s[18]++;
        next_router__WEBPACK_IMPORTED_MODULE_10___default.a.push(window.location.pathname);
      } else {
        cov_17lf02dutf().b[3][1]++;
        cov_17lf02dutf().s[19]++;
        this.setState({
          loading: true
        });
        const nextRoomId = (cov_17lf02dutf().s[20]++, await _Lobby_LobbyService__WEBPACK_IMPORTED_MODULE_9__["LobbyService"].getPlayAgainNextRoom(args.gameCode, args.matchCode, args.players.length));
        cov_17lf02dutf().s[21]++;
        next_router__WEBPACK_IMPORTED_MODULE_10___default.a.push(`/room/${args.gameCode}/${nextRoomId}`);
      }
    }));
  }

  render() {
    cov_17lf02dutf().f[0]++;
    cov_17lf02dutf().s[1]++;

    if (this.state.loading) {
      cov_17lf02dutf().b[0][0]++;
      const Page = (cov_17lf02dutf().s[2]++, Object(_MessagePage__WEBPACK_IMPORTED_MODULE_8__["default"])('loading', 'Loading...'));
      cov_17lf02dutf().s[3]++;
      return __jsx(Page, null);
    } else {
      cov_17lf02dutf().b[0][1]++;
    }

    let playAgain;
    const extraCardContent = (cov_17lf02dutf().s[4]++, this._getExtraCardContent());
    cov_17lf02dutf().s[5]++;

    if (this.props.gameArgs) {
      cov_17lf02dutf().b[1][0]++;
      cov_17lf02dutf().s[6]++;
      playAgain = __jsx("div", {
        style: {
          textAlign: 'center'
        }
      }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5___default.a, {
        onClick: this._playAgainHandle,
        variant: "outlined",
        style: {
          marginRight: 'auto',
          marginLeft: 'auto',
          marginBottom: '24px'
        }
      }, __jsx(_material_ui_icons_Replay__WEBPACK_IMPORTED_MODULE_6___default.a, {
        style: {
          marginRight: '8px'
        }
      }), "Play Again"));
    } else {
      cov_17lf02dutf().b[1][1]++;
    }

    cov_17lf02dutf().s[7]++;
    react_ga__WEBPACK_IMPORTED_MODULE_7___default.a.event({
      category: 'Game',
      label: this.props.gameArgs.gameCode,
      action: 'Game over'
    });
    cov_17lf02dutf().s[8]++;
    return __jsx(_FreeBoardGamesBar__WEBPACK_IMPORTED_MODULE_3__["default"], {
      FEATURE_FLAG_readyForDesktopView: true
    }, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4___default.a, {
      variant: "h6",
      gutterBottom: true,
      align: "center",
      style: {
        marginTop: '16px'
      }
    }, "Game Over, ", this.props.result, "!"), playAgain, extraCardContent, __jsx(_GamesList__WEBPACK_IMPORTED_MODULE_2__["GamesList"], null));
  }

}

/***/ }),

/***/ "./src/components/App/GamesList.tsx":
/*!******************************************!*\
  !*** ./src/components/App/GamesList.tsx ***!
  \******************************************/
/*! exports provided: GamesList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GamesList", function() { return GamesList; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var games__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! games */ "./src/games/index.ts");
/* harmony import */ var _Game_GameCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Game/GameCard */ "./src/components/App/Game/GameCard.tsx");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_gqg19tpc3() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/GamesList.tsx";
  var hash = "d8225ab27af96b136cd0e547bab6686df7f20c72";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/GamesList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 15,
          column: 6
        }
      },
      "1": {
        start: {
          line: 10,
          column: 6
        },
        end: {
          line: 14,
          column: 13
        }
      },
      "2": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 38
          }
        },
        loc: {
          start: {
            line: 10,
            column: 6
          },
          end: {
            line: 14,
            column: 13
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d8225ab27af96b136cd0e547bab6686df7f20c72"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_gqg19tpc3 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_gqg19tpc3();





class GamesList extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  render() {
    cov_gqg19tpc3().f[0]++;
    const gamesList = (cov_gqg19tpc3().s[0]++, games__WEBPACK_IMPORTED_MODULE_1__["GAMES_LIST"].map(game => {
      cov_gqg19tpc3().f[1]++;
      cov_gqg19tpc3().s[1]++;
      return __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
        href: `/play/[gameCode]`,
        as: `/play/${game.code}`,
        key: game.code
      }, __jsx("a", {
        style: {
          textDecoration: 'none',
          flex: 1,
          minWidth: '300px',
          maxWidth: '380px',
          margin: '8px'
        }
      }, __jsx(_Game_GameCard__WEBPACK_IMPORTED_MODULE_2__["GameCard"], {
        game: game,
        isLink: true
      })));
    }));
    cov_gqg19tpc3().s[2]++;
    return __jsx("div", {
      style: {
        marginBottom: '16px'
      }
    }, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default.a, {
      component: "h2",
      variant: "h6",
      style: {
        marginBottom: '16px',
        marginLeft: '6px'
      }
    }, "Games"), __jsx("div", {
      style: {
        margin: '0 4px',
        display: 'flex',
        flexWrap: 'wrap'
      }
    }, gamesList));
  }

}

/***/ }),

/***/ "./src/components/App/MessagePage.tsx":
/*!********************************************!*\
  !*** ./src/components/App/MessagePage.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _MessagePageClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MessagePageClass */ "./src/components/App/MessagePageClass.tsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1pdcu8e572() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/MessagePage.tsx";
  var hash = "85d261dfe45136253ee1519c39345121c5c964bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/MessagePage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 7,
          column: 4
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 23
          },
          end: {
            line: 4,
            column: 24
          }
        },
        loc: {
          start: {
            line: 4,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 10
          }
        },
        loc: {
          start: {
            line: 5,
            column: 15
          },
          end: {
            line: 7,
            column: 3
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "85d261dfe45136253ee1519c39345121c5c964bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1pdcu8e572 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1pdcu8e572();


cov_1pdcu8e572().s[0]++;

const getMessagePage = (type, message) => {
  cov_1pdcu8e572().f[0]++;
  cov_1pdcu8e572().s[1]++;
  return () => {
    cov_1pdcu8e572().f[1]++;
    cov_1pdcu8e572().s[2]++;
    return __jsx(_MessagePageClass__WEBPACK_IMPORTED_MODULE_1__["default"], {
      type: type,
      message: message
    });
  };
};

/* harmony default export */ __webpack_exports__["default"] = (getMessagePage);

/***/ }),

/***/ "./src/components/App/MessagePageClass.tsx":
/*!*************************************************!*\
  !*** ./src/components/App/MessagePageClass.tsx ***!
  \*************************************************/
/*! exports provided: MessagePage, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessagePage", function() { return MessagePage; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material-ui/core/Button */ "@material-ui/core/Button");
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/icons/Home */ "@material-ui/icons/Home");
/* harmony import */ var _material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-ui/core/CircularProgress */ "@material-ui/core/CircularProgress");
/* harmony import */ var _material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _FreeBoardGamesBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FreeBoardGamesBar */ "./src/components/App/FreeBoardGamesBar.tsx");
/* harmony import */ var _media_SvgError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./media/SvgError */ "./src/components/App/media/SvgError.tsx");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_7__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1y46eufq54() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/MessagePageClass.tsx";
  var hash = "8e571e562b46c16beb7ae6d0cedc91229204127d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/MessagePageClass.tsx",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "1": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "3": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "4": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "5": {
        start: {
          line: 34,
          column: 13
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "6": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "7": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "8": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 48
        }
      },
      "9": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "10": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "11": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 44,
          column: 7
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 81
        }
      },
      "13": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "14": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "15": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 28
        }
      },
      "16": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "17": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 59,
          column: 54
        }
      },
      "18": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "19": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "20": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "21": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 74,
          column: 8
        }
      },
      "22": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 89,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        loc: {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 34,
            column: 14
          }
        },
        loc: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 31
          }
        },
        loc: {
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        },
        loc: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 11
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 37
          }
        }, {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 29,
            column: 63
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        }, {
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }],
        line: 63
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e571e562b46c16beb7ae6d0cedc91229204127d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1y46eufq54 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1y46eufq54();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }









class MessagePage extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_1y46eufq54().f[0]++;
    cov_1y46eufq54().s[1]++;
    super(props);

    _defineProperty(this, "requestID", (cov_1y46eufq54().s[0]++, null));

    _defineProperty(this, "_animate", (cov_1y46eufq54().s[5]++, now => {
      cov_1y46eufq54().f[1]++;
      cov_1y46eufq54().s[6]++;
      return () => {
        cov_1y46eufq54().f[2]++;
        cov_1y46eufq54().s[7]++;

        if (this.requestID) {
          cov_1y46eufq54().b[2][0]++;
          const elapsed = (cov_1y46eufq54().s[8]++, now - this.state.startTime);
          const linkHidden = (cov_1y46eufq54().s[9]++, elapsed < 5000);
          cov_1y46eufq54().s[10]++;
          this.setState(_objectSpread({}, this.state, {
            linkHidden
          }));
          cov_1y46eufq54().s[11]++;

          if (linkHidden) {
            cov_1y46eufq54().b[3][0]++;
            cov_1y46eufq54().s[12]++;
            this.requestID = window.requestAnimationFrame(this._animate(Date.now()));
          } else {
            cov_1y46eufq54().b[3][1]++;
          }
        } else {
          cov_1y46eufq54().b[2][1]++;
        }
      };
    }));

    cov_1y46eufq54().s[2]++;
    this.state = {
      linkHidden: props.type !== 'error',
      startTime: Date.now()
    };
    cov_1y46eufq54().s[3]++;

    if ((cov_1y46eufq54().b[1][0]++, false) && (cov_1y46eufq54().b[1][1]++, props.type !== 'error')) {
      cov_1y46eufq54().b[0][0]++;
      cov_1y46eufq54().s[4]++;
      this.requestID = window.requestAnimationFrame(this._animate(Date.now()));
    } else {
      cov_1y46eufq54().b[0][1]++;
    }
  }

  componentWillUnmount() {
    cov_1y46eufq54().f[3]++;
    cov_1y46eufq54().s[13]++;

    if (this.requestID) {
      cov_1y46eufq54().b[4][0]++;
      cov_1y46eufq54().s[14]++;
      window.cancelAnimationFrame(this.requestID);
      cov_1y46eufq54().s[15]++;
      this.requestID = null;
    } else {
      cov_1y46eufq54().b[4][1]++;
    }
  }

  render() {
    cov_1y46eufq54().f[4]++;
    let icon;
    let linkHome;
    cov_1y46eufq54().s[16]++;

    if (this.props.type === 'error') {
      cov_1y46eufq54().b[5][0]++;
      cov_1y46eufq54().s[17]++;
      icon = __jsx(_media_SvgError__WEBPACK_IMPORTED_MODULE_5__["default"], {
        style: {
          height: '128px'
        }
      });
    } else {
      cov_1y46eufq54().b[5][1]++;
      cov_1y46eufq54().s[18]++;
      icon = __jsx(_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default.a, null);
    }

    cov_1y46eufq54().s[19]++;

    if (!this.state.linkHidden) {
      cov_1y46eufq54().b[6][0]++;
      const goHomeText = (cov_1y46eufq54().s[20]++, 'Go Home');
      cov_1y46eufq54().s[21]++;
      linkHome = __jsx(next_link__WEBPACK_IMPORTED_MODULE_7___default.a, {
        href: "/"
      }, __jsx("a", {
        style: {
          textDecoration: 'none'
        }
      }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1___default.a, {
        variant: "outlined",
        style: {
          margin: '8px'
        }
      }, __jsx(_material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_2___default.a, {
        style: {
          marginRight: '8px'
        }
      }), goHomeText)));
    } else {
      cov_1y46eufq54().b[6][1]++;
    }

    cov_1y46eufq54().s[22]++;
    return __jsx(_FreeBoardGamesBar__WEBPACK_IMPORTED_MODULE_4__["default"], null, __jsx("div", {
      style: {
        paddingTop: '16px',
        textAlign: 'center'
      }
    }, icon, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default.a, {
      variant: "h6",
      gutterBottom: true,
      style: {
        paddingTop: '16px'
      }
    }, this.props.message, __jsx("br", null), __jsx("br", null), linkHome, this.props.actionComponent)));
  }

}
/* harmony default export */ __webpack_exports__["default"] = (MessagePage);

/***/ }),

/***/ "./src/components/App/media/SvgError.tsx":
/*!***********************************************!*\
  !*** ./src/components/App/media/SvgError.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_12fnlg8tgm() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/App/media/SvgError.tsx";
  var hash = "a583da3972de338c0a9ff67f967832e75c2fac12";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/App/media/SvgError.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 2
        },
        end: {
          line: 8,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 2
          },
          end: {
            line: 8,
            column: 8
          }
        },
        line: 3
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a583da3972de338c0a9ff67f967832e75c2fac12"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_12fnlg8tgm = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_12fnlg8tgm();

cov_12fnlg8tgm().s[0]++;

const SvgError = props => {
  cov_12fnlg8tgm().f[0]++;
  cov_12fnlg8tgm().s[1]++;
  return __jsx("svg", {
    viewBox: "0 0 1 1",
    style: props.style
  }, __jsx("g", null, __jsx("line", {
    x1: "0.2",
    y1: "0.2",
    x2: "0.8",
    y2: "0.8",
    stroke: "black",
    strokeWidth: "0.05"
  }), __jsx("line", {
    x1: "0.8",
    y1: "0.2",
    x2: "0.2",
    y2: "0.8",
    stroke: "black",
    strokeWidth: "0.05"
  })));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgError);

/***/ }),

/***/ "./src/components/DesktopMobileView.tsx":
/*!**********************************************!*\
  !*** ./src/components/DesktopMobileView.tsx ***!
  \**********************************************/
/*! exports provided: DesktopView, MobileView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DesktopView", function() { return DesktopView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MobileView", function() { return MobileView; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var hooks_useWindowDimensions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hooks/useWindowDimensions */ "./src/hooks/useWindowDimensions.ts");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mobile-detect */ "mobile-detect");
/* harmony import */ var mobile_detect__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mobile_detect__WEBPACK_IMPORTED_MODULE_2__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1jre50uwcf() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/components/DesktopMobileView.tsx";
  var hash = "0f0b32a919beacee3d27852a9b0e92630e49b411";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/components/DesktopMobileView.tsx",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "1": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 106
        }
      },
      "2": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "3": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "4": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "5": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "7": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "9": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "10": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "11": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 61
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 16
        }
      },
      "14": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "15": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "16": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "17": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "isMobile",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 28
          }
        },
        loc: {
          start: {
            line: 29,
            column: 62
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 27
          }
        },
        loc: {
          start: {
            line: 37,
            column: 61
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 57
          }
        }, {
          start: {
            line: 14,
            column: 61
          },
          end: {
            line: 14,
            column: 106
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 18,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 7
          },
          end: {
            line: 18,
            column: 17
          }
        }, {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 36
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 56
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 34
          }
        }, {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 50
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 47
          }
        }, {
          start: {
            line: 23,
            column: 51
          },
          end: {
            line: 23,
            column: 74
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }, {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        }, {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0f0b32a919beacee3d27852a9b0e92630e49b411"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1jre50uwcf = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1jre50uwcf();



const DEFAULT_THRESHOLD_WIDTH = (cov_1jre50uwcf().s[0]++, 550);

function isMobile(props) {
  var _document;

  cov_1jre50uwcf().f[0]++;
  const hasJssSSRStyles = (cov_1jre50uwcf().s[1]++, (cov_1jre50uwcf().b[0][0]++, typeof document !== 'undefined') && (cov_1jre50uwcf().b[0][1]++, !!((_document = document) === null || _document === void 0 ? void 0 : _document.querySelector('#jss-server-side'))));
  let width = (cov_1jre50uwcf().s[2]++, Object(hooks_useWindowDimensions__WEBPACK_IMPORTED_MODULE_1__["default"])().width);
  const isBrowser = (cov_1jre50uwcf().s[3]++, false);
  let isMobileResult;
  cov_1jre50uwcf().s[4]++;

  if (((cov_1jre50uwcf().b[2][0]++, !isBrowser) || (cov_1jre50uwcf().b[2][1]++, hasJssSSRStyles)) && (cov_1jre50uwcf().b[2][2]++, props.userAgent)) {
    cov_1jre50uwcf().b[1][0]++;
    // keep the isDesktop() return uniform if JSS styles exist
    const md = (cov_1jre50uwcf().s[5]++, new mobile_detect__WEBPACK_IMPORTED_MODULE_2___default.a(props.userAgent));
    cov_1jre50uwcf().s[6]++;
    isMobileResult = (cov_1jre50uwcf().b[3][0]++, !!md.mobile()) && (cov_1jre50uwcf().b[3][1]++, !md.tablet());
  } else {
    cov_1jre50uwcf().b[1][1]++;
    const thresholdWidth = (cov_1jre50uwcf().s[7]++, (cov_1jre50uwcf().b[4][0]++, props.thresholdWidth) || (cov_1jre50uwcf().b[4][1]++, DEFAULT_THRESHOLD_WIDTH));
    cov_1jre50uwcf().s[8]++;
    isMobileResult = width <= thresholdWidth;
  }

  cov_1jre50uwcf().s[9]++;
  return isMobileResult;
}

cov_1jre50uwcf().s[10]++;
const DesktopView = props => {
  cov_1jre50uwcf().f[1]++;
  cov_1jre50uwcf().s[11]++;

  if (!isMobile(props)) {
    cov_1jre50uwcf().b[5][0]++;
    cov_1jre50uwcf().s[12]++;
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, props.children);
  } else {
    cov_1jre50uwcf().b[5][1]++;
    cov_1jre50uwcf().s[13]++;
    return null;
  }
};
cov_1jre50uwcf().s[14]++;
const MobileView = props => {
  cov_1jre50uwcf().f[2]++;
  cov_1jre50uwcf().s[15]++;

  if (isMobile(props)) {
    cov_1jre50uwcf().b[6][0]++;
    cov_1jre50uwcf().s[16]++;
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, props.children);
  } else {
    cov_1jre50uwcf().b[6][1]++;
    cov_1jre50uwcf().s[17]++;
    return null;
  }
};

/***/ }),

/***/ "./src/games/common/gameMode.ts":
/*!**************************************!*\
  !*** ./src/games/common/gameMode.ts ***!
  \**************************************/
/*! exports provided: isLocalGame, isOnlineGame, isAIGame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLocalGame", function() { return isLocalGame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOnlineGame", function() { return isOnlineGame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAIGame", function() { return isAIGame; });
/* harmony import */ var components_App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! components/App/Game/GameModePicker */ "./src/components/App/Game/GameModePicker.tsx");
function cov_2msw7xr2jk() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/common/gameMode.ts";
  var hash = "e1e58a91b90a0a839b501f1e740063c5286345a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/common/gameMode.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "1": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "2": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "isLocalGame",
        decl: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 27
          }
        },
        loc: {
          start: {
            line: 4,
            column: 49
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "isOnlineGame",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 28
          }
        },
        loc: {
          start: {
            line: 8,
            column: 50
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "isAIGame",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 17
          }
        }, {
          start: {
            line: 5,
            column: 21
          },
          end: {
            line: 5,
            column: 59
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 17
          }
        }, {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 60
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 17
          }
        }, {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 50
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e1e58a91b90a0a839b501f1e740063c5286345a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2msw7xr2jk = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2msw7xr2jk();

function isLocalGame(gameArgs) {
  cov_2msw7xr2jk().f[0]++;
  cov_2msw7xr2jk().s[0]++;
  return (cov_2msw7xr2jk().b[0][0]++, gameArgs) && (cov_2msw7xr2jk().b[0][1]++, gameArgs.mode === components_App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__["GameMode"].LocalFriend);
}
function isOnlineGame(gameArgs) {
  cov_2msw7xr2jk().f[1]++;
  cov_2msw7xr2jk().s[1]++;
  return (cov_2msw7xr2jk().b[1][0]++, gameArgs) && (cov_2msw7xr2jk().b[1][1]++, gameArgs.mode === components_App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__["GameMode"].OnlineFriend);
}
function isAIGame(gameArgs) {
  cov_2msw7xr2jk().f[2]++;
  cov_2msw7xr2jk().s[2]++;
  return (cov_2msw7xr2jk().b[2][0]++, gameArgs) && (cov_2msw7xr2jk().b[2][1]++, gameArgs.mode === components_App_Game_GameModePicker__WEBPACK_IMPORTED_MODULE_0__["GameMode"].AI);
}

/***/ }),

/***/ "./src/games/seabattle/Battle.tsx":
/*!****************************************!*\
  !*** ./src/games/seabattle/Battle.tsx ***!
  \****************************************/
/*! exports provided: Battle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Battle", function() { return Battle; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Radar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Radar */ "./src/games/seabattle/Radar.tsx");
/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sound */ "./src/games/seabattle/sound.ts");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1ax6qcfozm() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/Battle.tsx";
  var hash = "d8fa7898b8f17ec3d7b1e6c03eb4f209f2de6972";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/Battle.tsx",
    statementMap: {
      "0": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 17
        }
      },
      "1": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "2": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 59,
          column: 3
        }
      },
      "3": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 45,
          column: 20
        }
      },
      "4": {
        start: {
          line: 44,
          column: 10
        },
        end: {
          line: 44,
          column: 119
        }
      },
      "5": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "6": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "7": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 57,
          column: 7
        }
      },
      "8": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "9": {
        start: {
          line: 50,
          column: 10
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "10": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "11": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "12": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "13": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "14": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "15": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 55
        }
      },
      "16": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 104
        }
      },
      "17": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 78,
          column: 86
        }
      },
      "18": {
        start: {
          line: 78,
          column: 63
        },
        end: {
          line: 78,
          column: 85
        }
      },
      "19": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 79,
          column: 99
        }
      },
      "20": {
        start: {
          line: 79,
          column: 75
        },
        end: {
          line: 79,
          column: 98
        }
      },
      "21": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "22": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "23": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 34
        }
      },
      "24": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "25": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "26": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 51
        }
      },
      "27": {
        start: {
          line: 104,
          column: 11
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "28": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "29": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 39
        }
      },
      "30": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "31": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 48
        }
      },
      "32": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "33": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 57
        }
      },
      "34": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 40,
            column: 14
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 59,
            column: 3
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        loc: {
          start: {
            line: 44,
            column: 10
          },
          end: {
            line: 44,
            column: 119
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 23
          }
        },
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 25
          }
        },
        loc: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 55,
            column: 11
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 46
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 99,
            column: 3
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 53
          },
          end: {
            line: 78,
            column: 54
          }
        },
        loc: {
          start: {
            line: 78,
            column: 63
          },
          end: {
            line: 78,
            column: 85
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 57
          }
        },
        loc: {
          start: {
            line: 79,
            column: 75
          },
          end: {
            line: 79,
            column: 98
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        },
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 101
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        loc: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 111
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        loc: {
          start: {
            line: 112,
            column: 18
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 112
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 10
          },
          end: {
            line: 44,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 10
          },
          end: {
            line: 44,
            column: 65
          }
        }, {
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 44,
            column: 92
          }
        }, {
          start: {
            line: 44,
            column: 96
          },
          end: {
            line: 44,
            column: 119
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 57,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 57,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 57,
            column: 7
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 10
          },
          end: {
            line: 48,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 10
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 54
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 51
          },
          end: {
            line: 77,
            column: 72
          }
        }, {
          start: {
            line: 77,
            column: 75
          },
          end: {
            line: 77,
            column: 99
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 13
          },
          end: {
            line: 103,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 41
          }
        }, {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 103,
            column: 50
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 11
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 11
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: 104,
            column: 11
          },
          end: {
            line: 108,
            column: 5
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        }, {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d8fa7898b8f17ec3d7b1e6c03eb4f209f2de6972"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1ax6qcfozm = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1ax6qcfozm();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





class Battle extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_1ax6qcfozm().f[0]++;
    cov_1ax6qcfozm().s[0]++;
    super(props);

    _defineProperty(this, "_onClick", (cov_1ax6qcfozm().s[2]++, cell => {
      cov_1ax6qcfozm().f[1]++;
      const uniqueMove = (cov_1ax6qcfozm().s[3]++, this.state.G.salvos.filter(salvo => {
        cov_1ax6qcfozm().f[2]++;
        cov_1ax6qcfozm().s[4]++;
        return (cov_1ax6qcfozm().b[0][0]++, salvo.player === parseInt(this.state.currentPlayer, 10)) && (cov_1ax6qcfozm().b[0][1]++, salvo.cell.x === cell.x) && (cov_1ax6qcfozm().b[0][2]++, salvo.cell.y === cell.y);
      }).length === 0);
      cov_1ax6qcfozm().s[5]++;

      if (uniqueMove) {
        cov_1ax6qcfozm().b[1][0]++;
        cov_1ax6qcfozm().s[6]++;
        this.props.moves.salvo(cell.x, cell.y);
        cov_1ax6qcfozm().s[7]++;

        if ((cov_1ax6qcfozm().b[3][0]++, this.props.isAIGame) && (cov_1ax6qcfozm().b[3][1]++, !this.state.aiPlaying)) {
          cov_1ax6qcfozm().b[2][0]++;
          cov_1ax6qcfozm().s[8]++;
          this.setState(oldState => {
            cov_1ax6qcfozm().f[3]++;
            cov_1ax6qcfozm().s[9]++;
            return _objectSpread({}, oldState, {
              aiPlaying: true
            });
          });
          cov_1ax6qcfozm().s[10]++;
          setTimeout(() => {
            cov_1ax6qcfozm().f[4]++;
            cov_1ax6qcfozm().s[11]++;
            this.setState(oldState => {
              cov_1ax6qcfozm().f[5]++;
              cov_1ax6qcfozm().s[12]++;
              return _objectSpread({}, oldState, {
                aiPlaying: false
              });
            });
          }, 2500);
        } else {
          cov_1ax6qcfozm().b[2][1]++;
        }
      } else {
        cov_1ax6qcfozm().b[1][1]++;
      }
    }));

    cov_1ax6qcfozm().s[1]++;
    this.state = {
      G: props.G,
      playerID: props.playerID,
      currentPlayer: props.currentPlayer,
      showSalvo: false,
      aiPlaying: false
    };
  }

  componentDidUpdate(prevProps) {
    cov_1ax6qcfozm().f[6]++;
    cov_1ax6qcfozm().s[13]++;

    if (prevProps.currentPlayer !== this.props.currentPlayer) {
      cov_1ax6qcfozm().b[4][0]++;
      cov_1ax6qcfozm().s[14]++;
      this.setState({
        G: this.props.G,
        playerID: this.props.playerID,
        currentPlayer: this.props.currentPlayer,
        showSalvo: true,
        prevPlayer: prevProps.currentPlayer,
        startTime: Date.now(),
        salvo: this.props.G.salvos[this.props.G.salvos.length - 1]
      });
      cov_1ax6qcfozm().s[15]++;
      requestAnimationFrame(this._animate(Date.now()));
    } else {
      cov_1ax6qcfozm().b[4][1]++;
    }
  }

  render() {
    cov_1ax6qcfozm().f[7]++;
    const player = (cov_1ax6qcfozm().s[16]++, parseInt(this.state.showSalvo ? (cov_1ax6qcfozm().b[5][0]++, this.state.prevPlayer) : (cov_1ax6qcfozm().b[5][1]++, this.state.currentPlayer), 10));
    const ships = (cov_1ax6qcfozm().s[17]++, this.state.G.ships.filter(ship => {
      cov_1ax6qcfozm().f[8]++;
      cov_1ax6qcfozm().s[18]++;
      return ship.player !== player;
    }));
    const salvos = (cov_1ax6qcfozm().s[19]++, this.state.G.salvos.filter(salvo => {
      cov_1ax6qcfozm().f[9]++;
      cov_1ax6qcfozm().s[20]++;
      return salvo.player === player;
    }));
    const message = (cov_1ax6qcfozm().s[21]++, this._getMessage());
    cov_1ax6qcfozm().s[22]++;

    if (this.props.getSoundPref()) {
      cov_1ax6qcfozm().b[6][0]++;
      cov_1ax6qcfozm().s[23]++;
      Object(_sound__WEBPACK_IMPORTED_MODULE_2__["playSeabattleSound"])(message);
    } else {
      cov_1ax6qcfozm().b[6][1]++;
    }

    cov_1ax6qcfozm().s[24]++;
    return __jsx("div", null, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default.a, {
      variant: "h5",
      style: {
        textAlign: 'center',
        color: 'white',
        marginBottom: '16px'
      }
    }, message), __jsx(_Radar__WEBPACK_IMPORTED_MODULE_1__["Radar"], {
      player: player,
      ships: ships,
      salvos: salvos,
      editable: false,
      blinkSalvo: this.state.showSalvo,
      onClick: this._onClick
    }));
  }

  _getMessage() {
    cov_1ax6qcfozm().f[10]++;
    cov_1ax6qcfozm().s[25]++;

    if (this.state.showSalvo) {
      cov_1ax6qcfozm().b[7][0]++;
      cov_1ax6qcfozm().s[26]++;
      return this.state.salvo.hit ? (cov_1ax6qcfozm().b[8][0]++, 'HIT') : (cov_1ax6qcfozm().b[8][1]++, 'MISS');
    } else {
      cov_1ax6qcfozm().b[7][1]++;
      cov_1ax6qcfozm().s[27]++;

      if (this.state.playerID === this.state.currentPlayer) {
        cov_1ax6qcfozm().b[9][0]++;
        cov_1ax6qcfozm().s[28]++;
        return 'CLICK TO SHOOT';
      } else {
        cov_1ax6qcfozm().b[9][1]++;
        cov_1ax6qcfozm().s[29]++;
        return 'Waiting for opponent...';
      }
    }
  }

  _animate(now) {
    cov_1ax6qcfozm().f[11]++;
    cov_1ax6qcfozm().s[30]++;
    return (() => {
      cov_1ax6qcfozm().f[12]++;
      const elapsed = (cov_1ax6qcfozm().s[31]++, now - this.state.startTime);
      cov_1ax6qcfozm().s[32]++;

      if (elapsed < 2e3) {
        cov_1ax6qcfozm().b[10][0]++;
        cov_1ax6qcfozm().s[33]++;
        requestAnimationFrame(this._animate(Date.now()));
      } else {
        cov_1ax6qcfozm().b[10][1]++;
        cov_1ax6qcfozm().s[34]++;
        this.setState(_objectSpread({}, this.state, {
          showSalvo: false
        }));
      }
    }).bind(this);
  }

}

/***/ }),

/***/ "./src/games/seabattle/Radar.tsx":
/*!***************************************!*\
  !*** ./src/games/seabattle/Radar.tsx ***!
  \***************************************/
/*! exports provided: Radar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Radar", function() { return Radar; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game */ "./src/games/seabattle/game.ts");
/* harmony import */ var ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ui */ "./src/ui/index.ts");
/* harmony import */ var _media_SvgShip2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./media/SvgShip2 */ "./src/games/seabattle/media/SvgShip2.tsx");
/* harmony import */ var _media_SvgShip3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./media/SvgShip3 */ "./src/games/seabattle/media/SvgShip3.tsx");
/* harmony import */ var _media_SvgShip4__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./media/SvgShip4 */ "./src/games/seabattle/media/SvgShip4.tsx");
/* harmony import */ var _media_SvgShip5__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./media/SvgShip5 */ "./src/games/seabattle/media/SvgShip5.tsx");
/* harmony import */ var _media_SvgBackground__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./media/SvgBackground */ "./src/games/seabattle/media/SvgBackground.tsx");
/* harmony import */ var _media_SvgHit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./media/SvgHit */ "./src/games/seabattle/media/SvgHit.tsx");
/* harmony import */ var _media_SvgMiss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./media/SvgMiss */ "./src/games/seabattle/media/SvgMiss.tsx");
/* harmony import */ var components_App_Blink__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! components/App/Blink */ "./src/components/App/Blink.tsx");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_xq0uwk3n8() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/Radar.tsx";
  var hash = "72c84c1dd0213be758a846891b5bcfbc651d7bdc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/Radar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 17
        }
      },
      "1": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 35,
          column: 32
        }
      },
      "2": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "3": {
        start: {
          line: 45,
          column: 13
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "4": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "5": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "6": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "7": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 36
        }
      },
      "8": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "9": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 58,
          column: 3
        }
      },
      "10": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "11": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "12": {
        start: {
          line: 61,
          column: 14
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "13": {
        start: {
          line: 62,
          column: 14
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "14": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "15": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 64,
          column: 38
        }
      },
      "16": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "17": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "18": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "19": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "20": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 38
        }
      },
      "21": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "22": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 72
        }
      },
      "23": {
        start: {
          line: 76,
          column: 41
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "24": {
        start: {
          line: 81,
          column: 17
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "25": {
        start: {
          line: 82,
          column: 18
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "26": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 42
        }
      },
      "27": {
        start: {
          line: 87,
          column: 17
        },
        end: {
          line: 87,
          column: 44
        }
      },
      "28": {
        start: {
          line: 88,
          column: 18
        },
        end: {
          line: 88,
          column: 61
        }
      },
      "29": {
        start: {
          line: 89,
          column: 17
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "30": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 22
        }
      },
      "31": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 19
        }
      },
      "32": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 70
        }
      },
      "33": {
        start: {
          line: 96,
          column: 17
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "34": {
        start: {
          line: 97,
          column: 21
        },
        end: {
          line: 97,
          column: 23
        }
      },
      "35": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "36": {
        start: {
          line: 98,
          column: 17
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "37": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 66
        }
      },
      "38": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "39": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 51
        }
      },
      "40": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "41": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "42": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 14
        }
      },
      "44": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 28
        }
      },
      "45": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 14
        }
      },
      "46": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 28
        }
      },
      "47": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 14
        }
      },
      "48": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 28
        }
      },
      "49": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 14
        }
      },
      "50": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "51": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 65
        }
      },
      "52": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "53": {
        start: {
          line: 133,
          column: 19
        },
        end: {
          line: 133,
          column: 21
        }
      },
      "54": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "55": {
        start: {
          line: 135,
          column: 19
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "56": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 105
        }
      },
      "57": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 149,
          column: 8
        }
      },
      "58": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "59": {
        start: {
          line: 155,
          column: 34
        },
        end: {
          line: 155,
          column: 36
        }
      },
      "60": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "61": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 157,
          column: 20
        }
      },
      "62": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "63": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "64": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "65": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "66": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 30
        }
      },
      "67": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 169,
          column: 7
        }
      },
      "68": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 43
        }
      },
      "69": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 43
        }
      },
      "70": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 175,
          column: 8
        }
      },
      "71": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "72": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 28
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 43,
            column: 3
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 13
          },
          end: {
            line: 45,
            column: 14
          }
        },
        loc: {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 58,
            column: 3
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        loc: {
          start: {
            line: 60,
            column: 88
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 60
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        loc: {
          start: {
            line: 74,
            column: 42
          },
          end: {
            line: 78,
            column: 3
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        },
        loc: {
          start: {
            line: 75,
            column: 48
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 35
          }
        },
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 63
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        loc: {
          start: {
            line: 80,
            column: 53
          },
          end: {
            line: 84,
            column: 3
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 63
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 106,
            column: 3
          }
        },
        loc: {
          start: {
            line: 106,
            column: 53
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 106
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 14
          },
          end: {
            line: 152,
            column: 3
          }
        },
        line: 132
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 154,
            column: 2
          },
          end: {
            line: 154,
            column: 3
          }
        },
        loc: {
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 179,
            column: 3
          }
        },
        line: 154
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 65,
            column: 22
          }
        }, {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 33
          }
        }, {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 44
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 23
          }
        }, {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 68,
            column: 42
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 50
          }
        }, {
          start: {
            line: 76,
            column: 54
          },
          end: {
            line: 76,
            column: 63
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 114,
            column: 14
          }
        }, {
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 117,
            column: 14
          }
        }, {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 120,
            column: 14
          }
        }, {
          start: {
            line: 121,
            column: 6
          },
          end: {
            line: 123,
            column: 14
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 95
          },
          end: {
            line: 136,
            column: 98
          }
        }, {
          start: {
            line: 136,
            column: 101
          },
          end: {
            line: 136,
            column: 104
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        }, {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        }, {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        }],
        line: 162
      },
      "12": {
        loc: {
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        }, {
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        }],
        line: 167
      },
      "13": {
        loc: {
          start: {
            line: 167,
            column: 10
          },
          end: {
            line: 167,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 10
          },
          end: {
            line: 167,
            column: 31
          }
        }, {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 69
          }
        }],
        line: 167
      },
      "14": {
        loc: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 38
          }
        }, {
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 170,
            column: 43
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "72c84c1dd0213be758a846891b5bcfbc651d7bdc"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_xq0uwk3n8 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_xq0uwk3n8();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }













class Radar extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_xq0uwk3n8().f[0]++;
    cov_xq0uwk3n8().s[0]++;
    super(props);

    _defineProperty(this, "_onClick", (cov_xq0uwk3n8().s[3]++, coords => {
      cov_xq0uwk3n8().f[2]++;
      cov_xq0uwk3n8().s[4]++;

      if (this.props.editable) {
        cov_xq0uwk3n8().b[0][0]++;
        const shipIndex = (cov_xq0uwk3n8().s[5]++, this._findShip(coords.x, coords.y));
        cov_xq0uwk3n8().s[6]++;

        if (shipIndex !== -1) {
          cov_xq0uwk3n8().b[1][0]++;
          cov_xq0uwk3n8().s[7]++;

          this._rotateShip(shipIndex);
        } else {
          cov_xq0uwk3n8().b[1][1]++;
        }
      } else {
        cov_xq0uwk3n8().b[0][1]++;
        cov_xq0uwk3n8().s[8]++;
        this.props.onClick(coords);
      }
    }));

    _defineProperty(this, "_shouldDrag", (cov_xq0uwk3n8().s[9]++, () => {
      cov_xq0uwk3n8().f[3]++;
      cov_xq0uwk3n8().s[10]++;
      return this.props.editable;
    }));

    _defineProperty(this, "_onDrop", (cov_xq0uwk3n8().s[11]++, coords => {
      cov_xq0uwk3n8().f[4]++;
      const x = (cov_xq0uwk3n8().s[12]++, Math.round(coords.x));
      const y = (cov_xq0uwk3n8().s[13]++, Math.round(coords.y));
      const originalX = (cov_xq0uwk3n8().s[14]++, coords.originalX);
      const originalY = (cov_xq0uwk3n8().s[15]++, coords.originalY);
      cov_xq0uwk3n8().s[16]++;

      if ((cov_xq0uwk3n8().b[3][0]++, x < 0) || (cov_xq0uwk3n8().b[3][1]++, y < 0) || (cov_xq0uwk3n8().b[3][2]++, x >= 10) || (cov_xq0uwk3n8().b[3][3]++, y >= 10)) {
        cov_xq0uwk3n8().b[2][0]++;
        cov_xq0uwk3n8().s[17]++;
        return;
      } else {
        cov_xq0uwk3n8().b[2][1]++;
      }

      cov_xq0uwk3n8().s[18]++;

      if ((cov_xq0uwk3n8().b[5][0]++, originalX !== x) || (cov_xq0uwk3n8().b[5][1]++, originalY !== y)) {
        cov_xq0uwk3n8().b[4][0]++;
        const shipIndex = (cov_xq0uwk3n8().s[19]++, this._findShip(originalX, originalY));
        cov_xq0uwk3n8().s[20]++;

        this._moveShip(shipIndex, x, y);
      } else {
        cov_xq0uwk3n8().b[4][1]++;
      }
    }));
  }

  render() {
    cov_xq0uwk3n8().f[1]++;
    const result = (cov_xq0uwk3n8().s[1]++, [__jsx(_media_SvgBackground__WEBPACK_IMPORTED_MODULE_7__["default"], {
      onClick: this._onClick,
      key: "background"
    })].concat(this._getShips()).concat(this._getSalvos()));
    cov_xq0uwk3n8().s[2]++;
    return __jsx("div", {
      className: "seabattle-radar"
    }, __jsx(ui__WEBPACK_IMPORTED_MODULE_2__["Grid"], {
      rows: 10,
      cols: 10,
      outline: false,
      onClick: this._onClick
    }, result));
  }

  _findShip(x, y) {
    cov_xq0uwk3n8().f[5]++;
    cov_xq0uwk3n8().s[21]++;
    return this.props.ships.findIndex(ship => {
      cov_xq0uwk3n8().f[6]++;
      cov_xq0uwk3n8().s[22]++;
      return ship.cells.findIndex(c => {
        cov_xq0uwk3n8().f[7]++;
        cov_xq0uwk3n8().s[23]++;
        return (cov_xq0uwk3n8().b[6][0]++, c.x === x) && (cov_xq0uwk3n8().b[6][1]++, c.y === y);
      }) !== -1;
    });
  }

  _moveShip(shipIndex, x, y) {
    cov_xq0uwk3n8().f[8]++;
    const ship = (cov_xq0uwk3n8().s[24]++, this.props.ships[shipIndex]);
    const delta = (cov_xq0uwk3n8().s[25]++, Object(_game__WEBPACK_IMPORTED_MODULE_1__["getCellVector"])(ship.cells[1], ship.cells[0]));
    cov_xq0uwk3n8().s[26]++;

    this._setShip(shipIndex, x, y, delta);
  }

  _rotateShip(shipIndex) {
    cov_xq0uwk3n8().f[9]++;
    const ship = (cov_xq0uwk3n8().s[27]++, this.props.ships[shipIndex]);
    const delta = (cov_xq0uwk3n8().s[28]++, Object(_game__WEBPACK_IMPORTED_MODULE_1__["getCellVector"])(ship.cells[1], ship.cells[0]));
    const temp = (cov_xq0uwk3n8().s[29]++, delta.x);
    cov_xq0uwk3n8().s[30]++;
    delta.x = delta.y;
    cov_xq0uwk3n8().s[31]++;
    delta.y = temp;
    cov_xq0uwk3n8().s[32]++;

    this._setShip(shipIndex, ship.cells[0].x, ship.cells[0].y, delta);
  }

  _setShip(index, x, y, vector) {
    cov_xq0uwk3n8().f[10]++;
    const ship = (cov_xq0uwk3n8().s[33]++, this.props.ships[index]);
    const newCells = (cov_xq0uwk3n8().s[34]++, []);
    cov_xq0uwk3n8().s[35]++;

    for (let i = (cov_xq0uwk3n8().s[36]++, 0); i < ship.cells.length; i++) {
      cov_xq0uwk3n8().s[37]++;
      newCells.push({
        x: x + vector.x * i,
        y: y + vector.y * i
      });
    }

    const newShips = (cov_xq0uwk3n8().s[38]++, [...this.props.ships]);
    cov_xq0uwk3n8().s[39]++;
    newShips[index] = _objectSpread({}, ship, {
      cells: newCells
    });
    cov_xq0uwk3n8().s[40]++;
    this.props.onEdit(newShips);
  }

  _getShipDrawing(size, rotation) {
    cov_xq0uwk3n8().f[11]++;
    // Drawings from https://github.com/studioromeo/battleship-svgs (MIT license)
    // Used SVGR to transform to react components.
    // https://github.com/smooth-code/svgr
    let ship;
    cov_xq0uwk3n8().s[41]++;

    switch (size) {
      case 2:
        cov_xq0uwk3n8().b[7][0]++;
        cov_xq0uwk3n8().s[42]++;
        ship = __jsx(_media_SvgShip2__WEBPACK_IMPORTED_MODULE_3__["default"], null);
        cov_xq0uwk3n8().s[43]++;
        break;

      case 3:
        cov_xq0uwk3n8().b[7][1]++;
        cov_xq0uwk3n8().s[44]++;
        ship = __jsx(_media_SvgShip3__WEBPACK_IMPORTED_MODULE_4__["default"], null);
        cov_xq0uwk3n8().s[45]++;
        break;

      case 4:
        cov_xq0uwk3n8().b[7][2]++;
        cov_xq0uwk3n8().s[46]++;
        ship = __jsx(_media_SvgShip4__WEBPACK_IMPORTED_MODULE_5__["default"], null);
        cov_xq0uwk3n8().s[47]++;
        break;

      case 5:
        cov_xq0uwk3n8().b[7][3]++;
        cov_xq0uwk3n8().s[48]++;
        ship = __jsx(_media_SvgShip5__WEBPACK_IMPORTED_MODULE_6__["default"], null);
        cov_xq0uwk3n8().s[49]++;
        break;
    }

    cov_xq0uwk3n8().s[50]++;

    if (rotation === 'v') {
      cov_xq0uwk3n8().b[8][0]++;
      cov_xq0uwk3n8().s[51]++;
      return __jsx("g", {
        transform: "translate(1 0) rotate(90)"
      }, ship);
    } else {
      cov_xq0uwk3n8().b[8][1]++;
      cov_xq0uwk3n8().s[52]++;
      return ship;
    }
  }

  _getShips() {
    cov_xq0uwk3n8().f[12]++;
    const result = (cov_xq0uwk3n8().s[53]++, []);
    cov_xq0uwk3n8().s[54]++;

    for (const ship of this.props.ships) {
      const cell = (cov_xq0uwk3n8().s[55]++, ship.cells[0]);
      const shipDrawing = (cov_xq0uwk3n8().s[56]++, this._getShipDrawing(ship.cells.length, cell.x === ship.cells[1].x ? (cov_xq0uwk3n8().b[9][0]++, 'v') : (cov_xq0uwk3n8().b[9][1]++, 'h')));
      cov_xq0uwk3n8().s[57]++;
      result.push(__jsx(ui__WEBPACK_IMPORTED_MODULE_2__["Token"], {
        x: cell.x,
        y: cell.y,
        draggable: this.props.editable,
        shouldDrag: this._shouldDrag,
        onDrop: this._onDrop,
        key: ship.id
      }, shipDrawing));
    }

    cov_xq0uwk3n8().s[58]++;
    return result;
  }

  _getSalvos() {
    cov_xq0uwk3n8().f[13]++;
    const result = (cov_xq0uwk3n8().s[59]++, []);
    cov_xq0uwk3n8().s[60]++;

    if (!this.props.salvos) {
      cov_xq0uwk3n8().b[10][0]++;
      cov_xq0uwk3n8().s[61]++;
      return result;
    } else {
      cov_xq0uwk3n8().b[10][1]++;
    }

    let i = (cov_xq0uwk3n8().s[62]++, 0);
    cov_xq0uwk3n8().s[63]++;

    for (const salvo of this.props.salvos) {
      let drawing;
      cov_xq0uwk3n8().s[64]++;

      if (salvo.hit) {
        cov_xq0uwk3n8().b[11][0]++;
        cov_xq0uwk3n8().s[65]++;
        drawing = __jsx(_media_SvgHit__WEBPACK_IMPORTED_MODULE_8__["default"], null);
      } else {
        cov_xq0uwk3n8().b[11][1]++;
        cov_xq0uwk3n8().s[66]++;
        drawing = __jsx(_media_SvgMiss__WEBPACK_IMPORTED_MODULE_9__["default"], null);
      }

      cov_xq0uwk3n8().s[67]++;

      if ((cov_xq0uwk3n8().b[13][0]++, this.props.blinkSalvo) && (cov_xq0uwk3n8().b[13][1]++, i === this.props.salvos.length - 1)) {
        cov_xq0uwk3n8().b[12][0]++;
        cov_xq0uwk3n8().s[68]++;
        drawing = __jsx(components_App_Blink__WEBPACK_IMPORTED_MODULE_10__["Blink"], null, drawing);
      } else {
        cov_xq0uwk3n8().b[12][1]++;
      }

      const player = (cov_xq0uwk3n8().s[69]++, (cov_xq0uwk3n8().b[14][0]++, this.props.player) || (cov_xq0uwk3n8().b[14][1]++, 0));
      cov_xq0uwk3n8().s[70]++;
      result.push(__jsx(ui__WEBPACK_IMPORTED_MODULE_2__["Token"], {
        x: salvo.cell.x,
        y: salvo.cell.y,
        draggable: false,
        key: `salvo_${i}_${player}`
      }, drawing));
      cov_xq0uwk3n8().s[71]++;
      i++;
    }

    cov_xq0uwk3n8().s[72]++;
    return result;
  }

}

/***/ }),

/***/ "./src/games/seabattle/ShipsPlacement.tsx":
/*!************************************************!*\
  !*** ./src/games/seabattle/ShipsPlacement.tsx ***!
  \************************************************/
/*! exports provided: ShipsPlacement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShipsPlacement", function() { return ShipsPlacement; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/core/Button */ "@material-ui/core/Button");
/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game */ "./src/games/seabattle/game.ts");
/* harmony import */ var _Radar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Radar */ "./src/games/seabattle/Radar.tsx");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_21j3sakrae() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/ShipsPlacement.tsx";
  var hash = "696edd0af67f48ef9e3aefc48a6ac09f9e10cc8d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/ShipsPlacement.tsx",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "1": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 17
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "3": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "4": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "6": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "8": {
        start: {
          line: 52,
          column: 11
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "9": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "10": {
        start: {
          line: 58,
          column: 9
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "11": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        loc: {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 52,
            column: 12
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 10
          }
        },
        loc: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "696edd0af67f48ef9e3aefc48a6ac09f9e10cc8d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_21j3sakrae = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_21j3sakrae();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







class ShipsPlacement extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_21j3sakrae().f[0]++;
    cov_21j3sakrae().s[1]++;
    super(props);

    _defineProperty(this, "onEdit", (cov_21j3sakrae().s[8]++, ships => {
      cov_21j3sakrae().f[2]++;
      cov_21j3sakrae().s[9]++;
      this.setState({
        ships
      });
    }));

    _defineProperty(this, "done", (cov_21j3sakrae().s[10]++, () => {
      cov_21j3sakrae().f[3]++;
      cov_21j3sakrae().s[11]++;
      this.props.setShips(this.state.ships);
    }));

    cov_21j3sakrae().s[2]++;
    this.state = {
      ships: Object(_game__WEBPACK_IMPORTED_MODULE_3__["generateRandomShips"])(Number(props.playerID))
    };
  }

  render() {
    cov_21j3sakrae().f[1]++;
    let message = (cov_21j3sakrae().s[3]++, 'Drag & drop, click to rotate');
    const validShips = (cov_21j3sakrae().s[4]++, Object(_game__WEBPACK_IMPORTED_MODULE_3__["validateShips"])(this.state.ships).valid);
    cov_21j3sakrae().s[5]++;

    if (!validShips) {
      cov_21j3sakrae().b[0][0]++;
      cov_21j3sakrae().s[6]++;
      message = 'INVALID POSITIONING';
    } else {
      cov_21j3sakrae().b[0][1]++;
    }

    cov_21j3sakrae().s[7]++;
    return __jsx("div", null, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default.a, {
      variant: "h5",
      style: {
        textAlign: 'center',
        color: 'white',
        marginBottom: '16px'
      }
    }, message), __jsx(_Radar__WEBPACK_IMPORTED_MODULE_4__["Radar"], {
      ships: this.state.ships,
      editable: true,
      onEdit: this.onEdit
    }), __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2___default.a, {
      style: {
        float: 'right',
        marginTop: '8px'
      },
      variant: "contained",
      color: "primary",
      onClick: this.done,
      disabled: !validShips
    }, "Done"));
  }

}

_defineProperty(ShipsPlacement, "propTypes", (cov_21j3sakrae().s[0]++, {
  playerID: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  setShips: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any
}));

/***/ }),

/***/ "./src/games/seabattle/board.tsx":
/*!***************************************!*\
  !*** ./src/games/seabattle/board.tsx ***!
  \***************************************/
/*! exports provided: Board */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Board", function() { return Board; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ShipsPlacement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ShipsPlacement */ "./src/games/seabattle/ShipsPlacement.tsx");
/* harmony import */ var components_App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! components/App/Game/GameLayout */ "./src/components/App/Game/GameLayout.tsx");
/* harmony import */ var _Battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Battle */ "./src/games/seabattle/Battle.tsx");
/* harmony import */ var _Radar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Radar */ "./src/games/seabattle/Radar.tsx");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/core/Typography */ "@material-ui/core/Typography");
/* harmony import */ var _material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var games_common_gameMode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! games/common/gameMode */ "./src/games/common/gameMode.ts");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2l65tzy772() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/board.tsx";
  var hash = "f455d8a32b860412cc36e8fec6dd7cee81d912c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/board.tsx",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "1": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "2": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "3": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "4": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 89
        }
      },
      "5": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "6": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "7": {
        start: {
          line: 42,
          column: 31
        },
        end: {
          line: 42,
          column: 101
        }
      },
      "8": {
        start: {
          line: 42,
          column: 77
        },
        end: {
          line: 42,
          column: 100
        }
      },
      "9": {
        start: {
          line: 43,
          column: 29
        },
        end: {
          line: 43,
          column: 98
        }
      },
      "10": {
        start: {
          line: 43,
          column: 70
        },
        end: {
          line: 43,
          column: 97
        }
      },
      "11": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 50,
          column: 14
        }
      },
      "12": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 113
        }
      },
      "13": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "14": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 90
        }
      },
      "15": {
        start: {
          line: 62,
          column: 11
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "16": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 67,
          column: 8
        }
      },
      "17": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 79,
          column: 8
        }
      },
      "18": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "19": {
        start: {
          line: 88,
          column: 18
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "20": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "21": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 43
        }
      },
      "22": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "23": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 46
        }
      },
      "24": {
        start: {
          line: 98,
          column: 18
        },
        end: {
          line: 100,
          column: 3
        }
      },
      "25": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "26": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 111,
          column: 3
        }
      },
      "27": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 103,
          column: 45
        }
      },
      "28": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 38
        }
      },
      "29": {
        start: {
          line: 105,
          column: 34
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "30": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 28
        }
      },
      "31": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "32": {
        start: {
          line: 113,
          column: 14
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "33": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        loc: {
          start: {
            line: 29,
            column: 54
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 58
          },
          end: {
            line: 42,
            column: 59
          }
        },
        loc: {
          start: {
            line: 42,
            column: 77
          },
          end: {
            line: 42,
            column: 100
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 55
          },
          end: {
            line: 43,
            column: 56
          }
        },
        loc: {
          start: {
            line: 43,
            column: 70
          },
          end: {
            line: 43,
            column: 97
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 19
          }
        },
        loc: {
          start: {
            line: 88,
            column: 45
          },
          end: {
            line: 92,
            column: 3
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 19
          }
        },
        loc: {
          start: {
            line: 89,
            column: 32
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 22
          }
        },
        loc: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 18
          },
          end: {
            line: 98,
            column: 19
          }
        },
        loc: {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 98
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 102,
            column: 26
          }
        },
        loc: {
          start: {
            line: 102,
            column: 31
          },
          end: {
            line: 111,
            column: 3
          }
        },
        line: 102
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 113,
            column: 14
          },
          end: {
            line: 113,
            column: 15
          }
        },
        loc: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 115,
            column: 3
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 39,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 67
          },
          end: {
            line: 39,
            column: 76
          }
        }, {
          start: {
            line: 39,
            column: 79
          },
          end: {
            line: 39,
            column: 89
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 41
          },
          end: {
            line: 41,
            column: 42
          }
        }, {
          start: {
            line: 41,
            column: 45
          },
          end: {
            line: 41,
            column: 46
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 59,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 56,
            column: 27
          }
        }, {
          start: {
            line: 57,
            column: 6
          },
          end: {
            line: 57,
            column: 34
          }
        }, {
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 58,
            column: 32
          }
        }, {
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 59,
            column: 66
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 38
          }
        }, {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 50
          }
        }],
        line: 107
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f455d8a32b860412cc36e8fec6dd7cee81d912c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2l65tzy772 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2l65tzy772();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








class Board extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props, state) {
    cov_2l65tzy772().f[0]++;
    cov_2l65tzy772().s[0]++;
    super(props, state);

    _defineProperty(this, "_setSoundPref", (cov_2l65tzy772().s[19]++, soundEnabled => {
      cov_2l65tzy772().f[4]++;
      cov_2l65tzy772().s[20]++;
      this.setState(oldState => {
        cov_2l65tzy772().f[5]++;
        cov_2l65tzy772().s[21]++;
        return _objectSpread({}, oldState, {
          soundEnabled
        });
      });
    }));

    _defineProperty(this, "_toggleSoundPref", (cov_2l65tzy772().s[22]++, () => {
      cov_2l65tzy772().f[6]++;
      cov_2l65tzy772().s[23]++;

      this._setSoundPref(!this._getSoundPref());
    }));

    _defineProperty(this, "_getSoundPref", (cov_2l65tzy772().s[24]++, () => {
      cov_2l65tzy772().f[7]++;
      cov_2l65tzy772().s[25]++;
      return this.state.soundEnabled;
    }));

    _defineProperty(this, "_getOptionsMenuItems", (cov_2l65tzy772().s[26]++, () => {
      cov_2l65tzy772().f[8]++;
      const curSoundPref = (cov_2l65tzy772().s[27]++, this._getSoundPref());
      const newSoundPref = (cov_2l65tzy772().s[28]++, !curSoundPref);
      const option = (cov_2l65tzy772().s[29]++, {
        onClick: this._toggleSoundPref,
        text: `${newSoundPref ? (cov_2l65tzy772().b[6][0]++, 'Enable') : (cov_2l65tzy772().b[6][1]++, 'Disable')} sound`
      });
      const options = (cov_2l65tzy772().s[30]++, [option]);
      cov_2l65tzy772().s[31]++;
      return options;
    }));

    _defineProperty(this, "_setShips", (cov_2l65tzy772().s[32]++, ships => {
      cov_2l65tzy772().f[9]++;
      cov_2l65tzy772().s[33]++;
      this.props.moves.setShips(ships);
    }));

    cov_2l65tzy772().s[1]++;
    this.state = {
      soundEnabled: true
    };
  }

  render() {
    cov_2l65tzy772().f[1]++;
    const ctx = (cov_2l65tzy772().s[2]++, this.props.ctx);
    cov_2l65tzy772().s[3]++;

    if (ctx.gameover) {
      cov_2l65tzy772().b[0][0]++;
      const result = (cov_2l65tzy772().s[4]++, ctx.gameover.winner === this.props.playerID ? (cov_2l65tzy772().b[1][0]++, 'you won') : (cov_2l65tzy772().b[1][1]++, 'you lost'));
      const player = (cov_2l65tzy772().s[5]++, Number(this.props.playerID));
      const otherPlayer = (cov_2l65tzy772().s[6]++, player === 0 ? (cov_2l65tzy772().b[2][0]++, 1) : (cov_2l65tzy772().b[2][1]++, 0));
      const salvos = (cov_2l65tzy772().s[7]++, this.props.G.salvos.filter(salvo => {
        cov_2l65tzy772().f[2]++;
        cov_2l65tzy772().s[8]++;
        return salvo.player === player;
      }));
      const ships = (cov_2l65tzy772().s[9]++, this.props.G.ships.filter(ship => {
        cov_2l65tzy772().f[3]++;
        cov_2l65tzy772().s[10]++;
        return ship.player === otherPlayer;
      }));
      const extraCardContent = (cov_2l65tzy772().s[11]++, __jsx("div", null, __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default.a, {
        variant: "h6",
        align: "center",
        style: {
          marginTop: '0px',
          marginBottom: '16px'
        }
      }, "Your Opponent's Board"), __jsx(_Radar__WEBPACK_IMPORTED_MODULE_4__["Radar"], {
        player: player,
        ships: ships,
        salvos: salvos,
        editable: false
      })));
      cov_2l65tzy772().s[12]++;
      return __jsx(components_App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_2__["GameLayout"], {
        gameOver: result,
        extraCardContent: extraCardContent,
        gameArgs: this.props.gameArgs
      });
    } else {
      cov_2l65tzy772().b[0][1]++;
    }

    let child;
    cov_2l65tzy772().s[13]++;

    if ((cov_2l65tzy772().b[4][0]++, ctx.phase === 'setup') && (cov_2l65tzy772().b[4][1]++, this.props.playerID !== null) && (cov_2l65tzy772().b[4][2]++, ctx.activePlayers !== null) && (cov_2l65tzy772().b[4][3]++, Object.keys(ctx.activePlayers).includes(this.props.playerID))) {
      cov_2l65tzy772().b[3][0]++;
      cov_2l65tzy772().s[14]++;
      child = __jsx(_ShipsPlacement__WEBPACK_IMPORTED_MODULE_1__["ShipsPlacement"], {
        playerID: this.props.playerID,
        setShips: this._setShips
      });
    } else {
      cov_2l65tzy772().b[3][1]++;
      cov_2l65tzy772().s[15]++;

      if (ctx.phase === 'setup') {
        cov_2l65tzy772().b[5][0]++;
        cov_2l65tzy772().s[16]++;
        child = __jsx(_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default.a, {
          variant: "h4",
          style: {
            color: 'white'
          }
        }, "Waiting for opponent...");
      } else {
        cov_2l65tzy772().b[5][1]++;
        cov_2l65tzy772().s[17]++;
        child = __jsx(_Battle__WEBPACK_IMPORTED_MODULE_3__["Battle"], {
          ctx: ctx,
          G: this.props.G,
          moves: this.props.moves,
          playerID: this.props.playerID,
          currentPlayer: ctx.currentPlayer,
          isAIGame: Object(games_common_gameMode__WEBPACK_IMPORTED_MODULE_6__["isAIGame"])(this.props.gameArgs),
          getSoundPref: this._getSoundPref
        });
      }
    }

    cov_2l65tzy772().s[18]++;
    return __jsx(components_App_Game_GameLayout__WEBPACK_IMPORTED_MODULE_2__["GameLayout"], {
      optionsMenuItems: this._getOptionsMenuItems,
      gameArgs: this.props.gameArgs
    }, child);
  }

}

/***/ }),

/***/ "./src/games/seabattle/config.ts":
/*!***************************************!*\
  !*** ./src/games/seabattle/config.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ "./src/games/seabattle/game.ts");
/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./board */ "./src/games/seabattle/board.tsx");
function cov_1x64odt6tk() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/config.ts";
  var hash = "0b03affb611697f1beeb41839f44c6738a88db93";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/config.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 9,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b03affb611697f1beeb41839f44c6738a88db93"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1x64odt6tk = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1x64odt6tk();


const config = (cov_1x64odt6tk().s[0]++, {
  bgioGame: _game__WEBPACK_IMPORTED_MODULE_0__["SeabattleGame"],
  bgioBoard: _board__WEBPACK_IMPORTED_MODULE_1__["Board"],
  enhancers: []
});
/* harmony default export */ __webpack_exports__["default"] = (config);

/***/ }),

/***/ "./src/games/seabattle/game.ts":
/*!*************************************!*\
  !*** ./src/games/seabattle/game.ts ***!
  \*************************************/
/*! exports provided: playerView, SeabattleGame, generateRandomShips, validateShips, getCellVector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "playerView", function() { return playerView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeabattleGame", function() { return SeabattleGame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateRandomShips", function() { return generateRandomShips; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateShips", function() { return validateShips; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCellVector", function() { return getCellVector; });
/* harmony import */ var boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! boardgame.io/core */ "boardgame.io/core");
/* harmony import */ var boardgame_io_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shortid */ "shortid");
/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_1__);
function cov_2rmfy6gvhj() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/game.ts";
  var hash = "106f2512b460b9a2154489996c028fb2dd27e1ae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/game.ts",
    statementMap: {
      "0": {
        start: {
          line: 32,
          column: 36
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "1": {
        start: {
          line: 33,
          column: 54
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "2": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "3": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "4": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 86
        }
      },
      "5": {
        start: {
          line: 42,
          column: 50
        },
        end: {
          line: 42,
          column: 85
        }
      },
      "6": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 46,
          column: 4
        }
      },
      "7": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "8": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 49
        }
      },
      "9": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "10": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "11": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "12": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "13": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 63
        }
      },
      "14": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 112
        }
      },
      "15": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 98
        }
      },
      "16": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "17": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 20
        }
      },
      "18": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "19": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 83
        }
      },
      "20": {
        start: {
          line: 72,
          column: 15
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "21": {
        start: {
          line: 74,
          column: 19
        },
        end: {
          line: 74,
          column: 31
        }
      },
      "22": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 77,
          column: 3
        }
      },
      "23": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 65
        }
      },
      "24": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 82,
          column: 4
        }
      },
      "25": {
        start: {
          line: 85,
          column: 40
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "26": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "27": {
        start: {
          line: 101,
          column: 10
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "28": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "29": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "30": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "31": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "32": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 118,
          column: 7
        }
      },
      "33": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "34": {
        start: {
          line: 131,
          column: 2
        },
        end: {
          line: 140,
          column: 49
        }
      },
      "35": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 16
        }
      },
      "36": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "37": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 55
        }
      },
      "38": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "39": {
        start: {
          line: 135,
          column: 19
        },
        end: {
          line: 135,
          column: 20
        }
      },
      "40": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "41": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "42": {
        start: {
          line: 141,
          column: 2
        },
        end: {
          line: 141,
          column: 16
        }
      },
      "43": {
        start: {
          line: 146,
          column: 22
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "44": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 155,
          column: 3
        }
      },
      "45": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 60
        }
      },
      "46": {
        start: {
          line: 156,
          column: 2
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "47": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "48": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 24
        }
      },
      "49": {
        start: {
          line: 161,
          column: 2
        },
        end: {
          line: 161,
          column: 25
        }
      },
      "50": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "51": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "52": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 19
        }
      },
      "53": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 171,
          column: 14
        }
      },
      "54": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 66
        }
      },
      "55": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "56": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "57": {
        start: {
          line: 178,
          column: 2
        },
        end: {
          line: 186,
          column: 3
        }
      },
      "58": {
        start: {
          line: 178,
          column: 15
        },
        end: {
          line: 178,
          column: 16
        }
      },
      "59": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "60": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 50
        }
      },
      "61": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 50
        }
      },
      "62": {
        start: {
          line: 187,
          column: 2
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "63": {
        start: {
          line: 191,
          column: 2
        },
        end: {
          line: 191,
          column: 43
        }
      },
      "64": {
        start: {
          line: 195,
          column: 2
        },
        end: {
          line: 197,
          column: 4
        }
      },
      "65": {
        start: {
          line: 196,
          column: 14
        },
        end: {
          line: 196,
          column: 108
        }
      },
      "66": {
        start: {
          line: 196,
          column: 42
        },
        end: {
          line: 196,
          column: 74
        }
      },
      "67": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "68": {
        start: {
          line: 201,
          column: 30
        },
        end: {
          line: 201,
          column: 50
        }
      },
      "69": {
        start: {
          line: 210,
          column: 22
        },
        end: {
          line: 210,
          column: 67
        }
      },
      "70": {
        start: {
          line: 210,
          column: 49
        },
        end: {
          line: 210,
          column: 66
        }
      },
      "71": {
        start: {
          line: 211,
          column: 43
        },
        end: {
          line: 211,
          column: 67
        }
      },
      "72": {
        start: {
          line: 212,
          column: 2
        },
        end: {
          line: 217,
          column: 3
        }
      },
      "73": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "74": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 71
        }
      },
      "75": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 20
        }
      },
      "76": {
        start: {
          line: 218,
          column: 2
        },
        end: {
          line: 222,
          column: 3
        }
      },
      "77": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "78": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 61
        }
      },
      "79": {
        start: {
          line: 223,
          column: 2
        },
        end: {
          line: 223,
          column: 25
        }
      },
      "80": {
        start: {
          line: 227,
          column: 17
        },
        end: {
          line: 227,
          column: 56
        }
      },
      "81": {
        start: {
          line: 227,
          column: 44
        },
        end: {
          line: 227,
          column: 55
        }
      },
      "82": {
        start: {
          line: 228,
          column: 2
        },
        end: {
          line: 232,
          column: 3
        }
      },
      "83": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "84": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 92
        }
      },
      "85": {
        start: {
          line: 233,
          column: 2
        },
        end: {
          line: 233,
          column: 25
        }
      },
      "86": {
        start: {
          line: 237,
          column: 2
        },
        end: {
          line: 259,
          column: 3
        }
      },
      "87": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "88": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "89": {
        start: {
          line: 241,
          column: 27
        },
        end: {
          line: 241,
          column: 40
        }
      },
      "90": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 69
        }
      },
      "91": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "92": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 67
        }
      },
      "93": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "94": {
        start: {
          line: 251,
          column: 17
        },
        end: {
          line: 251,
          column: 18
        }
      },
      "95": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 252,
          column: 32
        }
      },
      "96": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 54
        }
      },
      "97": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 256,
          column: 7
        }
      },
      "98": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "99": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 23
        }
      },
      "100": {
        start: {
          line: 260,
          column: 2
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "101": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 264,
          column: 40
        }
      },
      "102": {
        start: {
          line: 268,
          column: 45
        },
        end: {
          line: 268,
          column: 47
        }
      },
      "103": {
        start: {
          line: 269,
          column: 2
        },
        end: {
          line: 274,
          column: 3
        }
      },
      "104": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "105": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 66
        }
      },
      "106": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 28
        }
      },
      "107": {
        start: {
          line: 275,
          column: 2
        },
        end: {
          line: 275,
          column: 25
        }
      },
      "108": {
        start: {
          line: 279,
          column: 2
        },
        end: {
          line: 285,
          column: 3
        }
      },
      "109": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "110": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 283,
          column: 7
        }
      },
      "111": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "112": {
        start: {
          line: 286,
          column: 2
        },
        end: {
          line: 286,
          column: 25
        }
      },
      "113": {
        start: {
          line: 290,
          column: 63
        },
        end: {
          line: 290,
          column: 65
        }
      },
      "114": {
        start: {
          line: 291,
          column: 2
        },
        end: {
          line: 301,
          column: 3
        }
      },
      "115": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "116": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 295,
          column: 7
        }
      },
      "117": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 31
        }
      },
      "118": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 298,
          column: 7
        }
      },
      "119": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 61
        }
      },
      "120": {
        start: {
          line: 299,
          column: 6
        },
        end: {
          line: 299,
          column: 39
        }
      },
      "121": {
        start: {
          line: 302,
          column: 2
        },
        end: {
          line: 302,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 27
          }
        },
        loc: {
          start: {
            line: 40,
            column: 96
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 40
          },
          end: {
            line: 42,
            column: 41
          }
        },
        loc: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 85
          }
        },
        line: 42
      },
      "2": {
        name: "setShips",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 17
          }
        },
        loc: {
          start: {
            line: 49,
            column: 69
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 49
      },
      "3": {
        name: "salvo",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 14
          }
        },
        loc: {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 59
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        loc: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 98
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 88,
            column: 10
          }
        },
        loc: {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 91,
            column: 3
          }
        },
        line: 88
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        },
        loc: {
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 10
          }
        },
        loc: {
          start: {
            line: 111,
            column: 21
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 111
      },
      "8": {
        name: "generateRandomShips",
        decl: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 35
          }
        },
        loc: {
          start: {
            line: 128,
            column: 61
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 128
      },
      "9": {
        name: "validateShips",
        decl: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 29
          }
        },
        loc: {
          start: {
            line: 145,
            column: 87
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 145
      },
      "10": {
        name: "checkAllShipsSunk",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 26
          }
        },
        loc: {
          start: {
            line: 165,
            column: 68
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 165
      },
      "11": {
        name: "randomlyGetShip",
        decl: {
          start: {
            line: 174,
            column: 9
          },
          end: {
            line: 174,
            column: 24
          }
        },
        loc: {
          start: {
            line: 174,
            column: 78
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 174
      },
      "12": {
        name: "getRandomInt",
        decl: {
          start: {
            line: 190,
            column: 9
          },
          end: {
            line: 190,
            column: 21
          }
        },
        loc: {
          start: {
            line: 190,
            column: 43
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 190
      },
      "13": {
        name: "findShipWithCell",
        decl: {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 194,
            column: 25
          }
        },
        loc: {
          start: {
            line: 194,
            column: 79
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 194
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 14
          },
          end: {
            line: 196,
            column: 108
          }
        },
        line: 196
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 196,
            column: 35
          },
          end: {
            line: 196,
            column: 36
          }
        },
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 74
          }
        },
        line: 196
      },
      "16": {
        name: "countShipHits",
        decl: {
          start: {
            line: 200,
            column: 9
          },
          end: {
            line: 200,
            column: 22
          }
        },
        loc: {
          start: {
            line: 200,
            column: 65
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 200
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 201,
            column: 24
          }
        },
        loc: {
          start: {
            line: 201,
            column: 30
          },
          end: {
            line: 201,
            column: 50
          }
        },
        line: 201
      },
      "18": {
        name: "validateShipsCount",
        decl: {
          start: {
            line: 209,
            column: 9
          },
          end: {
            line: 209,
            column: 27
          }
        },
        loc: {
          start: {
            line: 209,
            column: 68
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 209
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 33
          }
        },
        loc: {
          start: {
            line: 210,
            column: 49
          },
          end: {
            line: 210,
            column: 66
          }
        },
        line: 210
      },
      "20": {
        name: "validateShipsOwnership",
        decl: {
          start: {
            line: 226,
            column: 9
          },
          end: {
            line: 226,
            column: 31
          }
        },
        loc: {
          start: {
            line: 226,
            column: 88
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 226
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 227,
            column: 27
          },
          end: {
            line: 227,
            column: 28
          }
        },
        loc: {
          start: {
            line: 227,
            column: 44
          },
          end: {
            line: 227,
            column: 55
          }
        },
        line: 227
      },
      "22": {
        name: "validateShipsContinuity",
        decl: {
          start: {
            line: 236,
            column: 9
          },
          end: {
            line: 236,
            column: 32
          }
        },
        loc: {
          start: {
            line: 236,
            column: 73
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 236
      },
      "23": {
        name: "getCellVector",
        decl: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 263,
            column: 29
          }
        },
        loc: {
          start: {
            line: 263,
            column: 57
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 263
      },
      "24": {
        name: "validateShipsHaveUniqueIDs",
        decl: {
          start: {
            line: 267,
            column: 9
          },
          end: {
            line: 267,
            column: 35
          }
        },
        loc: {
          start: {
            line: 267,
            column: 76
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 267
      },
      "25": {
        name: "validateShipsNotOutOfBounds",
        decl: {
          start: {
            line: 278,
            column: 9
          },
          end: {
            line: 278,
            column: 36
          }
        },
        loc: {
          start: {
            line: 278,
            column: 77
          },
          end: {
            line: 287,
            column: 1
          }
        },
        line: 278
      },
      "26": {
        name: "validateShipsNotOverlapping",
        decl: {
          start: {
            line: 289,
            column: 9
          },
          end: {
            line: 289,
            column: 36
          }
        },
        loc: {
          start: {
            line: 289,
            column: 77
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 289
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 72
          }
        }, {
          start: {
            line: 42,
            column: 76
          },
          end: {
            line: 42,
            column: 85
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        }, {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 54
          }
        }, {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 64,
            column: 76
          }
        }, {
          start: {
            line: 64,
            column: 80
          },
          end: {
            line: 64,
            column: 98
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }, {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        }, {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        }, {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        }],
        line: 75
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        }, {
          start: {
            line: 101,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 115,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 115,
            column: 7
          }
        }, {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 115,
            column: 7
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 118,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 118,
            column: 7
          }
        }, {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 118,
            column: 7
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 155,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 155,
            column: 3
          }
        }, {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 155,
            column: 3
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }],
        line: 157
      },
      "12": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }],
        line: 167
      },
      "13": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 30
          }
        }, {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 167,
            column: 44
          }
        }],
        line: 167
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 44
          },
          end: {
            line: 176,
            column: 47
          }
        }, {
          start: {
            line: 176,
            column: 50
          },
          end: {
            line: 176,
            column: 53
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 196,
            column: 14
          },
          end: {
            line: 196,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 14
          },
          end: {
            line: 196,
            column: 82
          }
        }, {
          start: {
            line: 196,
            column: 86
          },
          end: {
            line: 196,
            column: 108
          }
        }],
        line: 196
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 56
          }
        }, {
          start: {
            line: 196,
            column: 60
          },
          end: {
            line: 196,
            column: 74
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }, {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }],
        line: 219
      },
      "20": {
        loc: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }],
        line: 229
      },
      "21": {
        loc: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }],
        line: 238
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 9
          },
          end: {
            line: 245,
            column: 33
          }
        }, {
          start: {
            line: 245,
            column: 37
          },
          end: {
            line: 245,
            column: 61
          }
        }, {
          start: {
            line: 246,
            column: 9
          },
          end: {
            line: 246,
            column: 33
          }
        }, {
          start: {
            line: 246,
            column: 37
          },
          end: {
            line: 246,
            column: 61
          }
        }],
        line: 245
      },
      "24": {
        loc: {
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        }, {
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        }],
        line: 254
      },
      "25": {
        loc: {
          start: {
            line: 254,
            column: 10
          },
          end: {
            line: 254,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 10
          },
          end: {
            line: 254,
            column: 34
          }
        }, {
          start: {
            line: 254,
            column: 38
          },
          end: {
            line: 254,
            column: 62
          }
        }],
        line: 254
      },
      "26": {
        loc: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }],
        line: 270
      },
      "27": {
        loc: {
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 283,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 283,
            column: 7
          }
        }, {
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 283,
            column: 7
          }
        }],
        line: 281
      },
      "28": {
        loc: {
          start: {
            line: 281,
            column: 10
          },
          end: {
            line: 281,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 10
          },
          end: {
            line: 281,
            column: 20
          }
        }, {
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 281,
            column: 34
          }
        }, {
          start: {
            line: 281,
            column: 38
          },
          end: {
            line: 281,
            column: 48
          }
        }, {
          start: {
            line: 281,
            column: 52
          },
          end: {
            line: 281,
            column: 62
          }
        }],
        line: 281
      },
      "29": {
        loc: {
          start: {
            line: 293,
            column: 6
          },
          end: {
            line: 295,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 6
          },
          end: {
            line: 295,
            column: 7
          }
        }, {
          start: {
            line: 293,
            column: 6
          },
          end: {
            line: 295,
            column: 7
          }
        }],
        line: 293
      },
      "30": {
        loc: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        }, {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        }],
        line: 296
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "106f2512b460b9a2154489996c028fb2dd27e1ae"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2rmfy6gvhj = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2rmfy6gvhj();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



const VALID_SHIPS_SIZES = (cov_2rmfy6gvhj().s[0]++, [5, 4, 3, 2]);
const VALID_SHIPS_COUNT = (cov_2rmfy6gvhj().s[1]++, {
  5: 1,
  4: 1,
  3: 2,
  2: 1
});
cov_2rmfy6gvhj().s[2]++;
const playerView = (G, ctx, playerID) => {
  cov_2rmfy6gvhj().f[0]++;
  const player = (cov_2rmfy6gvhj().s[3]++, parseInt(playerID, 10));
  const ships = (cov_2rmfy6gvhj().s[4]++, G.ships.filter(ship => {
    cov_2rmfy6gvhj().f[1]++;
    cov_2rmfy6gvhj().s[5]++;
    return (cov_2rmfy6gvhj().b[0][0]++, ship.player === player) || (cov_2rmfy6gvhj().b[0][1]++, ship.sunk);
  }));
  cov_2rmfy6gvhj().s[6]++;
  return _objectSpread({}, G, {
    ships
  });
};

function setShips(G, ctx, ships) {
  cov_2rmfy6gvhj().f[2]++;
  const player = (cov_2rmfy6gvhj().s[7]++, parseInt(ctx.playerID, 10));
  const validation = (cov_2rmfy6gvhj().s[8]++, validateShips(ships, player));
  cov_2rmfy6gvhj().s[9]++;

  if (!validation.valid) {
    cov_2rmfy6gvhj().b[1][0]++;
    cov_2rmfy6gvhj().s[10]++;
    throw new Error(validation.error);
  } else {
    cov_2rmfy6gvhj().b[1][1]++;
  }

  cov_2rmfy6gvhj().s[11]++;
  return _objectSpread({}, G, {
    ships: [...G.ships, ...ships]
  });
}

function salvo(G, ctx, x, y) {
  cov_2rmfy6gvhj().f[3]++;
  const player = (cov_2rmfy6gvhj().s[12]++, parseInt(ctx.playerID, 10));
  const shipIndex = (cov_2rmfy6gvhj().s[13]++, findShipWithCell(G.ships, {
    x,
    y
  }, player)); // Do not allow the same cells to be shot twice

  const uniqueMove = (cov_2rmfy6gvhj().s[14]++, G.salvos.filter(salvo => {
    cov_2rmfy6gvhj().f[4]++;
    cov_2rmfy6gvhj().s[15]++;
    return (cov_2rmfy6gvhj().b[2][0]++, salvo.player === player) && (cov_2rmfy6gvhj().b[2][1]++, salvo.cell.x === x) && (cov_2rmfy6gvhj().b[2][2]++, salvo.cell.y === y);
  }).length === 0);
  cov_2rmfy6gvhj().s[16]++;

  if (!uniqueMove) {
    cov_2rmfy6gvhj().b[3][0]++;
    cov_2rmfy6gvhj().s[17]++;
    return _objectSpread({}, G);
  } else {
    cov_2rmfy6gvhj().b[3][1]++;
  }

  cov_2rmfy6gvhj().s[18]++;

  if (shipIndex === -1) {
    cov_2rmfy6gvhj().b[4][0]++;
    cov_2rmfy6gvhj().s[19]++;
    // Miss
    return _objectSpread({}, G, {
      salvos: [...G.salvos, {
        player,
        hit: false,
        cell: {
          x,
          y
        }
      }]
    });
  } else {
    cov_2rmfy6gvhj().b[4][1]++;
  }

  const ship = (cov_2rmfy6gvhj().s[20]++, G.ships[shipIndex]); // Hit

  const newShips = (cov_2rmfy6gvhj().s[21]++, [...G.ships]);
  cov_2rmfy6gvhj().s[22]++;

  if (countShipHits(G.salvos, ship.id) + 1 === ship.cells.length) {
    cov_2rmfy6gvhj().b[5][0]++;
    cov_2rmfy6gvhj().s[23]++;
    newShips[shipIndex] = _objectSpread({}, newShips[shipIndex], {
      sunk: true
    });
  } else {
    cov_2rmfy6gvhj().b[5][1]++;
  }

  cov_2rmfy6gvhj().s[24]++;
  return _objectSpread({}, G, {
    ships: newShips,
    salvos: [...G.salvos, {
      player,
      hit: true,
      cell: {
        x,
        y
      },
      hitShip: ship.id
    }]
  });
}

const SeabattleGame = (cov_2rmfy6gvhj().s[25]++, {
  name: 'seabattle',
  setup: () => {
    cov_2rmfy6gvhj().f[5]++;
    cov_2rmfy6gvhj().s[26]++;
    return {
      ships: [],
      salvos: []
    };
  },
  phases: {
    setup: {
      moves: {
        setShips
      },
      next: 'play',
      start: true,
      turn: {
        activePlayers: boardgame_io_core__WEBPACK_IMPORTED_MODULE_0__["ActivePlayers"].ALL_ONCE,
        onMove: (_, ctx) => {
          cov_2rmfy6gvhj().f[6]++;
          cov_2rmfy6gvhj().s[27]++;

          if (ctx.activePlayers === null) {
            cov_2rmfy6gvhj().b[6][0]++;
            cov_2rmfy6gvhj().s[28]++;
            ctx.events.endPhase();
          } else {
            cov_2rmfy6gvhj().b[6][1]++;
          }
        }
      }
    },
    play: {
      moves: {
        salvo
      }
    }
  },
  endIf: (G, ctx) => {
    cov_2rmfy6gvhj().f[7]++;
    cov_2rmfy6gvhj().s[29]++;

    if (ctx.phase === 'play') {
      cov_2rmfy6gvhj().b[7][0]++;
      cov_2rmfy6gvhj().s[30]++;

      if (checkAllShipsSunk(G.ships, 0)) {
        cov_2rmfy6gvhj().b[8][0]++;
        cov_2rmfy6gvhj().s[31]++;
        return {
          winner: '1'
        };
      } else {
        cov_2rmfy6gvhj().b[8][1]++;
      }

      cov_2rmfy6gvhj().s[32]++;

      if (checkAllShipsSunk(G.ships, 1)) {
        cov_2rmfy6gvhj().b[9][0]++;
        cov_2rmfy6gvhj().s[33]++;
        return {
          winner: '0'
        };
      } else {
        cov_2rmfy6gvhj().b[9][1]++;
      }
    } else {
      cov_2rmfy6gvhj().b[7][1]++;
    }
  },
  turn: {
    moveLimit: 1
  },
  playerView
}); // Helper function for generating random ships positioning.

function generateRandomShips(player) {
  cov_2rmfy6gvhj().f[8]++;
  let result;
  let shipID;
  cov_2rmfy6gvhj().s[34]++;

  do {
    cov_2rmfy6gvhj().s[35]++;
    result = [];
    cov_2rmfy6gvhj().s[36]++;

    for (const shipSize of VALID_SHIPS_SIZES) {
      const count = (cov_2rmfy6gvhj().s[37]++, VALID_SHIPS_COUNT[shipSize]);
      cov_2rmfy6gvhj().s[38]++;

      for (let i = (cov_2rmfy6gvhj().s[39]++, 0); i < count; i++) {
        cov_2rmfy6gvhj().s[40]++;
        shipID = shortid__WEBPACK_IMPORTED_MODULE_1___default.a.generate();
        cov_2rmfy6gvhj().s[41]++;
        result.push(randomlyGetShip(player, shipSize, shipID));
      }
    }
  } while (!validateShips(result, player).valid);

  cov_2rmfy6gvhj().s[42]++;
  return result;
} // Wheather a setup is valid or not.

function validateShips(ships, player) {
  cov_2rmfy6gvhj().f[9]++;
  const validations = (cov_2rmfy6gvhj().s[43]++, [validateShipsCount(ships), validateShipsContinuity(ships), validateShipsNotOutOfBounds(ships), validateShipsNotOverlapping(ships), validateShipsHaveUniqueIDs(ships)]);
  cov_2rmfy6gvhj().s[44]++;

  if (player !== undefined) {
    cov_2rmfy6gvhj().b[10][0]++;
    cov_2rmfy6gvhj().s[45]++;
    validations.push(validateShipsOwnership(player, ships));
  } else {
    cov_2rmfy6gvhj().b[10][1]++;
  }

  cov_2rmfy6gvhj().s[46]++;

  for (const validation of validations) {
    cov_2rmfy6gvhj().s[47]++;

    if (!validation.valid) {
      cov_2rmfy6gvhj().b[11][0]++;
      cov_2rmfy6gvhj().s[48]++;
      return validation;
    } else {
      cov_2rmfy6gvhj().b[11][1]++;
    }
  }

  cov_2rmfy6gvhj().s[49]++;
  return {
    valid: true
  };
} // PRIVATE FUNCTIONS

function checkAllShipsSunk(ships, player) {
  cov_2rmfy6gvhj().f[10]++;
  cov_2rmfy6gvhj().s[50]++;

  for (const ship of ships) {
    cov_2rmfy6gvhj().s[51]++;

    if ((cov_2rmfy6gvhj().b[13][0]++, ship.player === player) && (cov_2rmfy6gvhj().b[13][1]++, !ship.sunk)) {
      cov_2rmfy6gvhj().b[12][0]++;
      cov_2rmfy6gvhj().s[52]++;
      return false;
    } else {
      cov_2rmfy6gvhj().b[12][1]++;
    }
  }

  cov_2rmfy6gvhj().s[53]++;
  return true;
}

function randomlyGetShip(player, shipSize, id) {
  cov_2rmfy6gvhj().f[11]++;
  const cell = (cov_2rmfy6gvhj().s[54]++, {
    x: getRandomInt(10),
    y: getRandomInt(10)
  });
  const direction = (cov_2rmfy6gvhj().s[55]++, getRandomInt(2) === 1 ? (cov_2rmfy6gvhj().b[14][0]++, 'H') : (cov_2rmfy6gvhj().b[14][1]++, 'V'));
  const ship = (cov_2rmfy6gvhj().s[56]++, {
    player,
    cells: [],
    sunk: false,
    id
  });
  cov_2rmfy6gvhj().s[57]++;

  for (let i = (cov_2rmfy6gvhj().s[58]++, 0); i < shipSize; i++) {
    cov_2rmfy6gvhj().s[59]++;

    if (direction === 'H') {
      cov_2rmfy6gvhj().b[15][0]++;
      cov_2rmfy6gvhj().s[60]++;
      // Constant y
      ship.cells.push(_objectSpread({}, cell, {
        x: cell.x + i
      }));
    } else {
      cov_2rmfy6gvhj().b[15][1]++;
      cov_2rmfy6gvhj().s[61]++;
      // Constant x
      ship.cells.push(_objectSpread({}, cell, {
        y: cell.y + i
      }));
    }
  }

  cov_2rmfy6gvhj().s[62]++;
  return ship;
}

function getRandomInt(max) {
  cov_2rmfy6gvhj().f[12]++;
  cov_2rmfy6gvhj().s[63]++;
  return Math.random() * max << 0 << 0; // https://github.com/babel/minify/issues/904
}

function findShipWithCell(ships, cell, player) {
  cov_2rmfy6gvhj().f[13]++;
  cov_2rmfy6gvhj().s[64]++;
  return ships.findIndex(ship => {
    cov_2rmfy6gvhj().f[14]++;
    cov_2rmfy6gvhj().s[65]++;
    return (cov_2rmfy6gvhj().b[16][0]++, ship.cells.findIndex(c => {
      cov_2rmfy6gvhj().f[15]++;
      cov_2rmfy6gvhj().s[66]++;
      return (cov_2rmfy6gvhj().b[17][0]++, c.x === cell.x) && (cov_2rmfy6gvhj().b[17][1]++, c.y === cell.y);
    }) !== -1) && (cov_2rmfy6gvhj().b[16][1]++, ship.player !== player);
  });
}

function countShipHits(salvos, shipId) {
  cov_2rmfy6gvhj().f[16]++;
  cov_2rmfy6gvhj().s[67]++;
  return salvos.filter(s => {
    cov_2rmfy6gvhj().f[17]++;
    cov_2rmfy6gvhj().s[68]++;
    return s.hitShip === shipId;
  }).length;
}

function validateShipsCount(ships) {
  cov_2rmfy6gvhj().f[18]++;
  const shipsLength = (cov_2rmfy6gvhj().s[69]++, ships.map(ship => {
    cov_2rmfy6gvhj().f[19]++;
    cov_2rmfy6gvhj().s[70]++;
    return ship.cells.length;
  }));
  const count = (cov_2rmfy6gvhj().s[71]++, _objectSpread({}, VALID_SHIPS_COUNT));
  cov_2rmfy6gvhj().s[72]++;

  for (const length of shipsLength) {
    cov_2rmfy6gvhj().s[73]++;

    if (!(length in count)) {
      cov_2rmfy6gvhj().b[18][0]++;
      cov_2rmfy6gvhj().s[74]++;
      return {
        valid: false,
        error: `Invalid ship length: ${length}`
      };
    } else {
      cov_2rmfy6gvhj().b[18][1]++;
    }

    cov_2rmfy6gvhj().s[75]++;
    count[length]--;
  }

  cov_2rmfy6gvhj().s[76]++;

  for (const length of Object.values(count)) {
    cov_2rmfy6gvhj().s[77]++;

    if (length !== 0) {
      cov_2rmfy6gvhj().b[19][0]++;
      cov_2rmfy6gvhj().s[78]++;
      return {
        valid: false,
        error: 'Invalid ships sizes.'
      };
    } else {
      cov_2rmfy6gvhj().b[19][1]++;
    }
  }

  cov_2rmfy6gvhj().s[79]++;
  return {
    valid: true
  };
}

function validateShipsOwnership(player, ships) {
  cov_2rmfy6gvhj().f[20]++;
  const owners = (cov_2rmfy6gvhj().s[80]++, ships.map(ship => {
    cov_2rmfy6gvhj().f[21]++;
    cov_2rmfy6gvhj().s[81]++;
    return ship.player;
  }));
  cov_2rmfy6gvhj().s[82]++;

  for (const owner of owners) {
    cov_2rmfy6gvhj().s[83]++;

    if (owner !== player) {
      cov_2rmfy6gvhj().b[20][0]++;
      cov_2rmfy6gvhj().s[84]++;
      return {
        valid: false,
        error: `Invalid player owner: ${owner} should be: ${player}`
      };
    } else {
      cov_2rmfy6gvhj().b[20][1]++;
    }
  }

  cov_2rmfy6gvhj().s[85]++;
  return {
    valid: true
  };
}

function validateShipsContinuity(ships) {
  cov_2rmfy6gvhj().f[22]++;
  cov_2rmfy6gvhj().s[86]++;

  for (const ship of ships) {
    cov_2rmfy6gvhj().s[87]++;

    if (ship.cells.length < 2) {
      cov_2rmfy6gvhj().b[21][0]++;
      cov_2rmfy6gvhj().s[88]++;
      continue;
    } else {
      cov_2rmfy6gvhj().b[21][1]++;
    }

    let lastICell = (cov_2rmfy6gvhj().s[89]++, ship.cells[0]);
    const vector = (cov_2rmfy6gvhj().s[90]++, getCellVector(ship.cells[1], ship.cells[0]));
    cov_2rmfy6gvhj().s[91]++;

    if (!((cov_2rmfy6gvhj().b[23][0]++, Math.abs(vector.x) === 1) && (cov_2rmfy6gvhj().b[23][1]++, Math.abs(vector.y) === 0) || (cov_2rmfy6gvhj().b[23][2]++, Math.abs(vector.x) === 0) && (cov_2rmfy6gvhj().b[23][3]++, Math.abs(vector.y) === 1))) {
      cov_2rmfy6gvhj().b[22][0]++;
      cov_2rmfy6gvhj().s[92]++;
      return {
        valid: false,
        error: `IShip is not spaced right!`
      };
    } else {
      cov_2rmfy6gvhj().b[22][1]++;
    }

    cov_2rmfy6gvhj().s[93]++;

    for (let i = (cov_2rmfy6gvhj().s[94]++, 1); i < ship.cells.length; i++) {
      const cell = (cov_2rmfy6gvhj().s[95]++, ship.cells[i]);
      const newVector = (cov_2rmfy6gvhj().s[96]++, getCellVector(cell, lastICell));
      cov_2rmfy6gvhj().s[97]++;

      if ((cov_2rmfy6gvhj().b[25][0]++, newVector.x !== vector.x) || (cov_2rmfy6gvhj().b[25][1]++, newVector.y !== vector.y)) {
        cov_2rmfy6gvhj().b[24][0]++;
        cov_2rmfy6gvhj().s[98]++;
        return {
          valid: false,
          error: `IShip is not continuous!`
        };
      } else {
        cov_2rmfy6gvhj().b[24][1]++;
      }

      cov_2rmfy6gvhj().s[99]++;
      lastICell = cell;
    }
  }

  cov_2rmfy6gvhj().s[100]++;
  return {
    valid: true
  };
}

function getCellVector(a, b) {
  cov_2rmfy6gvhj().f[23]++;
  cov_2rmfy6gvhj().s[101]++;
  return {
    x: a.x - b.x,
    y: a.y - b.y
  };
}

function validateShipsHaveUniqueIDs(ships) {
  cov_2rmfy6gvhj().f[24]++;
  const usedIDs = (cov_2rmfy6gvhj().s[102]++, {});
  cov_2rmfy6gvhj().s[103]++;

  for (const ship of ships) {
    cov_2rmfy6gvhj().s[104]++;

    if (usedIDs[ship.id]) {
      cov_2rmfy6gvhj().b[26][0]++;
      cov_2rmfy6gvhj().s[105]++;
      return {
        valid: false,
        error: `IShip IDs are not unique!`
      };
    } else {
      cov_2rmfy6gvhj().b[26][1]++;
    }

    cov_2rmfy6gvhj().s[106]++;
    usedIDs[ship.id] = true;
  }

  cov_2rmfy6gvhj().s[107]++;
  return {
    valid: true
  };
}

function validateShipsNotOutOfBounds(ships) {
  cov_2rmfy6gvhj().f[25]++;
  cov_2rmfy6gvhj().s[108]++;

  for (const ship of ships) {
    cov_2rmfy6gvhj().s[109]++;

    for (const cell of ship.cells) {
      cov_2rmfy6gvhj().s[110]++;

      if ((cov_2rmfy6gvhj().b[28][0]++, cell.x < 0) || (cov_2rmfy6gvhj().b[28][1]++, cell.x > 9) || (cov_2rmfy6gvhj().b[28][2]++, cell.y < 0) || (cov_2rmfy6gvhj().b[28][3]++, cell.y > 9)) {
        cov_2rmfy6gvhj().b[27][0]++;
        cov_2rmfy6gvhj().s[111]++;
        return {
          valid: false,
          error: `IShip out of bounds!`
        };
      } else {
        cov_2rmfy6gvhj().b[27][1]++;
      }
    }
  }

  cov_2rmfy6gvhj().s[112]++;
  return {
    valid: true
  };
}

function validateShipsNotOverlapping(ships) {
  cov_2rmfy6gvhj().f[26]++;
  const cellsUsed = (cov_2rmfy6gvhj().s[113]++, {});
  cov_2rmfy6gvhj().s[114]++;

  for (const ship of ships) {
    cov_2rmfy6gvhj().s[115]++;

    for (const cell of ship.cells) {
      cov_2rmfy6gvhj().s[116]++;

      if (!(cell.x in cellsUsed)) {
        cov_2rmfy6gvhj().b[29][0]++;
        cov_2rmfy6gvhj().s[117]++;
        cellsUsed[cell.x] = {};
      } else {
        cov_2rmfy6gvhj().b[29][1]++;
      }

      cov_2rmfy6gvhj().s[118]++;

      if (cellsUsed[cell.x][cell.y]) {
        cov_2rmfy6gvhj().b[30][0]++;
        cov_2rmfy6gvhj().s[119]++;
        return {
          valid: false,
          error: `Overlapping ships!`
        };
      } else {
        cov_2rmfy6gvhj().b[30][1]++;
      }

      cov_2rmfy6gvhj().s[120]++;
      cellsUsed[cell.x][cell.y] = true;
    }
  }

  cov_2rmfy6gvhj().s[121]++;
  return {
    valid: true
  };
}

/***/ }),

/***/ "./src/games/seabattle/media/SvgBackground.tsx":
/*!*****************************************************!*\
  !*** ./src/games/seabattle/media/SvgBackground.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2p9i4h1iij() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgBackground.tsx";
  var hash = "d0e5d1cc0ed793523f09e78db4da94c7f7ac8e71";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgBackground.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 14,
          column: 4
        }
      },
      "1": {
        start: {
          line: 3,
          column: 2
        },
        end: {
          line: 14,
          column: 4
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 20
        }
      },
      "3": {
        start: {
          line: 5,
          column: 14
        },
        end: {
          line: 5,
          column: 27
        }
      },
      "4": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 8,
          column: 5
        }
      },
      "5": {
        start: {
          line: 7,
          column: 6
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 13,
          column: 6
        }
      },
      "7": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "8": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 39,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 2,
            column: 17
          }
        },
        loc: {
          start: {
            line: 3,
            column: 2
          },
          end: {
            line: 14,
            column: 4
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 35
          }
        },
        loc: {
          start: {
            line: 3,
            column: 49
          },
          end: {
            line: 14,
            column: 3
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 22
          }
        },
        loc: {
          start: {
            line: 6,
            column: 27
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 39,
            column: 6
          }
        },
        line: 16
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0e5d1cc0ed793523f09e78db4da94c7f7ac8e71"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2p9i4h1iij = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2p9i4h1iij();

cov_2p9i4h1iij().s[0]++;

const squares = props => {
  cov_2p9i4h1iij().f[0]++;
  cov_2p9i4h1iij().s[1]++;
  return Array.from({
    length: 100
  }).map((unused, i) => {
    cov_2p9i4h1iij().f[1]++;
    const x = (cov_2p9i4h1iij().s[2]++, i % 10);
    const y = (cov_2p9i4h1iij().s[3]++, i / 10 << 0);
    cov_2p9i4h1iij().s[4]++;

    const _onClick = () => {
      cov_2p9i4h1iij().f[2]++;
      cov_2p9i4h1iij().s[5]++;
      props.onClick({
        x,
        y
      });
    };

    cov_2p9i4h1iij().s[6]++;
    return __jsx("g", {
      key: i,
      onClick: _onClick,
      transform: `translate(${x}, ${y})`
    }, __jsx("rect", {
      x: 0,
      y: 0,
      fill: "red",
      fillOpacity: "0",
      width: "1",
      height: "1",
      stroke: "white",
      strokeWidth: 0.005
    }));
  });
};

cov_2p9i4h1iij().s[7]++;

const SvgBackground = props => {
  cov_2p9i4h1iij().f[3]++;
  cov_2p9i4h1iij().s[8]++;
  return __jsx("g", null, "// .svg starts here", __jsx("defs", null, __jsx("linearGradient", {
    id: "background_svg__a"
  }, __jsx("stop", {
    offset: 0,
    stopColor: "#203f5c"
  }), __jsx("stop", {
    offset: 0.744,
    stopColor: "#00152a"
  }), __jsx("stop", {
    offset: 1,
    stopColor: "#020c16"
  })), __jsx("radialGradient", {
    xlinkHref: "#background_svg__a",
    id: "background_svg__b",
    cx: 5,
    cy: 5,
    fx: 5,
    fy: 5,
    r: 5,
    gradientUnits: "userSpaceOnUse",
    spreadMethod: "pad"
  })), __jsx("path", {
    fill: "url(#background_svg__b)",
    fillRule: "evenodd",
    d: "M0 0h10v10H0z"
  }), "// .svg ends here", squares(props));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgBackground);

/***/ }),

/***/ "./src/games/seabattle/media/SvgHit.tsx":
/*!**********************************************!*\
  !*** ./src/games/seabattle/media/SvgHit.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2euu13v2aj() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgHit.tsx";
  var hash = "529025ebc81d8eed0e94217804910995e6f8f6e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgHit.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 2
        },
        end: {
          line: 5,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 15
          },
          end: {
            line: 2,
            column: 16
          }
        },
        loc: {
          start: {
            line: 3,
            column: 2
          },
          end: {
            line: 5,
            column: 6
          }
        },
        line: 3
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "529025ebc81d8eed0e94217804910995e6f8f6e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2euu13v2aj = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2euu13v2aj();

cov_2euu13v2aj().s[0]++;

const SvgHit = () => {
  cov_2euu13v2aj().f[0]++;
  cov_2euu13v2aj().s[1]++;
  return __jsx("g", null, __jsx("circle", {
    cx: "0.5",
    cy: "0.5",
    r: "0.2",
    fill: "red",
    stroke: "white",
    strokeWidth: "0.05"
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgHit);

/***/ }),

/***/ "./src/games/seabattle/media/SvgMiss.tsx":
/*!***********************************************!*\
  !*** ./src/games/seabattle/media/SvgMiss.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2bhfyogdqi() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgMiss.tsx";
  var hash = "4195a8af26a68630fa313b7d7ab0dde5e591ca09";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgMiss.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 2
        },
        end: {
          line: 6,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 2,
            column: 17
          }
        },
        loc: {
          start: {
            line: 3,
            column: 2
          },
          end: {
            line: 6,
            column: 6
          }
        },
        line: 3
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4195a8af26a68630fa313b7d7ab0dde5e591ca09"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2bhfyogdqi = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2bhfyogdqi();

cov_2bhfyogdqi().s[0]++;

const SvgMiss = () => {
  cov_2bhfyogdqi().f[0]++;
  cov_2bhfyogdqi().s[1]++;
  return __jsx("g", null, __jsx("line", {
    x1: "0.2",
    y1: "0.2",
    x2: "0.8",
    y2: "0.8",
    stroke: "white",
    strokeWidth: "0.05"
  }), __jsx("line", {
    x1: "0.8",
    y1: "0.2",
    x2: "0.2",
    y2: "0.8",
    stroke: "white",
    strokeWidth: "0.05"
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgMiss);

/***/ }),

/***/ "./src/games/seabattle/media/SvgShip2.tsx":
/*!************************************************!*\
  !*** ./src/games/seabattle/media/SvgShip2.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_13o9pwlb6() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip2.tsx";
  var hash = "edd377bc9dce13249cd9209ef9a697bdee52b037";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip2.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 162,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 17
          },
          end: {
            line: 4,
            column: 18
          }
        },
        loc: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 162,
            column: 6
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edd377bc9dce13249cd9209ef9a697bdee52b037"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_13o9pwlb6 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_13o9pwlb6();

/* tslint:disable */

cov_13o9pwlb6().s[0]++;

const SvgShip2 = () => {
  cov_13o9pwlb6().f[0]++;
  cov_13o9pwlb6().s[1]++;
  return __jsx("g", null, __jsx("path", {
    d: "M.003.137v.691s.686.088.999.083c.565-.009.997-.237.995-.438C1.995.264 1.552.044 1.002.04.688.038.003.137.003.137z",
    fill: "#595959"
  }), __jsx("clipPath", {
    id: "ship2_svg__a"
  }, __jsx("path", {
    d: "M2.996 50.016V301.03s339.02 31.748 494 30c279.24-3.15 493.017-85.958 492-159.008-1.055-75.773-220.203-155.563-492-157.008-155.103-.825-494 35.002-494 35.002z"
  })), __jsx("g", {
    clipPath: "url(#ship2_svg__a)",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  }, __jsx("path", {
    d: "M616 15H234v318.016h382C650.44 232.188 647.894 91.53 616 15z",
    fill: "gray",
    stroke: "#737373",
    strokeWidth: 5
  }), __jsx("path", {
    d: "M1.996 18.014h243V326.03h-243z",
    fill: "#999"
  }), __jsx("clipPath", {
    id: "ship2_svg__b"
  }, __jsx("path", {
    d: "M1.996 18.014h243V326.03h-243z"
  })), __jsx("g", {
    clipPath: "url(#ship2_svg__b)"
  }, __jsx("path", {
    d: "M247.086 24.95L-8.69 303.286l7.36 6.767L254.45 31.719l-7.364-6.767z",
    fill: "#ebebeb"
  }), __jsx("path", {
    d: "M-10.004 44.88l252.68 281.15 7.436-6.685L-2.566 38.195l-7.438 6.684z",
    fill: "#ebebeb"
  }), __jsx("ellipse", {
    cx: 113.231,
    cy: 175.778,
    rx: 65.769,
    ry: 50.172,
    fill: "none",
    stroke: "#fff",
    strokeWidth: 10
  }), __jsx("path", {
    d: "M206.5 6h10v375.02h-10z",
    fill: "#ffd200"
  })), __jsx("path", {
    d: "M374 34L267 46l-3 256 116 10 35-15-1.926-252L374 34z",
    fill: "#999",
    stroke: "#a6a6a6",
    strokeWidth: 4
  })), __jsx("g", {
    fill: "#f2f2f2",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter"
  }, __jsx("path", {
    d: "M608.196 327.92a9.635 9.635 0 0 0-8.598-10.57l-50.733-5.21c-5.292-.545-10.023 3.305-10.567 8.597-.544 5.293 3.306 10.024 8.598 10.568l50.733 5.212c5.29.544 10.023-3.306 10.566-8.598z",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  }), __jsx("path", {
    d: "M609.702 313.263c.544-5.293-3.306-10.024-8.598-10.568l-50.733-5.212c-5.29-.544-10.023 3.306-10.566 8.598a9.635 9.635 0 0 0 8.598 10.57l50.733 5.21c5.292.545 10.023-3.305 10.567-8.597z",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  })), __jsx("g", {
    fill: "#f2f2f2",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter"
  }, __jsx("path", {
    d: "M607.95 12.65c.544 5.292-3.306 10.023-8.598 10.567L548.62 28.43a9.636 9.636 0 0 1-10.57-8.6c-.543-5.29 3.307-10.023 8.6-10.566l50.732-5.213a9.635 9.635 0 0 1 10.568 8.6z",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  }), __jsx("path", {
    d: "M609.456 27.306c.543 5.292-3.306 10.023-8.6 10.567l-50.732 5.213c-5.292.543-10.023-3.306-10.567-8.6-.544-5.29 3.306-10.022 8.598-10.566l50.733-5.213a9.634 9.634 0 0 1 10.568 8.6z",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  })), __jsx("ellipse", {
    cx: 1.577,
    cy: 0.48,
    rx: 0.215,
    ry: 0.223,
    fill: "none",
    stroke: "#999",
    strokeWidth: 0.012
  }), __jsx("ellipse", {
    cx: 1.571,
    cy: 0.479,
    rx: 0.124,
    ry: 0.171,
    fill: "#999"
  }), __jsx("path", {
    d: "M1.528.67C1.456.56 1.456.379 1.53.286l.147.098-.001.193-.148.095",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship2_svg__c"
  }, __jsx("path", {
    d: "M756.974 243.824c-35.244-40.175-35.723-106.15 1.063-140l72.69 35.56-.532 70-73.22 34.44"
  })), __jsx("g", {
    clipPath: "url(#ship2_svg__c)",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)"
  }, __jsx("path", {
    d: "M835.924 166.586l-60.796-.467-.114 14.998 60.796.468.114-15z",
    fill: "#4d4d4d"
  }), __jsx("path", {
    d: "M838.787 184.61l-66.796-.515.16-21h.002l66.795.514-.16 20.998zm-2.977-3.024l.114-15-60.796-.467-.114 14.998 60.796.468z",
    fill: "#b3b3b3"
  })), __jsx("path", {
    d: "M1.528.67C1.456.56 1.456.379 1.53.286l.147.098-.001.193-.148.095",
    fill: "none",
    stroke: "#e6e6e6",
    strokeWidth: 0.007
  }), __jsx("path", {
    d: "M1.896.472L1.57.465v.024l.326-.001V.472z",
    fill: "#e6e6e6"
  }), __jsx("ellipse", {
    cx: 1.865,
    cy: 0.391,
    rx: 0.021,
    ry: 0.029,
    fill: "#404040"
  }), __jsx("path", {
    d: "M1.865.425H1.86V.423h-.003L1.856.422h-.001V.421h-.002V.42h-.001V.42h-.001L1.85.418 1.85.417V.416h-.001V.415h-.001V.414h-.001V.413L1.845.412V.411L1.844.41V.41L1.843.408V.406h-.001V.403h-.001V.4L1.84.4V.38h.001V.376l.001-.001V.373h.001V.371h.001V.37h.001V.368h.001V.367h.001V.366L1.85.365 1.85.364l.001-.001h.001V.362h.001V.361h.001L1.856.36h.001L1.858.36h.002L1.86.358H1.872l.001.001h.001l.001.001h.001v.001h.001v.001h.001l.001.001.001.001h.001v.002h.001v.001h.001V.37l.001.001v.001h.001v.002h.001v.002l.001.001v.002l.001.001v.003h.001V.404l-.001.001v.002h-.001V.41h-.001V.41l-.001.001v.001l-.001.001v.001h-.001v.001H1.88v.001L1.88.418v.001h-.001L1.877.42 1.876.42h-.001v.001h-.002v.001h-.002v.001H1.87l-.001.001h-.004zm0-.008h.003V.415h.002V.414h.002V.413h.001l.001-.001.001-.001.001-.001V.41h.001V.408h.001V.406h.001V.405L1.88.404V.402h.001V.4l.001-.001V.381H1.88V.378H1.88V.376h-.001V.375L1.877.374V.373h-.001V.372h-.001V.371h-.001V.37h-.001V.37h-.002V.368H1.87L1.87.367h-.003V.366H1.86v.001h-.002V.37h-.002V.37h-.001v.001h-.001v.001h-.001v.001h-.001v.002H1.85v.001H1.85v.002h-.001v.003h-.001v.003h-.001V.402l.001.001v.002h.001v.002h.001v.002h.001V.41h.001V.41h.001v.001l.001.001h.001v.001h.001v.001h.002v.001h.002v.001h.004z",
    fill: "#c69264"
  }), __jsx("ellipse", {
    cx: 1.865,
    cy: 0.562,
    rx: 0.021,
    ry: 0.029,
    fill: "#404040"
  }), __jsx("path", {
    d: "M1.865.595h-.007V.593h-.002V.592h-.002V.591h-.001V.59h-.001V.59H1.85L1.85.588V.587h-.001V.586h-.001V.585h-.001V.583h-.001V.582L1.844.581V.58L1.843.58V.577h-.001V.574h-.001V.57H1.84V.55h.001V.547l.001-.001V.544h.001V.542h.001V.541L1.847.54V.54h.001V.538h.001V.537L1.85.536 1.85.535l.001-.001h.001V.533h.001V.532h.001V.531h.002V.53h.003V.53H1.873v.001h.002v.001h.001v.001h.001l.001.001h.001v.001h.001v.001h.001v.001l.001.001V.54h.001V.54l.001.001v.001h.001v.002h.001v.002h.001V.55h.001v.004h.001V.575h-.001v.003h-.001V.58L1.884.58v.001l-.001.001v.001l-.001.001v.001h-.001v.001H1.88v.001H1.88v.001L1.878.59 1.877.59h-.001v.001h-.001v.001h-.002v.001h-.002v.001h-.003v.001h-.004zm0-.008h.005V.585h.002V.584h.001V.583h.001V.582h.001V.581h.001V.58h.001V.58h.001V.577h.001V.575h.001V.573h.001V.57h.001V.552H1.88V.55H1.88V.547h-.001V.546L1.877.545V.544h-.001V.543h-.001V.542h-.001V.541h-.001V.54h-.001L1.871.54H1.87V.538h-.003V.537H1.86L1.858.54h-.001L1.856.54h-.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001L1.85.547v.001H1.85V.55h-.001v.002l-.001.001v.003h-.001V.573l.001.001v.002h.001v.002h.001V.58h.001V.58h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.002v.001h.002l.001.001h.003z",
    fill: "#c69264"
  }), __jsx("path", {
    d: "M.662.321h.166v.295H.662z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M1.033.868l-.2-.01v-.76l.2-.012.1.222V.62l-.1.25z",
    fill: "#a6a6a6"
  }), __jsx("clipPath", {
    id: "ship2_svg__d"
  }, __jsx("path", {
    d: "M512.173 315.35L413 312l.074-276 99.1-4.384L562 112.2v112.914l-49.827 90.235z"
  })), __jsx("g", {
    clipPath: "url(#ship2_svg__d)",
    transform: "matrix(.00202 0 0 .0025 -.019 .03)",
    fontSize: 106.659,
    fontWeight: 700,
    fontFamily: "Menlo"
  }, __jsx("text", {
    x: 505.091,
    y: 154.469,
    transform: "rotate(90 491.959 104.665)",
    fill: "#666"
  }, '7', __jsx("tspan", {
    x: 564.876,
    y: 154.469
  }, '3')), __jsx("text", {
    x: 508.9,
    y: 150.673,
    transform: "rotate(90 495.768 100.868)",
    fill: "#f2f2f2"
  }, '7', __jsx("tspan", {
    x: 568.685,
    y: 150.673
  }, '3'))), __jsx("path", {
    d: "M1.039.88L.832.874V.085L1.04.073l.105.231v.32L1.039.88zM.832.86l.2.009.101-.249V.308l-.1-.222-.2.012v.76z",
    fill: "#e6e6e6",
    fillRule: "nonzero"
  }), __jsx("path", {
    d: "M411.147 149.23c11.726 11.727 11.726 30.738 0 42.464-11.726 11.725-30.737 11.725-42.463 0-11.725-11.726-11.725-30.737 0-42.463 11.726-11.724 30.737-11.724 42.463 0z",
    fill: "#b3b3b3",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter",
    transform: "matrix(.00203 0 0 .00232 -.004 .075)"
  }), __jsx("path", {
    d: "M.86.556a.01.01 0 0 0 0-.013L.733.398a.007.007 0 0 0-.01 0L.71.41a.01.01 0 0 0 0 .013l.127.145a.007.007 0 0 0 .01 0L.86.556z",
    fill: "gray"
  }), __jsx("path", {
    d: "M426.684 201.694a3.915 3.915 0 0 0 0-5.538l-62.462-62.462a3.915 3.915 0 0 0-5.538 0l-5.537 5.537a3.917 3.917 0 0 0 0 5.54l62.462 62.46a3.913 3.913 0 0 0 5.537 0l5.537-5.536z",
    fill: "#f2f2f2",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter",
    transform: "matrix(.00203 0 0 .00232 -.004 .075)"
  }), __jsx("ellipse", {
    cx: 0.582,
    cy: 0.475,
    rx: 0.094,
    ry: 0.313,
    fill: "#333"
  }), __jsx("clipPath", {
    id: "ship2_svg__e"
  }, __jsx("ellipse", {
    cx: 289.516,
    cy: 172.707,
    rx: 46.484,
    ry: 113.707
  })), __jsx("g", {
    clipPath: "url(#ship2_svg__e)",
    transform: "matrix(.00202 0 0 .00276 -.003 -.001)",
    fill: "#4d4d4d"
  }, __jsx("path", {
    d: "M369.347 167.962l-110.31-110.31-18.384 18.386 110.31 110.31 18.384-18.386zm-20 50l-110.31-110.31-18.384 18.386 110.31 110.31 18.384-18.386zm-10 60l-110.31-110.31-18.384 18.386 110.31 110.31 18.384-18.386z"
  })), __jsx("ellipse", {
    cx: 0.582,
    cy: 0.475,
    rx: 0.094,
    ry: 0.313,
    fill: "none",
    stroke: "#4d4d4d",
    strokeWidth: 0.024
  }), __jsx("g", null, __jsx("path", {
    d: "M347.41 350.742c-19.263-9.002-27.58-31.916-18.578-51.18 9.002-19.263 31.916-27.58 51.18-18.578 19.262 9.002 27.58 31.916 18.578 51.18-9.003 19.262-31.917 27.58-51.18 18.578z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00203 0 0 .00217 -.006 .211)"
  }), __jsx("path", {
    d: "M.706.995L.716 1 .75.92.74.916l-.034.08zM.67.977L.68.98.713.903.703.898.67.977z",
    fill: "#737373"
  })), __jsx("g", null, __jsx("path", {
    d: "M354.57 11.176c20.54-5.504 41.65 6.685 47.153 27.223 5.504 20.538-6.685 41.65-27.223 47.152-20.54 5.503-41.65-6.685-47.153-27.224-5.503-20.538 6.685-41.65 27.224-47.152z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00203 0 0 .00209 -.007 0)"
  }), __jsx("path", {
    d: "M.695.01l-.01.003.021.08.01-.002-.021-.08zM.735 0l-.01.002.02.081.01-.003L.735 0z",
    fill: "#737373"
  })));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgShip2);

/***/ }),

/***/ "./src/games/seabattle/media/SvgShip3.tsx":
/*!************************************************!*\
  !*** ./src/games/seabattle/media/SvgShip3.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1xhw0lqvmb() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip3.tsx";
  var hash = "0aed86e4115ae39fd9946baa55c02ca255c77b3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip3.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 249,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 248,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 17
          },
          end: {
            line: 4,
            column: 18
          }
        },
        loc: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 248,
            column: 6
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0aed86e4115ae39fd9946baa55c02ca255c77b3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1xhw0lqvmb = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1xhw0lqvmb();

/* tslint:disable */

cov_1xhw0lqvmb().s[0]++;

const SvgShip3 = () => {
  cov_1xhw0lqvmb().f[0]++;
  cov_1xhw0lqvmb().s[1]++;
  return __jsx("g", null, __jsx("path", {
    d: "M1.5 0c.827 0 1.497.29 1.497.47S2.327.941 1.5.941C.89.941.244.852.117.763-.009.673.003.538.003.47c0-.087-.01-.255.12-.325C.255.075.951 0 1.5 0z",
    fill: "#595959"
  }), __jsx("clipPath", {
    id: "ship3_svg__a"
  }, __jsx("path", {
    d: "M750.5 3C1163.33 3 1498 108.926 1498 174.5S1163.33 346 750.5 346c-304.884 0-627.266-32.35-690.5-65-63.234-32.65-57-81.733-57-106.5C3 142.738-2.593 81.51 63 56 128.593 30.49 476.103 3 750.5 3z"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__a)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("ellipse", {
    cx: 980.653,
    cy: 176.066,
    rx: 97.941,
    ry: 70.982,
    fill: "none",
    stroke: "#dc504b",
    strokeWidth: 3.838,
    strokeDasharray: "38.38093721 38.38093721 0 0"
  }), __jsx("ellipse", {
    cx: 275.069,
    cy: 178.8,
    rx: 79.996,
    ry: 57.748,
    fill: "none",
    stroke: "#999",
    strokeWidth: 4.798
  }), __jsx("path", {
    d: "M816-4L382 7l-39 107v120l39 107 434 13 92-145v-73L816-4z",
    fill: "gray",
    stroke: "#a6a6a6",
    strokeWidth: 4
  }), __jsx("path", {
    d: "M202.18 277.626a5.362 5.362 0 0 0-1.963-7.327l-108.39-62.58a5.362 5.362 0 0 0-7.327 1.963L71.72 231.82a5.362 5.362 0 0 0 1.963 7.326l108.39 62.58a5.366 5.366 0 0 0 7.327-1.964l12.78-22.136zm0-210.806a5.362 5.362 0 0 1-1.963 7.326l-108.39 62.58a5.366 5.366 0 0 1-7.327-1.964l-12.78-22.136a5.362 5.362 0 0 1 1.963-7.327l108.39-62.58a5.362 5.362 0 0 1 7.327 1.963l12.78 22.136z",
    fill: "#999",
    stroke: "#a6a6a6",
    strokeWidth: 4
  })), __jsx("path", {
    d: "M1.13.354C1.13.346 1.13.34 1.128.34h-.13C.995.34.993.346.993.354v.252c0 .008.002.014.004.014h.13c.002 0 .004-.006.004-.014V.354z",
    fill: "#595959"
  }), __jsx("path", {
    d: "M.997.62H.995V.618H.994V.616H.993V.612L.992.611V.344L.995.343V.341h.001V.34h.133v.001h.001v.003h.001v.272h-.001V.62h-.002V.62h-.13zm.006-.014h.118V.354h-.118v.252z",
    fill: "#bfbfbf"
  }), __jsx("ellipse", {
    cx: 2.76,
    cy: 0.413,
    rx: 0.021,
    ry: 0.029,
    fill: "#404040"
  }), __jsx("path", {
    d: "M2.76.446h-.004L2.754.444h-.002V.443H2.75V.442H2.75L2.748.441h-.001V.44h-.001V.44h-.001V.438h-.001V.437h-.001V.436L2.742.435V.434h-.001V.433L2.74.432V.431L2.74.43V.428h-.001V.425h-.001V.422L2.736.421V.4L2.739.4V.397L2.74.396V.394h.001V.392h.001V.391L2.743.39V.39h.001V.388h.001V.387l.001-.001.001-.001.001-.001.001-.001h.001V.382h.002V.381h.002V.38h.003V.38H2.767l.001.001h.001l.001.001h.001v.001h.001l.001.001h.001v.001h.001v.001h.001v.001h.001V.39h.001V.39h.001v.001l.001.001v.001l.001.001v.001l.001.001v.002L2.783.4v.003h.001v.006h.001V.423l-.001.001v.003h-.001v.002L2.78.43v.002H2.78v.001l-.001.001v.001l-.001.001v.001h-.001v.001h-.001v.001h-.001V.44L2.773.44h-.001v.001h-.001v.001H2.77v.001h-.001l-.001.001h-.002v.001H2.76zm0-.01h.006V.434h.002V.433h.001V.432h.001V.431h.001V.43h.001V.43h.001V.427h.001V.426h.001V.424l.001-.001V.421L2.778.42V.416l.001-.001V.403h-.001V.4h-.001V.398h-.001V.396h-.001V.395h-.001V.393h-.001V.392H2.77V.391H2.77V.39h-.002V.39h-.001L2.765.388h-.002L2.762.387h-.008V.39h-.002V.39h-.001v.001H2.75v.001H2.75l-.001.001-.001.001v.001h-.001v.002h-.001v.001L2.744.4v.002h-.001v.003h-.001V.423l.001.001v.002h.001v.002h.001v.001l.001.001V.43h.001v.001h.001v.001h.001v.001h.001v.001h.002v.001h.002v.001h.005z",
    fill: "#c69264"
  }), __jsx("ellipse", {
    cx: 2.76,
    cy: 0.55,
    rx: 0.021,
    ry: 0.029,
    fill: "#404040"
  }), __jsx("path", {
    d: "M2.76.583h-.005V.581h-.002L2.751.58H2.75V.58h-.002V.578h-.001V.577h-.001V.576h-.001V.575h-.001V.574h-.001V.573L2.742.572V.571h-.001V.57L2.74.57V.568H2.74V.566L2.738.565V.563L2.737.562V.56L2.736.558V.537l.001-.001V.534L2.74.533V.531h.001V.53h.001V.528h.001V.526h.001V.525h.001V.524h.001V.523h.001V.522l.001-.001h.001V.52h.001L2.75.52h.001V.518h.002V.517h.004V.516H2.767v.001h.002V.52h.002V.52h.001v.001h.001l.001.001h.001v.001h.001v.001l.001.001v.001h.001v.001h.001V.53h.001v.002h.001v.002h.001v.002l.001.001V.54h.001v.006h.001V.56L2.782.56v.003h-.001v.003H2.78v.002H2.78V.57h-.001v.001l-.001.001v.001h-.001v.001h-.001v.001l-.001.001-.001.001-.001.001h-.001V.58H2.77L2.77.58h-.001v.001h-.002l-.001.001h-.004L2.76.584zm0-.009h.004l.001-.001h.001l.001-.001h.001V.57h.001L2.77.57l.001-.001V.567h.001V.566h.001V.565l.001-.001V.563h.001V.561L2.777.56V.558l.001-.001V.553l.001-.001V.541L2.776.54V.538L2.775.537V.535h-.001V.533h-.001V.532h-.001V.531L2.771.53V.53H2.77L2.77.528 2.768.527h-.001V.526h-.002V.525h-.003L2.761.524h-.007v.001h-.001l-.001.001h-.001v.001H2.75V.53H2.75V.53h-.001v.001h-.001v.001h-.001v.002h-.001v.002h-.001v.002h-.001v.003h-.001V.56h.001v.002h.001v.002h.001v.002h.001v.001h.001v.001h.001V.57h.001V.57h.001v.001h.001l.001.001h.002v.001h.004v.001h.001z",
    fill: "#c69264"
  }), __jsx("ellipse", {
    cx: 1.961,
    cy: 0.48,
    rx: 0.123,
    ry: 0.17,
    fill: "#999"
  }), __jsx("path", {
    d: "M1.918.67c-.07-.11-.072-.29.002-.383l.145.097v.192l-.147.095",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship3_svg__b"
  }, __jsx("path", {
    d: "M958.916 247.542c-35.244-40.175-35.723-106.15 1.063-140l72.69 35.56-.53 70-73.224 34.44"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__b)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("path", {
    d: "M1037.87 170.304l-60.8-.467-.114 15 60.794.467.12-15z",
    fill: "#4d4d4d"
  }), __jsx("path", {
    d: "M1040.73 188.327l-66.797-.514.16-21 66.797.514-.16 21zm-2.98-3.023l.12-15-60.8-.467-.114 15 60.794.467z",
    fill: "#b3b3b3"
  })), __jsx("path", {
    d: "M1.918.67c-.07-.11-.072-.29.002-.383l.145.097v.192l-.147.095",
    fill: "none",
    stroke: "#e6e6e6",
    strokeWidth: 0.007
  }), __jsx("path", {
    d: "M2.282.473L1.96.466V.49l.322-.001V.472z",
    fill: "#e6e6e6"
  }), __jsx("ellipse", {
    cx: 2.458,
    cy: 0.486,
    rx: 0.16,
    ry: 0.16,
    fill: "none",
    stroke: "#999",
    strokeWidth: 0.011
  }), __jsx("ellipse", {
    cx: 2.454,
    cy: 0.477,
    rx: 0.092,
    ry: 0.127,
    fill: "#999"
  }), __jsx("path", {
    d: "M2.372.416V.402h-.001V.384h.001V.368l.02.017.213.004c.002 0 .006.004.006.006S2.607.4 2.605.4h-.213l-.02.014z",
    fill: "#fff"
  }), __jsx("clipPath", {
    id: "ship3_svg__c"
  }, __jsx("path", {
    d: "M1185.9 154.545l-.08-5.068h-.82v-6.408h.92l.08-6.07 9.9 6.275s88.58.878 106.1 1.5c1.24.043 3 1.483 3 2.225s-1.76 2.196-3 2.226c-17.52.414-106.1.26-106.1.26l-10 5.06z"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__c)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("path", {
    d: "M1285 144h21v6h-21z",
    fill: "#e2201f",
    stroke: "#999",
    strokeWidth: 2
  })), __jsx("path", {
    d: "M2.372.591V.577h-.001V.56h.001V.543l.02.017.213.004c.002 0 .006.004.006.006s-.004.006-.006.006l-.213.001-.02.014z",
    fill: "#fff"
  }), __jsx("clipPath", {
    id: "ship3_svg__d"
  }, __jsx("path", {
    d: "M1185.9 218.545l-.08-5.068h-.82v-6.408h.92l.08-6.07 9.9 6.275s88.58.878 106.1 1.5c1.24.043 3 1.483 3 2.225s-1.76 2.196-3 2.226c-17.52.414-106.1.26-106.1.26l-10 5.06z"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__d)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("path", {
    d: "M1285 208h21v6h-21z",
    fill: "#e2201f",
    stroke: "#999",
    strokeWidth: 2
  })), __jsx("path", {
    d: "M2.465.542V.59h-.062V.537C2.386.527 2.375.506 2.375.48c0-.026.011-.048.028-.057V.37h.062v.048h.031c.025 0 .045.028.045.062s-.02.062-.045.062h-.031z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 0.007
  }), __jsx("ellipse", {
    cx: 0.549,
    cy: 0.477,
    rx: 0.092,
    ry: 0.127,
    fill: "#999"
  }), __jsx("path", {
    d: "M.63.416V.402h.002V.384H.63V.368L.61.385.398.389C.395.389.392.393.392.395S.395.4.398.4H.61l.02.014z",
    fill: "#fff"
  }), __jsx("clipPath", {
    id: "ship3_svg__e"
  }, __jsx("path", {
    d: "M316.046 154.545l.078-5.068h.818v-6.408h-.922l-.078-6.07-9.903 6.275s-88.582.878-106.098 1.5c-1.244.043-3 1.483-3 2.225s1.755 2.196 3 2.226c17.516.414 106.097.26 106.097.26l10.006 5.06z"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__e)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("path", {
    d: "M195.942 144h21v6h-21z",
    fill: "#e2201f",
    stroke: "#999",
    strokeWidth: 2
  })), __jsx("path", {
    d: "M.63.591V.577h.002V.56H.63V.543L.61.56.398.564C.395.564.392.568.392.57s.003.006.006.006L.61.577l.02.014z",
    fill: "#fff"
  }), __jsx("clipPath", {
    id: "ship3_svg__f"
  }, __jsx("path", {
    d: "M316.046 218.545l.078-5.068h.818v-6.408h-.922l-.078-6.07-9.903 6.275s-88.582.878-106.098 1.5c-1.244.043-3 1.483-3 2.225s1.755 2.196 3 2.226c17.516.414 106.097.26 106.097.26l10.006 5.06z"
  })), __jsx("g", {
    clipPath: "url(#ship3_svg__f)",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }, __jsx("path", {
    d: "M195.942 208h21v6h-21z",
    fill: "#e2201f",
    stroke: "#999",
    strokeWidth: 2
  })), __jsx("path", {
    d: "M.538.542V.59H.6V.537C.616.527.628.506.628.48.628.454.616.432.6.423V.37H.538v.048H.507C.482.418.462.446.462.48s.02.062.045.062h.031z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 0.007
  }), __jsx("path", {
    d: "M1.082.877a.158.158 0 0 0-.088-.06A1.224 1.224 0 0 0 .845.795C.838.794.831.801.83.811L.825.867c0 .01.005.02.013.02 0 0 .094.022.148.024.055.002.096-.03.096-.034z",
    fill: "#c69264",
    stroke: "#e6e6e6",
    strokeWidth: 0.009
  }), __jsx("path", {
    d: "M.986.894C1.01.9 1.016.84.991.834L.85.813C.845.812.842.815.842.82L.838.862c0 .005.002.009.006.01l.142.023z",
    fill: "#968474",
    stroke: "#595959",
    strokeWidth: 0.002
  }), __jsx("path", {
    d: "M1.079.089a.157.157 0 0 1-.088.06C.938.162.842.171.842.171.835.173.828.165.827.156L.822.1c0-.01.005-.02.012-.021 0 0 .095-.022.15-.024.054-.002.094.03.095.034z",
    fill: "#c69264",
    stroke: "#e6e6e6",
    strokeWidth: 0.009
  }), __jsx("path", {
    d: "M.983.073c.023-.006.03.053.005.058L.845.154C.842.154.84.151.84.146L.835.104C.835.1.837.095.84.094L.983.071z",
    fill: "#968474",
    stroke: "#595959",
    strokeWidth: 0.002
  }), __jsx("path", {
    d: "M1.055.28c0-.013-.005-.022-.012-.022h-.36c-.006 0-.01.01-.01.021v.397c0 .011.004.02.01.02h.36c.007 0 .012-.01.012-.02V.279z",
    fill: "#595959"
  }), __jsx("path", {
    d: "M.727.697H.681V.695H.68V.694H.678L.677.693V.692H.676V.691H.675V.69H.674V.687L.673.686V.683H.672V.268L.675.267V.265h.001V.263h.001V.261h.001V.26h.001V.26H.68L.68.258h.002V.257h.364l.001.001h.001V.26h.001v.001l.001.001v.001h.001v.002h.001v.002h.001v.004h.001V.687h-.001V.69h-.001v.002H1.05v.001H1.05v.001l-.001.001h-.001v.001h-.001v.001h-.32zM.684.683h.359V.68h.001V.271h-.36v.001H.682V.683h.001v.001z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.055.28c0-.013-.005-.022-.012-.022H.74v.088H.672v.266H.74v.085h.303c.007 0 .012-.01.012-.022V.28z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M.75.683h.293V.68h.001V.271H.75v.087H.682v.239H.75v.085zM.74.697V.612H.672V.346H.74V.258h.306V.26h.002V.26h.001v.001l.001.001v.001h.001v.002h.001v.002l.001.001v.003h.001V.687h-.001V.69h-.001v.002H1.05v.001H1.05v.002h-.001l-.001.001h-.001v.001H.74z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1.606.016H1.17v.908h.435l.026-.083V.103L1.606.016z",
    fill: "#595959"
  }), __jsx("path", {
    d: "M1.17.924V.016h.436l.026.087v.738l-.026.083H1.17zm.01-.013H1.6l.023-.072V.106L1.599.03H1.18v.88z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.564.282h-.045V.154H1.17v.658h.35V.699h.044l.038-.04V.32L1.564.281z",
    fill: "#8c8c8c"
  }), __jsx("path", {
    d: "M1.18.798h.33V.686h.05l.031-.034V.325l-.03-.03h-.052V.168H1.18v.631zm.34.014h-.35V.154h.35v.128h.044l.038.036V.66L1.564.7h-.045v.113z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1.32.31h.131v.337H1.32z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.32.647V.31h.131v.337H1.32zm.01-.013h.111v-.31H1.33v.31z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1.487.807c0-.02-.012-.036-.026-.036H1.29c-.014 0-.026.016-.026.036 0 .02.012.035.026.035h.172c.014 0 .026-.016.026-.035zm0-.648c0-.02-.012-.036-.026-.036H1.29c-.014 0-.026.016-.026.036 0 .02.012.036.026.036h.172c.014 0 .026-.016.026-.036z",
    fill: "#f2f2f2"
  }), __jsx("path", {
    d: "M1.129.181h.174l.043.08v.457l-.037.064h-.18L1.093.718V.26l.036-.08z",
    fill: "#b3b3b3"
  }), __jsx("path", {
    d: "M1.129.782L1.093.718V.26l.036-.08h.174l.043.08v.457l-.037.064h-.18zm.005-.014h.17l.032-.055V.265l-.038-.07h-.164l-.031.07v.448l.03.055z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1.345.392h-.168L1.153.42v.129l.024.03h.168V.392z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.455.483c0-.034-.02-.06-.044-.06h-.178c-.024 0-.044.026-.044.06 0 .033.02.06.044.06h.178c.025 0 .044-.027.044-.06z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M1.233.54h.178l.001-.001h.006L1.42.537h.002l.001-.001h.002V.535h.002V.534h.002V.533h.001V.532h.002V.531h.001V.53h.001V.53h.001V.528h.001V.527h.001V.526h.001V.525h.001V.524h.001V.522h.001V.521h.001V.52h.001V.518h.001V.516h.001V.515l.001-.001V.513l.001-.001V.51h.001V.508l.001-.001V.505L1.45.504V.501h.001V.497l.001-.001V.49L1.453.49V.468H1.45V.464L1.45.463V.46h-.001V.457h-.001V.455L1.446.454V.452h-.001V.45h-.001V.448h-.001V.447L1.442.446V.445h-.001V.444L1.44.443V.442H1.44V.441h-.001V.44L1.437.44V.438h-.001V.437h-.001V.436h-.001V.435h-.001L1.432.434 1.431.433H1.43V.432H1.43L1.428.431h-.001V.43h-.002V.43h-.002V.428h-.002L1.42.427h-.003V.426h-.194v.001H1.22V.43h-.002V.43h-.002v.001h-.001l-.001.001h-.001v.001h-.001v.001h-.001v.001H1.21v.001H1.21v.001h-.001v.001h-.001V.44h-.001V.44h-.001v.001h-.001v.001h-.001v.002h-.001v.001h-.001v.002H1.2V.45H1.2V.45l-.001.001v.001l-.001.001v.002h-.001v.003h-.001v.003h-.001v.003l-.001.001V.47L1.192.47v.008h-.001V.496h.001V.5h.001v.003l.001.001v.002l.001.001V.51h.001v.002l.001.001v.001L1.2.515v.001L1.2.517v.001l.001.001V.52h.001V.52l.001.001v.001h.001v.001l.001.001.001.001v.001h.001v.001h.001v.001h.001V.53h.001V.53h.001l.001.001h.001v.001h.001v.001h.001l.001.001h.001v.001h.002v.001h.002l.001.001h.002l.001.001h.005V.54h.003zm0 .008h-.008V.546h-.003V.545H1.22L1.218.544h-.002V.543h-.002V.542h-.001V.541h-.002V.54H1.21V.54H1.21L1.208.538h-.001V.537h-.001V.536h-.001V.535h-.001V.534h-.001V.533L1.202.532 1.201.531V.53H1.2V.53H1.2V.528L1.198.527V.526h-.001V.525L1.196.524V.523h-.001V.521h-.001V.52h-.001V.517h-.001V.515h-.001V.512H1.19V.51H1.19V.506h-.001V.502h-.001V.497h-.001V.487h-.001V.47h.001V.464h.001V.46h.001V.457h.001V.454h.001V.451h.001V.45h.001V.447h.001V.445h.001V.443h.001V.442l.001-.001V.44h.001V.44L1.2.438V.437H1.2V.436h.001V.435l.001-.001V.433h.001V.432h.001V.431h.001V.43h.001V.43h.001V.428h.001V.427h.002V.426h.001V.425h.001l.001-.001h.001V.423h.002V.422h.002V.421h.002L1.222.42h.003V.42h.005L1.23.418h.189V.42h.003l.001.001h.002v.001h.002v.001h.002v.001h.001l.001.001h.001v.001h.001l.001.001h.001v.001h.001V.43h.001V.43h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001l.001.001v.001h.001v.001h.001V.44l.001.001v.001h.001v.002h.001v.001l.001.001v.001l.001.001v.001l.001.001v.002h.001v.002h.001v.003h.001V.46h.001v.004h.001v.004l.001.001v.007h.001V.499h-.001v.005h-.001v.003l-.001.001V.51h-.001v.002l-.001.001v.002h-.001v.002L1.45.519V.52L1.45.52v.001l-.001.001v.001h-.001v.002h-.001v.001h-.001v.002h-.001V.53L1.443.53l-.001.001v.001h-.001v.001H1.44v.001H1.44v.001h-.001v.001h-.001v.001h-.001v.001h-.001V.54h-.001L1.433.54h-.001v.001h-.001v.001H1.43v.001h-.002v.001h-.002v.001h-.002l-.001.001H1.42v.001h-.005l-.001.001h-.181z",
    fill: "#999"
  }), __jsx("path", {
    d: "M1.037.477c0-.033-.02-.06-.044-.06h-.11c-.025 0-.045.027-.045.06 0 .034.02.06.045.06h.11c.024 0 .044-.026.044-.06z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M.883.534h.115V.532h.004V.531h.002L1.006.53h.002V.53h.001L1.01.528h.001V.527h.002V.526h.001V.525h.001V.524h.001V.523h.001V.522h.001V.521h.001V.52h.001V.52h.001V.518h.001V.516h.001V.515h.001V.513h.001V.512l.001-.001V.51h.001V.508h.001V.506l.001-.001V.503h.001V.501L1.03.5V.497h.001V.493h.001V.488l.001-.001V.461h-.001V.457L1.03.456V.454L1.03.453V.451h-.001V.448h-.001V.446h-.001V.444h-.001V.442h-.001V.441L1.023.44V.44h-.001V.438L1.021.437V.436H1.02V.435H1.02V.434h-.001V.433L1.017.432 1.016.431 1.015.43h-.001V.43h-.001V.428h-.001V.427h-.001V.426H1.01V.425h-.001L1.007.424h-.002V.423h-.002V.422H1V.421H.994V.42H.874v.001H.871v.001H.87v.001H.867v.001H.865v.001H.864v.001H.862v.001H.861V.43H.86V.43H.86v.001H.858v.001H.857v.001H.856v.001H.855v.001H.854v.001H.853v.002H.852V.44H.851v.002H.85v.001L.85.444v.001H.848v.002L.847.448v.001L.846.45v.002H.845v.003H.844v.003H.843v.004H.842v.006H.841V.493h.001v.004l.001.001V.5L.846.5v.003h.001v.002h.001v.002l.001.001V.51H.85v.002H.85v.002h.001v.001l.001.001v.001h.001v.001h.001V.52h.001V.52h.001v.001h.001v.001h.001v.001H.86v.001H.86v.001h.001v.001h.002v.001h.001v.001h.001L.867.53h.001L.869.53H.87L.87.532h.002v.001h.003l.001.001h.006zm0 .009H.875V.541H.872L.871.54H.87V.54H.867L.866.538H.865L.864.537H.863V.536H.861V.535H.86V.534H.86L.858.533H.857V.532H.856V.531H.855V.53H.854V.53H.853V.528H.852V.527H.851V.526L.85.525V.524H.85V.523H.848V.522L.847.521V.52H.846V.52L.845.518V.517L.844.516V.515H.843V.513H.842V.511L.841.51V.508H.84V.506L.84.505V.503L.838.502V.5H.837V.494H.836V.488H.835V.462L.838.461V.457L.839.456V.454L.84.453V.45H.84V.447h.001V.445h.001V.443L.844.442V.441L.845.44V.44h.001V.437h.001V.436L.848.435V.434h.001V.432H.85V.431H.85V.43L.852.43.853.428V.427h.001L.855.426V.425h.001V.424h.001L.858.423.859.422H.86V.421H.86V.42h.001L.863.42h.001V.418h.002V.417h.001L.868.416H.87V.415h.003V.414h.004V.413h.126v.001h.003v.001h.002v.001h.002v.001h.002V.42h.002V.42h.001v.001h.001l.001.001h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.001V.43l.001.001v.001h.001v.001h.001v.001l.001.001v.001h.001v.001l.001.001v.001h.001V.44h.001v.002h.001v.002l.001.001v.002h.001V.45h.001v.003l.001.001v.002l.001.001V.46h.001v.005l.001.001V.496h-.001V.5L1.036.5v.002l-.001.001v.003h-.001v.002h-.001v.003h-.001v.002h-.001v.002H1.03v.002H1.03v.001L1.028.52V.52l-.001.001v.001h-.001v.001h-.001v.001l-.001.001v.001h-.001v.001h-.001v.001h-.001V.53H1.02V.53H1.02v.001h-.001v.001h-.001v.001h-.001v.001h-.001l-.001.001h-.001v.001h-.001l-.001.001H1.01v.001h-.002V.54h-.002V.54h-.003v.001H1L1 .543H.882z",
    fill: "#999"
  }), __jsx("path", {
    d: "M.718.414h.094v.13H.718z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M.721.54H.81V.417H.721V.54zM.715.547V.411h.1v.137h-.1z",
    fill: "#999"
  }), __jsx("path", {
    d: "M1.379.483c0-.021-.013-.039-.028-.039h-.114c-.015 0-.028.018-.028.039s.013.039.028.039h.114c.015 0 .028-.018.028-.04z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.237.521H1.23V.52h-.002V.518h-.002V.517h-.001L1.223.516h-.001V.515h-.001V.514H1.22V.513H1.22V.512h-.001V.511h-.001V.51L1.216.51V.508h-.001V.506h-.001V.505L1.213.504V.503L1.212.502V.5h-.001V.497H1.21V.493H1.21V.485h-.001V.473L1.21.472V.468h.001V.465h.001V.463l.001-.001V.461L1.215.46V.46h.001V.457h.001V.456l.001-.001.001-.001V.453h.001V.452h.001V.451h.001V.45h.001V.45h.001l.001-.001.001-.001h.001l.001-.001h.001L1.23.445h.002l.001-.001h.126v.001h.002v.001h.002v.001h.001l.001.001.001.001h.001v.001h.001v.001h.001v.001h.001v.001l.001.001v.001h.001v.001l.001.001V.46h.001v.002h.001v.002h.001v.003h.001V.47h.001v.004l.001.001V.496l-.001.001V.5h-.001v.002l-.001.001v.002h-.001v.002h-.001v.001l-.001.001V.51H1.37V.51H1.37v.001l-.001.001-.001.001v.001h-.001l-.001.001-.001.001h-.001v.001h-.001v.001H1.36V.52h-.002V.52h-.003l-.001.001H1.236zm0-.013h.117V.506h.003V.505h.001V.504h.001L1.36.503h.001V.502h.001V.501L1.364.5V.5h.001V.497h.001V.496l.001-.001V.493h.001V.49h.001V.472h-.001V.47h-.001V.468L1.364.467V.466h-.001V.465L1.362.464V.463h-.001V.462H1.36V.461H1.36L1.358.46h-.001V.46h-.002V.458H1.23V.46h-.002v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.002h-.001v.001L1.221.47v.002H1.22v.003H1.22V.48h-.001V.49l.001.001v.003h.001v.002h.001v.002h.001V.5h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.002v.001h.002v.001h.005z",
    fill: "#d9d9d9"
  }), __jsx("ellipse", {
    cx: 1.414,
    cy: 0.481,
    rx: 0.033,
    ry: 0.045,
    fill: "#f2f2f2"
  }), __jsx("path", {
    d: "M1.381.368c0-.014-.008-.025-.018-.025h-.162c-.01 0-.018.011-.018.025 0 .013.008.024.018.024h.162c.01 0 .018-.01.018-.024zM1.38.612c0-.014-.008-.025-.018-.025H1.2c-.01 0-.018.011-.018.025 0 .013.008.024.018.024h.162c.01 0 .018-.01.018-.024zM.987.73V.86C.986.871.97.87.969.861V.76H.866v.094C.865.862.85.862.848.854V.727h.139V.73zm0-.502V.096C.986.087.97.088.969.096v.102H.866V.103C.865.095.85.095.848.103V.23h.139V.227z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1.265.09c0-.02-.012-.035-.026-.035-.015 0-.026.016-.026.036v.767c0 .02.011.036.026.036.014 0 .026-.016.026-.036V.091z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M1.239.898h-.007V.896H1.23L1.228.895h-.001L1.226.894h-.001V.893h-.001L1.223.892 1.222.891 1.221.89 1.22.89 1.22.888V.887h-.001V.886h-.001V.885L1.216.884V.883h-.001V.881h-.001V.88h-.001V.877h-.001V.874L1.211.873V.87H1.21V.864H1.21V.08l.001-.001V.075h.001V.072h.001V.07h.001V.067h.001V.066l.001-.001V.064h.001V.063l.001-.001V.061h.001V.06h.001V.06l.001-.001h.001V.057h.001V.056h.001V.055h.001V.054h.002V.053h.001L1.23.052h.002V.051h.004V.05H1.246l.001.001h.002v.001h.002v.001h.001l.001.001h.001v.001h.001v.001h.001v.001h.001V.06h.001V.06h.001v.001h.001v.001l.001.001v.001l.001.001v.001h.001v.002h.001V.07h.001v.002l.001.001v.002l.001.001V.08l.001.001v.007h.001v.781h-.001v.004l-.001.001v.002l-.001.001v.002h-.001V.88l-.001.001v.001h-.001v.002H1.26v.001L1.26.887v.001h-.001v.001h-.001V.89h-.001V.89h-.001v.001h-.001v.001h-.001v.001h-.001v.001H1.25v.001H1.25l-.001.001h-.002v.001h-.003v.001h-.005zm0-.009h.006V.887h.002V.886h.002V.885h.001V.884h.001V.883h.001l.001-.001V.881h.001V.88h.001V.88l.001-.001V.877h.001V.875h.001V.873h.001V.871L1.26.87V.867h.001V.86h.001V.08H1.26V.077L1.26.076V.074h-.001V.072L1.257.071V.07h-.001V.068h-.001V.067L1.254.066 1.253.065V.064h-.001V.063h-.001V.062H1.25V.061h-.001V.06h-.002V.06h-.002V.058H1.231V.06H1.23v.001h-.001l-.001.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001l-.001.001v.001h-.001V.07H1.22v.002H1.22v.002h-.001v.002l-.001.001V.08h-.001v.005h-.001v.783l.001.001v.003h.001v.002l.001.001v.001l.001.001v.001h.001V.88h.001V.88h.001v.001l.001.001.001.001v.001h.001l.001.001h.001v.001h.001l.001.001h.001l.001.001h.002l.001.001h.003z",
    fill: "#999"
  }), __jsx("path", {
    d: "M1.013.206C1.013.186 1 .17.987.17.972.17.96.186.96.206v.543c0 .02.012.036.027.036.014 0 .026-.016.026-.036V.206z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M.987.789H.981L.98.787H.978V.786H.976L.975.785H.974V.784H.972V.783H.971V.782H.97V.781H.97V.78H.968V.78H.967V.778H.966V.777L.965.776V.775H.964V.774H.963V.772H.962V.77H.961V.768H.96V.765H.96V.762L.958.761V.757H.957V.193L.96.192V.19H.96V.186h.001V.184L.963.183V.182L.964.181V.18h.001V.18L.966.178V.177h.001V.176L.968.175h.001V.174L.97.173.97.172.972.171h.001V.17h.001V.17h.002V.168h.002V.167H.98V.166h.005L.986.165h.007l.001.001h.002v.001h.002V.17H1V.17H1v.001h.001v.001h.001l.001.001h.001v.001l.001.001v.001h.001v.001h.001v.001l.001.001V.18h.001v.002h.001v.002h.001v.002h.001v.002l.001.001v.003h.001v.004l.001.001V.762l-.001.001v.003h-.001v.002l-.001.001V.77H1.01v.002H1.01v.001l-.001.001v.001l-.001.001v.001h-.001v.001h-.001V.78h-.001V.78h-.001v.001h-.001v.001h-.001v.001H1v.001H1L.998.786H.997L.996.787H.995L.994.788H.992L.991.789H.986zm0-.01h.006V.777h.002L.997.776h.001V.775h.001V.774H1V.773H1V.772h.001V.771h.001V.77h.001V.768h.001V.767l.001-.001V.765h.001V.763l.001-.001V.76L1.009.76V.756L1.01.755V.193h-.001V.19h-.001V.188h-.001V.186L1.004.185V.184h-.001V.182h-.001V.181h-.001V.18H1V.18H1V.178H.998V.177H.997V.176H.995V.175H.993V.174H.991L.99.173H.98v.001H.977v.001H.975v.001H.974v.001H.973V.18H.972V.18H.971v.001H.97v.001L.97.184v.001H.968v.001L.967.187v.001L.966.189V.19H.965v.003H.964v.004H.963V.76h.001v.003h.001v.002l.001.001v.001h.001v.002H.97V.77H.97v.001h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.002v.001h.001L.98.779h.002V.78h.005z",
    fill: "#999"
  }), __jsx("path", {
    d: "M.86.35c.03 0 .055.057.055.127S.89.605.859.605C.83.605.864.548.864.477.864.407.83.35.86.35z",
    fill: "#f2f2f2"
  }), __jsx("path", {
    d: "M371 178l18-25v50l-18-25z",
    fill: "none",
    stroke: "#f2f2f2",
    strokeWidth: 3,
    strokeLinecap: "butt",
    strokeLinejoin: "bevel",
    transform: "matrix(.002 0 0 .00274 -.003 -.008)"
  }), __jsx("path", {
    d: "M.771.403c.01 0 .02.035.02.078C.79.525.78.56.77.56V.403z",
    fill: "#ebebeb"
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgShip3);

/***/ }),

/***/ "./src/games/seabattle/media/SvgShip4.tsx":
/*!************************************************!*\
  !*** ./src/games/seabattle/media/SvgShip4.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_16giunf70e() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip4.tsx";
  var hash = "78f83c84f7112777d202264d809bae9f9029c08e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip4.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 424,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 423,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 17
          },
          end: {
            line: 4,
            column: 18
          }
        },
        loc: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 423,
            column: 6
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "78f83c84f7112777d202264d809bae9f9029c08e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_16giunf70e = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_16giunf70e();

/* tslint:disable */

cov_16giunf70e().s[0]++;

const SvgShip4 = () => {
  cov_16giunf70e().f[0]++;
  cov_16giunf70e().s[1]++;
  return __jsx("g", null, __jsx("path", {
    d: "M3.997.501c-.001-.093-.309-.199-.65-.24C2.874.203 2.276.033 1.974.039 1.578.046-.002.139.003.496c.005.356 1.58.45 1.98.45.312 0 .89-.15 1.357-.216.334-.047.658-.136.657-.229z",
    fill: "#595959"
  }), __jsx("clipPath", {
    id: "ship4_svg__a"
  }, __jsx("path", {
    d: "M1980 221c-.61-41-152.92-87.6-322-106-233.6-25.42-529.31-100.304-679.004-97.882-196.293 3.175-978.35 44.245-976 201.48C5.346 375.83 784.87 417 982.996 417c154.674 0 440.884-66.063 672.004-95 165.26-20.692 325.61-60.262 325-101z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__a)",
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1762-7h215.998v434H1762z",
    fill: "#968474"
  }), __jsx("path", {
    d: "M212.998 83h-213v266h213c-17.77-72.623-20.377-181.986 0-266z",
    fill: "#404040"
  })), __jsx("path", {
    d: "M3.312.314c.064.095.06.275 0 .375",
    fill: "none",
    stroke: "#999",
    strokeWidth: 0.013
  }), __jsx("path", {
    d: "M3.835.57L3.77.56l-.004.004-.001.014.003.005.064.009.003-.023z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__b"
  }, __jsx("path", {
    d: "M1899.71 251.07l-32.17-3.86-1.83 1.796-.71 5.957 1.75 2.224 31.77 3.813 1.19-9.93z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__b)",
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1899.95 249.085l-3.97-.476-1.67 13.9 3.97.476 1.67-13.9z",
    fill: "#595959"
  })), __jsx("path", {
    d: "M3.833.424l-.065.01L3.764.43 3.763.417l.003-.005.064-.01.003.022z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__c"
  }, __jsx("path", {
    d: "M1898.79 186.9l-32.08 4.585-1.86-1.754-.85-5.94 1.7-2.26 31.67-4.53 1.42 9.9z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__c)",
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1899.07 188.88l-3.96.565-1.98-13.86 3.96-.565 1.98 13.86z",
    fill: "#595959"
  })), __jsx("ellipse", {
    cx: 3.653,
    cy: 0.446,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M3.653.473h-.005L3.646.471h-.002L3.643.47h-.002V.47H3.64V.468h-.002V.467h-.001V.466h-.001V.465h-.001V.464h-.001V.463h-.001V.461h-.001V.46L3.631.46V.458L3.63.457V.455H3.63V.452L3.628.451V.436L3.63.435V.433h.001V.431h.001V.43h.001V.428h.001V.427h.001V.426h.001V.425l.001-.001h.001V.423h.001V.422h.001l.001-.001h.001V.42h.003V.42h.003L3.65.418H3.66V.42h.003v.001h.001l.001.001h.001v.001h.001v.001h.001l.001.001.001.001v.001h.001v.001h.001V.43h.001v.002h.001v.002h.001v.002h.001v.003l.001.001V.456h-.001v.003h-.001V.46h-.001v.001h-.001v.002H3.67v.001H3.67v.001h-.001v.001h-.001v.001h-.001v.001h-.001L3.664.47h-.001L3.662.47h-.001v.001h-.003v.001h-.006zm0-.007h.004V.464h.002L3.66.463h.001V.462h.001l.001-.001h.001V.46h.001V.46h.001V.457h.001V.456h.001V.454L3.67.453V.451h.001V.436h-.001V.434h-.001V.433L3.666.432V.431h-.001V.43h-.001V.43h-.001V.428h-.001L3.661.427H3.66V.426h-.002V.425h-.005V.424h-.006l-.001.001h-.002v.001h-.001v.001h-.002V.43H3.64V.43H3.64v.001h-.001v.002h-.001v.001h-.001v.002l-.001.001V.44h-.001V.454h.001v.002l.001.001v.001h.001v.001L3.64.46V.46h.001v.001h.001l.001.001h.001v.001h.001l.001.001h.002v.001h.005z",
    fill: "#c69264"
  }), __jsx("ellipse", {
    cx: 3.653,
    cy: 0.559,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M3.653.586h-.007V.584h-.002V.583h-.002V.582H3.64V.581h-.001V.58h-.001V.58h-.001L3.635.578V.577h-.001V.576h-.001V.575L3.632.574V.573h-.001V.571H3.63V.57L3.63.568V.565h-.001V.55h.001V.546h.001V.545l.001-.001V.543h.001V.541h.001V.54h.001V.54h.001V.538h.001V.537h.001V.536h.002V.535h.001V.534h.002V.533h.003V.532H3.662v.001h.002v.001h.001l.001.001h.001v.001h.001v.001h.001V.54h.001V.54h.001v.001h.001v.001l.001.001v.001h.001v.002h.001v.002l.001.001v.003h.001V.569L3.674.57v.002h-.001v.002h-.001v.002h-.001v.001H3.67v.001L3.67.579h-.001V.58L3.667.58h-.001v.001h-.001v.001h-.001l-.001.001h-.001l-.001.001H3.66v.001h-.004v.001h-.003zm0-.007h.005V.577h.002V.576h.002V.575h.001V.574h.001V.573h.001V.572h.001V.571h.001V.57h.001V.567h.001V.564h.001V.55h-.001V.548L3.667.547V.546h-.001V.545h-.001V.543h-.001L3.663.542 3.662.541h-.001V.54H3.66V.54h-.002V.538H3.645V.54h-.002v.001h-.001v.001h-.001L3.64.544 3.64.545v.001h-.001v.001h-.001v.002h-.001V.55h-.001v.003h-.001V.567l.001.001V.57h.001V.57l.001.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.002v.001h.002v.001h.003L3.65.58h.002z",
    fill: "#c69264"
  }), __jsx("ellipse", {
    cx: 0.527,
    cy: 0.704,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M.527.731H.52L.52.73H.517V.728H.515V.727H.514V.726H.513L.512.725H.511V.724H.51V.723H.51V.722L.508.721V.72H.507V.718H.506V.717L.505.716V.714H.504V.711H.503V.693h.001V.691h.001V.69h.001V.687h.001V.686H.51V.685H.51V.684L.512.683.513.682h.001V.681h.001V.68h.001L.517.68h.001V.678H.52V.677h.004V.676H.535v.001h.002V.68h.002V.68H.54L.54.682h.001v.001h.001v.001h.001v.001h.001v.001h.001v.001h.001v.002h.001V.69L.549.69v.001L.55.693v.002H.55v.003h.001V.714H.55v.003H.548v.002H.547V.72L.546.72v.001H.545v.001H.544v.001L.543.725H.542v.001H.541v.001H.54v.001H.54L.538.729H.537L.536.73H.535L.534.73H.531L.53.732H.527zm0-.007h.006V.722h.002V.721h.002V.72h.001V.72H.54V.718H.54V.717h.001V.716L.543.715V.714h.001V.712L.545.711V.708h.001V.695H.543V.693H.542V.692L.541.691V.69H.54V.69H.54V.688H.538V.687H.537V.686H.536V.685H.534V.684H.531V.683H.52v.001H.518v.001H.517L.516.688.515.689H.514V.69L.513.69v.001H.512v.001H.511v.002H.51v.003H.51V.713l.001.001v.001h.001v.002h.001v.001h.001v.001L.516.72h.001V.72h.001v.001h.001L.52.723H.52v.001h.003l.001.001h.003z",
    fill: "#313131"
  }), __jsx("ellipse", {
    cx: 1.198,
    cy: 0.645,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M1.198.672H1.19V.67h-.002L1.187.67h-.001V.668h-.001L1.184.667h-.001V.666h-.001V.665h-.001V.664H1.18V.663H1.18V.662L1.178.661V.66h-.001V.658h-.001V.656h-.001V.653h-.001V.65L1.173.648V.636h.001V.633h.001V.631h.001V.63h.001V.628h.001V.627L1.18.626V.625h.001V.624h.001V.623h.001l.001-.001h.001V.621h.001V.62h.002V.62h.002l.001-.001h.004V.617H1.205l.001.001h.002V.62h.002v.001h.001v.001h.002v.001h.001v.001h.001v.001h.001v.001h.001v.002h.001V.63h.001v.002h.001v.002h.001v.003h.001V.64l.001.001V.654H1.22v.003H1.22v.002L1.218.66V.66h-.001v.001l-.001.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001H1.21V.67h-.002V.67h-.002v.001h-.003l-.001.001h-.004zm0-.007h.006V.663h.002V.662h.001l.001-.001h.001V.66h.001V.66h.001V.658l.001-.001V.656h.001V.654h.001V.652h.001V.648l.001-.001V.637h-.001V.635h-.001V.633h-.001V.632L1.211.631V.63H1.21V.63H1.21V.628h-.001V.627h-.002V.626h-.001L1.204.625h-.002V.624H1.191v.001H1.19v.001h-.002v.001h-.001V.63h-.001V.63h-.001v.001h-.001v.002h-.001v.002h-.001v.002H1.18v.004H1.18V.653h.001v.002h.001v.002h.001v.001h.001V.66h.001V.66h.001v.001h.001l.001.001h.001v.001h.002v.001h.003v.001h.004z",
    fill: "#313131"
  }), __jsx("ellipse", {
    cx: 1.198,
    cy: 0.339,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M1.198.366h-.006L1.19.364h-.002V.363h-.002V.362h-.001L1.184.361h-.001V.36h-.001V.36h-.001V.358H1.18V.357L1.18.356V.355h-.001V.354h-.001V.352h-.001V.35h-.001V.347h-.001V.343L1.173.342V.33h.001V.327h.001V.325h.001V.323h.001V.322h.001V.32h.001V.32h.001V.318h.001V.317h.001V.316h.002V.315h.001V.314h.002V.313h.002V.312h.004l.001-.001H1.206v.001h.002v.001h.002v.001h.001l.001.001h.001v.001h.001v.001h.001V.32h.001V.32h.001v.002h.001v.001h.001v.002h.001v.002h.001V.33h.001v.004h.001V.348H1.22V.35H1.22v.002h-.001v.002h-.001v.001l-.001.001v.001h-.001v.001h-.001V.36h-.001V.36h-.001v.001h-.001L1.21.363H1.21v.001h-.002v.001h-.002v.001h-.004v.001h-.004zm0-.007h.006V.357h.002V.356h.001V.355h.001L1.21.354h.001V.353h.001V.351h.001V.35h.001V.348h.001V.346l.001-.001V.342l.001-.001V.331h-.001V.33h-.001V.327h-.001V.325h-.001V.324H1.21V.323H1.21V.322h-.001V.321h-.001L1.206.32h-.001V.32h-.003V.318H1.191L1.19.32H1.19v.001h-.002v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.002h-.001v.001L1.181.33v.002H1.18v.004H1.18V.346l.001.001v.002h.001V.35h.001v.001h.001v.001l.001.001.001.001.001.001h.001v.001h.001v.001h.002v.001h.004V.36h.003z",
    fill: "#313131"
  }), __jsx("ellipse", {
    cx: 0.527,
    cy: 0.287,
    rx: 0.021,
    ry: 0.024,
    fill: "#404040"
  }), __jsx("path", {
    d: "M.527.314H.52V.312H.518V.311H.516L.515.31H.514V.31H.513V.308H.512L.511.307.51.306.51.305V.304H.508V.303H.507V.301H.506V.3L.505.3V.297H.504V.294H.503V.276h.001V.274L.507.273V.272L.508.271V.27h.001V.27L.51.268.51.267V.266h.001V.265h.001L.514.264h.001V.263h.001V.262h.002V.261H.52V.26h.004V.26H.535v.001h.003v.001h.001L.54.264H.54v.001h.001v.001h.001l.001.001.001.001v.001h.001V.27h.001V.27l.001.001v.001h.001v.002H.55v.002L.55.278V.28h.001V.297H.55V.3H.548v.002H.547v.001H.546v.001L.545.305v.001H.544v.001H.543v.001H.542v.001H.541V.31H.54V.31H.538v.001H.536v.001H.534L.533.314H.53v.001H.527zm0-.007h.005L.534.305h.002V.304h.001V.303h.002V.302H.54V.301H.54V.3L.542.3V.298h.001V.297L.544.296V.294h.001V.291h.001V.278H.543V.276H.542V.274H.541V.273H.54V.272L.54.271H.538V.27H.537V.27H.536V.268H.534V.267H.532V.266H.52v.001H.518V.27H.516V.27H.515v.001H.514v.001H.513v.001L.512.275v.001H.511v.002H.51V.28H.51V.296h.001v.002h.001V.3h.001V.3h.001v.001h.001v.001h.001v.001h.001v.001H.52v.001h.002v.001h.004v.001h.002z",
    fill: "#313131"
  }), __jsx("path", {
    d: "M2.284.172h-.22v.032l-.2.045-.22-.002v-.02h-.217l-.18.209v.113l.178.215h.218V.75h.221l.2.056v.032h.22l.54-.136.001-.386-.541-.142z",
    fill: "gray",
    stroke: "#737373",
    strokeWidth: 0.011
  }), __jsx("path", {
    d: "M1.38.6V.67S1.208.593 1.204.58a.338.338 0 0 1 0-.176c.004-.01.178-.083.178-.083v.08h.933V.6h-.933z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2.227.671V.322l.26.063v.21l-.26.076z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2.227.678h-.002L2.224.676 2.222.675V.675L2.221.674V.317l.001-.001.002-.001h.003l.261.062h.001l.001.001h.001V.38l.001.001v.003h.001v.213L2.492.6h-.001L2.49.6l-.002.001-.26.077h-.001zm0-.007l.26-.077v-.21l-.26-.062v.35z",
    fill: "#e6e6e6"
  }), __jsx("path", {
    d: "M1.99.417c.065 0 .104.038.104.085 0 .047-.042.085-.103.085-.092 0-.133-.038-.133-.085 0-.047.041-.085.133-.085z",
    fill: "#8c8c8c"
  }), __jsx("path", {
    d: "M1.988.435c.05 0 .082.03.082.067 0 .038-.033.068-.082.068-.073 0-.112-.03-.112-.068 0-.037.04-.067.112-.067z",
    fill: "#1a1a1a"
  }), __jsx("clipPath", {
    id: "ship4_svg__d"
  }, __jsx("circle", {
    cx: 992.5,
    cy: 221.5,
    r: 25.5
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__d)",
    transform: "matrix(.00202 0 0 .00227 -.003 0)",
    fill: "none",
    stroke: "#8c8c8c",
    strokeWidth: 5
  }, __jsx("path", {
    d: "M987 246l29-29m-43 23l36-36m-43 24l32-32"
  })), __jsx("ellipse", {
    cx: 2.002,
    cy: 0.502,
    rx: 0.052,
    ry: 0.058,
    fill: "none",
    stroke: "#8c8c8c",
    strokeWidth: 0.011
  }), __jsx("path", {
    d: "M1.545.429c.053 0 .085.033.085.073 0 .041-.034.074-.085.074-.075 0-.136-.033-.136-.074 0-.04.06-.073.136-.073z",
    fill: "#8c8c8c"
  }), __jsx("path", {
    d: "M1.541.44c.045 0 .072.028.072.062 0 .035-.03.063-.072.063-.064 0-.115-.028-.115-.063 0-.034.051-.062.115-.062z",
    fill: "#1a1a1a"
  }), __jsx("clipPath", {
    id: "ship4_svg__e"
  }, __jsx("circle", {
    cx: 766.5,
    cy: 221.5,
    r: 25.5
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__e)",
    transform: "matrix(.00202 0 0 .00227 -.003 0)",
    fill: "none",
    stroke: "#8c8c8c",
    strokeWidth: 5
  }, __jsx("path", {
    d: "M761 246l29-29m-43 23l36-36m-43 24l32-32"
  })), __jsx("ellipse", {
    cx: 1.545,
    cy: 0.502,
    rx: 0.052,
    ry: 0.058,
    fill: "none",
    stroke: "#8c8c8c",
    strokeWidth: 0.011
  }), __jsx("ellipse", {
    cx: 2.434,
    cy: 0.494,
    rx: 0.04,
    ry: 0.082,
    fill: "#b3b3b3",
    stroke: "#f2f2f2",
    strokeWidth: 0.006
  }), __jsx("path", {
    d: "M687.19 342.388c-19.263-9.002-27.58-31.916-18.578-51.18 9.002-19.262 31.916-27.58 51.18-18.578 19.262 9.003 27.58 31.916 18.578 51.18-9.003 19.263-31.916 27.58-51.18 18.578z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.392.8l.01.005.034-.082-.01-.005L1.392.8zM1.356.78l.009.006.034-.083L1.389.7 1.357.78z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M1107.66 395.964c-14.07 15.94-38.4 17.457-54.34 3.386-15.94-14.07-17.46-38.4-3.39-54.342 14.08-15.94 38.41-17.457 54.35-3.386 15.94 14.07 17.45 38.4 3.38 54.342z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M2.257.897L2.264.89l-.061-.06-.007.008.06.06zM2.23.931l.007-.008-.06-.06L2.17.87l.06.06z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M940.11 301.807c-10.74 12.167-29.31 13.324-41.477 2.584-12.167-10.738-13.324-29.308-2.585-41.475 10.74-12.167 29.31-13.324 41.476-2.584 12.167 10.74 13.324 29.31 2.585 41.477z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.913.684l.005-.007-.046-.046-.005.007.046.046zm-.02.026l.005-.007-.046-.046-.006.007.047.046z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M941.415 149.17c-10.74-12.168-29.31-13.325-41.476-2.585-12.168 10.74-13.325 29.31-2.585 41.476 10.74 12.168 29.31 13.325 41.476 2.585 12.168-10.74 13.325-29.31 2.585-41.476z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.916.339l.005.006-.046.046L1.87.385l.046-.046zm-.02-.026L1.9.319l-.046.046L1.85.36l.046-.046z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M847.607 307.644c-16.223-.43-29.026-13.93-28.596-30.153.43-16.222 13.93-29.025 30.153-28.595 16.223.43 29.026 13.93 28.596 30.152-.43 16.223-13.93 29.026-30.153 28.597z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.72.712h.008l.002-.07h-.008l-.001.07zM1.69.71h.007L1.7.641h-.008l-.001.07z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M850.606 139.738c-16.192-1.1-30.21 11.135-31.31 27.326-1.1 16.192 11.135 30.21 27.327 31.31 16.19 1.1 30.208-11.135 31.308-27.327 1.1-16.19-11.133-30.21-27.324-31.31z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.728.304h.007l-.004.07-.007-.001.004-.07zM1.697.302h.008L1.7.372 1.693.37 1.697.3z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M770.113 309.987c-14.688-6.9-21-24.402-14.1-39.09 6.9-14.69 24.402-21.002 39.09-14.1 14.69 6.9 21.002 24.402 14.1 39.09-6.9 14.688-24.402 21-39.09 14.1z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.558.721l.007.004.026-.063-.007-.004-.026.063zM1.53.706l.007.004.026-.063-.007-.003-.026.062z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M766.005 136.232c-13.07 9.62-15.865 28.015-6.245 41.084 9.62 13.07 28.015 15.866 41.085 6.245 13.07-9.62 15.865-28.014 6.245-41.083-9.62-13.07-28.015-15.866-41.085-6.245z",
    fill: "#ccc",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.546.29l.007-.005.036.056-.006.005L1.546.29zm-.024.02l.006-.005.036.056-.006.005-.036-.055z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M1107.66 50.022c-14.07-15.94-38.4-17.457-54.34-3.386-15.94 14.07-17.46 38.4-3.39 54.34 14.08 15.942 38.41 17.46 54.35 3.388 15.94-14.07 17.45-38.4 3.38-54.342z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M2.257.114l.007.009-.061.06-.007-.009.06-.06zM2.23.08l.007.009-.06.06L2.17.14l.06-.06z",
    fill: "#737373"
  }), __jsx("path", {
    d: "M677.067 115.736c9.002-19.264 31.916-27.582 51.18-18.58 19.262 9.003 27.58 31.917 18.578 51.18-9.003 19.263-31.916 27.58-51.18 18.58-19.263-9.003-27.58-31.917-18.578-51.18z",
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4,
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.344.27l-.005.01.074.039.004-.01L1.344.27zM1.36.23l-.004.01.073.038.004-.01-.073-.039z",
    fill: "#737373"
  }), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("circle", {
    cx: 861.5,
    cy: 374.5,
    r: 38.5,
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4
  }), __jsx("path", {
    d: "M869 381h5v60h-5zm-20 0h5v60h-5z",
    fill: "#e6e6e6"
  })), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("circle", {
    cx: 858.5,
    cy: 66.5,
    r: 38.5,
    fill: "#f2f2f2",
    stroke: "#a6a6a6",
    strokeWidth: 4
  }), __jsx("path", {
    d: "M866 0h5v60h-5zm-20 0h5v60h-5z",
    fill: "#e6e6e6"
  })), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1444 146h30v150h-30z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M1593 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship4_svg__f"
  }, __jsx("path", {
    d: "M1593 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__f)"
  }, __jsx("path", {
    d: "M1561 153h34v134h-34z",
    fill: "#e6e6e6"
  })), __jsx("path", {
    d: "M1593 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z",
    fill: "none",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M1593 257.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1724 256l-107-3-11.13-1.378L1585 251v19l20.87-.622L1617 268l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__g"
  }, __jsx("path", {
    d: "M1724 256l-107-3-11.13-1.378L1585 251v19l20.87-.622L1617 268l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__g)"
  }, __jsx("path", {
    d: "M1617 249v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1583 250h10v22h-10z",
    fill: "#262626"
  })), __jsx("path", {
    d: "M1593 218.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1724 217l-107-3-11.13-1.378L1585 212v19l20.87-.622L1617 229l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__h"
  }, __jsx("path", {
    d: "M1724 217l-107-3-11.13-1.378L1585 212v19l20.87-.622L1617 229l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__h)"
  }, __jsx("path", {
    d: "M1617 210v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1583 211h10v22h-10z",
    fill: "#262626"
  })), __jsx("g", null, __jsx("path", {
    d: "M1593 177.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1724 176l-107-3-11.13-1.378L1585 171v19l20.87-.622L1617 188l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__i"
  }, __jsx("path", {
    d: "M1724 176l-107-3-11.13-1.378L1585 171v19l20.87-.622L1617 188l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__i)"
  }, __jsx("path", {
    d: "M1617 169v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1583 170h10v22h-10z",
    fill: "#262626"
  })))), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1254 146h30v150h-30z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M1403 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship4_svg__j"
  }, __jsx("path", {
    d: "M1403 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__j)"
  }, __jsx("path", {
    d: "M1371 153h34v134h-34z",
    fill: "#e6e6e6"
  })), __jsx("path", {
    d: "M1403 155h-32l-73.07-8-53.16 14v117l53.23 14 73-7h32V155z",
    fill: "none",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M1403 257.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1534 256l-107-3-11.13-1.378L1395 251v19l20.87-.622L1427 268l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__k"
  }, __jsx("path", {
    d: "M1534 256l-107-3-11.13-1.378L1395 251v19l20.87-.622L1427 268l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__k)"
  }, __jsx("path", {
    d: "M1427 249v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1393 250h10v22h-10z",
    fill: "#262626"
  })), __jsx("path", {
    d: "M1403 218.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1534 217l-107-3-11.13-1.378L1395 212v19l20.87-.622L1427 229l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__l"
  }, __jsx("path", {
    d: "M1534 217l-107-3-11.13-1.378L1395 212v19l20.87-.622L1427 229l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__l)"
  }, __jsx("path", {
    d: "M1427 210v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1393 211h10v22h-10z",
    fill: "#262626"
  })), __jsx("g", null, __jsx("path", {
    d: "M1403 177.355a7.354 7.354 0 0 0-7.36-7.355h-13.28a7.354 7.354 0 0 0-7.36 7.355v6.29a7.354 7.354 0 0 0 7.36 7.355h13.28c4.07 0 7.36-3.293 7.36-7.355v-6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M1534 176l-107-3-11.13-1.378L1395 171v19l20.87-.622L1427 188l107-2v-10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__m"
  }, __jsx("path", {
    d: "M1534 176l-107-3-11.13-1.378L1395 171v19l20.87-.622L1427 188l107-2v-10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__m)"
  }, __jsx("path", {
    d: "M1427 169v24m-11-24v24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M1393 170h10v22h-10z",
    fill: "#262626"
  })))), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M523 141h30v154h-30z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M405 282h32l73.074 8 53.156-14V159L510 145l-73 7h-32v130z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship4_svg__n"
  }, __jsx("path", {
    d: "M405 282h32l73.074 8 53.156-14V159L510 145l-73 7h-32v130z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__n)"
  }, __jsx("path", {
    d: "M403 150h34v134h-34z",
    fill: "#e6e6e6"
  })), __jsx("path", {
    d: "M405 282h32l73.074 8 53.156-14V159L510 145l-73 7h-32v130z",
    fill: "none",
    stroke: "#e6e6e6",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M405.77 181.645a7.355 7.355 0 0 0 7.356 7.355h13.29a7.355 7.355 0 0 0 7.354-7.355v-6.29a7.355 7.355 0 0 0-7.355-7.355h-13.29a7.355 7.355 0 0 0-7.355 7.355v6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M274.77 183l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 171l-107 2v10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__o"
  }, __jsx("path", {
    d: "M274.77 183l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 171l-107 2v10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__o)"
  }, __jsx("path", {
    d: "M381.77 190v-24m11 24v-24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M405.77 167h10v22h-10z",
    fill: "#262626"
  })), __jsx("path", {
    d: "M405.77 220.645a7.355 7.355 0 0 0 7.356 7.355h13.29a7.355 7.355 0 0 0 7.354-7.355v-6.29a7.355 7.355 0 0 0-7.355-7.355h-13.29a7.355 7.355 0 0 0-7.355 7.355v6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M274.77 222l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 210l-107 2v10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__p"
  }, __jsx("path", {
    d: "M274.77 222l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 210l-107 2v10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__p)"
  }, __jsx("path", {
    d: "M381.77 229v-24m11 24v-24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M405.77 206h10v22h-10z",
    fill: "#262626"
  })), __jsx("g", null, __jsx("path", {
    d: "M405.77 261.645a7.355 7.355 0 0 0 7.356 7.355h13.29a7.355 7.355 0 0 0 7.354-7.355v-6.29a7.355 7.355 0 0 0-7.355-7.355h-13.29a7.355 7.355 0 0 0-7.355 7.355v6.29z",
    fill: "#262626"
  }), __jsx("path", {
    d: "M274.77 263l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 251l-107 2v10z",
    fill: "gray"
  }), __jsx("clipPath", {
    id: "ship4_svg__q"
  }, __jsx("path", {
    d: "M274.77 263l107 3 11.127 1.378 20.873.622v-19l-20.873.622L381.77 251l-107 2v10z"
  })), __jsx("g", {
    clipPath: "url(#ship4_svg__q)"
  }, __jsx("path", {
    d: "M381.77 270v-24m11 24v-24",
    fill: "none",
    stroke: "#999",
    strokeLinecap: "butt"
  }), __jsx("path", {
    d: "M405.77 247h10v22h-10z",
    fill: "#262626"
  })))), __jsx("path", {
    d: "M1.342.424a.205.205 0 0 1 0 .14L1.286.55h-.022V.439h.022l.056-.015z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 0.006
  }), __jsx("g", {
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }, __jsx("path", {
    d: "M1138 190v62l-30.98 28-14.02-10-42-5.074-3.81-6.404v-76.28l3.81-5.168 42-4.074 14.02-12.463L1138 190z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M1107.02 280L1093 270l-42-5.074-3.81-6.404v-76.28l3.81-5.168 42-4.074 14.02-12.463L1138 190v62l-30.98 28zm-.22-3.843l28.2-25.49v-59.38l-28.05-26.675-11.96 10.63-.29.233-.33.193-.34.15-.37.108-.37.06-40.67 3.945-2.43 3.298v74.47l2.63 4.427 40.54 4.897.37.068.35.113.34.157.32.198 12.06 8.6z",
    fill: "#e6e6e6"
  }), __jsx("ellipse", {
    cx: 1105.33,
    cy: 220.268,
    rx: 16.331,
    ry: 29.889,
    fill: "#b3b3b3",
    stroke: "#f2f2f2",
    strokeWidth: 3
  })), __jsx("g", null, __jsx("path", {
    d: "M663.495 204.14c7.83 7.83 7.83 20.525 0 28.355-7.83 7.83-20.524 7.83-28.354 0-7.83-7.83-7.83-20.524 0-28.354 7.83-7.83 20.525-7.83 28.355 0z",
    fill: "#b3b3b3",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter",
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  }), __jsx("path", {
    d: "M1.358.55a.006.006 0 0 0 0-.008L1.274.447a.005.005 0 0 0-.007 0l-.008.008a.006.006 0 0 0 0 .009l.084.094a.005.005 0 0 0 .008 0L1.358.55z",
    fill: "gray"
  }), __jsx("path", {
    d: "M678.787 244.09a2.617 2.617 0 0 0 0-3.698l-51.543-51.543a2.613 2.613 0 0 0-3.698 0l-3.697 3.696a2.613 2.613 0 0 0 0 3.698l51.542 51.543a2.616 2.616 0 0 0 3.697 0l3.697-3.698z",
    fill: "#f2f2f2",
    stroke: "#ccc",
    strokeWidth: 2,
    strokeLinecap: "butt",
    strokeLinejoin: "miter",
    transform: "matrix(.00202 0 0 .00227 -.003 0)"
  })));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgShip4);

/***/ }),

/***/ "./src/games/seabattle/media/SvgShip5.tsx":
/*!************************************************!*\
  !*** ./src/games/seabattle/media/SvgShip5.tsx ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_8z5reqhox() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip5.tsx";
  var hash = "ed1c465eab2b5a06599fe5096fa518ea6e646c5c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/media/SvgShip5.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 1875,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 1874,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 17
          },
          end: {
            line: 4,
            column: 18
          }
        },
        loc: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 1874,
            column: 6
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed1c465eab2b5a06599fe5096fa518ea6e646c5c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_8z5reqhox = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_8z5reqhox();

/* tslint:disable */

cov_8z5reqhox().s[0]++;

const SvgShip5 = () => {
  cov_8z5reqhox().f[0]++;
  cov_8z5reqhox().s[1]++;
  return __jsx("g", null, __jsx("path", {
    d: "M4.996.42s-.271.304-.781.354L4.213.082c.51.012.783.337.783.337z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__a"
  }, __jsx("path", {
    d: "M2520 200s-136.88 145.212-394 169l-1-330c257 6.073 395 161 395 161z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__a)",
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M2429 98h-93v225h93c-16.75-85.87-16.74-160.86 0-225z",
    fill: "#8c8c8c"
  })), __jsx("path", {
    d: "M4.212.777L4.21.079H4.246l.001.001h.016l.002.001h.011l.002.001h.011l.001.001H4.3L4.3.085H4.31l.001.001H4.32l.001.001h.007l.001.001h.007l.002.001h.005l.002.001h.007V.09h.006l.002.001h.005l.002.001h.004v.001h.006l.002.001h.004l.001.001h.005l.003.001h.003l.002.001H4.4l.003.001h.002L4.407.1h.002L4.412.1h.003l.002.001h.003l.002.001h.003l.003.001.002.001h.003l.002.001h.003l.002.001h.003l.002.001h.003L4.45.11h.005l.003.001h.003l.002.002h.005l.002.001.003.001h.002l.003.001h.002l.003.002h.005l.002.001.003.001h.002l.002.001.003.001h.002l.003.001.002.001h.002l.003.002h.005l.002.002h.002l.003.001h.002l.002.001.003.001h.002l.002.002h.003l.002.001h.002l.003.002h.002l.002.001h.002l.003.002h.002l.002.001h.003l.002.002h.002l.002.001.003.001h.002l.002.002h.002l.002.001.003.001h.002l.002.002h.002L4.59.15l.002.001h.002l.002.002h.002L4.6.155l.003.001.002.001h.002l.002.002h.002l.002.001.002.001.002.001h.003l.002.002h.002l.002.001.002.001.002.001.002.001h.002l.002.002h.002l.002.002h.002l.003.001.002.001.002.001.002.001h.002l.002.002h.002l.002.002h.002l.002.001.002.001.002.001.002.001.002.001h.002l.001.002h.002l.002.002h.002l.002.001.002.001.002.001.002.001.002.001.002.001.002.001h.002l.002.002h.001L4.701.2h.002l.002.002h.002l.002.001.002.001.001.001.002.001.002.001.002.001.002.001.002.001.001.001.002.001.002.001h.002l.001.002h.002l.002.002h.002l.002.002h.001l.002.002h.002l.002.002h.001l.002.001.002.001.001.001.002.001.002.001.002.001.001.001.002.001.002.001.001.001.002.001.002.001.001.001.002.001.002.001.001.001.002.001.002.001h.001l.002.002h.001l.002.002h.002l.001.002h.002l.001.002h.002l.002.002h.001l.002.002h.001L4.8.255H4.8l.002.002h.001l.002.001.001.001.002.001.002.001.001.001.002.001.001.001.002.001.001.001.001.001.002.001.001.001.002.001.001.001.002.001.001.001.002.001h.001l.001.002h.002l.001.002h.002l.001.002h.002v.002h.002l.002.002h.001l.001.001.002.001.001.001.001.001.002.001.001.001.001.001.002.001.001.001.001.001h.002l.001.002h.001l.002.002.002.002h.001L4.868.3v.001l.002.001.001.001.002.001v.001l.002.001h.001l.002.002.002.002h.001l.001.002h.001l.002.001v.001l.002.001.001.001h.001l.001.002h.002V.32h.002l.001.001.001.001.001.001.001.001H4.9l.002.002.002.002.002.001V.33l.002.001h.001l.001.002h.001l.001.001.001.001.001.001.001.001h.001l.001.002h.001l.001.001.001.001.001.001h.001l.001.002h.001l.001.001.001.001.002.002.002.001.002.002.001.002.002.002.002.002.002.002.001.002.002.002.002.001.001.001.002.001.002.001.001.001.002.001.001.001.002.001.001.001.002.001.001.001.001.001.002.001.001.001.002.001V.38l.002.001.001.001.002.001v.001l.002.001.001.001.001.001.001.001.001.001.002.001V.39l.002.001v.001l.001.001.001.001.001.001.001.001.001.001.002.002.001.001.001.001.001.002h.001v.001h.001v.001h.001l.001.002.001.001.001.001h.001v.002h.001l.001.001L5 .414l-.002.002v.001l-.001.001V.42h-.002v.002h-.001l-.002.002-.001.001v.001h-.002v.001l-.001.001-.001.002h-.001L4.985.43v.001l-.002.001-.002.002-.001.002h-.001l-.001.001-.001.001-.001.001-.002.001v.001l-.002.001v.001L4.97.444l-.001.001-.001.001-.002.001-.001.001-.001.001-.002.001v.001L4.96.452l-.002.001-.001.001-.002.001-.001.001-.001.001-.002.001-.002.001-.001.001-.002.001-.001.001-.002.001-.002.001-.001.001-.002.001-.002.001-.001.001-.002.002-.002.002-.002.002-.002.002-.002.002-.001.002-.002.002-.002.002-.002.002-.002.002-.002.002-.001.001-.001.001H4.91L4.91.495h-.001l-.001.001-.002.001v.001h-.002V.5h-.002V.5L4.9.501 4.9.502l-.001.001h-.001l-.001.002h-.001l-.002.001v.001L4.89.508 4.89.51h-.001l-.001.002h-.001l-.002.002-.002.001-.001.001-.001.001h-.002v.002h-.002L4.876.52h-.001l-.002.001v.001L4.87.523 4.87.524l-.002.001-.002.002h-.001L4.863.53 4.86.532H4.86l-.002.001-.001.001-.001.001-.002.001-.001.001-.001.001H4.85L4.85.54h-.001l-.002.002h-.001l-.001.002h-.002l-.001.001-.002.001-.001.001-.001.001-.002.001-.001.001-.002.001-.001.001-.001.001-.002.001h-.001l-.002.002h-.001l-.002.002h-.001L4.819.56h-.001l-.001.002h-.002l-.001.002h-.002l-.001.001-.002.001-.001.001-.002.001-.001.001-.002.001-.002.001L4.8.571l-.002.001-.001.001-.002.001-.001.001-.002.001-.001.001-.002.001h-.002L4.786.58h-.002l-.001.002H4.78l-.002.002h-.001l-.002.002h-.002l-.001.002H4.77L4.77.59h-.002l-.002.002h-.001l-.002.002H4.76L4.76.595l-.002.001-.002.001-.002.001L4.753.6 4.75.6l-.002.001-.001.001-.002.001-.002.001-.002.001-.001.001-.002.001-.002.001-.002.001-.001.001-.002.001-.002.001-.002.001h-.002l-.001.002h-.002L4.72.618H4.72L4.717.62h-.001l-.002.002h-.002L4.71.624h-.002l-.002.002h-.001l-.002.001L4.7.627l-.002.001-.002.001-.002.001-.002.001-.002.001-.001.001-.002.001-.002.001-.002.001-.002.001H4.68L4.678.64h-.002l-.002.002h-.002L4.67.644h-.002l-.002.002h-.002l-.002.001-.002.001-.002.001-.002.001-.002.001-.002.001-.002.001h-.002l-.002.002h-.002l-.002.002H4.64l-.002.002h-.002L4.634.66 4.632.66 4.63.661l-.002.001-.002.001h-.003l-.002.002H4.62l-.002.002h-.002l-.002.001L4.61.67 4.609.67l-.003.001-.002.001h-.002L4.6.675h-.002l-.002.002h-.003l-.002.001-.002.001-.002.001h-.002l-.002.002H4.58l-.002.002h-.002l-.002.001-.003.001-.002.001h-.002l-.002.002h-.003L4.56.69 4.558.69l-.002.001h-.003l-.002.002H4.55l-.003.001-.002.001-.002.001H4.54l-.003.002h-.002L4.533.7 4.53.7h-.002l-.002.002h-.003l-.002.001-.003.001h-.002l-.002.002H4.51L4.51.707l-.002.001h-.003L4.502.71h-.003l-.002.001h-.002l-.003.002H4.49l-.003.001h-.002l-.003.002H4.48l-.003.001h-.002L4.472.72H4.47L4.468.72h-.003l-.002.001-.003.001h-.002l-.003.002h-.002L4.45.725h-.003l-.002.001-.003.001H4.44l-.003.001-.002.001h-.003L4.43.73l-.003.001h-.003l-.002.001-.003.001h-.002l-.003.001-.003.001H4.41l-.003.001-.002.001H4.4l-.003.001h-.002L4.393.74 4.39.74h-.002l-.003.001h-.003L4.38.743l-.003.001h-.003l-.002.001h-.003l-.003.001h-.002L4.36.747l-.003.001h-.003l-.002.001H4.35L4.347.75h-.003L4.342.75h-.003l-.003.001h-.003l-.002.001h-.003l-.003.001h-.003L4.32.755h-.003l-.003.001H4.31l-.003.001h-.003l-.002.001H4.3l-.003.001H4.29L4.288.76h-.002L4.283.76H4.28l-.003.001h-.006l-.003.001h-.003l-.002.001h-.006l-.003.001h-.006l-.003.001h-.006l-.003.001H4.23l-.003.001h-.006L4.22.769h-.008zM4.218.77h.008L4.23.768h.006l.003-.001h.006l.003-.001h.006l.003-.001h.003l.003-.001h.005L4.27.763h.003l.003-.001h.006l.002-.001h.003L4.29.76h.003L4.296.76H4.3l.003-.001h.003L4.31.757h.003l.003-.001h.002l.003-.001h.003l.003-.001h.002l.003-.001h.003l.003-.001h.002l.003-.001h.003L4.349.75h.002L4.354.75l.003-.001h.002l.003-.001h.003l.003-.001h.002l.003-.001.003-.001h.002l.003-.001h.003l.002-.001h.003L4.392.74h.005L4.399.74l.003-.001h.003l.002-.001h.003l.002-.002h.006L4.42.734l.003-.001h.002l.003-.001.002-.001h.003L4.436.73 4.438.73h.003l.002-.002h.005l.003-.002h.002l.003-.001h.002l.003-.001.002-.001h.003L4.468.72h.003L4.473.72h.003l.002-.002h.002l.003-.001h.002l.003-.001.002-.001.003-.001h.002l.002-.002H4.5L4.502.71h.003l.002-.002h.002l.003-.001.002-.001h.002L4.52.704h.002l.002-.001h.003l.002-.002h.002L4.533.7 4.535.7l.002-.001h.003l.002-.002h.002l.003-.001.002-.001h.002l.002-.002h.003l.002-.001L4.56.69 4.562.69h.003l.002-.002h.002l.002-.001.003-.001.002-.001.002-.001h.002l.002-.002h.003L4.587.68h.002L4.59.679l.002-.001.002-.001h.003L4.6.674h.002l.002-.002h.002l.002-.001L4.61.67 4.613.67l.002-.001h.002l.002-.002h.002l.002-.002h.002l.002-.001.002-.001.002-.001.002-.001.002-.001.002-.001h.002l.003-.002h.002l.002-.002h.002L4.65.652h.002l.002-.001.002-.001.002-.001.002-.001.002-.001.002-.001.001-.001h.002L4.67.643h.002l.002-.002h.002L4.677.64h.002l.002-.002h.002l.002-.001.002-.001.002-.001.001-.001.002-.001.002-.001.002-.001.002-.001L4.7.629l.002-.001h.002l.001-.002h.002L4.71.623h.002l.002-.002h.002L4.716.62h.002L4.72.617h.002l.002-.001.001-.001.002-.001.002-.001.002-.001.001-.001.002-.001.002-.001.002-.001.001-.001.002-.001.002-.001.002-.001.001-.001.002-.001.002-.001.001-.001h.002l.002-.002h.001l.002-.002h.002L4.76.594h.002l.002-.002h.001L4.768.59h.002L4.77.588h.002l.002-.002h.001l.002-.001.001-.001.002-.001.002-.001.001-.001.002-.001.001-.001.002-.001.001-.001.002-.001.002-.001.001-.001.002-.001.001-.001L4.8.572H4.8L4.803.57h.001l.002-.002h.001L4.81.565h.001l.002-.002h.001l.002-.002h.001L4.818.56 4.819.56 4.82.559l.002-.001.001-.001.002-.001.001-.001.002-.001.001-.001.001-.001h.002L4.833.55h.002V.547h.002L4.84.545h.001l.001-.001.002-.001.001-.001.001-.001.002-.001.001-.001.001-.001.002-.001h.001l.001-.002h.002V.533h.002l.001-.001.002-.001L4.86.53 4.862.53l.002-.001V.528h.002l.001-.002h.001L4.87.523l.002-.001.001-.001.002-.001V.52h.002l.001-.002h.001L4.88.515h.002V.515l.002-.001.001-.001h.001L4.887.51h.002V.508h.002V.508l.002-.001h.001l.001-.002h.001l.001-.001.001-.001L4.9.502 4.901.5l.002-.002.002-.001V.497h.002V.494h.002V.493l.003-.002.002-.002.002-.002.002-.002.002-.002.002-.002.001-.002.002-.002.002-.002.002-.002.002-.001.001-.001.002-.001.002-.001.001-.001.002-.001.002-.001.001-.001.002-.001.001-.001.002-.001.001-.001L4.95.46 4.95.46l.002-.001.001-.001.002-.001V.456l.002-.001.002-.001V.453l.002-.001.001-.001.002-.001V.449l.002-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.001-.001.002-.002.001-.001.001-.001.002-.002h.001V.428h.001l.001-.001.001-.001.001-.001.001-.001.002-.002L4.99.42H4.99L4.989.418h-.001V.417h-.001V.415h-.002V.413h-.001L4.983.413 4.982.412 4.98.41 4.979.408 4.978.408 4.977.407V.406L4.974.405V.404L4.972.403V.402L4.97.4 4.97.4 4.969.399 4.968.398 4.967.397 4.965.396V.395L4.962.394 4.962.393 4.96.392 4.959.39 4.958.39 4.957.389 4.955.388 4.954.387 4.952.386 4.951.385 4.95.384 4.948.383 4.947.382 4.945.38 4.943.38 4.942.379 4.94.378 4.94.377 4.937.376 4.935.375 4.934.373 4.932.37 4.93.369 4.928.367 4.927.365 4.925.363 4.924.362h-.001L4.922.36H4.92L4.92.359V.358h-.002V.355h-.002V.355L4.913.354 4.911.351 4.91.35V.35L4.907.349 4.905.346 4.903.345V.345L4.901.344 4.901.343H4.9L4.899.34h-.001L4.897.34 4.896.339 4.894.338V.337L4.891.336 4.89.333H4.89L4.888.331h-.001L4.886.33 4.884.33V.329L4.881.328h-.001L4.88.325h-.001L4.877.323 4.874.323 4.874.322 4.873.32 4.87.32V.319L4.868.318h-.001L4.866.315 4.863.313h-.001L4.86.311 4.858.31 4.858.31 4.856.309V.308L4.853.307 4.852.306V.305H4.85L4.849.302h-.002L4.846.3h-.001L4.843.298h-.001L4.84.296 4.837.296 4.836.295 4.835.294 4.834.293 4.832.292 4.831.29 4.829.29 4.828.289 4.827.288 4.825.287 4.824.286h-.002L4.821.283h-.002L4.818.281h-.001L4.815.28h-.001L4.812.277h-.001L4.809.275h-.001L4.806.273h-.001L4.803.273 4.802.272 4.8.27 4.8.27 4.797.269 4.796.268 4.794.267 4.792.266 4.791.265 4.789.264 4.788.263 4.786.262 4.785.26 4.783.26 4.781.259 4.78.258 4.778.257h-.001L4.775.254h-.002L4.772.252H4.77L4.768.25h-.001L4.765.248h-.001L4.762.246H4.76L4.76.244h-.002L4.755.243 4.753.243 4.752.242 4.75.24 4.748.24 4.747.239 4.745.238 4.743.237 4.741.236 4.74.235 4.738.234 4.736.233 4.735.232h-.002L4.73.23h-.002L4.728.227h-.002L4.724.225h-.002L4.72.223H4.72L4.717.222 4.715.222 4.713.22 4.711.22 4.71.219 4.708.218 4.706.217 4.704.216 4.702.215H4.7L4.698.212h-.001L4.695.21h-.002L4.69.208h-.002L4.687.208 4.685.207 4.683.206 4.681.205 4.68.204 4.678.203h-.002L4.674.2h-.002L4.67.198h-.002L4.666.197 4.664.197 4.662.196 4.66.195 4.658.194h-.002L4.654.191h-.002L4.65.19h-.002L4.646.189 4.644.188 4.642.187 4.64.186h-.002L4.636.183h-.002L4.632.182 4.63.182 4.628.18 4.626.18h-.003L4.621.177H4.62L4.617.175h-.002L4.613.175 4.611.174h-.002L4.607.171h-.002L4.602.17 4.6.17 4.598.169h-.002L4.594.166h-.002L4.589.166 4.587.165h-.002L4.583.162H4.58L4.579.161 4.576.16h-.002L4.572.158H4.57L4.567.158 4.565.157h-.002L4.561.154h-.003L4.556.154h-.002L4.552.151h-.003L4.547.15h-.002L4.543.148H4.54L4.538.148h-.002L4.533.145h-.002L4.529.145h-.003L4.524.143 4.522.143h-.003L4.517.14h-.002L4.512.14H4.51L4.508.138 4.505.138h-.002L4.5.136 4.498.136h-.002L4.493.134 4.491.134h-.003L4.486.132 4.484.132H4.48L4.48.13 4.476.13h-.002L4.47.128H4.47L4.466.127 4.464.127H4.46L4.46.125h-.003L4.454.124 4.45.124H4.45L4.446.122h-.002L4.44.121H4.44L4.436.12 4.434.12H4.43L4.43.118h-.003L4.424.117H4.42L4.418.116h-.002L4.413.115h-.002L4.408.114h-.003L4.403.113H4.4L4.398.112h-.003L4.392.111H4.39L4.387.11h-.003L4.382.11h-.004L4.376.108h-.004L4.37.107h-.006L4.363.106h-.005L4.356.105h-.005L4.349.104h-.005L4.343.103h-.007L4.334.102h-.005L4.328.101H4.32L4.319.1h-.008L4.309.1h-.008L4.3.098H4.29L4.29.097H4.278L4.277.096H4.265L4.264.095H4.249L4.248.094H4.227L4.226.093H4.216l.002.685z",
    fill: "#999"
  }), __jsx("path", {
    d: "M4.722.008L3.532 0H.064L0 .077v.745l.063.063h3.474l.948-.147h.237v-.73z",
    fill: "#595959"
  }), __jsx("clipPath", {
    id: "ship5_svg__b"
  }, __jsx("path", {
    d: "M2382 4l-600-4H32L0 36.58V392l32 30h1752l478.14-70H2382V4z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__b)",
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M633 257h550v226H633z",
    fill: "none",
    stroke: "#ca2923",
    strokeWidth: 3,
    strokeDasharray: "24 24 0 0"
  }), __jsx("path", {
    d: "M1776-42h301v511h-301zm-301 0h301v511h-301zm-951 0h301v511H524z",
    fill: "none",
    stroke: "gray",
    strokeWidth: 3
  }), __jsx("path", {
    d: "M-19 45h2423v147H-19z",
    fill: "#8c8c8c"
  }), __jsx("path", {
    d: "M-19 192V45h2423v147H-19zm5-5h2413V50H-14v137z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M-19 93h2423v51H-19z",
    fill: "#404040",
    stroke: "#fff",
    strokeWidth: 4
  })), __jsx("path", {
    d: "M.063.885L0 .822V.077L.063 0h3.47l1.19.008v.73h-.238l-.948.146H.063zm.004-.01h3.47l.947-.148h.228V.02L3.532.01H.069L.01.08v.737l.057.057z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2.61.757c0-.084 0-.084-.08-.084H1.15a.082.082 0 0 0-.08.084V.83c0 .046.036.084.08.084H2.215V.887h.316c.079 0 .08-.001.08-.057V.757z",
    fill: "#8c8c8c"
  }), __jsx("path", {
    d: "M1.149.914H1.136V.912h-.005V.911h-.003L1.127.91h-.003V.91h-.003V.908H1.12V.907h-.002L1.116.906h-.001L1.114.905h-.001L1.112.904h-.001L1.11.903H1.11V.902h-.002V.901h-.001V.9h-.001L1.104.9h-.001V.898h-.001L1.101.897 1.1.896H1.1V.895h-.001V.894h-.001V.893h-.001L1.095.892 1.094.891 1.093.89 1.092.89V.888h-.001V.887H1.09V.886H1.09V.885h-.001V.884h-.001V.882h-.001V.881h-.001V.88h-.001V.878h-.001V.877L1.082.876V.875h-.001V.874L1.08.873V.872H1.08V.87h-.001V.868h-.001V.866h-.001V.864L1.075.863V.861h-.001V.86L1.073.858V.855h-.001V.852L1.071.851V.848L1.07.847V.842L1.07.842V.74h.001V.735l.001-.001V.731h.001V.728h.001V.725h.001V.723h.001V.721L1.078.72V.718h.001V.717L1.08.716V.715L1.08.714V.713h.001V.711h.001V.71L1.084.71V.708h.001V.707l.001-.001V.705h.001V.704h.001V.703l.001-.001.001-.001V.7h.001V.7h.001V.698h.001V.697l.001-.001.001-.001h.001V.694h.001V.693h.001V.692h.001V.691H1.1V.69H1.1L1.102.69h.001V.688h.001V.687h.001l.001-.001h.001V.685h.001l.001-.001h.001V.683h.001l.001-.001h.001l.001-.001h.001L1.116.68h.002V.68h.002V.678h.002l.001-.001h.002V.676h.003l.001-.001h.003V.674h.005V.673H1.147V.672H2.573l.001.001h.008v.001h.004l.001.001h.003v.001h.002l.001.001h.001l.001.001h.001l.001.001h.001v.001h.001v.001H2.6v.001H2.6v.001h.001v.001h.001v.001l.001.001v.001h.001V.69h.001v.002l.001.001v.002l.001.001V.7L2.609.7v.005l.001.001V.717h.001V.865h-.001v.004h-.001v.003h-.001v.002l-.001.001v.001h-.001v.001h-.001v.001l-.001.001-.001.001H2.6V.88H2.6v.001h-.002v.001h-.002v.001h-.002l-.001.001H2.59v.001h-.005v.001h-.008l-.001.001H2.548l-.002.001h-.331v.027H1.15zm0-.01h1.056V.875H2.576l.001-.001h.007V.873h.004V.872h.003V.871h.002V.87h.002V.87h.001V.868l.001-.001V.866h.001V.862H2.6V.856H2.6V.706L2.598.705V.7h-.001V.696h-.001V.694h-.001V.692h-.001V.69h-.001V.69h-.001V.688H2.59V.687H2.59L2.588.686h-.002V.685h-.003V.684h-.005V.683H2.568L2.568.682H1.134v.001h-.003L1.13.686h-.003v.001h-.003v.001h-.002v.001H1.12V.69h-.002L1.117.69h-.001l-.001.001h-.001v.001h-.001l-.001.001h-.001v.001H1.11L1.11.696h-.001v.001h-.001v.001h-.001l-.001.001L1.104.7h-.001V.7h-.001v.001h-.001v.001H1.1v.001H1.1v.001h-.001v.001l-.001.001-.001.001v.001h-.001V.71h-.001V.71h-.001v.001l-.001.001v.001h-.001v.001L1.09.716v.001H1.09v.002h-.001V.72h-.001v.001l-.001.001v.001l-.001.001v.002h-.001v.002L1.083.73v.002h-.001v.003l-.001.001v.003L1.08.74v.004L1.08.745v.101h.001V.85h.001v.003l.001.001v.002l.001.001v.002h.001V.86h.001v.002l.001.001v.001l.001.001v.001h.001v.002h.001V.87l.001.001v.001h.001v.001l.001.001.001.001v.001h.001v.001l.001.001v.001h.001V.88h.001V.88H1.1v.001H1.1v.001h.001v.001h.001v.001h.001v.001h.001v.001h.001l.001.001h.001v.001h.001V.89h.001V.89h.002v.001h.001l.001.001h.001v.001h.002v.001h.001l.001.001h.001l.001.001h.002v.001h.002v.001h.002L1.128.9h.003V.9h.004v.001h.005l.001.001h.008z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M2.096.8a.102.102 0 0 0-.1-.104h-.164c-.055 0-.1.047-.1.105 0 .058.045.105.1.105h.164c.055 0 .1-.047.1-.105z",
    fill: "#333"
  }), __jsx("clipPath", {
    id: "ship5_svg__c"
  }, __jsx("path", {
    d: "M1057 382.012c0-27.607-22.38-49.988-49.99-49.988h-83.022c-27.608 0-49.988 22.38-49.988 49.988S896.38 432 923.988 432h83.022c27.61 0 49.99-22.38 49.99-49.988z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__c)",
    transform: "matrix(.00198 0 0 .0021 0 0)",
    fill: "#4d4d4d"
  }, __jsx("path", {
    d: "M1056.18 412.794l-86.346-92.77-20.262 12.616 86.338 92.77 20.27-12.616zm-66.027 15.616l-86.342-92.77-20.262 12.615 86.342 92.77 20.263-12.616z"
  })), __jsx("path", {
    d: "M2.096.8a.102.102 0 0 0-.1-.104h-.164c-.055 0-.1.047-.1.105 0 .058.045.105.1.105h.164c.055 0 .1-.047.1-.105z",
    fill: "none",
    stroke: "#4d4d4d",
    strokeWidth: 0.02
  }), __jsx("path", {
    d: "M1.56.8a.102.102 0 0 0-.099-.104h-.164c-.055 0-.1.047-.1.105 0 .058.045.105.1.105h.164c.055 0 .1-.047.1-.105z",
    fill: "#333"
  }), __jsx("clipPath", {
    id: "ship5_svg__d"
  }, __jsx("path", {
    d: "M787 382.012c0-27.607-22.38-49.988-49.988-49.988h-83.024c-27.608 0-49.988 22.38-49.988 49.988S626.38 432 653.988 432h83.024C764.62 432 787 409.62 787 382.012z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__d)",
    transform: "matrix(.00198 0 0 .0021 0 0)",
    fill: "#4d4d4d"
  }, __jsx("path", {
    d: "M786.176 412.794l-86.342-92.77-20.262 12.616 86.342 92.77 20.262-12.616zm-66.023 15.616l-86.342-92.77-20.262 12.615 86.342 92.77 20.263-12.616z"
  })), __jsx("path", {
    d: "M1.56.8a.102.102 0 0 0-.099-.104h-.164c-.055 0-.1.047-.1.105 0 .058.045.105.1.105h.164c.055 0 .1-.047.1-.105z",
    fill: "none",
    stroke: "#4d4d4d",
    strokeWidth: 0.02
  }), __jsx("path", {
    d: "M2.183.943V.627l.1.012.064.028.11.016v.193l-.102.017-.06.026-.112.024z",
    fill: "#b3b3b3"
  }), __jsx("path", {
    d: "M2.183.943V.627l.1.012.064.028.11.016v.193l-.102.017-.06.026-.112.024zm.01-.013L2.29.908l.062-.025.093-.016V.693L2.345.677 2.28.65 2.193.639V.93z",
    fill: "#d9d9d9"
  }), __jsx("path", {
    d: "M2.393.685a.262.262 0 0 1 0 .19l-.081-.02H2.28v-.15h.032l.08-.02z",
    fill: "#ccc",
    stroke: "#e6e6e6",
    strokeWidth: 0.006
  }), __jsx("path", {
    d: "M2.383.738c.02.022.02.057 0 .079a.05.05 0 0 1-.075 0 .058.058 0 0 1 0-.08.05.05 0 0 1 .075 0z",
    fill: "#b3b3b3",
    stroke: "#ccc",
    strokeWidth: 0.004,
    strokeLinecap: "butt",
    strokeLinejoin: "miter"
  }), __jsx("path", {
    d: "M2.41.845c.003-.003.003-.007 0-.01L2.3.717a.006.006 0 0 0-.01 0l-.009.01c-.003.003-.003.007 0 .01l.11.117a.006.006 0 0 0 .01 0l.01-.01z",
    fill: "gray"
  }), __jsx("path", {
    d: "M2.424.85c.002-.004.002-.008 0-.011L2.288.695a.006.006 0 0 0-.01 0l-.01.01c-.003.003-.003.007 0 .01l.136.145a.006.006 0 0 0 .01 0l.01-.01z",
    fill: "#f2f2f2",
    stroke: "#ccc",
    strokeWidth: 0.004,
    strokeLinecap: "butt",
    strokeLinejoin: "miter"
  }), __jsx("path", {
    d: "M1.685.647A.046.046 0 0 0 1.641.6a.046.046 0 0 0-.045.047v.302c0 .026.02.047.045.047a.046.046 0 0 0 .044-.047V.647z",
    fill: "#ccc"
  }), __jsx("path", {
    d: "M1.64.999h-.008V.997h-.004V.996h-.003V.995h-.002L1.621.994H1.62L1.62.993h-.001V.992h-.002V.991h-.001L1.614.99h-.001V.99h-.001V.988h-.001L1.61.987H1.61V.986h-.001V.985h-.001V.984h-.001V.983h-.001V.982L1.604.981 1.603.98V.98h-.001V.978L1.601.977V.976H1.6V.975L1.6.974V.973h-.001V.971h-.001V.97L1.596.968V.966h-.001V.963h-.001V.96h-.001V.951h-.001V.636h.001V.632h.001V.63l.001-.001V.626h.001V.624h.001V.622H1.6V.62H1.6V.618h.001V.617h.001V.615h.001V.614h.001V.613h.001V.612h.001V.611L1.608.61 1.609.61h.001V.608h.001V.607h.001V.606h.001V.605h.001V.604h.002V.603h.001l.001-.001h.001V.601h.002V.6h.002L1.624.6h.002V.598h.003V.597h.005V.596H1.653v.001h.003V.6h.003V.6h.002v.001h.002v.001h.001l.001.001h.001v.001h.001l.001.001h.001v.001h.001v.001h.001l.001.001.001.001.001.001.001.001.001.001v.001h.001v.001h.001v.001h.001v.001l.001.001v.001h.001V.62h.001v.002h.001v.001l.001.001v.002h.001v.002h.001v.003h.001v.004h.001v.007h.001V.96h-.001v.004h-.001v.003h-.001v.002L1.683.97v.002h-.001v.002h-.001v.002H1.68v.001H1.68v.002h-.001V.98h-.001V.98l-.001.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001h-.001v.001H1.67v.001h-.002V.99h-.001V.99h-.001v.001h-.002v.001h-.001l-.001.001h-.001v.001H1.66v.001h-.003v.001h-.002l-.001.001H1.65L1.65.999h-.008L1.64 1zm0-.006h.008L1.65.991h.003V.99h.003V.99h.002V.988h.002V.987h.002V.986h.001l.001-.001h.001V.984h.001V.983h.001l.001-.001.001-.001L1.67.98 1.67.98l.001-.001V.977h.001V.976h.001V.975l.001-.001V.973h.001V.972l.001-.001V.97h.001V.968h.001V.966L1.68.965V.963L1.68.962V.96h.001V.953h.001V.637L1.68.636V.633H1.68V.63h-.001V.627h-.001V.626L1.676.625V.624L1.675.623V.622h-.001V.621L1.673.62V.62h-.001V.618h-.001V.617H1.67V.616L1.67.615V.614h-.001L1.667.613h-.001V.612h-.001V.611h-.001V.61h-.001L1.662.61h-.001V.608H1.66V.607h-.001L1.657.606h-.002V.605h-.002L1.652.604H1.65V.603H1.628v.001h-.003v.001h-.002v.001h-.002v.001H1.62V.61h-.001V.61h-.002v.001h-.001v.001h-.001l-.001.001v.001h-.001l-.001.001v.001H1.61L1.61.618v.001h-.001V.62h-.001V.62l-.001.001v.001h-.001v.002h-.001v.001h-.001v.002l-.001.001V.63h-.001v.003H1.6v.003H1.6v.007h-.001v.315H1.6v.004h.001v.003h.001v.002l.001.001V.97l.001.001v.001l.001.001v.001h.001v.001l.001.001v.001h.001v.001h.001v.001h.001V.98l.001.001.001.001.001.001h.001v.001h.001v.001h.001v.001h.001l.001.001h.001v.001h.002v.001h.002V.99h.002V.99h.002l.001.001h.003v.001H1.64z",
    fill: "#999"
  }), __jsx("ellipse", {
    cx: 1.641,
    cy: 0.647,
    rx: 0.051,
    ry: 0.053,
    fill: "#f2f2f2"
  }), __jsx("ellipse", {
    cx: 1.641,
    cy: 0.947,
    rx: 0.051,
    ry: 0.053,
    fill: "#f2f2f2"
  }), __jsx("path", {
    d: "M1.621.275l-.046.103h-.043L1.529.253l.092.022zm0-.066L1.575.107h-.042l-.005.124.093-.022zm-.105.053l-.062.056c-.004.004-.016.003-.02 0C1.431.316 1.43.312 1.431.31l.027-.053.058.006zm0-.039L1.454.168c-.004-.004-.017-.003-.02 0-.003.001-.005.005-.003.008l.027.053.058-.006z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.824.242c-.005.01-.08.012-.08.012a.44.44 0 0 1-.118.021L1.53.278V.266s-.04.002-.054 0A.113.113 0 0 1 1.443.26V.247l.014-.005-.014-.005V.225a.127.127 0 0 1 .033-.006h.052v-.01s.069-.002.097 0a.716.716 0 0 1 .12.022s.072.002.079.011z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__e"
  }, __jsx("path", {
    d: "M920 115.657c-2.682 4.557-40.11 5.615-40.11 5.615-2.577 2.753-41.194 9.522-59.523 9.948-14.15.328-48.452 1.283-48.452 1.283l-.16-5.776s-20.082.802-27.436.32c-5.74-.374-13.852-1.737-16.686-3.208v-5.937l7.06-2.406-7.06-2.407v-5.936c2.674-1.39 11.232-2.234 16.685-2.728l26.472-.32v-4.172s34.68-1.043 48.934-.16c12.304.76 57.17 7.82 60.164 10.428 0 0 36.735.916 40.11 5.455z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__e)",
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M726.19 104.266h9.466v22.622h-9.466z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1.554.217l-.048-.02-.027.001.01.02s.023.005.065 0zm0 .048l-.048.02h-.027l.01-.021s.023-.004.065 0z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1.718.242c0-.004-.001-.008-.005-.008h-.029c-.012 0-.016.004-.016.01 0 .004.013.006.016.006l.03.001c.003 0 .004-.006.004-.009z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1.72.242L1.718.234h.01c.012 0 .016.003.016.008S1.74.25 1.728.25l-.01.001.002-.009z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1.621.275l-.046.103h-.043L1.529.253l.092.022zm0-.066L1.575.107h-.042l-.005.124.093-.022zm-.105.053l-.062.056c-.004.004-.016.003-.02 0C1.431.316 1.43.312 1.431.31l.027-.053.058.006zm0-.039L1.454.168c-.004-.004-.017-.003-.02 0-.003.001-.005.005-.003.008l.027.053.058-.006z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1.824.242c-.005.01-.08.012-.08.012a.44.44 0 0 1-.118.021L1.53.278V.266s-.04.002-.054 0A.113.113 0 0 1 1.443.26V.247l.014-.005-.014-.005V.225a.127.127 0 0 1 .033-.006h.052v-.01s.069-.002.097 0a.716.716 0 0 1 .12.022s.072.002.079.011z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__f"
  }, __jsx("path", {
    d: "M920 115.657c-2.682 4.557-40.11 5.615-40.11 5.615-2.577 2.753-41.194 9.522-59.523 9.948-14.15.328-48.452 1.283-48.452 1.283l-.16-5.776s-20.082.802-27.436.32c-5.74-.374-13.852-1.737-16.686-3.208v-5.937l7.06-2.406-7.06-2.407v-5.936c2.674-1.39 11.232-2.234 16.685-2.728l26.472-.32v-4.172s34.68-1.043 48.934-.16c12.304.76 57.17 7.82 60.164 10.428 0 0 36.735.916 40.11 5.455z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__f)",
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M726.19 104.266h9.466v22.622h-9.466z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1.554.217l-.048-.02-.027.001.01.02s.023.005.065 0zm0 .048l-.048.02h-.027l.01-.021s.023-.004.065 0z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1.718.242c0-.004-.001-.008-.005-.008h-.029c-.012 0-.016.004-.016.01 0 .004.013.006.016.006l.03.001c.003 0 .004-.006.004-.009z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1.72.242L1.718.234h.01c.012 0 .016.003.016.008S1.74.25 1.728.25l-.01.001.002-.009z",
    fill: "#333"
  }), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__g"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__g)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__h"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__h)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__i"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__i)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__j"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__j)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__k"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__k)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M113.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81L25.54 310.99l39.934 43.565 25.752-40.5zM71.827 369.53l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__l"
  }, __jsx("path", {
    d: "M174.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S64.32 380.44 58.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.786-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__l)"
  }, __jsx("path", {
    d: "M36.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M70.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M137.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M137.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__m"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__m)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__n"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__n)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__o"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__o)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__p"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__p)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__q"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__q)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1484.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__r"
  }, __jsx("path", {
    d: "M1545.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__r)"
  }, __jsx("path", {
    d: "M1407.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1441.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1508.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1508.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__s"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__s)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__t"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__t)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__u"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__u)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__v"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__v)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__w"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__w)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M243.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__x"
  }, __jsx("path", {
    d: "M304.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S194.32 380.44 188.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__x)"
  }, __jsx("path", {
    d: "M166.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M200.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M267.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M267.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__y"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__y)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__z"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__z)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__A"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__A)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__B"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__B)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__C"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__C)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1614.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__D"
  }, __jsx("path", {
    d: "M1675.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__D)"
  }, __jsx("path", {
    d: "M1537.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1571.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1638.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1638.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__E"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__E)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__F"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__F)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__G"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__G)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__H"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__H)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__I"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__I)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2013.58 313.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__J"
  }, __jsx("path", {
    d: "M2074.95 230.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__J)"
  }, __jsx("path", {
    d: "M1936.54 352.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1970.12 317.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M2037.17 267.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M2037.97 267.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__K"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__K)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__L"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__L)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__M"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__M)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__N"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__N)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__O"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__O)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M373.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__P"
  }, __jsx("path", {
    d: "M434.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S324.32 380.44 318.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__P)"
  }, __jsx("path", {
    d: "M296.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M330.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M397.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M397.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__Q"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__Q)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__R"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__R)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__S"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__S)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__T"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__T)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__U"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__U)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1744.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__V"
  }, __jsx("path", {
    d: "M1805.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__V)"
  }, __jsx("path", {
    d: "M1667.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1701.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1768.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1768.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__W"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__W)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__X"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__X)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__Y"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__Y)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__Z"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__Z)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__aa"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__aa)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M496.575 336.177l18.038 51.39-15.202 15.203-43.11-41.068 40.275-25.525zm-22.349-22.123l-50.938-17.81-14.748 14.747 39.934 43.565 25.752-40.5zm-19.399 55.476l-3.404 40.615c-.24 2.882-5.048 6.94-6.92 7.374-1.86.43-3.694-.166-4.425-1.93-2.004-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.345-13.26l-40.614 3.404c-2.882.242-6.94 5.05-7.374 6.92-.432 1.86.165 3.695 1.928 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ab"
  }, __jsx("path", {
    d: "M557.95 253.02c1.326 5.118-24.39 32.332-24.39 32.332.123 3.77-22.397 35.86-35.056 49.123-9.774 10.24-33.354 35.17-33.354 35.17l-4.197-3.972S447.32 380.44 441.78 385.3c-4.323 3.79-11.023 8.565-14.067 9.53l-4.198-4.198 3.29-6.694-6.693 3.29-4.198-4.197c.908-2.873 6.363-9.52 9.87-13.727l18.492-18.945-2.95-2.95s23.787-25.26 34.488-34.715c9.24-8.162 45.956-34.897 49.917-35.17 0 0 26.625-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ab)"
  }, __jsx("path", {
    d: "M419.544 375.316l-6.693 6.694 15.997 15.996 6.694-6.694-15.996-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M453.125 340.828l-23.938 10.55-9.075 9.757 10.437 3.177s9.403-6.807 22.575-23.484zm16.223 16.222l-10.55 23.938-9.757 9.076-3.176-10.437s6.807-9.404 23.484-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M520.172 290.798c-1.19-1.19-3.234-2.212-4.424-1.02l-10.437 10.436c-4.202 4.203-4.446 7.108-2.722 8.85 1.713 1.73 7.18-2.19 8.282-3.29l10.664-10.212c1.19-1.19-.17-3.574-1.362-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M520.967 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.743-3.743c4.203-4.203 6.882-4.674 8.622-2.95 1.618 1.603.6 4.358-3.063 8.51l-3.405 3.856s-1.078-2.666-2.268-3.856z",
    fill: "#333"
  }))), __jsx("g", {
    transform: "matrix(.00198 0 0 .0021 0 0)"
  }, __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ac"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ac)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ad"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ad)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ae"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ae)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__af"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__af)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("g", null, __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ag"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ag)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1867.58 336.177l18.03 51.39-15.2 15.203-43.11-41.068 40.28-25.525zm-22.35-22.123l-50.94-17.81-14.75 14.747 39.93 43.565 25.76-40.5zm-19.4 55.476s-2.71 32.248-3.41 40.615c-.24 2.882-5.05 6.94-6.92 7.374-1.86.43-3.69-.166-4.42-1.93-2.01-4.84-7.94-27.68-7.94-27.68l22.69-18.38zm-13.35-13.26l-40.61 3.404c-2.88.242-6.94 5.05-7.38 6.92-.43 1.86.17 3.695 1.93 4.425 4.84 2.003 27.68 7.94 27.68 7.94l18.38-22.69z",
    fill: "#bfbfbf"
  }), __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z",
    fill: "#ccc"
  }), __jsx("clipPath", {
    id: "ship5_svg__ah"
  }, __jsx("path", {
    d: "M1928.95 253.02c1.33 5.118-24.39 32.332-24.39 32.332.12 3.77-22.4 35.86-35.06 49.123-9.77 10.24-33.35 35.17-33.35 35.17l-4.2-3.972s-13.63 14.767-19.17 19.627c-4.32 3.79-11.02 8.565-14.07 9.53l-4.19-4.198 3.29-6.694-6.7 3.29-4.2-4.197c.91-2.873 6.37-9.52 9.87-13.727l18.5-18.945-2.95-2.95s23.78-25.26 34.48-34.715c9.24-8.162 45.96-34.897 49.92-35.17 0 0 26.62-25.326 32.22-24.503z"
  })), __jsx("g", {
    clipPath: "url(#ship5_svg__ah)"
  }, __jsx("path", {
    d: "M1790.54 375.316l-6.69 6.694 16 15.996 6.69-6.694-16-15.996z",
    fill: "#333",
    stroke: "#999",
    strokeWidth: 1.71
  })), __jsx("path", {
    d: "M1824.12 340.828l-23.93 10.55-9.08 9.757 10.44 3.177s9.4-6.807 22.57-23.484zm16.23 16.222l-10.55 23.938-9.76 9.076-3.18-10.437s6.81-9.404 23.49-22.576z",
    fill: "#a6a6a6"
  }), __jsx("path", {
    d: "M1891.17 290.798c-1.19-1.19-3.23-2.212-4.42-1.02l-10.44 10.436c-4.2 4.203-4.45 7.108-2.72 8.85 1.71 1.73 7.18-2.19 8.28-3.29l10.66-10.212c1.19-1.19-.17-3.574-1.36-4.764z",
    fill: "#333"
  }), __jsx("path", {
    d: "M1891.97 290.004c-1.19-1.19-3.63-1.816-3.63-1.816l3.74-3.743c4.2-4.203 6.88-4.674 8.62-2.95 1.62 1.603.6 4.358-3.06 8.51l-3.4 3.856s-1.08-2.666-2.27-3.856z",
    fill: "#333"
  }))));
};

/* harmony default export */ __webpack_exports__["default"] = (SvgShip5);

/***/ }),

/***/ "./src/games/seabattle/media/hit1.mp3":
/*!********************************************!*\
  !*** ./src/games/seabattle/media/hit1.mp3 ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/hit2.mp3":
/*!********************************************!*\
  !*** ./src/games/seabattle/media/hit2.mp3 ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/hit3.mp3":
/*!********************************************!*\
  !*** ./src/games/seabattle/media/hit3.mp3 ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/miss1.mp3":
/*!*********************************************!*\
  !*** ./src/games/seabattle/media/miss1.mp3 ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/miss2.mp3":
/*!*********************************************!*\
  !*** ./src/games/seabattle/media/miss2.mp3 ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/miss3.mp3":
/*!*********************************************!*\
  !*** ./src/games/seabattle/media/miss3.mp3 ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,

/***/ }),

/***/ "./src/games/seabattle/media/miss4.mp3":
/*!*********************************************!*\
  !*** ./src/games/seabattle/media/miss4.mp3 ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,"

/***/ }),

/***/ "./src/games/seabattle/media/miss5.mp3":
/*!*********************************************!*\
  !*** ./src/games/seabattle/media/miss5.mp3 ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:audio/mpeg;base64,

/***/ }),

/***/ "./src/games/seabattle/sound.ts":
/*!**************************************!*\
  !*** ./src/games/seabattle/sound.ts ***!
  \**************************************/
/*! exports provided: playSeabattleSound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "playSeabattleSound", function() { return playSeabattleSound; });
/* harmony import */ var _media_hit1_mp3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./media/hit1.mp3 */ "./src/games/seabattle/media/hit1.mp3");
/* harmony import */ var _media_hit1_mp3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_media_hit1_mp3__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _media_hit2_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./media/hit2.mp3 */ "./src/games/seabattle/media/hit2.mp3");
/* harmony import */ var _media_hit2_mp3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_media_hit2_mp3__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _media_hit3_mp3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./media/hit3.mp3 */ "./src/games/seabattle/media/hit3.mp3");
/* harmony import */ var _media_hit3_mp3__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_media_hit3_mp3__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _media_miss1_mp3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./media/miss1.mp3 */ "./src/games/seabattle/media/miss1.mp3");
/* harmony import */ var _media_miss1_mp3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_media_miss1_mp3__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _media_miss2_mp3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./media/miss2.mp3 */ "./src/games/seabattle/media/miss2.mp3");
/* harmony import */ var _media_miss2_mp3__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_media_miss2_mp3__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _media_miss3_mp3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./media/miss3.mp3 */ "./src/games/seabattle/media/miss3.mp3");
/* harmony import */ var _media_miss3_mp3__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_media_miss3_mp3__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _media_miss4_mp3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./media/miss4.mp3 */ "./src/games/seabattle/media/miss4.mp3");
/* harmony import */ var _media_miss4_mp3__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_media_miss4_mp3__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _media_miss5_mp3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./media/miss5.mp3 */ "./src/games/seabattle/media/miss5.mp3");
/* harmony import */ var _media_miss5_mp3__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_media_miss5_mp3__WEBPACK_IMPORTED_MODULE_7__);
function cov_2bmn6wsyx5() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/sound.ts";
  var hash = "9e547708771431fa17006a8f11abf71f9272f467";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/games/seabattle/sound.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "1": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "2": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "3": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 17,
          column: 9
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "7": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 21
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "10": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "11": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 13,
            column: 53
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 25
          }
        },
        loc: {
          start: {
            line: 23,
            column: 50
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 20,
            column: 3
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 14
          },
          end: {
            line: 24,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 41
          }
        }, {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 24,
            column: 55
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9e547708771431fa17006a8f11abf71f9272f467"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2bmn6wsyx5 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2bmn6wsyx5();








const HIT_SOUNDS = (cov_2bmn6wsyx5().s[0]++, [_media_hit1_mp3__WEBPACK_IMPORTED_MODULE_0___default.a, _media_hit2_mp3__WEBPACK_IMPORTED_MODULE_1___default.a, _media_hit3_mp3__WEBPACK_IMPORTED_MODULE_2___default.a]);
const MISS_SOUNDS = (cov_2bmn6wsyx5().s[1]++, [_media_miss1_mp3__WEBPACK_IMPORTED_MODULE_3___default.a, _media_miss2_mp3__WEBPACK_IMPORTED_MODULE_4___default.a, _media_miss3_mp3__WEBPACK_IMPORTED_MODULE_5___default.a, _media_miss4_mp3__WEBPACK_IMPORTED_MODULE_6___default.a, _media_miss5_mp3__WEBPACK_IMPORTED_MODULE_7___default.a]);
cov_2bmn6wsyx5().s[2]++;
const playSeabattleSound = sound => {
  cov_2bmn6wsyx5().f[0]++;
  cov_2bmn6wsyx5().s[3]++;

  if (sound === 'HIT') {
    cov_2bmn6wsyx5().b[0][0]++;
    const hitSound = (cov_2bmn6wsyx5().s[4]++, new Audio(_getRandomSound('hit')));
    cov_2bmn6wsyx5().s[5]++;
    hitSound.play();
  } else {
    cov_2bmn6wsyx5().b[0][1]++;
    cov_2bmn6wsyx5().s[6]++;

    if (sound === 'MISS') {
      cov_2bmn6wsyx5().b[1][0]++;
      const missSound = (cov_2bmn6wsyx5().s[7]++, new Audio(_getRandomSound('miss')));
      cov_2bmn6wsyx5().s[8]++;
      missSound.play();
    } else {
      cov_2bmn6wsyx5().b[1][1]++;
    }
  }
};
cov_2bmn6wsyx5().s[9]++;

const _getRandomSound = type => {
  cov_2bmn6wsyx5().f[1]++;
  const arr = (cov_2bmn6wsyx5().s[10]++, type === 'hit' ? (cov_2bmn6wsyx5().b[2][0]++, HIT_SOUNDS) : (cov_2bmn6wsyx5().b[2][1]++, MISS_SOUNDS));
  cov_2bmn6wsyx5().s[11]++;
  return arr[Math.random() * arr.length << 0];
};

/***/ }),

/***/ "./src/hooks/useWindowDimensions.ts":
/*!******************************************!*\
  !*** ./src/hooks/useWindowDimensions.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return useWindowDimensions; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function cov_2gr5onh2wh() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/hooks/useWindowDimensions.ts";
  var hash = "4f114065dc7cb63bff1107bea751cd3943287ae8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/hooks/useWindowDimensions.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 49
        }
      },
      "1": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 9,
          column: 54
        }
      },
      "2": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 56
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 6
        }
      },
      "4": {
        start: {
          line: 17,
          column: 50
        },
        end: {
          line: 17,
          column: 81
        }
      },
      "5": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "7": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 23,
          column: 7
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "11": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "12": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "useWindowDimensions",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 43
          }
        },
        loc: {
          start: {
            line: 5,
            column: 46
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "getWindowDimensions",
        decl: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 8,
            column: 30
          }
        },
        loc: {
          start: {
            line: 8,
            column: 33
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 13
          }
        },
        loc: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 28
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 23,
            column: 7
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 25,
            column: 14
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 69
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 9,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 9,
            column: 47
          }
        }, {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 54
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 31
          },
          end: {
            line: 10,
            column: 49
          }
        }, {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 10,
            column: 56
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f114065dc7cb63bff1107bea751cd3943287ae8"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2gr5onh2wh = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2gr5onh2wh();
// https://stackoverflow.com/a/59185109

function useWindowDimensions() {
  cov_2gr5onh2wh().f[0]++;
  const hasWindow = (cov_2gr5onh2wh().s[0]++, false);

  function getWindowDimensions() {
    cov_2gr5onh2wh().f[1]++;
    const width = (cov_2gr5onh2wh().s[1]++, hasWindow ? (cov_2gr5onh2wh().b[0][0]++, window.innerWidth) : (cov_2gr5onh2wh().b[0][1]++, null));
    const height = (cov_2gr5onh2wh().s[2]++, hasWindow ? (cov_2gr5onh2wh().b[1][0]++, window.innerHeight) : (cov_2gr5onh2wh().b[1][1]++, null));
    cov_2gr5onh2wh().s[3]++;
    return {
      width,
      height
    };
  }

  const [windowDimensions, setWindowDimensions] = (cov_2gr5onh2wh().s[4]++, Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(getWindowDimensions()));
  cov_2gr5onh2wh().s[5]++;
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    cov_2gr5onh2wh().f[2]++;
    cov_2gr5onh2wh().s[6]++;

    if (hasWindow) {
      cov_2gr5onh2wh().b[2][0]++;
      cov_2gr5onh2wh().s[7]++;

      const handleResize = () => {
        cov_2gr5onh2wh().f[3]++;
        cov_2gr5onh2wh().s[8]++;
        setWindowDimensions(getWindowDimensions());
      };

      cov_2gr5onh2wh().s[9]++;
      window.addEventListener('resize', handleResize);
      cov_2gr5onh2wh().s[10]++;
      return () => {
        cov_2gr5onh2wh().f[4]++;
        cov_2gr5onh2wh().s[11]++;
        return window.removeEventListener('resize', handleResize);
      };
    } else {
      cov_2gr5onh2wh().b[2][1]++;
    }
  }, [hasWindow]);
  cov_2gr5onh2wh().s[12]++;
  return windowDimensions;
}

/***/ }),

/***/ "./src/ui/2d/grid.js":
/*!***************************!*\
  !*** ./src/ui/2d/grid.js ***!
  \***************************/
/*! exports provided: Grid, Square */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Square", function() { return Square; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2noc4a7ksf() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/2d/grid.js";
  var hash = "3918b7b6aef2b5d873a9b3ced78aa755c8be9a44";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/2d/grid.js",
    statementMap: {
      "0": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "1": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "2": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "3": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "4": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 23
        }
      },
      "5": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "6": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "7": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 17
        }
      },
      "8": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "9": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "10": {
        start: {
          line: 71,
          column: 18
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "11": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "12": {
        start: {
          line: 72,
          column: 17
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "13": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "14": {
        start: {
          line: 73,
          column: 19
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "15": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "16": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "17": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "18": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "19": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 31
        }
      },
      "20": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "21": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "22": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "23": {
        start: {
          line: 103,
          column: 15
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "24": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "25": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 34
        }
      },
      "26": {
        start: {
          line: 110,
          column: 19
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "27": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "28": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 126,
          column: 6
        }
      },
      "29": {
        start: {
          line: 150,
          column: 21
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "30": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 168,
          column: 3
        }
      },
      "31": {
        start: {
          line: 170,
          column: 10
        },
        end: {
          line: 170,
          column: 27
        }
      },
      "32": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "33": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 44
        }
      },
      "34": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 178,
          column: 3
        }
      },
      "35": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 48
        }
      },
      "36": {
        start: {
          line: 180,
          column: 15
        },
        end: {
          line: 182,
          column: 3
        }
      },
      "37": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "38": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "39": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "40": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "41": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 65
        }
      },
      "42": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 38
        }
      },
      "43": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "44": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 68
        }
      },
      "45": {
        start: {
          line: 206,
          column: 15
        },
        end: {
          line: 206,
          column: 45
        }
      },
      "46": {
        start: {
          line: 207,
          column: 15
        },
        end: {
          line: 207,
          column: 45
        }
      },
      "47": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 210,
          column: 113
        }
      },
      "48": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "49": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 37
        }
      },
      "50": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 226,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 3
          }
        },
        loc: {
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 64,
            column: 3
          }
        },
        line: 57
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 13
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        loc: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 95,
            column: 3
          }
        },
        line: 91
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 17
          }
        },
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 101,
            column: 3
          }
        },
        line: 97
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 16
          }
        },
        loc: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 107,
            column: 3
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 109,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        loc: {
          start: {
            line: 109,
            column: 11
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 109
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 60
          }
        },
        loc: {
          start: {
            line: 110,
            column: 70
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 110
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 174,
            column: 3
          }
        },
        line: 172
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        },
        loc: {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 176
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 16
          }
        },
        loc: {
          start: {
            line: 180,
            column: 22
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 180
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 184,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        },
        loc: {
          start: {
            line: 184,
            column: 14
          },
          end: {
            line: 189,
            column: 3
          }
        },
        line: 184
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 196,
            column: 3
          }
        },
        line: 191
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 198,
            column: 2
          },
          end: {
            line: 198,
            column: 3
          }
        },
        loc: {
          start: {
            line: 198,
            column: 25
          },
          end: {
            line: 203,
            column: 3
          }
        },
        line: 198
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 205,
            column: 3
          }
        },
        loc: {
          start: {
            line: 205,
            column: 11
          },
          end: {
            line: 227,
            column: 3
          }
        },
        line: 205
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }],
        line: 92
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }],
        line: 98
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }, {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }, {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3918b7b6aef2b5d873a9b3ced78aa755c8be9a44"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2noc4a7ksf = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2noc4a7ksf();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */


/**
 * Grid
 *
 * Component that will show children on a cartesian regular grid.
 *
 * Props:
 *   rows       - Number of rows (height) of the grid.
 *   cols       - Number of columns (width) of the grid.
 *   style      - CSS style of the Grid HTML element.
 *   colorMap   - A map from 'x,y' => color.
 *   onClick    - (x, y) => {}
 *                Called when a square is clicked.
 *   onMouseOver    - (x, y) => {}
 *                Called when a square is mouse over.
 *   onMouseOut    - (x, y) => {}
 *                Called when a square is mouse out.
 *
 * Usage:
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2}/>
 * </Grid>
 */

class Grid extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(..._args) {
    super(..._args);

    _defineProperty(this, "_svgRef", (cov_2noc4a7ksf().s[2]++, react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef()));

    _defineProperty(this, "onClick", (cov_2noc4a7ksf().s[17]++, args => {
      cov_2noc4a7ksf().f[2]++;
      cov_2noc4a7ksf().s[18]++;

      if (this.props.onClick) {
        cov_2noc4a7ksf().b[2][0]++;
        cov_2noc4a7ksf().s[19]++;
        this.props.onClick(args);
      } else {
        cov_2noc4a7ksf().b[2][1]++;
      }
    }));

    _defineProperty(this, "onMouseOver", (cov_2noc4a7ksf().s[20]++, args => {
      cov_2noc4a7ksf().f[3]++;
      cov_2noc4a7ksf().s[21]++;

      if (this.props.onMouseOver) {
        cov_2noc4a7ksf().b[3][0]++;
        cov_2noc4a7ksf().s[22]++;
        this.props.onMouseOver(args);
      } else {
        cov_2noc4a7ksf().b[3][1]++;
      }
    }));

    _defineProperty(this, "onMouseOut", (cov_2noc4a7ksf().s[23]++, args => {
      cov_2noc4a7ksf().f[4]++;
      cov_2noc4a7ksf().s[24]++;

      if (this.props.onMouseOut) {
        cov_2noc4a7ksf().b[4][0]++;
        cov_2noc4a7ksf().s[25]++;
        this.props.onMouseOut(args);
      } else {
        cov_2noc4a7ksf().b[4][1]++;
      }
    }));
  }

  _getCellColor(x, y) {
    cov_2noc4a7ksf().f[0]++;
    const key = (cov_2noc4a7ksf().s[3]++, `${x},${y}`);
    let color = (cov_2noc4a7ksf().s[4]++, 'white');
    cov_2noc4a7ksf().s[5]++;

    if (key in this.props.colorMap) {
      cov_2noc4a7ksf().b[0][0]++;
      cov_2noc4a7ksf().s[6]++;
      color = this.props.colorMap[key];
    } else {
      cov_2noc4a7ksf().b[0][1]++;
    }

    cov_2noc4a7ksf().s[7]++;
    return color;
  }

  _getGrid() {
    cov_2noc4a7ksf().f[1]++;
    cov_2noc4a7ksf().s[8]++;

    if (!this.props.outline) {
      cov_2noc4a7ksf().b[1][0]++;
      cov_2noc4a7ksf().s[9]++;
      return null;
    } else {
      cov_2noc4a7ksf().b[1][1]++;
    }

    let squares = (cov_2noc4a7ksf().s[10]++, []);
    cov_2noc4a7ksf().s[11]++;

    for (let x = (cov_2noc4a7ksf().s[12]++, 0); x < this.props.cols; x++) {
      cov_2noc4a7ksf().s[13]++;

      for (let y = (cov_2noc4a7ksf().s[14]++, 0); y < this.props.rows; y++) {
        cov_2noc4a7ksf().s[15]++;
        squares.push(__jsx(Square, {
          key: this.props.cols * y + x,
          style: {
            fill: this._getCellColor(x, y)
          },
          x: x,
          y: y,
          size: this.props.cellSize,
          onClick: this.onClick,
          onMouseOver: this.onMouseOver,
          onMouseOut: this.onMouseOut
        }));
      }
    }

    cov_2noc4a7ksf().s[16]++;
    return squares;
  }

  render() {
    cov_2noc4a7ksf().f[5]++;
    const tokens = (cov_2noc4a7ksf().s[26]++, react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.map(this.props.children, child => {
      cov_2noc4a7ksf().f[6]++;
      cov_2noc4a7ksf().s[27]++;
      return react__WEBPACK_IMPORTED_MODULE_0___default.a.cloneElement(child, {
        template: Square,
        // Overwrites Token's onClick, onMouseOver, onMouseOut
        onClick: this.onClick,
        onMouseOver: this.onMouseOver,
        onMouseOut: this.onMouseOut,
        svgRef: this._svgRef
      });
    }));
    cov_2noc4a7ksf().s[28]++;
    return __jsx("svg", {
      ref: this._svgRef,
      viewBox: '0 0 ' + this.props.cols + ' ' + this.props.rows,
      style: this.props.style
    }, __jsx("g", null, this._getGrid()), tokens);
  }

}
/**
 * Square
 *
 * Component that renders a square inside a Grid.
 *
 * Props:
 *   x       - X coordinate on grid coordinates.
 *   y       - Y coordinate on grid coordinates.
 *   size    - Square size.
 *   style   - Custom styling.
 *   onClick - Invoked when a Square is clicked.
 *   onMouseOver - Invoked when a Square is mouse over.
 *   onMouseOut - Invoked when a Square is mouse out.
 *   eventListeners - Array of objects with name and callback
 *   for DOM events.
 *
 * Not meant to be used by the end user directly (use Token).
 * Also not exposed in the NPM.
 */

_defineProperty(Grid, "propTypes", (cov_2noc4a7ksf().s[0]++, {
  rows: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  cols: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  outline: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  style: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  colorMap: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  cellSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element])
}));

_defineProperty(Grid, "defaultProps", (cov_2noc4a7ksf().s[1]++, {
  colorMap: {},
  outline: true,
  cellSize: 1
}));

class Square extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_gRef", (cov_2noc4a7ksf().s[31]++, react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef()));

    _defineProperty(this, "onClick", (cov_2noc4a7ksf().s[32]++, e => {
      cov_2noc4a7ksf().f[7]++;
      cov_2noc4a7ksf().s[33]++;
      this.props.onClick(this.getCoords(), e);
    }));

    _defineProperty(this, "onMouseOver", (cov_2noc4a7ksf().s[34]++, e => {
      cov_2noc4a7ksf().f[8]++;
      cov_2noc4a7ksf().s[35]++;
      this.props.onMouseOver(this.getCoords(), e);
    }));

    _defineProperty(this, "onMouseOut", (cov_2noc4a7ksf().s[36]++, e => {
      cov_2noc4a7ksf().f[9]++;
      cov_2noc4a7ksf().s[37]++;
      this.props.onMouseOut(this.getCoords(), e);
    }));
  }

  getCoords() {
    cov_2noc4a7ksf().f[10]++;
    cov_2noc4a7ksf().s[38]++;
    return {
      x: this.props.x,
      y: this.props.y
    };
  }

  componentDidMount() {
    cov_2noc4a7ksf().f[11]++;
    const element = (cov_2noc4a7ksf().s[39]++, this._gRef.current);
    cov_2noc4a7ksf().s[40]++;

    for (let listener of this.props.eventListeners) {
      cov_2noc4a7ksf().s[41]++;
      element.addEventListener(listener.name, listener.callback);
    }
  }

  componentWillUnmount() {
    cov_2noc4a7ksf().f[12]++;
    const element = (cov_2noc4a7ksf().s[42]++, this._gRef.current);
    cov_2noc4a7ksf().s[43]++;

    for (let listener of this.props.eventListeners) {
      cov_2noc4a7ksf().s[44]++;
      element.removeEventListener(listener.name, listener.callback);
    }
  }

  render() {
    cov_2noc4a7ksf().f[13]++;
    const tx = (cov_2noc4a7ksf().s[45]++, this.props.x * this.props.size);
    const ty = (cov_2noc4a7ksf().s[46]++, this.props.y * this.props.size); // If no child, render a square.

    let children = (cov_2noc4a7ksf().s[47]++, __jsx("rect", {
      style: this.props.style,
      width: this.props.size,
      height: this.props.size,
      x: 0,
      y: 0
    })); // If a child is passed, render child.

    cov_2noc4a7ksf().s[48]++;

    if (this.props.children) {
      cov_2noc4a7ksf().b[5][0]++;
      cov_2noc4a7ksf().s[49]++;
      children = this.props.children;
    } else {
      cov_2noc4a7ksf().b[5][1]++;
    }

    cov_2noc4a7ksf().s[50]++;
    return __jsx("g", {
      ref: this._gRef,
      onClick: this.onClick,
      onMouseOver: this.onMouseOver,
      onMouseOut: this.onMouseOut,
      transform: `translate(${tx}, ${ty})`
    }, children);
  }

}

_defineProperty(Square, "propTypes", (cov_2noc4a7ksf().s[29]++, {
  x: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  y: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  style: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  eventListeners: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element
}));

_defineProperty(Square, "defaultProps", (cov_2noc4a7ksf().s[30]++, {
  size: 1,
  x: 0,
  y: 0,
  style: {
    fill: '#fff'
  },
  eventListeners: []
}));

/***/ }),

/***/ "./src/ui/2d/token.js":
/*!****************************!*\
  !*** ./src/ui/2d/token.js ***!
  \****************************/
/*! exports provided: Token */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return Token; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./grid */ "./src/ui/2d/grid.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_1z72eol64x() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/2d/token.js";
  var hash = "c6f8879a25ecbed105cf5c19a3aada49cefea075";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/2d/token.js",
    statementMap: {
      "0": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "1": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 79,
          column: 3
        }
      },
      "2": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 17
        }
      },
      "3": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 87,
          column: 6
        }
      },
      "4": {
        start: {
          line: 90,
          column: 15
        },
        end: {
          line: 100,
          column: 3
        }
      },
      "5": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "6": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 25
        }
      },
      "7": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "8": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "9": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "10": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "11": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "12": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 25
        }
      },
      "13": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 39
        }
      },
      "14": {
        start: {
          line: 106,
          column: 18
        },
        end: {
          line: 106,
          column: 68
        }
      },
      "15": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "16": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 55
        }
      },
      "17": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 109,
          column: 63
        }
      },
      "18": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 63
        }
      },
      "19": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 40
        }
      },
      "20": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "21": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "22": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "23": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "24": {
        start: {
          line: 131,
          column: 13
        },
        end: {
          line: 155,
          column: 3
        }
      },
      "25": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "26": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "27": {
        start: {
          line: 136,
          column: 19
        },
        end: {
          line: 136,
          column: 101
        }
      },
      "28": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "29": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "30": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 65
        }
      },
      "31": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "32": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "33": {
        start: {
          line: 157,
          column: 13
        },
        end: {
          line: 164,
          column: 3
        }
      },
      "34": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "35": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 32
        }
      },
      "36": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "37": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "38": {
        start: {
          line: 179,
          column: 19
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "39": {
        start: {
          line: 180,
          column: 19
        },
        end: {
          line: 180,
          column: 44
        }
      },
      "40": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "41": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "42": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "43": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "44": {
        start: {
          line: 203,
          column: 18
        },
        end: {
          line: 203,
          column: 43
        }
      },
      "45": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 23
        }
      },
      "46": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 23
        }
      },
      "47": {
        start: {
          line: 205,
          column: 35
        },
        end: {
          line: 205,
          column: 57
        }
      },
      "48": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "49": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 59
        }
      },
      "50": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 74
        }
      },
      "51": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 74
        }
      },
      "52": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "53": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 78
        }
      },
      "54": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 79
        }
      },
      "55": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 78
        }
      },
      "56": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 76
        }
      },
      "57": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 245,
          column: 18
        }
      },
      "58": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 47
        }
      },
      "59": {
        start: {
          line: 225,
          column: 21
        },
        end: {
          line: 225,
          column: 37
        }
      },
      "60": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 244,
          column: 7
        }
      },
      "61": {
        start: {
          line: 227,
          column: 27
        },
        end: {
          line: 227,
          column: 92
        }
      },
      "62": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "63": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 57
        }
      },
      "64": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "65": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 50
        }
      },
      "66": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 15
        }
      },
      "67": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 266,
          column: 46
        }
      },
      "68": {
        start: {
          line: 266,
          column: 15
        },
        end: {
          line: 266,
          column: 46
        }
      },
      "69": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "70": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 268,
          column: 41
        }
      },
      "71": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 278,
          column: 6
        }
      },
      "72": {
        start: {
          line: 282,
          column: 22
        },
        end: {
          line: 282,
          column: 41
        }
      },
      "73": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 297,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        loc: {
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 88,
            column: 3
          }
        },
        line: 81
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 90,
            column: 16
          }
        },
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 90
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 102,
            column: 10
          },
          end: {
            line: 102,
            column: 11
          }
        },
        loc: {
          start: {
            line: 102,
            column: 17
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 102
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 131,
            column: 14
          }
        },
        loc: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 131
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 157,
            column: 13
          },
          end: {
            line: 157,
            column: 14
          }
        },
        loc: {
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 164,
            column: 3
          }
        },
        line: 157
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        },
        loc: {
          start: {
            line: 166,
            column: 25
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 178,
            column: 3
          }
        },
        loc: {
          start: {
            line: 178,
            column: 46
          },
          end: {
            line: 196,
            column: 3
          }
        },
        line: 178
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 202,
            column: 2
          },
          end: {
            line: 202,
            column: 3
          }
        },
        loc: {
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 216,
            column: 3
          }
        },
        line: 202
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 222,
            column: 2
          },
          end: {
            line: 222,
            column: 3
          }
        },
        loc: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 246,
            column: 3
          }
        },
        line: 222
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        loc: {
          start: {
            line: 223,
            column: 18
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 223
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 3
          }
        },
        loc: {
          start: {
            line: 253,
            column: 32
          },
          end: {
            line: 255,
            column: 3
          }
        },
        line: 253
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 264,
            column: 3
          }
        },
        loc: {
          start: {
            line: 264,
            column: 30
          },
          end: {
            line: 269,
            column: 3
          }
        },
        line: 264
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 274,
            column: 2
          },
          end: {
            line: 274,
            column: 3
          }
        },
        loc: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 279,
            column: 3
          }
        },
        line: 274
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 281,
            column: 2
          },
          end: {
            line: 281,
            column: 3
          }
        },
        loc: {
          start: {
            line: 281,
            column: 11
          },
          end: {
            line: 298,
            column: 3
          }
        },
        line: 281
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }],
        line: 91
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 28
          }
        }, {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 71
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 93,
            column: 10
          },
          end: {
            line: 93,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 22
          },
          end: {
            line: 93,
            column: 34
          }
        }, {
          start: {
            line: 93,
            column: 37
          },
          end: {
            line: 93,
            column: 38
          }
        }],
        line: 93
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 10
          },
          end: {
            line: 105,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 105,
            column: 34
          }
        }, {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 38
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }, {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }],
        line: 113
      },
      "6": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 132
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 137
      },
      "8": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }],
        line: 161
      },
      "9": {
        loc: {
          start: {
            line: 161,
            column: 10
          },
          end: {
            line: 161,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 10
          },
          end: {
            line: 161,
            column: 30
          }
        }, {
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 161,
            column: 73
          }
        }],
        line: 161
      },
      "10": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }],
        line: 167
      },
      "11": {
        loc: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }],
        line: 183
      },
      "12": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 32
          }
        }, {
          start: {
            line: 183,
            column: 36
          },
          end: {
            line: 183,
            column: 60
          }
        }],
        line: 183
      },
      "13": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 23
          }
        }, {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 23
          }
        }],
        line: 204
      },
      "14": {
        loc: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }],
        line: 206
      },
      "15": {
        loc: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        }, {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        }],
        line: 226
      },
      "16": {
        loc: {
          start: {
            line: 226,
            column: 10
          },
          end: {
            line: 226,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 10
          },
          end: {
            line: 226,
            column: 48
          }
        }, {
          start: {
            line: 226,
            column: 52
          },
          end: {
            line: 226,
            column: 70
          }
        }],
        line: 226
      },
      "17": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 253,
            column: 20
          },
          end: {
            line: 253,
            column: 30
          }
        }],
        line: 253
      },
      "18": {
        loc: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 46
          }
        }, {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 46
          }
        }],
        line: 266
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c6f8879a25ecbed105cf5c19a3aada49cefea075"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1z72eol64x = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1z72eol64x();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-syle
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */



/**
 * Token
 *
 * Component that represents a board game piece (or token).
 * Can be used by itself or with one of the grid systems
 * provided (Grid or HexGrid).
 *
 * A token renders as a square inside a Grid and a
 * hexagon inside a HexGrid. Additionally, you can pass
 * it a child if you want any other custom rendering.
 *
 * Props:
 *   x       - X coordinate on grid / hex grid.
 *   y       - Y coordinate on grid / hex grid.
 *   z       - Z coordinate on hex grid.
 *   animate - Changes in position are animated if true.
 *   animationDuration - Length of animation.
 *   onClick - Called when the token is clicked.
 *   onMouseOver - Called when the token is mouse over.
 *   onMouseOut - Called when the token is mouse out.
 *   draggable - Whether a Token is draggable or not.
 *   shouldDrag - Whether a draggable token should start drag.
 *   onDrag - Called when a token was dragged (moved).
 *            Parameter contain { x, y, originalX, originalY }.
 *   onDrop - Called when the token was dropped after dragging.
 *            Parameter contain { x, y, originalX, originalY }.
 *
 * Usage:
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2}/>
 * </Grid>
 *
 * <HexGrid>
 *   <Token x={1} y={2} z={-3}/>
 * </HexGrid>
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2}>
 *     <Knight color="white"/>
 *   </Token>
 * </Grid>
 */

class Token extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_1z72eol64x().f[0]++;
    cov_1z72eol64x().s[2]++;
    super(props);

    _defineProperty(this, "_startDrag", (cov_1z72eol64x().s[4]++, e => {
      cov_1z72eol64x().f[1]++;
      cov_1z72eol64x().s[5]++;

      if ((cov_1z72eol64x().b[1][0]++, this.props.draggable) && (cov_1z72eol64x().b[1][1]++, this.props.shouldDrag(this.getCoords()))) {
        cov_1z72eol64x().b[0][0]++;
        cov_1z72eol64x().s[6]++;
        e.preventDefault(); // Required for Safari/iOs.

        cov_1z72eol64x().s[7]++;
        e = e.touches ? (cov_1z72eol64x().b[2][0]++, e.touches[0]) : (cov_1z72eol64x().b[2][1]++, e);
        cov_1z72eol64x().s[8]++;
        this.setState(_objectSpread({}, this.state, {
          dragged: {
            x: e.pageX,
            y: e.pageY
          }
        }));
        cov_1z72eol64x().s[9]++;

        this._addOrRemoveDragEventListeners(true);
      } else {
        cov_1z72eol64x().b[0][1]++;
      }
    }));

    _defineProperty(this, "_drag", (cov_1z72eol64x().s[10]++, e => {
      cov_1z72eol64x().f[2]++;
      cov_1z72eol64x().s[11]++;

      if (this.state.dragged) {
        cov_1z72eol64x().b[3][0]++;
        cov_1z72eol64x().s[12]++;
        e.preventDefault(); // Required for Safari/iOs.

        cov_1z72eol64x().s[13]++;
        e = e.touches ? (cov_1z72eol64x().b[4][0]++, e.touches[0]) : (cov_1z72eol64x().b[4][1]++, e);
        const ctm = (cov_1z72eol64x().s[14]++, this.props.svgRef.current.getScreenCTM().inverse());
        const deltaPageX = (cov_1z72eol64x().s[15]++, e.pageX - this.state.dragged.x);
        const deltaPageY = (cov_1z72eol64x().s[16]++, e.pageY - this.state.dragged.y);
        const deltaSvgX = (cov_1z72eol64x().s[17]++, ctm.a * deltaPageX + ctm.b * deltaPageY);
        const deltaSvgY = (cov_1z72eol64x().s[18]++, ctm.c * deltaPageX + ctm.d * deltaPageY);
        const x = (cov_1z72eol64x().s[19]++, this.state.x + deltaSvgX);
        const y = (cov_1z72eol64x().s[20]++, this.state.y + deltaSvgY);
        cov_1z72eol64x().s[21]++;

        if (this.props.onDrag) {
          cov_1z72eol64x().b[5][0]++;
          cov_1z72eol64x().s[22]++;
          this.props.onDrag({
            x,
            y,
            originalX: this.props.x,
            originalY: this.props.y
          });
        } else {
          cov_1z72eol64x().b[5][1]++;
        }

        cov_1z72eol64x().s[23]++;
        this.setState(_objectSpread({}, this.state, {
          x,
          y,
          dragged: {
            x: e.pageX,
            y: e.pageY
          }
        }));
      } else {
        cov_1z72eol64x().b[3][1]++;
      }
    }));

    _defineProperty(this, "_endDrag", (cov_1z72eol64x().s[24]++, e => {
      cov_1z72eol64x().f[3]++;
      cov_1z72eol64x().s[25]++;

      if (this.state.dragged) {
        cov_1z72eol64x().b[6][0]++;
        cov_1z72eol64x().s[26]++;
        e.preventDefault(); // Whether this is a drop or a click depends if the mouse moved after drag.
        // Android will issue very small drag events, so we need a distance.

        const dist = (cov_1z72eol64x().s[27]++, Math.sqrt((this.state.x - this.props.x) ** 2 + (this.state.y - this.props.y) ** 2));
        cov_1z72eol64x().s[28]++;

        if (dist > 0.2) {
          cov_1z72eol64x().b[7][0]++;
          cov_1z72eol64x().s[29]++;
          this.props.onDrop({
            x: this.state.x,
            y: this.state.y,
            originalX: this.props.x,
            originalY: this.props.y
          });
        } else {
          cov_1z72eol64x().b[7][1]++;
          cov_1z72eol64x().s[30]++;
          this.props.onClick({
            x: this.state.x,
            y: this.state.y
          });
        }

        cov_1z72eol64x().s[31]++;
        this.setState(_objectSpread({}, this.state, {
          x: this.props.x,
          y: this.props.y,
          dragged: null
        }));
        cov_1z72eol64x().s[32]++;

        this._addOrRemoveDragEventListeners(false);
      } else {
        cov_1z72eol64x().b[6][1]++;
      }
    }));

    _defineProperty(this, "_onClick", (cov_1z72eol64x().s[33]++, param => {
      cov_1z72eol64x().f[4]++;
      cov_1z72eol64x().s[34]++;

      // Ignore onClick if the element is draggable, because desktops will
      // send both onClick and touch events, leading to duplication.
      // Whether this will be a click or a drop will be defined in _endDrag.
      if (!((cov_1z72eol64x().b[9][0]++, this.props.draggable) && (cov_1z72eol64x().b[9][1]++, this.props.shouldDrag(this.getCoords())))) {
        cov_1z72eol64x().b[8][0]++;
        cov_1z72eol64x().s[35]++;
        this.props.onClick(param);
      } else {
        cov_1z72eol64x().b[8][1]++;
      }
    }));

    cov_1z72eol64x().s[3]++;
    this.state = _objectSpread({}, this.getCoords(), {
      dragged: null,
      usingTouch: false
    });
  }

  componentWillUnmount() {
    cov_1z72eol64x().f[5]++;
    cov_1z72eol64x().s[36]++;

    if (this.state.dragged) {
      cov_1z72eol64x().b[10][0]++;
      cov_1z72eol64x().s[37]++;

      this._addOrRemoveDragEventListeners(false);
    } else {
      cov_1z72eol64x().b[10][1]++;
    }
  }
  /**
   * If there is a change in props, saves old x/y,
   * and current time. Starts animation.
   * @param {Object} nextProps Next props.
   */
  // eslint-disable-next-line react/no-deprecated


  UNSAFE_componentWillReceiveProps(nextProps) {
    cov_1z72eol64x().f[6]++;
    let oldCoord = (cov_1z72eol64x().s[38]++, this.getCoords());
    let newCoord = (cov_1z72eol64x().s[39]++, this.getCoords(nextProps)); // Debounce.

    cov_1z72eol64x().s[40]++;

    if ((cov_1z72eol64x().b[12][0]++, oldCoord.x == newCoord.x) && (cov_1z72eol64x().b[12][1]++, oldCoord.y == newCoord.y)) {
      cov_1z72eol64x().b[11][0]++;
      cov_1z72eol64x().s[41]++;
      return;
    } else {
      cov_1z72eol64x().b[11][1]++;
    }

    cov_1z72eol64x().s[42]++;
    this.setState(_objectSpread({}, this.state, {
      originTime: Date.now(),
      originX: this.state.x,
      originY: this.state.y,
      originZ: this.state.z
    }));
    cov_1z72eol64x().s[43]++;
    requestAnimationFrame(this._animate(Date.now()));
  }
  /**
   * Add or remove event listeners.
   * @param {boolean} shouldAdd If it should add (or remove) listeners.
   */


  _addOrRemoveDragEventListeners(shouldAdd) {
    cov_1z72eol64x().f[7]++;
    const svgEl = (cov_1z72eol64x().s[44]++, this.props.svgRef.current);
    cov_1z72eol64x().s[45]++;

    if (!svgEl) {
      cov_1z72eol64x().b[13][0]++;
      cov_1z72eol64x().s[46]++;
      return;
    } else {
      cov_1z72eol64x().b[13][1]++;
    }

    let addOrRemoveEventListener = (cov_1z72eol64x().s[47]++, svgEl.addEventListener);
    cov_1z72eol64x().s[48]++;

    if (!shouldAdd) {
      cov_1z72eol64x().b[14][0]++;
      cov_1z72eol64x().s[49]++;
      addOrRemoveEventListener = svgEl.removeEventListener;
    } else {
      cov_1z72eol64x().b[14][1]++;
    }

    cov_1z72eol64x().s[50]++;
    addOrRemoveEventListener('touchmove', this._drag, {
      passive: false
    });
    cov_1z72eol64x().s[51]++;
    addOrRemoveEventListener('mousemove', this._drag, {
      passive: false
    });
    cov_1z72eol64x().s[52]++;
    addOrRemoveEventListener('mouseup', this._endDrag, {
      passive: false
    });
    cov_1z72eol64x().s[53]++;
    addOrRemoveEventListener('mouseleave', this._endDrag, {
      passive: false
    });
    cov_1z72eol64x().s[54]++;
    addOrRemoveEventListener('touchcancel', this._endDrag, {
      passive: false
    });
    cov_1z72eol64x().s[55]++;
    addOrRemoveEventListener('touchleave', this._endDrag, {
      passive: false
    });
    cov_1z72eol64x().s[56]++;
    addOrRemoveEventListener('touchend', this._endDrag, {
      passive: false
    });
  }
  /**
   * Recursively animates x and y.
   * @param {number} now Unix timestamp when this was called.
   */


  _animate(now) {
    cov_1z72eol64x().f[8]++;
    cov_1z72eol64x().s[57]++;
    return (() => {
      cov_1z72eol64x().f[9]++;
      let elapsed = (cov_1z72eol64x().s[58]++, now - this.state.originTime);
      let svgCoord = (cov_1z72eol64x().s[59]++, this.getCoords());
      cov_1z72eol64x().s[60]++;

      if ((cov_1z72eol64x().b[16][0]++, elapsed < this.props.animationDuration) && (cov_1z72eol64x().b[16][1]++, this.props.animate)) {
        cov_1z72eol64x().b[15][0]++;
        const percentage = (cov_1z72eol64x().s[61]++, this._easeInOutCubic(elapsed, 0, 1, this.props.animationDuration));
        cov_1z72eol64x().s[62]++;
        this.setState(_objectSpread({}, this.state, {
          x: (svgCoord.x - this.state.originX) * percentage + this.state.originX,
          y: (svgCoord.y - this.state.originY) * percentage + this.state.originY,
          z: (svgCoord.z - this.state.originZ) * percentage + this.state.originZ
        }));
        cov_1z72eol64x().s[63]++;
        requestAnimationFrame(this._animate(Date.now()));
      } else {
        cov_1z72eol64x().b[15][1]++;
        cov_1z72eol64x().s[64]++;
        this.setState(_objectSpread({}, this.state, {
          x: svgCoord.x,
          y: svgCoord.y,
          z: svgCoord.z
        }));
      }
    }).bind(this);
  }
  /**
   * Gets SVG x/y/z coordinates.
   * @param {Object} props Props object to get coordinates from.
   * @return {Object} Object with x, y and z parameters.
   */


  getCoords(props = (cov_1z72eol64x().b[17][0]++, this.props)) {
    cov_1z72eol64x().f[10]++;
    cov_1z72eol64x().s[65]++;
    return {
      x: props.x,
      y: props.y,
      z: props.z
    };
  }
  /**
   * Returns animation easing value. See http://easings.net/#easeInOutCubic.
   * @param {number} t Current time.
   * @param {number} b Beginning value.
   * @param {number} c Final value.
   * @param {number} d Duration.
   */


  _easeInOutCubic(t, b, c, d) {
    cov_1z72eol64x().f[11]++;
    cov_1z72eol64x().s[66]++;
    t /= d / 2;
    cov_1z72eol64x().s[67]++;

    if (t < 1) {
      cov_1z72eol64x().b[18][0]++;
      cov_1z72eol64x().s[68]++;
      return c / 2 * t * t * t + b;
    } else {
      cov_1z72eol64x().b[18][1]++;
    }

    cov_1z72eol64x().s[69]++;
    t -= 2;
    cov_1z72eol64x().s[70]++;
    return c / 2 * (t * t * t + 2) + b;
  }
  /**
   * Gets event listeners needed for drag and drop.
   */


  _eventListeners() {
    cov_1z72eol64x().f[12]++;
    cov_1z72eol64x().s[71]++;
    return [{
      name: 'mousedown',
      callback: this._startDrag
    }, {
      name: 'touchstart',
      callback: this._startDrag
    }];
  }

  render() {
    cov_1z72eol64x().f[13]++;
    const Component = (cov_1z72eol64x().s[72]++, this.props.template);
    cov_1z72eol64x().s[73]++;
    return __jsx(Component, {
      x: this.state.x,
      y: this.state.y,
      z: this.state.z,
      style: this.props.style,
      onClick: this._onClick,
      onMouseOver: this.props.onMouseOver,
      onMouseOut: this.props.onMouseOut,
      eventListeners: this._eventListeners()
    }, this.props.children);
  }

}

_defineProperty(Token, "propTypes", (cov_1z72eol64x().s[0]++, {
  x: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  y: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  z: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  template: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any,
  style: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any,
  animate: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element,
  animationDuration: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  draggable: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  shouldDrag: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onDrag: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onDrop: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  svgRef: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object
}));

_defineProperty(Token, "defaultProps", (cov_1z72eol64x().s[1]++, {
  animationDuration: 750,
  template: _grid__WEBPACK_IMPORTED_MODULE_2__["Square"]
}));

/***/ }),

/***/ "./src/ui/3d/grid.js":
/*!***************************!*\
  !*** ./src/ui/3d/grid.js ***!
  \***************************/
/*! exports provided: Grid, Square */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Square", function() { return Square; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ui_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui-context */ "./src/ui/ui-context.js");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_3__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_2geif4paxx() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/3d/grid.js";
  var hash = "60be24e60e690085488ca621dcf8c5e69c1f2bb4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/3d/grid.js",
    statementMap: {
      "0": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "1": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 99
        }
      },
      "2": {
        start: {
          line: 40,
          column: 36
        },
        end: {
          line: 40,
          column: 77
        }
      },
      "3": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "4": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "5": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 17
        }
      },
      "6": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 40
        }
      },
      "7": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 40
        }
      },
      "8": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "9": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 106
        }
      },
      "10": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 106
        }
      },
      "11": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 27
        }
      },
      "12": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "13": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "14": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 39
        }
      },
      "15": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 17
        }
      },
      "16": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 41
        }
      },
      "17": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 38
        }
      },
      "18": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 38
        }
      },
      "19": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "20": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "21": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 42
        }
      },
      "22": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "23": {
        start: {
          line: 97,
          column: 17
        },
        end: {
          line: 97,
          column: 18
        }
      },
      "24": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "25": {
        start: {
          line: 98,
          column: 19
        },
        end: {
          line: 98,
          column: 20
        }
      },
      "26": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "27": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "28": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 37
        }
      },
      "29": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "30": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "31": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "32": {
        start: {
          line: 113,
          column: 36
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "33": {
        start: {
          line: 114,
          column: 17
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "34": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 79
        }
      },
      "35": {
        start: {
          line: 115,
          column: 40
        },
        end: {
          line: 115,
          column: 79
        }
      },
      "36": {
        start: {
          line: 116,
          column: 17
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "37": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 77
        }
      },
      "38": {
        start: {
          line: 117,
          column: 39
        },
        end: {
          line: 117,
          column: 77
        }
      },
      "39": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 46
        }
      },
      "40": {
        start: {
          line: 126,
          column: 19
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "41": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "42": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "43": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 20
        }
      },
      "44": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 16
        }
      },
      "45": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 12
        }
      },
      "46": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "47": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 26
        }
      },
      "48": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 89
        }
      },
      "49": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 74
        }
      },
      "50": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 30
        }
      },
      "51": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 68
        }
      },
      "52": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "53": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 39,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 99
          }
        },
        line: 40
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 24
          }
        },
        loc: {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 77
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 64
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        loc: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 74
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        loc: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 85,
            column: 3
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 3
          }
        },
        loc: {
          start: {
            line: 87,
            column: 11
          },
          end: {
            line: 141,
            column: 3
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 25
          }
        },
        loc: {
          start: {
            line: 111,
            column: 31
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 111
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 126,
            column: 59
          },
          end: {
            line: 126,
            column: 60
          }
        },
        loc: {
          start: {
            line: 126,
            column: 70
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 126
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 161,
            column: 2
          },
          end: {
            line: 161,
            column: 3
          }
        },
        loc: {
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 176,
            column: 3
          }
        },
        line: 161
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }],
        line: 77
      },
      "1": {
        loc: {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 118,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 118,
            column: 11
          }
        }, {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 118,
            column: 11
          }
        }],
        line: 112
      },
      "2": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 71
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 71
          }
        }],
        line: 113
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        }, {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 79
          }
        }, {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 79
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        }, {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 118,
            column: 11
          }
        }],
        line: 116
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 77
          }
        }, {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 77
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "60be24e60e690085488ca621dcf8c5e69c1f2bb4"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2geif4paxx = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2geif4paxx();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */




/**
 * Grid
 *
 * Component that will show children on a cartesian regular grid.
 *
 * Props:
 *   rows       - Number of rows (height) of the grid.
 *   cols       - Number of columns (width) of the grid.
 *   cellSize   - Size of a square.
 *   thichness  - Thichness of a square.
 *   padding    - Padding between squares.
 *   colorMap   - A map from 'x,y' => color.
 *   onClick    - (x, y) => {}
 *                Called when a square is clicked.
 *   onMouseOver    - (x, y) => {}
 *                Called when a square is mouse over.
 *   onMouseOut    - (x, y) => {}
 *                Called when a square is mouse out.
 *
 * Usage:
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2}/>
 * </Grid>
 */

cov_2geif4paxx().s[0]++;
const Grid = props => {
  cov_2geif4paxx().f[0]++;
  cov_2geif4paxx().s[1]++;
  return __jsx(_ui_context__WEBPACK_IMPORTED_MODULE_2__["default"].Consumer, null, context => {
    cov_2geif4paxx().f[1]++;
    cov_2geif4paxx().s[2]++;
    return __jsx(GridImpl, _extends({}, props, {
      context: context
    }));
  });
};

class GridImpl extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_2geif4paxx().f[2]++;
    cov_2geif4paxx().s[5]++;
    super(props);
    cov_2geif4paxx().s[6]++;
    this.boardGroup = new three__WEBPACK_IMPORTED_MODULE_3__["Group"]();
    cov_2geif4paxx().s[7]++;
    this.tokenGroup = new three__WEBPACK_IMPORTED_MODULE_3__["Group"]();
    cov_2geif4paxx().s[8]++;
    this.boardGroup.add(this.tokenGroup); // translate the board to center on (0,0,0)

    cov_2geif4paxx().s[9]++;
    this.boardGroup.translateX(-(this.props.padding + this.props.cellSize) * (this.props.cols - 1) / 2);
    cov_2geif4paxx().s[10]++;
    this.boardGroup.translateZ(-(this.props.padding + this.props.cellSize) * (this.props.rows - 1) / 2);
  }

  _getCellColor(x, y) {
    cov_2geif4paxx().f[3]++;
    const key = (cov_2geif4paxx().s[11]++, `${x},${y}`);
    let color = (cov_2geif4paxx().s[12]++, '#777777');
    cov_2geif4paxx().s[13]++;

    if (key in this.props.colorMap) {
      cov_2geif4paxx().b[0][0]++;
      cov_2geif4paxx().s[14]++;
      color = this.props.colorMap[key];
    } else {
      cov_2geif4paxx().b[0][1]++;
    }

    cov_2geif4paxx().s[15]++;
    return color;
  }

  componentWillUnmount() {
    cov_2geif4paxx().f[4]++;
    cov_2geif4paxx().s[16]++;
    this.context.remove(this.boardGroup);
  }

  render() {
    cov_2geif4paxx().f[5]++;
    cov_2geif4paxx().s[17]++;
    this.context = this.props.context;
    cov_2geif4paxx().s[18]++;
    this.context.add(this.boardGroup); // when rerendering, render a new squareGroup

    cov_2geif4paxx().s[19]++;
    this.boardGroup.remove(this.squareGroup);
    cov_2geif4paxx().s[20]++;
    this.squareGroup = new three__WEBPACK_IMPORTED_MODULE_3__["Group"]();
    cov_2geif4paxx().s[21]++;
    this.boardGroup.add(this.squareGroup); // add square base

    cov_2geif4paxx().s[22]++;

    for (let x = (cov_2geif4paxx().s[23]++, 0); x < this.props.cols; x++) {
      cov_2geif4paxx().s[24]++;

      for (let y = (cov_2geif4paxx().s[25]++, 0); y < this.props.rows; y++) {
        const squareProps = (cov_2geif4paxx().s[26]++, {
          x: x,
          y: y,
          size: this.props.cellSize,
          color: this._getCellColor(x, y),
          padding: this.props.padding,
          thickness: this.props.thickness
        });
        const square = (cov_2geif4paxx().s[27]++, new Square(squareProps));
        cov_2geif4paxx().s[28]++;
        this.squareGroup.add(square);
        cov_2geif4paxx().s[29]++;

        const onEvent = e => {
          cov_2geif4paxx().f[6]++;
          cov_2geif4paxx().s[30]++;

          if (e.type == 'click') {
            cov_2geif4paxx().b[1][0]++;
            cov_2geif4paxx().s[31]++;

            if (this.props.onClick) {
              cov_2geif4paxx().b[2][0]++;
              cov_2geif4paxx().s[32]++;
              this.props.onClick({
                x: x,
                y: y
              });
            } else {
              cov_2geif4paxx().b[2][1]++;
            }
          } else {
            cov_2geif4paxx().b[1][1]++;
            cov_2geif4paxx().s[33]++;

            if (e.type == 'mouseOver') {
              cov_2geif4paxx().b[3][0]++;
              cov_2geif4paxx().s[34]++;

              if (this.props.onMouseOver) {
                cov_2geif4paxx().b[4][0]++;
                cov_2geif4paxx().s[35]++;
                this.props.onMouseOver({
                  x: x,
                  y: y
                });
              } else {
                cov_2geif4paxx().b[4][1]++;
              }
            } else {
              cov_2geif4paxx().b[3][1]++;
              cov_2geif4paxx().s[36]++;

              if (e.type == 'mouseOut') {
                cov_2geif4paxx().b[5][0]++;
                cov_2geif4paxx().s[37]++;

                if (this.props.onMouseOut) {
                  cov_2geif4paxx().b[6][0]++;
                  cov_2geif4paxx().s[38]++;
                  this.props.onMouseOut({
                    x: x,
                    y: y
                  });
                } else {
                  cov_2geif4paxx().b[6][1]++;
                }
              } else {
                cov_2geif4paxx().b[5][1]++;
              }
            }
          }
        };

        cov_2geif4paxx().s[39]++;
        this.context.regCall(square, onEvent);
      }
    } // set tokens


    const tokens = (cov_2geif4paxx().s[40]++, react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.map(this.props.children, child => {
      cov_2geif4paxx().f[7]++;
      cov_2geif4paxx().s[41]++;
      return react__WEBPACK_IMPORTED_MODULE_0___default.a.cloneElement(child, {
        three: true,
        boardSize: this.props.cellSize,
        parent: this.tokenGroup,
        padding: this.props.padding,
        lift: this.props.thickness
      });
    }));
    cov_2geif4paxx().s[42]++;

    if (tokens) {
      cov_2geif4paxx().b[7][0]++;
      cov_2geif4paxx().s[43]++;
      return tokens;
    } else {
      cov_2geif4paxx().b[7][1]++;
    }

    cov_2geif4paxx().s[44]++;
    return null;
  }

}
/**
 * Square
 *
 * Component that renders a square inside a Grid.
 *
 * Props
 *   x          - X coordinate on grid coordinates.
 *   y          - Y coordinate on grid coordinates.
 *   size       - Square size.
 *   color      - Color of the square
 *   thichness  - Thichness of a square.
 *   padding    - Padding between squares.
 *
 * Not meant to be used by the end user directly (use Token).
 * Also not exposed in the NPM.
 */


_defineProperty(GridImpl, "propTypes", (cov_2geif4paxx().s[3]++, {
  rows: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  cols: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
  cellSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  thickness: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  padding: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  colorMap: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  context: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element), prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element])
}));

_defineProperty(GridImpl, "defaultProps", (cov_2geif4paxx().s[4]++, {
  colorMap: {},
  cellSize: 1,
  padding: 0.1,
  thickness: 0.1
}));

class Square extends (three__WEBPACK_IMPORTED_MODULE_3__["Mesh"]) {
  constructor(props) {
    cov_2geif4paxx().f[8]++;
    cov_2geif4paxx().s[45]++;
    super();
    cov_2geif4paxx().s[46]++;
    this.userData = _objectSpread({
      responsive: true,
      draggable: false
    }, props);
    cov_2geif4paxx().s[47]++;
    props = this.userData;
    cov_2geif4paxx().s[48]++;
    this.geometry = new three__WEBPACK_IMPORTED_MODULE_3__["BoxBufferGeometry"](props.size, props.thickness, props.size);
    cov_2geif4paxx().s[49]++;
    this.material = new three__WEBPACK_IMPORTED_MODULE_3__["MeshLambertMaterial"]({
      color: props.color
    });
    cov_2geif4paxx().s[50]++;
    this.receiveShadow = true;
    cov_2geif4paxx().s[51]++;
    this.translateX(this.userData.x * (props.size + props.padding));
    cov_2geif4paxx().s[52]++;
    this.translateZ(this.userData.y * (props.size + props.padding));
    cov_2geif4paxx().s[53]++;
    this.translateY(this.userData.thickness / 2);
  }

}

/***/ }),

/***/ "./src/ui/3d/token.js":
/*!****************************!*\
  !*** ./src/ui/3d/token.js ***!
  \****************************/
/*! exports provided: Token */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return Token; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ui_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui-context */ "./src/ui/ui-context.js");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_3__);
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_13qjaz260k() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/3d/token.js";
  var hash = "bfac113050986871f7679bc60b3215a11e25497f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/3d/token.js",
    statementMap: {
      "0": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "1": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 100
        }
      },
      "2": {
        start: {
          line: 52,
          column: 36
        },
        end: {
          line: 52,
          column: 78
        }
      },
      "3": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "4": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "5": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 12
        }
      },
      "6": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "7": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "8": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 29
        }
      },
      "9": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "10": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "11": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 34
        }
      },
      "12": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 131,
          column: 3
        }
      },
      "13": {
        start: {
          line: 99,
          column: 17
        },
        end: {
          line: 99,
          column: 26
        }
      },
      "14": {
        start: {
          line: 100,
          column: 19
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "15": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 40
        }
      },
      "16": {
        start: {
          line: 102,
          column: 17
        },
        end: {
          line: 102,
          column: 53
        }
      },
      "17": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 27
        }
      },
      "18": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 31
        }
      },
      "19": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 65
        }
      },
      "20": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 25
        }
      },
      "21": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "22": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "23": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "24": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 83
        }
      },
      "25": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 54
        }
      },
      "26": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 37
        }
      },
      "27": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 37
        }
      },
      "28": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 36
        }
      },
      "29": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "30": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "31": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "32": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 65
        }
      },
      "33": {
        start: {
          line: 124,
          column: 13
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "34": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "35": {
        start: {
          line: 126,
          column: 13
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "36": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 68
        }
      },
      "37": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 46
        }
      },
      "38": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 38
        }
      },
      "39": {
        start: {
          line: 138,
          column: 15
        },
        end: {
          line: 138,
          column: 30
        }
      },
      "40": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 61
        }
      },
      "41": {
        start: {
          line: 140,
          column: 49
        },
        end: {
          line: 140,
          column: 61
        }
      },
      "42": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "43": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 146,
          column: 8
        }
      },
      "44": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 29
        }
      },
      "45": {
        start: {
          line: 148,
          column: 11
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "46": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "47": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 76
        }
      },
      "48": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 38
        }
      },
      "49": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 25
        }
      },
      "50": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 22
          }
        },
        loc: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 52,
            column: 100
          }
        },
        line: 52
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 24
          }
        },
        loc: {
          start: {
            line: 52,
            column: 36
          },
          end: {
            line: 52,
            column: 78
          }
        },
        line: 52
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 82
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 17
          }
        },
        loc: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 98
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 121,
            column: 21
          }
        },
        loc: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 133,
            column: 3
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 135,
            column: 3
          }
        },
        line: 133
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 137,
            column: 3
          }
        },
        loc: {
          start: {
            line: 137,
            column: 11
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 52
          }
        }, {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 106,
            column: 65
          }
        }],
        line: 106
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 28
          }
        }, {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 47
          }
        }, {
          start: {
            line: 110,
            column: 51
          },
          end: {
            line: 110,
            column: 69
          }
        }],
        line: 110
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        }, {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        }, {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        }, {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 7
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 61
          }
        }, {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 61
          }
        }],
        line: 140
      },
      "9": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 21
          }
        }, {
          start: {
            line: 140,
            column: 25
          },
          end: {
            line: 140,
            column: 47
          }
        }],
        line: 140
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 152,
            column: 5
          }
        }],
        line: 148
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bfac113050986871f7679bc60b3215a11e25497f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_13qjaz260k = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_13qjaz260k();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-syle
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */




/**
 * Token
 *
 * Component that represents a board game piece (or token).
 * Can be used by itself or with one of the grid systems
 * provided (Grid or HexGrid).
 *
 * A token renders as a 3D Mesh. IF no mesh prop is passed.
 * It will render a white box on the grid.
 *
 * Props:
 *   x       - X coordinate on grid / hex grid.
 *   y       - Y coordinate on grid / hex grid.
 *   z       - Z coordinate on hex grid.
 *   onClick - Called when the token is clicked.
 *   onMouseOver - Called when the token is mouse over.
 *   onMouseOut - Called when the token is mouse out.
 *
 * Usage:
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2}/>
 * </Grid>
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2} size={0.5}/>
 * </Grid>
 *
 * <HexGrid>
 *   <Token x={1} y={2} z={-3}/>
 * </HexGrid>
 *
 * <Grid rows={8} cols={8}>
 *   <Token x={1} y={2} mesh={THREE.js 3D-Object}/>
 * </Grid>
 *
 */

cov_13qjaz260k().s[0]++;
const Token = props => {
  cov_13qjaz260k().f[0]++;
  cov_13qjaz260k().s[1]++;
  return __jsx(_ui_context__WEBPACK_IMPORTED_MODULE_2__["default"].Consumer, null, context => {
    cov_13qjaz260k().f[1]++;
    cov_13qjaz260k().s[2]++;
    return __jsx(TokenImpl, _extends({}, props, {
      context: context
    }));
  });
};

class TokenImpl extends (react__WEBPACK_IMPORTED_MODULE_0___default.a.Component) {
  constructor(props) {
    cov_13qjaz260k().f[2]++;
    cov_13qjaz260k().s[5]++;
    super();

    _defineProperty(this, "_attachMesh", (cov_13qjaz260k().s[12]++, mesh => {
      cov_13qjaz260k().f[3]++;
      const size = (cov_13qjaz260k().s[13]++, this.size);
      let meshSize = (cov_13qjaz260k().s[14]++, new three__WEBPACK_IMPORTED_MODULE_3__["Vector3"]());
      let meshCenter = (cov_13qjaz260k().s[15]++, new three__WEBPACK_IMPORTED_MODULE_3__["Vector3"]());
      const bbox = (cov_13qjaz260k().s[16]++, new three__WEBPACK_IMPORTED_MODULE_3__["Box3"]().setFromObject(mesh));
      cov_13qjaz260k().s[17]++;
      bbox.getSize(meshSize);
      cov_13qjaz260k().s[18]++;
      bbox.getCenter(meshCenter); // determine the scale factor

      let scale = (cov_13qjaz260k().s[19]++, meshSize.z < meshSize.x ? (cov_13qjaz260k().b[2][0]++, meshSize.x) : (cov_13qjaz260k().b[2][1]++, meshSize.z));
      cov_13qjaz260k().s[20]++;
      scale = size / scale;
      cov_13qjaz260k().s[21]++;
      mesh.scale.set(scale, scale, scale); // set the mesh to the ground

      cov_13qjaz260k().s[22]++;

      if ((cov_13qjaz260k().b[4][0]++, this.props.boardSize) && (cov_13qjaz260k().b[4][1]++, this.props.lift) && (cov_13qjaz260k().b[4][2]++, this.props.padding)) {
        cov_13qjaz260k().b[3][0]++;
        cov_13qjaz260k().s[23]++;
        mesh.position.x = this.props.x * (this.props.boardSize + this.props.padding);
        cov_13qjaz260k().s[24]++;
        mesh.position.z = this.props.y * (this.props.boardSize + this.props.padding);
        cov_13qjaz260k().s[25]++;
        mesh.position.y = -bbox.min.y + this.props.lift;
      } else {
        cov_13qjaz260k().b[3][1]++;
        cov_13qjaz260k().s[26]++;
        mesh.position.x = this.props.x;
        cov_13qjaz260k().s[27]++;
        mesh.position.z = this.props.y;
        cov_13qjaz260k().s[28]++;
        mesh.position.y = -bbox.min.y;
      }

      cov_13qjaz260k().s[29]++;
      this.parent.add(mesh); // register the event

      cov_13qjaz260k().s[30]++;

      const onEvent = e => {
        cov_13qjaz260k().f[4]++;
        cov_13qjaz260k().s[31]++;

        if (e.type == 'click') {
          cov_13qjaz260k().b[5][0]++;
          cov_13qjaz260k().s[32]++;
          this.props.onClick({
            x: this.props.x,
            y: this.props.y
          });
        } else {
          cov_13qjaz260k().b[5][1]++;
          cov_13qjaz260k().s[33]++;

          if (e.type == 'mouseOver') {
            cov_13qjaz260k().b[6][0]++;
            cov_13qjaz260k().s[34]++;
            this.props.onMouseOver({
              x: this.props.x,
              y: this.props.y
            });
          } else {
            cov_13qjaz260k().b[6][1]++;
            cov_13qjaz260k().s[35]++;

            if (e.type == 'mouseOut') {
              cov_13qjaz260k().b[7][0]++;
              cov_13qjaz260k().s[36]++;
              this.props.onMouseOut({
                x: this.props.x,
                y: this.props.y
              });
            } else {
              cov_13qjaz260k().b[7][1]++;
            }
          }
        }
      };

      cov_13qjaz260k().s[37]++;
      this.props.context.regCall(mesh, onEvent);
    }));

    cov_13qjaz260k().s[6]++;

    if (!props.size) {
      cov_13qjaz260k().b[0][0]++;
      cov_13qjaz260k().s[7]++;
      this.size = props.boardSize;
    } else {
      cov_13qjaz260k().b[0][1]++;
      cov_13qjaz260k().s[8]++;
      this.size = props.size;
    }

    cov_13qjaz260k().s[9]++;

    if (props.parent) {
      cov_13qjaz260k().b[1][0]++;
      cov_13qjaz260k().s[10]++;
      this.parent = props.parent;
    } else {
      cov_13qjaz260k().b[1][1]++;
      cov_13qjaz260k().s[11]++;
      this.parent = props.context;
    }
  }

  componentWillUnmount() {
    cov_13qjaz260k().f[5]++;
    cov_13qjaz260k().s[38]++;
    this.parent.remove(this.prevMesh);
  }

  render() {
    cov_13qjaz260k().f[6]++;
    let mesh = (cov_13qjaz260k().s[39]++, this.props.mesh);
    cov_13qjaz260k().s[40]++;

    if ((cov_13qjaz260k().b[9][0]++, this.prevMesh) && (cov_13qjaz260k().b[9][1]++, this.prevMesh === mesh)) {
      cov_13qjaz260k().b[8][0]++;
      cov_13qjaz260k().s[41]++;
      return null;
    } else {
      cov_13qjaz260k().b[8][1]++;
    }

    cov_13qjaz260k().s[42]++;

    if (!mesh) {
      cov_13qjaz260k().b[10][0]++;
      cov_13qjaz260k().s[43]++;
      mesh = new three__WEBPACK_IMPORTED_MODULE_3__["Mesh"](new three__WEBPACK_IMPORTED_MODULE_3__["BoxBufferGeometry"](1, 1 * 0.3, 1), new three__WEBPACK_IMPORTED_MODULE_3__["MeshLambertMaterial"]({
        color: '#eeeeee'
      }));
      cov_13qjaz260k().s[44]++;

      this._attachMesh(mesh);
    } else {
      cov_13qjaz260k().b[10][1]++;
      cov_13qjaz260k().s[45]++;

      if (mesh.isObject3D) {
        cov_13qjaz260k().b[11][0]++;
        cov_13qjaz260k().s[46]++;

        this._attachMesh(mesh);
      } else {
        cov_13qjaz260k().b[11][1]++;
        cov_13qjaz260k().s[47]++;
        console.error('Your input to tokens should be an three js 3d object');
      }
    }

    cov_13qjaz260k().s[48]++;
    this.parent.remove(this.prevMesh);
    cov_13qjaz260k().s[49]++;
    this.prevMesh = mesh;
    cov_13qjaz260k().s[50]++;
    return null;
  }

}

_defineProperty(TokenImpl, "propTypes", (cov_13qjaz260k().s[3]++, {
  x: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  y: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  z: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  mesh: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any,
  padding: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  lift: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  boardSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  parent: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(three__WEBPACK_IMPORTED_MODULE_3__["Object3D"]),
  context: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
  animate: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOver: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onMouseOut: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.element,
  animationDuration: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number
}));

_defineProperty(TokenImpl, "defaultProps", (cov_13qjaz260k().s[4]++, {
  animationDuration: 750,
  size: 1,
  padding: 0.1,
  lift: 0.1
}));

/***/ }),

/***/ "./src/ui/grid.js":
/*!************************!*\
  !*** ./src/ui/grid.js ***!
  \************************/
/*! exports provided: Grid, Square */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Square", function() { return Square; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _2d_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./2d/grid */ "./src/ui/2d/grid.js");
/* harmony import */ var _3d_grid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./3d/grid */ "./src/ui/3d/grid.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_az6vzkqpz() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/grid.js";
  var hash = "4af15771e371a1953ba612db33a884c5fe076d62";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/grid.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 115
        }
      },
      "2": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "3": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "4": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 28,
          column: 4
        }
      },
      "5": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 34,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 21
          }
        },
        loc: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 23
          }
        },
        loc: {
          start: {
            line: 23,
            column: 33
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 67
          }
        }, {
          start: {
            line: 15,
            column: 70
          },
          end: {
            line: 15,
            column: 114
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 28,
            column: 3
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 52
          }
        }, {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 52
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4af15771e371a1953ba612db33a884c5fe076d62"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_az6vzkqpz = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_az6vzkqpz();

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */




cov_az6vzkqpz().s[0]++;
const Grid = props => {
  cov_az6vzkqpz().f[0]++;
  cov_az6vzkqpz().s[1]++;
  return props.three ? (cov_az6vzkqpz().b[0][0]++, __jsx(_3d_grid__WEBPACK_IMPORTED_MODULE_3__["Grid"], props, props.children)) : (cov_az6vzkqpz().b[0][1]++, __jsx(_2d_grid__WEBPACK_IMPORTED_MODULE_2__["Grid"], props, props.children));
};
cov_az6vzkqpz().s[2]++;
Grid.propTypes = {
  three: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any
};
cov_az6vzkqpz().s[3]++;
const Square = props => {
  cov_az6vzkqpz().f[1]++;
  cov_az6vzkqpz().s[4]++;
  return props.three ? (cov_az6vzkqpz().b[1][0]++, __jsx(_3d_grid__WEBPACK_IMPORTED_MODULE_3__["Square"], props, props.children)) : (cov_az6vzkqpz().b[1][1]++, __jsx(_2d_grid__WEBPACK_IMPORTED_MODULE_2__["Square"], props, props.children));
};
cov_az6vzkqpz().s[5]++;
Square.propTypes = {
  three: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any
};

/***/ }),

/***/ "./src/ui/index.ts":
/*!*************************!*\
  !*** ./src/ui/index.ts ***!
  \*************************/
/*! exports provided: Grid, Token */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _grid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grid.js */ "./src/ui/grid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return _grid_js__WEBPACK_IMPORTED_MODULE_0__["Grid"]; });

/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ "./src/ui/token.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return _token_js__WEBPACK_IMPORTED_MODULE_1__["Token"]; });

function cov_2kyvi3a6sy() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/index.ts";
  var hash = "85bd29de22ba005177b3d62bae6d1f52495cf187";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/index.ts",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "85bd29de22ba005177b3d62bae6d1f52495cf187"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2kyvi3a6sy = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2kyvi3a6sy();



/***/ }),

/***/ "./src/ui/token.js":
/*!*************************!*\
  !*** ./src/ui/token.js ***!
  \*************************/
/*! exports provided: Token */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Token", function() { return Token; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "prop-types");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _2d_token__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./2d/token */ "./src/ui/2d/token.js");
/* harmony import */ var _3d_token__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./3d/token */ "./src/ui/3d/token.js");
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

function cov_c5ece7zp0() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/token.js";
  var hash = "09173f77d71bcd5f0c9a4db26c9a86fe6dedc243";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/token.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 119
        }
      },
      "2": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 21,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 69
          }
        }, {
          start: {
            line: 15,
            column: 72
          },
          end: {
            line: 15,
            column: 118
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "09173f77d71bcd5f0c9a4db26c9a86fe6dedc243"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_c5ece7zp0 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_c5ece7zp0();

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */




cov_c5ece7zp0().s[0]++;
const Token = props => {
  cov_c5ece7zp0().f[0]++;
  cov_c5ece7zp0().s[1]++;
  return props.three ? (cov_c5ece7zp0().b[0][0]++, __jsx(_3d_token__WEBPACK_IMPORTED_MODULE_3__["Token"], props, props.children)) : (cov_c5ece7zp0().b[0][1]++, __jsx(_2d_token__WEBPACK_IMPORTED_MODULE_2__["Token"], props, props.children));
};
cov_c5ece7zp0().s[2]++;
Token.propTypes = {
  three: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any
};

/***/ }),

/***/ "./src/ui/ui-context.js":
/*!******************************!*\
  !*** ./src/ui/ui-context.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function cov_1ok2722der() {
  var path = "/home/j/Documents/FreeBoardGames.org/src/ui/ui-context.js";
  var hash = "162831f400627482496871cc3b9cdd29d67e9ad9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/j/Documents/FreeBoardGames.org/src/ui/ui-context.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 39
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "162831f400627482496871cc3b9cdd29d67e9ad9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1ok2722der = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1ok2722der();

/*
 * Copyright 2018 The boardgame.io Authors
 *
 * Use of this source code is governed by a MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 */

const UIContext = (cov_1ok2722der().s[0]++, react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext());
/* harmony default export */ __webpack_exports__["default"] = (UIContext);

/***/ })

};;
//# sourceMappingURL=1.js.map